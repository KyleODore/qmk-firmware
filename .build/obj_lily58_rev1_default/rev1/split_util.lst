   1               		.file	"split_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.waitForUsb,"ax",@progbits
  11               	.global	waitForUsb
  13               	waitForUsb:
  14               	.LFB14:
  15               		.file 1 "keyboards/lily58/rev1/split_util.c"
   1:keyboards/lily58/rev1/split_util.c **** #include <avr/io.h>
   2:keyboards/lily58/rev1/split_util.c **** #include <avr/wdt.h>
   3:keyboards/lily58/rev1/split_util.c **** #include <avr/power.h>
   4:keyboards/lily58/rev1/split_util.c **** #include <avr/interrupt.h>
   5:keyboards/lily58/rev1/split_util.c **** #include <util/delay.h>
   6:keyboards/lily58/rev1/split_util.c **** #include <avr/eeprom.h>
   7:keyboards/lily58/rev1/split_util.c **** #include "split_util.h"
   8:keyboards/lily58/rev1/split_util.c **** #include "matrix.h"
   9:keyboards/lily58/rev1/split_util.c **** #include "keyboard.h"
  10:keyboards/lily58/rev1/split_util.c **** #include "wait.h"
  11:keyboards/lily58/rev1/split_util.c **** 
  12:keyboards/lily58/rev1/split_util.c **** #ifdef USE_MATRIX_I2C
  13:keyboards/lily58/rev1/split_util.c **** #  include "i2c.h"
  14:keyboards/lily58/rev1/split_util.c **** #else
  15:keyboards/lily58/rev1/split_util.c **** #  include "split_scomm.h"
  16:keyboards/lily58/rev1/split_util.c **** #endif
  17:keyboards/lily58/rev1/split_util.c **** 
  18:keyboards/lily58/rev1/split_util.c **** #ifndef SPLIT_USB_TIMEOUT
  19:keyboards/lily58/rev1/split_util.c **** #    define SPLIT_USB_TIMEOUT 2500
  20:keyboards/lily58/rev1/split_util.c **** #endif
  21:keyboards/lily58/rev1/split_util.c **** 
  22:keyboards/lily58/rev1/split_util.c **** volatile bool isLeftHand = true;
  23:keyboards/lily58/rev1/split_util.c **** 
  24:keyboards/lily58/rev1/split_util.c **** bool waitForUsb(void) {
  16               		.loc 1 24 23 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  25:keyboards/lily58/rev1/split_util.c ****     for (uint8_t i = 0; i < (SPLIT_USB_TIMEOUT / 100); i++) {
  22               		.loc 1 25 5 view .LVU1
  23               	.LBB5:
  24               		.loc 1 25 10 view .LVU2
  25               	.LVL0:
  26               		.loc 1 25 10 is_stmt 0 view .LVU3
  27               	.LBE5:
  24:keyboards/lily58/rev1/split_util.c ****     for (uint8_t i = 0; i < (SPLIT_USB_TIMEOUT / 100); i++) {
  28               		.loc 1 24 23 view .LVU4
  29 0000 89E1      		ldi r24,lo8(25)
  30               	.LVL1:
  31               	.L3:
  32               	.LBB8:
  26:keyboards/lily58/rev1/split_util.c ****         // This will return true of a USB connection has been established
  27:keyboards/lily58/rev1/split_util.c ****         if (UDADDR & _BV(ADDEN)) {
  33               		.loc 1 27 9 is_stmt 1 view .LVU5
  34               		.loc 1 27 13 is_stmt 0 view .LVU6
  35 0002 9091 E300 		lds r25,227
  36               		.loc 1 27 12 view .LVU7
  37 0006 97FD      		sbrc r25,7
  38 0008 00C0      		rjmp .L4
  28:keyboards/lily58/rev1/split_util.c ****             return true;
  29:keyboards/lily58/rev1/split_util.c ****         }
  30:keyboards/lily58/rev1/split_util.c ****         wait_ms(100);
  39               		.loc 1 30 9 is_stmt 1 view .LVU8
  40               	.LVL2:
  41               	.LBB6:
  42               	.LBI6:
  43               		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\util\\delay.h"
   1:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    All rights reserved.
   5:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   6:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   9:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  12:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      distribution.
  16:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  17:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  21:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  33:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  35:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  38:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  endif
  42:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  44:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <math.h>
  47:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  48:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \file */
  49:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \code
  51:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \endcode
  55:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  56:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     used.
  60:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  61:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  70:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  79:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  83:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** */
  84:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  85:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
  89:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  90:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \def F_CPU
  95:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  97:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 103:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     integer value.
 107:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 108:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 110:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 111:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 114:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 115:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  include <math.h>
 119:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 120:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 121:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /**
 122:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 124:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 126:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 129:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 131:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 137:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 142:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 147:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    respectively.
 151:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 152:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \note
 153:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 154:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 164:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 165:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** void
 166:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** _delay_ms(double __ms)
  44               		.loc 2 166 1 view .LVU9
  45               	.LBB7:
 167:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 168:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	double __tmp ;
  46               		.loc 2 168 2 view .LVU10
 169:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
  47               		.loc 2 172 2 view .LVU11
 173:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  48               		.loc 2 173 2 view .LVU12
 174:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  49               		.loc 2 174 2 view .LVU13
 175:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 176:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 179:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 182:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#else
 183:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		//round up by default
 184:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  50               		.loc 2 184 3 view .LVU14
 185:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 186:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 187:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  51               		.loc 2 187 2 view .LVU15
  52 000a 2FEF      		ldi r18,lo8(319999)
  53 000c 31EE      		ldi r19,hi8(319999)
  54 000e 94E0      		ldi r25,hlo8(319999)
  55 0010 2150      	1:	subi r18,1
  56 0012 3040      		sbci r19,0
  57 0014 9040      		sbci r25,0
  58 0016 01F4      		brne 1b
  59 0018 00C0      		rjmp .
  60 001a 0000      		nop
  61               	.LVL3:
  62               		.loc 2 187 2 is_stmt 0 view .LVU16
  63 001c 8150      		subi r24,lo8(-(-1))
  64               	.LVL4:
  65               		.loc 2 187 2 view .LVU17
  66               	.LBE7:
  67               	.LBE6:
  25:keyboards/lily58/rev1/split_util.c ****         // This will return true of a USB connection has been established
  68               		.loc 1 25 5 view .LVU18
  69 001e 01F4      		brne .L3
  70               	.LBE8:
  31:keyboards/lily58/rev1/split_util.c ****     }
  32:keyboards/lily58/rev1/split_util.c **** 
  33:keyboards/lily58/rev1/split_util.c ****     // Avoid NO_USB_STARTUP_CHECK - Disable USB as the previous checks seem to enable it somehow
  34:keyboards/lily58/rev1/split_util.c ****     (USBCON &= ~(_BV(USBE) | _BV(OTGPADE)));
  71               		.loc 1 34 5 is_stmt 1 view .LVU19
  72               		.loc 1 34 13 is_stmt 0 view .LVU20
  73 0020 8091 D800 		lds r24,216
  74               	.LVL5:
  75               		.loc 1 34 13 view .LVU21
  76 0024 8F76      		andi r24,lo8(111)
  77 0026 8093 D800 		sts 216,r24
  35:keyboards/lily58/rev1/split_util.c **** 
  36:keyboards/lily58/rev1/split_util.c ****     return false;
  78               		.loc 1 36 5 is_stmt 1 view .LVU22
  79               		.loc 1 36 12 is_stmt 0 view .LVU23
  80 002a 80E0      		ldi r24,0
  81 002c 0895      		ret
  82               	.LVL6:
  83               	.L4:
  84               	.LBB9:
  28:keyboards/lily58/rev1/split_util.c ****         }
  85               		.loc 1 28 20 view .LVU24
  86 002e 81E0      		ldi r24,lo8(1)
  87               	.LVL7:
  88               	/* epilogue start */
  28:keyboards/lily58/rev1/split_util.c ****         }
  89               		.loc 1 28 20 view .LVU25
  90               	.LBE9:
  37:keyboards/lily58/rev1/split_util.c **** }
  91               		.loc 1 37 1 view .LVU26
  92 0030 0895      		ret
  93               		.cfi_endproc
  94               	.LFE14:
  96               		.section	.text.has_usb,"ax",@progbits
  97               		.weak	has_usb
  99               	has_usb:
 100               	.LFB16:
  38:keyboards/lily58/rev1/split_util.c **** 
  39:keyboards/lily58/rev1/split_util.c **** __attribute__((weak)) bool is_keyboard_left(void) {
  40:keyboards/lily58/rev1/split_util.c **** #if defined(SPLIT_HAND_PIN)
  41:keyboards/lily58/rev1/split_util.c ****     // Test pin SPLIT_HAND_PIN for High/Low, if low it's right hand
  42:keyboards/lily58/rev1/split_util.c ****     setPinInput(SPLIT_HAND_PIN);
  43:keyboards/lily58/rev1/split_util.c ****     return readPin(SPLIT_HAND_PIN);
  44:keyboards/lily58/rev1/split_util.c **** #elif defined(EE_HANDS)
  45:keyboards/lily58/rev1/split_util.c ****     return eeconfig_read_handedness();
  46:keyboards/lily58/rev1/split_util.c **** #elif defined(MASTER_RIGHT)
  47:keyboards/lily58/rev1/split_util.c ****     return !has_usb();
  48:keyboards/lily58/rev1/split_util.c **** #endif
  49:keyboards/lily58/rev1/split_util.c **** 
  50:keyboards/lily58/rev1/split_util.c ****     return has_usb();
  51:keyboards/lily58/rev1/split_util.c **** }
  52:keyboards/lily58/rev1/split_util.c **** 
  53:keyboards/lily58/rev1/split_util.c **** __attribute__((weak)) bool has_usb(void) {
 101               		.loc 1 53 42 is_stmt 1 view -0
 102               		.cfi_startproc
 103               	/* prologue: function */
 104               	/* frame size = 0 */
 105               	/* stack size = 0 */
 106               	.L__stack_usage = 0
  54:keyboards/lily58/rev1/split_util.c ****     static enum { UNKNOWN, MASTER, SLAVE } usbstate = UNKNOWN;
 107               		.loc 1 54 5 view .LVU28
  55:keyboards/lily58/rev1/split_util.c **** 
  56:keyboards/lily58/rev1/split_util.c ****     // only check once, as this is called often
  57:keyboards/lily58/rev1/split_util.c ****     if (usbstate == UNKNOWN) {
 108               		.loc 1 57 5 view .LVU29
 109               		.loc 1 57 8 is_stmt 0 view .LVU30
 110 0000 8091 0000 		lds r24,usbstate.1898
 111 0004 8111      		cpse r24,__zero_reg__
 112 0006 00C0      		rjmp .L7
  58:keyboards/lily58/rev1/split_util.c **** #if defined(SPLIT_USB_DETECT)
  59:keyboards/lily58/rev1/split_util.c ****         usbstate = waitForUsb() ? MASTER : SLAVE;
 113               		.loc 1 59 9 is_stmt 1 view .LVU31
 114               		.loc 1 59 20 is_stmt 0 view .LVU32
 115 0008 0E94 0000 		call waitForUsb
 116               	.LVL8:
 117               		.loc 1 59 42 view .LVU33
 118 000c 8111      		cpse r24,__zero_reg__
 119 000e 00C0      		rjmp .L10
 120 0010 82E0      		ldi r24,lo8(2)
 121               	.L8:
 122               		.loc 1 59 18 discriminator 4 view .LVU34
 123 0012 8093 0000 		sts usbstate.1898,r24
 124               	.L7:
  60:keyboards/lily58/rev1/split_util.c **** #elif defined(__AVR__)
  61:keyboards/lily58/rev1/split_util.c ****         USBCON |= (1 << OTGPADE);  // enables VBUS pad
  62:keyboards/lily58/rev1/split_util.c ****         wait_us(5);
  63:keyboards/lily58/rev1/split_util.c **** 
  64:keyboards/lily58/rev1/split_util.c ****         usbstate = (USBSTA & (1 << VBUS)) ? MASTER : SLAVE;  // checks state of VBUS
  65:keyboards/lily58/rev1/split_util.c **** #else
  66:keyboards/lily58/rev1/split_util.c ****         usbstate = MASTER;
  67:keyboards/lily58/rev1/split_util.c **** #endif
  68:keyboards/lily58/rev1/split_util.c ****     }
  69:keyboards/lily58/rev1/split_util.c **** 
  70:keyboards/lily58/rev1/split_util.c ****     return (usbstate == MASTER);
 125               		.loc 1 70 5 is_stmt 1 view .LVU35
 126               		.loc 1 70 22 is_stmt 0 view .LVU36
 127 0016 81E0      		ldi r24,lo8(1)
 128 0018 9091 0000 		lds r25,usbstate.1898
 129 001c 9130      		cpi r25,lo8(1)
 130 001e 01F0      		breq .L9
 131 0020 80E0      		ldi r24,0
 132               	.L9:
 133               	/* epilogue start */
  71:keyboards/lily58/rev1/split_util.c **** }
 134               		.loc 1 71 1 view .LVU37
 135 0022 0895      		ret
 136               	.L10:
  59:keyboards/lily58/rev1/split_util.c **** #elif defined(__AVR__)
 137               		.loc 1 59 42 view .LVU38
 138 0024 81E0      		ldi r24,lo8(1)
 139 0026 00C0      		rjmp .L8
 140               		.cfi_endproc
 141               	.LFE16:
 143               		.section	.text.is_keyboard_left,"ax",@progbits
 144               		.weak	is_keyboard_left
 146               	is_keyboard_left:
 147               	.LFB15:
  39:keyboards/lily58/rev1/split_util.c **** #if defined(SPLIT_HAND_PIN)
 148               		.loc 1 39 51 is_stmt 1 view -0
 149               		.cfi_startproc
 150               	/* prologue: function */
 151               	/* frame size = 0 */
 152               	/* stack size = 0 */
 153               	.L__stack_usage = 0
  50:keyboards/lily58/rev1/split_util.c **** }
 154               		.loc 1 50 5 view .LVU40
  50:keyboards/lily58/rev1/split_util.c **** }
 155               		.loc 1 50 12 is_stmt 0 view .LVU41
 156 0000 0C94 0000 		jmp has_usb
 157               	.LVL9:
 158               		.cfi_endproc
 159               	.LFE15:
 161               		.section	.text.split_keyboard_setup,"ax",@progbits
 162               	.global	split_keyboard_setup
 164               	split_keyboard_setup:
 165               	.LFB19:
  72:keyboards/lily58/rev1/split_util.c **** 
  73:keyboards/lily58/rev1/split_util.c **** static void keyboard_master_setup(void) {
  74:keyboards/lily58/rev1/split_util.c **** 
  75:keyboards/lily58/rev1/split_util.c **** #ifdef USE_MATRIX_I2C
  76:keyboards/lily58/rev1/split_util.c ****     i2c_master_init();
  77:keyboards/lily58/rev1/split_util.c **** #else
  78:keyboards/lily58/rev1/split_util.c ****     serial_master_init();
  79:keyboards/lily58/rev1/split_util.c **** #endif
  80:keyboards/lily58/rev1/split_util.c **** }
  81:keyboards/lily58/rev1/split_util.c **** 
  82:keyboards/lily58/rev1/split_util.c **** static void keyboard_slave_setup(void) {
  83:keyboards/lily58/rev1/split_util.c **** 
  84:keyboards/lily58/rev1/split_util.c **** #ifdef USE_MATRIX_I2C
  85:keyboards/lily58/rev1/split_util.c ****     i2c_slave_init(SLAVE_I2C_ADDRESS);
  86:keyboards/lily58/rev1/split_util.c **** #else
  87:keyboards/lily58/rev1/split_util.c ****     serial_slave_init();
  88:keyboards/lily58/rev1/split_util.c **** #endif
  89:keyboards/lily58/rev1/split_util.c **** }
  90:keyboards/lily58/rev1/split_util.c **** 
  91:keyboards/lily58/rev1/split_util.c **** void split_keyboard_setup(void) {
 166               		.loc 1 91 33 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
  92:keyboards/lily58/rev1/split_util.c ****    isLeftHand = is_keyboard_left();
 172               		.loc 1 92 4 view .LVU43
 173               		.loc 1 92 17 is_stmt 0 view .LVU44
 174 0000 0E94 0000 		call is_keyboard_left
 175               	.LVL10:
 176               		.loc 1 92 15 view .LVU45
 177 0004 8093 0000 		sts isLeftHand,r24
  93:keyboards/lily58/rev1/split_util.c **** 
  94:keyboards/lily58/rev1/split_util.c ****    if (has_usb()) {
 178               		.loc 1 94 4 is_stmt 1 view .LVU46
 179               		.loc 1 94 8 is_stmt 0 view .LVU47
 180 0008 0E94 0000 		call has_usb
 181               	.LVL11:
 182               		.loc 1 94 7 view .LVU48
 183 000c 8823      		tst r24
 184 000e 01F0      		breq .L16
  95:keyboards/lily58/rev1/split_util.c ****       keyboard_master_setup();
 185               		.loc 1 95 7 is_stmt 1 view .LVU49
 186               	.LBB14:
 187               	.LBI14:
  73:keyboards/lily58/rev1/split_util.c **** 
 188               		.loc 1 73 13 view .LVU50
 189               	.LBB15:
  78:keyboards/lily58/rev1/split_util.c **** #endif
 190               		.loc 1 78 5 view .LVU51
 191 0010 0E94 0000 		call serial_master_init
 192               	.LVL12:
 193               	.L17:
 194               	.LBE15:
 195               	.LBE14:
  96:keyboards/lily58/rev1/split_util.c ****    } else {
  97:keyboards/lily58/rev1/split_util.c ****       keyboard_slave_setup();
  98:keyboards/lily58/rev1/split_util.c ****    }
  99:keyboards/lily58/rev1/split_util.c ****    sei();
 196               		.loc 1 99 4 view .LVU52
 197               	/* #APP */
 198               	 ;  99 "keyboards/lily58/rev1/split_util.c" 1
 199 0014 7894      		sei
 200               	 ;  0 "" 2
 201               	/* #NOAPP */
 202               	/* epilogue start */
 100:keyboards/lily58/rev1/split_util.c **** }
 203               		.loc 1 100 1 is_stmt 0 view .LVU53
 204 0016 0895      		ret
 205               	.L16:
  97:keyboards/lily58/rev1/split_util.c ****    }
 206               		.loc 1 97 7 is_stmt 1 view .LVU54
 207               	.LBB16:
 208               	.LBI16:
  82:keyboards/lily58/rev1/split_util.c **** 
 209               		.loc 1 82 13 view .LVU55
 210               	.LBB17:
  87:keyboards/lily58/rev1/split_util.c **** #endif
 211               		.loc 1 87 5 view .LVU56
 212 0018 0E94 0000 		call serial_slave_init
 213               	.LVL13:
 214 001c 00C0      		rjmp .L17
 215               	.LBE17:
 216               	.LBE16:
 217               		.cfi_endproc
 218               	.LFE19:
 220               		.section	.bss.usbstate.1898,"aw",@nobits
 223               	usbstate.1898:
 224 0000 00        		.zero	1
 225               	.global	isLeftHand
 226               		.section	.data.isLeftHand,"aw"
 229               	isLeftHand:
 230 0000 01        		.byte	1
 231               		.text
 232               	.Letext0:
 233               		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 234               		.file 4 "keyboards/lily58/rev1/split_util.h"
 235               		.file 5 "keyboards/lily58/rev1/split_scomm.h"
DEFINED SYMBOLS
                            *ABS*:00000000 split_util.c
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:2      *ABS*:0000003e __SP_H__
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:3      *ABS*:0000003d __SP_L__
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:4      *ABS*:0000003f __SREG__
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:6      *ABS*:00000001 __zero_reg__
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:13     .text.waitForUsb:00000000 waitForUsb
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:99     .text.has_usb:00000000 has_usb
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:223    .bss.usbstate.1898:00000000 usbstate.1898
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:146    .text.is_keyboard_left:00000000 is_keyboard_left
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:164    .text.split_keyboard_setup:00000000 split_keyboard_setup
C:\Users\kyleo\AppData\Local\Temp\cc84aI2n.s:229    .data.isLeftHand:00000000 isLeftHand

UNDEFINED SYMBOLS
serial_master_init
serial_slave_init
__do_copy_data
__do_clear_bss
