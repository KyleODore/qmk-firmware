   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB159:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c **** #    include <avr/eeprom.h>
  20:quantum/rgblight.c **** #    include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  23:quantum/rgblight.c **** #    include "eeprom.h"
  24:quantum/rgblight.c **** #endif
  25:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  26:quantum/rgblight.c **** #    include "hal.h"
  27:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  28:quantum/rgblight.c **** #endif
  29:quantum/rgblight.c **** #include "wait.h"
  30:quantum/rgblight.c **** #include "progmem.h"
  31:quantum/rgblight.c **** #include "timer.h"
  32:quantum/rgblight.c **** #include "rgblight.h"
  33:quantum/rgblight.c **** #include "color.h"
  34:quantum/rgblight.c **** #include "debug.h"
  35:quantum/rgblight.c **** #include "led_tables.h"
  36:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  37:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  38:quantum/rgblight.c **** #    include "velocikey.h"
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifndef MIN
  42:quantum/rgblight.c **** #    define MIN(a, b) (((a) < (b)) ? (a) : (b))
  43:quantum/rgblight.c **** #endif
  44:quantum/rgblight.c **** 
  45:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  46:quantum/rgblight.c **** /* for split keyboard */
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  48:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  49:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  53:quantum/rgblight.c **** #else
  54:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  55:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  56:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  57:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS
  58:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  59:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  60:quantum/rgblight.c **** #endif
  61:quantum/rgblight.c **** 
  62:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  63:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  64:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  65:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  66:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  67:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  68:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  69:quantum/rgblight.c **** #include "rgblight_modes.h"
  70:quantum/rgblight.c **** };
  71:quantum/rgblight.c **** 
  72:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  73:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  74:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  75:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  76:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  77:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  78:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  79:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  80:quantum/rgblight.c **** #include "rgblight_modes.h"
  81:quantum/rgblight.c **** };
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
  84:quantum/rgblight.c **** 
  85:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  86:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  87:quantum/rgblight.c **** #endif
  88:quantum/rgblight.c **** 
  89:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  90:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  91:quantum/rgblight.c **** #endif
  92:quantum/rgblight.c **** 
  93:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  94:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
  95:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
  96:quantum/rgblight.c **** 
  97:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  98:quantum/rgblight.c **** animation_status_t animation_status = {};
  99:quantum/rgblight.c **** #endif
 100:quantum/rgblight.c **** 
 101:quantum/rgblight.c **** #ifndef LED_ARRAY
 102:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
 103:quantum/rgblight.c **** #    define LED_ARRAY led
 104:quantum/rgblight.c **** #endif
 105:quantum/rgblight.c **** 
 106:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 107:quantum/rgblight.c **** rgblight_segment_t const *const *rgblight_layers = NULL;
 108:quantum/rgblight.c **** #endif
 109:quantum/rgblight.c **** 
 110:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 111:quantum/rgblight.c **** static uint8_t clipping_num_leds  = RGBLED_NUM;
 112:quantum/rgblight.c **** static uint8_t effect_start_pos   = 0;
 113:quantum/rgblight.c **** static uint8_t effect_end_pos     = RGBLED_NUM;
 114:quantum/rgblight.c **** static uint8_t effect_num_leds    = RGBLED_NUM;
 115:quantum/rgblight.c **** 
 116:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 117:quantum/rgblight.c ****     clipping_start_pos = start_pos;
 118:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
 119:quantum/rgblight.c **** }
 120:quantum/rgblight.c **** 
 121:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 122:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 123:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 124:quantum/rgblight.c ****     effect_start_pos = start_pos;
 125:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
 126:quantum/rgblight.c ****     effect_num_leds  = num_leds;
 127:quantum/rgblight.c **** }
 128:quantum/rgblight.c **** 
 129:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 130:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 131:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 132:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 133:quantum/rgblight.c **** }
 134:quantum/rgblight.c **** 
 135:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 136:quantum/rgblight.c **** 
 137:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 138:quantum/rgblight.c ****     (*led1).r = r;
 139:quantum/rgblight.c ****     (*led1).g = g;
 140:quantum/rgblight.c ****     (*led1).b = b;
 141:quantum/rgblight.c **** #ifdef RGBW
 142:quantum/rgblight.c ****     (*led1).w = 0;
 143:quantum/rgblight.c **** #endif
 144:quantum/rgblight.c **** }
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c **** void rgblight_check_config(void) {
 147:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 148:quantum/rgblight.c **** 
 149:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 150:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 151:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 152:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 153:quantum/rgblight.c ****     }
 154:quantum/rgblight.c **** 
 155:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 156:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 157:quantum/rgblight.c ****     }
 158:quantum/rgblight.c **** }
 159:quantum/rgblight.c **** 
 160:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 161:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 162:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 163:quantum/rgblight.c **** #else
 164:quantum/rgblight.c ****     return 0;
 165:quantum/rgblight.c **** #endif
 166:quantum/rgblight.c **** }
 167:quantum/rgblight.c **** 
 168:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 169:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 170:quantum/rgblight.c ****     rgblight_check_config();
 171:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 172:quantum/rgblight.c **** #endif
 173:quantum/rgblight.c **** }
 174:quantum/rgblight.c **** 
 175:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 176:quantum/rgblight.c **** 
 177:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 178:quantum/rgblight.c ****     rgblight_config.enable = 1;
 179:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 180:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 181:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 182:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 183:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 184:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 185:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 186:quantum/rgblight.c **** }
 187:quantum/rgblight.c **** 
 188:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 189:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 190:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 191:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 192:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 193:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 194:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 195:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 196:quantum/rgblight.c **** }
 197:quantum/rgblight.c **** 
 198:quantum/rgblight.c **** void rgblight_init(void) {
 199:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 200:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 201:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 202:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 203:quantum/rgblight.c ****         return;
 204:quantum/rgblight.c ****     }
 205:quantum/rgblight.c **** 
 206:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 207:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 208:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 209:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 210:quantum/rgblight.c ****         eeconfig_init();
 211:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 212:quantum/rgblight.c ****     }
 213:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 214:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 215:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 216:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 217:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 218:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 219:quantum/rgblight.c ****     }
 220:quantum/rgblight.c ****     rgblight_check_config();
 221:quantum/rgblight.c **** 
 222:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 223:quantum/rgblight.c **** 
 224:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 225:quantum/rgblight.c **** 
 226:quantum/rgblight.c ****     if (rgblight_config.enable) {
 227:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 228:quantum/rgblight.c ****     }
 229:quantum/rgblight.c **** 
 230:quantum/rgblight.c ****     is_rgblight_initialized = true;
 231:quantum/rgblight.c **** }
 232:quantum/rgblight.c **** 
 233:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 234:quantum/rgblight.c **** 
 235:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 236:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 237:quantum/rgblight.c ****     rgblight_config.raw = dword;
 238:quantum/rgblight.c ****     if (rgblight_config.enable)
 239:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 240:quantum/rgblight.c ****     else {
 241:quantum/rgblight.c ****         rgblight_timer_disable();
 242:quantum/rgblight.c ****         rgblight_set();
 243:quantum/rgblight.c ****     }
 244:quantum/rgblight.c **** }
 245:quantum/rgblight.c **** 
 246:quantum/rgblight.c **** void rgblight_increase(void) {
 247:quantum/rgblight.c ****     uint8_t mode = 0;
 248:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 249:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 250:quantum/rgblight.c ****     }
 251:quantum/rgblight.c ****     rgblight_mode(mode);
 252:quantum/rgblight.c **** }
 253:quantum/rgblight.c **** void rgblight_decrease(void) {
 254:quantum/rgblight.c ****     uint8_t mode = 0;
 255:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 256:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 257:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 258:quantum/rgblight.c ****     }
 259:quantum/rgblight.c ****     rgblight_mode(mode);
 260:quantum/rgblight.c **** }
 261:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 262:quantum/rgblight.c ****     uint8_t mode = 0;
 263:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 264:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 265:quantum/rgblight.c ****         mode = 1;
 266:quantum/rgblight.c ****     }
 267:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 268:quantum/rgblight.c **** }
 269:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 270:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 271:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 272:quantum/rgblight.c ****     uint8_t mode = 0;
 273:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 274:quantum/rgblight.c ****     if (mode < 1) {
 275:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 276:quantum/rgblight.c ****     }
 277:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 278:quantum/rgblight.c **** }
 279:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 280:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 281:quantum/rgblight.c **** 
 282:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 283:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 284:quantum/rgblight.c ****         return false;
 285:quantum/rgblight.c ****     }
 286:quantum/rgblight.c **** 
 287:quantum/rgblight.c ****     return rgblight_config.mode;
 288:quantum/rgblight.c **** }
 289:quantum/rgblight.c **** 
 290:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 291:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 292:quantum/rgblight.c ****         return;
 293:quantum/rgblight.c ****     }
 294:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 295:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 296:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 297:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 298:quantum/rgblight.c ****     } else {
 299:quantum/rgblight.c ****         rgblight_config.mode = mode;
 300:quantum/rgblight.c ****     }
 301:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 302:quantum/rgblight.c ****     if (write_to_eeprom) {
 303:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 304:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 305:quantum/rgblight.c ****     } else {
 306:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 307:quantum/rgblight.c ****     }
 308:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 309:quantum/rgblight.c ****         rgblight_timer_disable();
 310:quantum/rgblight.c ****     } else {
 311:quantum/rgblight.c ****         rgblight_timer_enable();
 312:quantum/rgblight.c ****     }
 313:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 314:quantum/rgblight.c ****     animation_status.restart = true;
 315:quantum/rgblight.c **** #endif
 316:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 317:quantum/rgblight.c **** }
 318:quantum/rgblight.c **** 
 319:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 320:quantum/rgblight.c **** 
 321:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 322:quantum/rgblight.c **** 
 323:quantum/rgblight.c **** void rgblight_toggle(void) {
 324:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 325:quantum/rgblight.c ****     if (rgblight_config.enable) {
 326:quantum/rgblight.c ****         rgblight_disable();
 327:quantum/rgblight.c ****     } else {
 328:quantum/rgblight.c ****         rgblight_enable();
 329:quantum/rgblight.c ****     }
 330:quantum/rgblight.c **** }
 331:quantum/rgblight.c **** 
 332:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 333:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 334:quantum/rgblight.c ****     if (rgblight_config.enable) {
 335:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 336:quantum/rgblight.c ****     } else {
 337:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 338:quantum/rgblight.c ****     }
 339:quantum/rgblight.c **** }
 340:quantum/rgblight.c **** 
 341:quantum/rgblight.c **** void rgblight_enable(void) {
 342:quantum/rgblight.c ****     rgblight_config.enable = 1;
 343:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 344:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 345:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 346:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 347:quantum/rgblight.c **** }
 348:quantum/rgblight.c **** 
 349:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 350:quantum/rgblight.c ****     rgblight_config.enable = 1;
 351:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 352:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 353:quantum/rgblight.c **** }
 354:quantum/rgblight.c **** 
 355:quantum/rgblight.c **** void rgblight_disable(void) {
 356:quantum/rgblight.c ****     rgblight_config.enable = 0;
 357:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 358:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 359:quantum/rgblight.c ****     rgblight_timer_disable();
 360:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 361:quantum/rgblight.c ****     wait_ms(50);
 362:quantum/rgblight.c ****     rgblight_set();
 363:quantum/rgblight.c **** }
 364:quantum/rgblight.c **** 
 365:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 366:quantum/rgblight.c ****     rgblight_config.enable = 0;
 367:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 368:quantum/rgblight.c ****     rgblight_timer_disable();
 369:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 370:quantum/rgblight.c ****     wait_ms(50);
 371:quantum/rgblight.c ****     rgblight_set();
 372:quantum/rgblight.c **** }
 373:quantum/rgblight.c **** 
 374:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 375:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 376:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 377:quantum/rgblight.c **** }
 378:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 379:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 380:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 381:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 382:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 383:quantum/rgblight.c **** }
 384:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 385:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 386:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 387:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 388:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 389:quantum/rgblight.c **** }
 390:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 391:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 392:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 393:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 394:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 395:quantum/rgblight.c **** }
 396:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 397:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 398:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 399:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 400:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 401:quantum/rgblight.c **** }
 402:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 403:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 404:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 405:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 406:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 407:quantum/rgblight.c **** }
 408:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 409:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 410:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 411:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 412:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 413:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 414:quantum/rgblight.c **** }
 415:quantum/rgblight.c **** 
 416:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 417:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 418:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 419:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 420:quantum/rgblight.c **** }
 421:quantum/rgblight.c **** 
 422:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 423:quantum/rgblight.c ****     if (rgblight_config.enable) {
 424:quantum/rgblight.c ****         LED_TYPE tmp_led;
 425:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 426:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 427:quantum/rgblight.c ****     }
 428:quantum/rgblight.c **** }
 429:quantum/rgblight.c **** 
 430:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 431:quantum/rgblight.c ****     if (rgblight_config.enable) {
 432:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 433:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 434:quantum/rgblight.c ****             // same static color
 435:quantum/rgblight.c ****             LED_TYPE tmp_led;
 436:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 437:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 438:quantum/rgblight.c ****         } else {
 439:quantum/rgblight.c ****             // all LEDs in same color
 440:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 441:quantum/rgblight.c ****             }
 442:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 443:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 444:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 445:quantum/rgblight.c ****                 val = rgblight_config.val;
 446:quantum/rgblight.c ****             }
 447:quantum/rgblight.c **** #endif
 448:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 449:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 450:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 451:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 452:quantum/rgblight.c ****             }
 453:quantum/rgblight.c **** #endif
 454:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 455:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 456:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 457:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 458:quantum/rgblight.c ****             }
 459:quantum/rgblight.c **** #endif
 460:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 461:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 462:quantum/rgblight.c ****                 // static gradient
 463:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 464:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 465:quantum/rgblight.c **** #    ifdef __AVR__
 466:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 467:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 468:quantum/rgblight.c **** #    else
 469:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 470:quantum/rgblight.c **** #    endif
 471:quantum/rgblight.c ****                 for (uint8_t i = 0; i < effect_num_leds; i++) {
 472:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 473:quantum/rgblight.c ****                     if (direction) {
 474:quantum/rgblight.c ****                         _hue = hue + _hue;
 475:quantum/rgblight.c ****                     } else {
 476:quantum/rgblight.c ****                         _hue = hue - _hue;
 477:quantum/rgblight.c ****                     }
 478:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 479:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 480:quantum/rgblight.c ****                 }
 481:quantum/rgblight.c ****                 rgblight_set();
 482:quantum/rgblight.c ****             }
 483:quantum/rgblight.c **** #endif
 484:quantum/rgblight.c ****         }
 485:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 486:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 487:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 488:quantum/rgblight.c ****         }
 489:quantum/rgblight.c **** #endif
 490:quantum/rgblight.c ****         rgblight_config.hue = hue;
 491:quantum/rgblight.c ****         rgblight_config.sat = sat;
 492:quantum/rgblight.c ****         rgblight_config.val = val;
 493:quantum/rgblight.c ****         if (write_to_eeprom) {
 494:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 495:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 496:quantum/rgblight.c ****         } else {
 497:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 498:quantum/rgblight.c ****         }
 499:quantum/rgblight.c ****     }
 500:quantum/rgblight.c **** }
 501:quantum/rgblight.c **** 
 502:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 503:quantum/rgblight.c **** 
 504:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 505:quantum/rgblight.c **** 
 506:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 507:quantum/rgblight.c **** 
 508:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 509:quantum/rgblight.c ****     rgblight_config.speed = speed;
 510:quantum/rgblight.c ****     if (write_to_eeprom) {
 511:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 512:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 513:quantum/rgblight.c ****     } else {
 514:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 515:quantum/rgblight.c ****     }
 516:quantum/rgblight.c **** }
 517:quantum/rgblight.c **** 
 518:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 519:quantum/rgblight.c **** 
 520:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 521:quantum/rgblight.c **** 
 522:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 523:quantum/rgblight.c **** 
 524:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 525:quantum/rgblight.c **** 
 526:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 527:quantum/rgblight.c **** 
 528:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 529:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 530:quantum/rgblight.c ****         return;
 531:quantum/rgblight.c ****     }
 532:quantum/rgblight.c **** 
 533:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 534:quantum/rgblight.c ****         led[i].r = r;
 535:quantum/rgblight.c ****         led[i].g = g;
 536:quantum/rgblight.c ****         led[i].b = b;
 537:quantum/rgblight.c **** #ifdef RGBW
 538:quantum/rgblight.c ****         led[i].w = 0;
 539:quantum/rgblight.c **** #endif
 540:quantum/rgblight.c ****     }
 541:quantum/rgblight.c ****     rgblight_set();
 542:quantum/rgblight.c **** }
 543:quantum/rgblight.c **** 
 544:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 545:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 546:quantum/rgblight.c ****         return;
 547:quantum/rgblight.c ****     }
 548:quantum/rgblight.c **** 
 549:quantum/rgblight.c ****     led[index].r = r;
 550:quantum/rgblight.c ****     led[index].g = g;
 551:quantum/rgblight.c ****     led[index].b = b;
 552:quantum/rgblight.c **** #ifdef RGBW
 553:quantum/rgblight.c ****     led[index].w = 0;
 554:quantum/rgblight.c **** #endif
 555:quantum/rgblight.c ****     rgblight_set();
 556:quantum/rgblight.c **** }
 557:quantum/rgblight.c **** 
 558:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 559:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 560:quantum/rgblight.c ****         return;
 561:quantum/rgblight.c ****     }
 562:quantum/rgblight.c **** 
 563:quantum/rgblight.c ****     LED_TYPE tmp_led;
 564:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 565:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 566:quantum/rgblight.c **** }
 567:quantum/rgblight.c **** 
 568:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 569:quantum/rgblight.c **** 
 570:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 571:quantum/rgblight.c ****     return
 572:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 573:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 574:quantum/rgblight.c **** #    endif
 575:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 576:quantum/rgblight.c **** }
 577:quantum/rgblight.c **** 
 578:quantum/rgblight.c **** #endif
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 581:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 582:quantum/rgblight.c ****         return;
 583:quantum/rgblight.c ****     }
 584:quantum/rgblight.c **** 
 585:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 586:quantum/rgblight.c ****         led[i].r = r;
 587:quantum/rgblight.c ****         led[i].g = g;
 588:quantum/rgblight.c ****         led[i].b = b;
 589:quantum/rgblight.c **** #ifdef RGBW
 590:quantum/rgblight.c ****         led[i].w = 0;
 591:quantum/rgblight.c **** #endif
 592:quantum/rgblight.c ****     }
 593:quantum/rgblight.c ****     rgblight_set();
 594:quantum/rgblight.c ****     wait_ms(1);
 595:quantum/rgblight.c **** }
 596:quantum/rgblight.c **** 
 597:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 598:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 599:quantum/rgblight.c ****         return;
 600:quantum/rgblight.c ****     }
 601:quantum/rgblight.c **** 
 602:quantum/rgblight.c ****     LED_TYPE tmp_led;
 603:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 604:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 605:quantum/rgblight.c **** }
 606:quantum/rgblight.c **** 
 607:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 608:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 609:quantum/rgblight.c **** 
 610:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 613:quantum/rgblight.c **** 
 614:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 615:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 616:quantum/rgblight.c **** 
 617:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 618:quantum/rgblight.c **** void rgblight_set_layer_state(uint8_t layer, bool enabled) {
 619:quantum/rgblight.c ****     uint8_t mask = 1 << layer;
 620:quantum/rgblight.c ****     if (enabled) {
 621:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask |= mask;
 622:quantum/rgblight.c ****     } else {
 623:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~mask;
 624:quantum/rgblight.c ****     }
 625:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_LAYERS;
 626:quantum/rgblight.c ****     // Static modes don't have a ticker running to update the LEDs
 627:quantum/rgblight.c ****     if (rgblight_status.timer_enabled == false) {
 628:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 629:quantum/rgblight.c ****     }
 630:quantum/rgblight.c **** }
 631:quantum/rgblight.c **** 
 632:quantum/rgblight.c **** bool rgblight_get_layer_state(uint8_t layer) {
 633:quantum/rgblight.c ****     uint8_t mask = 1 << layer;
 634:quantum/rgblight.c ****     return (rgblight_status.enabled_layer_mask & mask) != 0;
 635:quantum/rgblight.c **** }
 636:quantum/rgblight.c **** 
 637:quantum/rgblight.c **** // Write any enabled LED layers into the buffer
 638:quantum/rgblight.c **** static void rgblight_layers_write(void) {
 639:quantum/rgblight.c ****     uint8_t i = 0;
 640:quantum/rgblight.c ****     // For each layer
 641:quantum/rgblight.c ****     for (const rgblight_segment_t *const *layer_ptr = rgblight_layers; i < RGBLIGHT_MAX_LAYERS; lay
 642:quantum/rgblight.c ****         if (!rgblight_get_layer_state(i)) {
 643:quantum/rgblight.c ****             continue;  // Layer is disabled
 644:quantum/rgblight.c ****         }
 645:quantum/rgblight.c ****         const rgblight_segment_t *segment_ptr = pgm_read_ptr(layer_ptr);
 646:quantum/rgblight.c ****         if (segment_ptr == NULL) {
 647:quantum/rgblight.c ****             break;  // No more layers
 648:quantum/rgblight.c ****         }
 649:quantum/rgblight.c ****         // For each segment
 650:quantum/rgblight.c ****         while (1) {
 651:quantum/rgblight.c ****             rgblight_segment_t segment;
 652:quantum/rgblight.c ****             memcpy_P(&segment, segment_ptr, sizeof(rgblight_segment_t));
 653:quantum/rgblight.c ****             if (segment.index == RGBLIGHT_END_SEGMENT_INDEX) {
 654:quantum/rgblight.c ****                 break;  // No more segments
 655:quantum/rgblight.c ****             }
 656:quantum/rgblight.c ****             // Write segment.count LEDs
 657:quantum/rgblight.c ****             LED_TYPE *const limit = &led[MIN(segment.index + segment.count, RGBLED_NUM)];
 658:quantum/rgblight.c ****             for (LED_TYPE *led_ptr = &led[segment.index]; led_ptr < limit; led_ptr++) {
 659:quantum/rgblight.c ****                 sethsv(segment.hue, segment.sat, segment.val, led_ptr);
 660:quantum/rgblight.c ****             }
 661:quantum/rgblight.c ****             segment_ptr++;
 662:quantum/rgblight.c ****         }
 663:quantum/rgblight.c ****     }
 664:quantum/rgblight.c **** }
 665:quantum/rgblight.c **** #endif
 666:quantum/rgblight.c **** 
 667:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 668:quantum/rgblight.c **** void rgblight_set(void) {
 669:quantum/rgblight.c ****     LED_TYPE *start_led;
 670:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 671:quantum/rgblight.c **** 
 672:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 673:quantum/rgblight.c ****     if (rgblight_layers != NULL) {
 674:quantum/rgblight.c ****         rgblight_layers_write();
 675:quantum/rgblight.c ****     }
 676:quantum/rgblight.c **** #    endif
 677:quantum/rgblight.c **** 
 678:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 679:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 680:quantum/rgblight.c ****             led[i].r = 0;
 681:quantum/rgblight.c ****             led[i].g = 0;
 682:quantum/rgblight.c ****             led[i].b = 0;
 683:quantum/rgblight.c **** #    ifdef RGBW
 684:quantum/rgblight.c ****             led[i].w = 0;
 685:quantum/rgblight.c **** #    endif
 686:quantum/rgblight.c ****         }
 687:quantum/rgblight.c ****     }
 688:quantum/rgblight.c **** 
 689:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 690:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 691:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 692:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 693:quantum/rgblight.c ****     }
 694:quantum/rgblight.c ****     start_led = led0 + clipping_start_pos;
 695:quantum/rgblight.c **** #    else
 696:quantum/rgblight.c ****     start_led = led + clipping_start_pos;
 697:quantum/rgblight.c **** #    endif
 698:quantum/rgblight.c **** 
 699:quantum/rgblight.c **** #    ifdef RGBW
 700:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 701:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 702:quantum/rgblight.c ****     }
 703:quantum/rgblight.c **** #    endif
 704:quantum/rgblight.c ****     ws2812_setleds(start_led, num_leds);
 705:quantum/rgblight.c **** }
 706:quantum/rgblight.c **** #endif
 707:quantum/rgblight.c **** 
 708:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 709:quantum/rgblight.c **** /* for split keyboard master side */
 710:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 711:quantum/rgblight.c **** 
 712:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 713:quantum/rgblight.c **** 
 714:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 715:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 716:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 717:quantum/rgblight.c **** }
 718:quantum/rgblight.c **** 
 719:quantum/rgblight.c **** /* for split keyboard slave side */
 720:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 721:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 722:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_LAYERS) {
 723:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask = syncinfo->status.enabled_layer_mask;
 724:quantum/rgblight.c ****     }
 725:quantum/rgblight.c **** #    endif
 726:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 727:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 728:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 729:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 730:quantum/rgblight.c ****         } else {
 731:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 732:quantum/rgblight.c ****         }
 733:quantum/rgblight.c ****     }
 734:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 735:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 736:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 737:quantum/rgblight.c ****     }
 738:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 739:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 740:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 741:quantum/rgblight.c ****             rgblight_timer_enable();
 742:quantum/rgblight.c ****         } else {
 743:quantum/rgblight.c ****             rgblight_timer_disable();
 744:quantum/rgblight.c ****         }
 745:quantum/rgblight.c ****     }
 746:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 747:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 748:quantum/rgblight.c ****         animation_status.restart = true;
 749:quantum/rgblight.c ****     }
 750:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 751:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 752:quantum/rgblight.c **** }
 753:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 754:quantum/rgblight.c **** 
 755:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 756:quantum/rgblight.c **** 
 757:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 758:quantum/rgblight.c **** 
 759:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 760:quantum/rgblight.c **** void rgblight_timer_init(void) {
 761:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 762:quantum/rgblight.c ****     // static uint8_t rgblight_timer_is_init = 0;
 763:quantum/rgblight.c ****     // if (rgblight_timer_is_init) {
 764:quantum/rgblight.c ****     //   return;
 765:quantum/rgblight.c ****     // }
 766:quantum/rgblight.c ****     // rgblight_timer_is_init = 1;
 767:quantum/rgblight.c ****     // /* Timer 3 setup */
 768:quantum/rgblight.c ****     // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 769:quantum/rgblight.c ****     //       | _BV(CS30); // Clock selelct: clk/1
 770:quantum/rgblight.c ****     // /* Set TOP value */
 771:quantum/rgblight.c ****     // uint8_t sreg = SREG;
 772:quantum/rgblight.c ****     // cli();
 773:quantum/rgblight.c ****     // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 774:quantum/rgblight.c ****     // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 775:quantum/rgblight.c ****     // SREG = sreg;
 776:quantum/rgblight.c **** 
 777:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 778:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 779:quantum/rgblight.c **** }
 780:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 781:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 782:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 783:quantum/rgblight.c ****     }
 784:quantum/rgblight.c ****     animation_status.last_timer = timer_read();
 785:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 786:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 787:quantum/rgblight.c **** }
 788:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 789:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 790:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 791:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 792:quantum/rgblight.c **** }
 793:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 794:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 795:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 796:quantum/rgblight.c ****         rgblight_timer_disable();
 797:quantum/rgblight.c ****     } else {
 798:quantum/rgblight.c ****         rgblight_timer_enable();
 799:quantum/rgblight.c ****     }
 800:quantum/rgblight.c **** }
 801:quantum/rgblight.c **** 
 802:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 803:quantum/rgblight.c ****     rgblight_enable();
 804:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 805:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 806:quantum/rgblight.c **** }
 807:quantum/rgblight.c **** 
 808:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 808 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 809:quantum/rgblight.c ****     // do nothing
 810:quantum/rgblight.c ****     /********
 811:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 812:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 813:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 814:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 815:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 816:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 817:quantum/rgblight.c ****     **/
 818:quantum/rgblight.c **** }
  22               		.loc 1 818 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE159:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB80:
 116:quantum/rgblight.c ****     clipping_start_pos = start_pos;
  34               		.loc 1 116 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 117:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  40               		.loc 1 117 5 view .LVU3
 117:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  41               		.loc 1 117 24 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 118:quantum/rgblight.c **** }
  43               		.loc 1 118 5 is_stmt 1 view .LVU5
 118:quantum/rgblight.c **** }
  44               		.loc 1 118 24 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 119:quantum/rgblight.c **** 
  47               		.loc 1 119 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE80:
  52               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  53               	.global	rgblight_set_effect_range
  55               	rgblight_set_effect_range:
  56               	.LVL2:
  57               	.LFB81:
 121:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  58               		.loc 1 121 69 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
 122:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  64               		.loc 1 122 5 view .LVU9
 122:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  65               		.loc 1 122 8 is_stmt 0 view .LVU10
  66 0000 8B31      		cpi r24,lo8(27)
  67 0002 00F4      		brsh .L3
 123:quantum/rgblight.c ****     effect_start_pos = start_pos;
  68               		.loc 1 123 5 is_stmt 1 view .LVU11
 123:quantum/rgblight.c ****     effect_start_pos = start_pos;
  69               		.loc 1 123 19 is_stmt 0 view .LVU12
  70 0004 482F      		mov r20,r24
  71 0006 460F      		add r20,r22
  72 0008 5527      		clr r21
  73 000a 551F      		rol r21
 123:quantum/rgblight.c ****     effect_start_pos = start_pos;
  74               		.loc 1 123 8 view .LVU13
  75 000c 4C31      		cpi r20,28
  76 000e 5105      		cpc r21,__zero_reg__
  77 0010 04F4      		brge .L3
 124:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  78               		.loc 1 124 5 is_stmt 1 view .LVU14
 124:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  79               		.loc 1 124 22 is_stmt 0 view .LVU15
  80 0012 8093 0000 		sts effect_start_pos,r24
 125:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  81               		.loc 1 125 5 is_stmt 1 view .LVU16
 125:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  82               		.loc 1 125 34 is_stmt 0 view .LVU17
  83 0016 860F      		add r24,r22
  84               	.LVL3:
 125:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  85               		.loc 1 125 22 view .LVU18
  86 0018 8093 0000 		sts effect_end_pos,r24
 126:quantum/rgblight.c **** }
  87               		.loc 1 126 5 is_stmt 1 view .LVU19
 126:quantum/rgblight.c **** }
  88               		.loc 1 126 22 is_stmt 0 view .LVU20
  89 001c 6093 0000 		sts effect_num_leds,r22
  90               	.LVL4:
  91               	.L3:
  92               	/* epilogue start */
 127:quantum/rgblight.c **** 
  93               		.loc 1 127 1 view .LVU21
  94 0020 0895      		ret
  95               		.cfi_endproc
  96               	.LFE81:
  98               		.section	.text.sethsv_raw,"ax",@progbits
  99               	.global	sethsv_raw
 101               	sethsv_raw:
 102               	.LVL5:
 103               	.LFB82:
 129:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 104               		.loc 1 129 72 is_stmt 1 view -0
 105               		.cfi_startproc
 129:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 106               		.loc 1 129 72 is_stmt 0 view .LVU23
 107 0000 CF93      		push r28
 108               	.LCFI0:
 109               		.cfi_def_cfa_offset 3
 110               		.cfi_offset 28, -2
 111 0002 DF93      		push r29
 112               	.LCFI1:
 113               		.cfi_def_cfa_offset 4
 114               		.cfi_offset 29, -3
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 2 */
 118               	.L__stack_usage = 2
 119 0004 762F      		mov r23,r22
 120 0006 E901      		movw r28,r18
 130:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 121               		.loc 1 130 5 is_stmt 1 view .LVU24
 131:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 122               		.loc 1 131 5 view .LVU25
 131:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123               		.loc 1 131 15 is_stmt 0 view .LVU26
 124 0008 682F      		mov r22,r24
 125               	.LVL6:
 131:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 126               		.loc 1 131 15 view .LVU27
 127 000a 842F      		mov r24,r20
 128               	.LVL7:
 131:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 129               		.loc 1 131 15 view .LVU28
 130 000c 0E94 0000 		call hsv_to_rgb
 131               	.LVL8:
 132:quantum/rgblight.c **** }
 132               		.loc 1 132 5 is_stmt 1 view .LVU29
 133               	.LBB20:
 134               	.LBI20:
 137:quantum/rgblight.c ****     (*led1).r = r;
 135               		.loc 1 137 6 view .LVU30
 136               	.LBB21:
 138:quantum/rgblight.c ****     (*led1).g = g;
 137               		.loc 1 138 5 view .LVU31
 138:quantum/rgblight.c ****     (*led1).g = g;
 138               		.loc 1 138 15 is_stmt 0 view .LVU32
 139 0010 7983      		std Y+1,r23
 139:quantum/rgblight.c ****     (*led1).b = b;
 140               		.loc 1 139 5 is_stmt 1 view .LVU33
 139:quantum/rgblight.c ****     (*led1).b = b;
 141               		.loc 1 139 15 is_stmt 0 view .LVU34
 142 0012 6883      		st Y,r22
 140:quantum/rgblight.c **** #ifdef RGBW
 143               		.loc 1 140 5 is_stmt 1 view .LVU35
 140:quantum/rgblight.c **** #ifdef RGBW
 144               		.loc 1 140 15 is_stmt 0 view .LVU36
 145 0014 8A83      		std Y+2,r24
 146               	.LVL9:
 147               	/* epilogue start */
 140:quantum/rgblight.c **** #ifdef RGBW
 148               		.loc 1 140 15 view .LVU37
 149               	.LBE21:
 150               	.LBE20:
 133:quantum/rgblight.c **** 
 151               		.loc 1 133 1 view .LVU38
 152 0016 DF91      		pop r29
 153 0018 CF91      		pop r28
 154               	.LVL10:
 133:quantum/rgblight.c **** 
 155               		.loc 1 133 1 view .LVU39
 156 001a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE82:
 160               		.section	.text.sethsv,"ax",@progbits
 161               	.global	sethsv
 163               	sethsv:
 164               	.LVL11:
 165               	.LFB83:
 135:quantum/rgblight.c **** 
 166               		.loc 1 135 68 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 135:quantum/rgblight.c **** 
 172               		.loc 1 135 70 view .LVU41
 173 0000 4937      		cpi r20,lo8(121)
 174 0002 00F0      		brlo .L7
 175 0004 48E7      		ldi r20,lo8(120)
 176               	.LVL12:
 177               	.L7:
 135:quantum/rgblight.c **** 
 178               		.loc 1 135 70 is_stmt 0 view .LVU42
 179 0006 0C94 0000 		jmp sethsv_raw
 180               	.LVL13:
 135:quantum/rgblight.c **** 
 181               		.loc 1 135 70 view .LVU43
 182               		.cfi_endproc
 183               	.LFE83:
 185               		.section	.text.setrgb,"ax",@progbits
 186               	.global	setrgb
 188               	setrgb:
 189               	.LVL14:
 190               	.LFB84:
 137:quantum/rgblight.c ****     (*led1).r = r;
 191               		.loc 1 137 62 is_stmt 1 view -0
 192               		.cfi_startproc
 193               	/* prologue: function */
 194               	/* frame size = 0 */
 195               	/* stack size = 0 */
 196               	.L__stack_usage = 0
 137:quantum/rgblight.c ****     (*led1).r = r;
 197               		.loc 1 137 62 is_stmt 0 view .LVU45
 198 0000 F901      		movw r30,r18
 138:quantum/rgblight.c ****     (*led1).g = g;
 199               		.loc 1 138 5 is_stmt 1 view .LVU46
 138:quantum/rgblight.c ****     (*led1).g = g;
 200               		.loc 1 138 15 is_stmt 0 view .LVU47
 201 0002 8183      		std Z+1,r24
 139:quantum/rgblight.c ****     (*led1).b = b;
 202               		.loc 1 139 5 is_stmt 1 view .LVU48
 139:quantum/rgblight.c ****     (*led1).b = b;
 203               		.loc 1 139 15 is_stmt 0 view .LVU49
 204 0004 6083      		st Z,r22
 140:quantum/rgblight.c **** #ifdef RGBW
 205               		.loc 1 140 5 is_stmt 1 view .LVU50
 140:quantum/rgblight.c **** #ifdef RGBW
 206               		.loc 1 140 15 is_stmt 0 view .LVU51
 207 0006 4283      		std Z+2,r20
 208               	/* epilogue start */
 144:quantum/rgblight.c **** 
 209               		.loc 1 144 1 view .LVU52
 210 0008 0895      		ret
 211               		.cfi_endproc
 212               	.LFE84:
 214               		.section	.text.rgblight_check_config,"ax",@progbits
 215               	.global	rgblight_check_config
 217               	rgblight_check_config:
 218               	.LFB85:
 146:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 219               		.loc 1 146 34 is_stmt 1 view -0
 220               		.cfi_startproc
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 0 */
 224               	.L__stack_usage = 0
 149:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 225               		.loc 1 149 5 view .LVU54
 149:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 226               		.loc 1 149 30 is_stmt 0 view .LVU55
 227 0000 8091 0000 		lds r24,rgblight_config
 228 0004 982F      		mov r25,r24
 229 0006 9E7F      		andi r25,lo8(-2)
 149:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 230               		.loc 1 149 8 view .LVU56
 231 0008 01F4      		brne .L10
 150:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 232               		.loc 1 150 9 is_stmt 1 view .LVU57
 150:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 233               		.loc 1 150 30 is_stmt 0 view .LVU58
 234 000a 8170      		andi r24,lo8(1)
 235 000c 8260      		ori r24,lo8(2)
 236               	.L13:
 152:quantum/rgblight.c ****     }
 237               		.loc 1 152 30 view .LVU59
 238 000e 8093 0000 		sts rgblight_config,r24
 239               	.L11:
 155:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 240               		.loc 1 155 5 is_stmt 1 view .LVU60
 155:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 241               		.loc 1 155 8 is_stmt 0 view .LVU61
 242 0012 8091 0000 		lds r24,rgblight_config+3
 243 0016 8937      		cpi r24,lo8(121)
 244 0018 00F0      		brlo .L9
 156:quantum/rgblight.c ****     }
 245               		.loc 1 156 9 is_stmt 1 view .LVU62
 156:quantum/rgblight.c ****     }
 246               		.loc 1 156 29 is_stmt 0 view .LVU63
 247 001a 88E7      		ldi r24,lo8(120)
 248 001c 8093 0000 		sts rgblight_config+3,r24
 249               	.L9:
 250               	/* epilogue start */
 158:quantum/rgblight.c **** 
 251               		.loc 1 158 1 view .LVU64
 252 0020 0895      		ret
 253               	.L10:
 151:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 254               		.loc 1 151 12 is_stmt 1 view .LVU65
 151:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 255               		.loc 1 151 15 is_stmt 0 view .LVU66
 256 0022 8A34      		cpi r24,lo8(74)
 257 0024 00F0      		brlo .L11
 152:quantum/rgblight.c ****     }
 258               		.loc 1 152 9 is_stmt 1 view .LVU67
 152:quantum/rgblight.c ****     }
 259               		.loc 1 152 30 is_stmt 0 view .LVU68
 260 0026 8170      		andi r24,lo8(1)
 261 0028 8864      		ori r24,lo8(72)
 262 002a 00C0      		rjmp .L13
 263               		.cfi_endproc
 264               	.LFE85:
 266               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 267               	.global	eeconfig_read_rgblight
 269               	eeconfig_read_rgblight:
 270               	.LFB86:
 160:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 271               		.loc 1 160 39 is_stmt 1 view -0
 272               		.cfi_startproc
 273               	/* prologue: function */
 274               	/* frame size = 0 */
 275               	/* stack size = 0 */
 276               	.L__stack_usage = 0
 162:quantum/rgblight.c **** #else
 277               		.loc 1 162 5 view .LVU70
 162:quantum/rgblight.c **** #else
 278               		.loc 1 162 12 is_stmt 0 view .LVU71
 279 0000 88E0      		ldi r24,lo8(8)
 280 0002 90E0      		ldi r25,0
 281 0004 0C94 0000 		jmp eeprom_read_dword
 282               	.LVL15:
 283               		.cfi_endproc
 284               	.LFE86:
 286               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 287               	.global	eeconfig_update_rgblight
 289               	eeconfig_update_rgblight:
 290               	.LVL16:
 291               	.LFB87:
 168:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 292               		.loc 1 168 45 is_stmt 1 view -0
 293               		.cfi_startproc
 168:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 294               		.loc 1 168 45 is_stmt 0 view .LVU73
 295 0000 CF92      		push r12
 296               	.LCFI2:
 297               		.cfi_def_cfa_offset 3
 298               		.cfi_offset 12, -2
 299 0002 DF92      		push r13
 300               	.LCFI3:
 301               		.cfi_def_cfa_offset 4
 302               		.cfi_offset 13, -3
 303 0004 EF92      		push r14
 304               	.LCFI4:
 305               		.cfi_def_cfa_offset 5
 306               		.cfi_offset 14, -4
 307 0006 FF92      		push r15
 308               	.LCFI5:
 309               		.cfi_def_cfa_offset 6
 310               		.cfi_offset 15, -5
 311               	/* prologue: function */
 312               	/* frame size = 0 */
 313               	/* stack size = 4 */
 314               	.L__stack_usage = 4
 315 0008 6B01      		movw r12,r22
 316 000a 7C01      		movw r14,r24
 170:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 317               		.loc 1 170 5 is_stmt 1 view .LVU74
 318 000c 0E94 0000 		call rgblight_check_config
 319               	.LVL17:
 171:quantum/rgblight.c **** #endif
 320               		.loc 1 171 5 view .LVU75
 321 0010 B701      		movw r22,r14
 322 0012 A601      		movw r20,r12
 323 0014 88E0      		ldi r24,lo8(8)
 324 0016 90E0      		ldi r25,0
 325               	/* epilogue start */
 173:quantum/rgblight.c **** 
 326               		.loc 1 173 1 is_stmt 0 view .LVU76
 327 0018 FF90      		pop r15
 328 001a EF90      		pop r14
 329 001c DF90      		pop r13
 330 001e CF90      		pop r12
 171:quantum/rgblight.c **** #endif
 331               		.loc 1 171 5 view .LVU77
 332 0020 0C94 0000 		jmp eeprom_update_dword
 333               	.LVL18:
 334               		.cfi_endproc
 335               	.LFE87:
 337               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 338               	.global	eeconfig_update_rgblight_current
 340               	eeconfig_update_rgblight_current:
 341               	.LFB88:
 175:quantum/rgblight.c **** 
 342               		.loc 1 175 45 is_stmt 1 view -0
 343               		.cfi_startproc
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 0 */
 347               	.L__stack_usage = 0
 175:quantum/rgblight.c **** 
 348               		.loc 1 175 47 view .LVU79
 349 0000 6091 0000 		lds r22,rgblight_config
 350 0004 7091 0000 		lds r23,rgblight_config+1
 351 0008 8091 0000 		lds r24,rgblight_config+2
 352 000c 9091 0000 		lds r25,rgblight_config+3
 353 0010 0C94 0000 		jmp eeconfig_update_rgblight
 354               	.LVL19:
 355               		.cfi_endproc
 356               	.LFE88:
 358               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 359               	.global	eeconfig_update_rgblight_default
 361               	eeconfig_update_rgblight_default:
 362               	.LFB89:
 177:quantum/rgblight.c ****     rgblight_config.enable = 1;
 363               		.loc 1 177 45 view -0
 364               		.cfi_startproc
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 178:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 369               		.loc 1 178 5 view .LVU81
 179:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 370               		.loc 1 179 5 view .LVU82
 180:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 371               		.loc 1 180 5 view .LVU83
 181:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 372               		.loc 1 181 5 view .LVU84
 182:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 373               		.loc 1 182 5 view .LVU85
 183:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 374               		.loc 1 183 5 view .LVU86
 178:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 375               		.loc 1 178 28 is_stmt 0 view .LVU87
 376 0000 E0E0      		ldi r30,lo8(rgblight_config)
 377 0002 F0E0      		ldi r31,hi8(rgblight_config)
 378 0004 83E0      		ldi r24,lo8(3)
 379 0006 8083      		st Z,r24
 180:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 380               		.loc 1 180 28 view .LVU88
 381 0008 1182      		std Z+1,__zero_reg__
 181:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 382               		.loc 1 181 28 view .LVU89
 383 000a 8FEF      		ldi r24,lo8(-1)
 384 000c 8283      		std Z+2,r24
 182:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 385               		.loc 1 182 28 view .LVU90
 386 000e 88E7      		ldi r24,lo8(120)
 387 0010 8383      		std Z+3,r24
 183:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 388               		.loc 1 183 28 view .LVU91
 389 0012 1482      		std Z+4,__zero_reg__
 184:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 390               		.loc 1 184 39 is_stmt 1 view .LVU92
 185:quantum/rgblight.c **** }
 391               		.loc 1 185 5 view .LVU93
 392 0014 6081      		ld r22,Z
 393 0016 7181      		ldd r23,Z+1
 394 0018 8281      		ldd r24,Z+2
 395 001a 9381      		ldd r25,Z+3
 396 001c 0C94 0000 		jmp eeconfig_update_rgblight
 397               	.LVL20:
 398               		.cfi_endproc
 399               	.LFE89:
 401               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 402               	.global	eeconfig_debug_rgblight
 404               	eeconfig_debug_rgblight:
 405               	.LFB90:
 188:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 406               		.loc 1 188 36 view -0
 407               		.cfi_startproc
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
 189:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 412               		.loc 1 189 41 view .LVU95
 190:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 413               		.loc 1 190 69 view .LVU96
 191:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 414               		.loc 1 191 65 view .LVU97
 192:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 415               		.loc 1 192 63 view .LVU98
 193:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 416               		.loc 1 193 63 view .LVU99
 194:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 417               		.loc 1 194 63 view .LVU100
 195:quantum/rgblight.c **** }
 418               		.loc 1 195 67 view .LVU101
 419               	/* epilogue start */
 196:quantum/rgblight.c **** 
 420               		.loc 1 196 1 is_stmt 0 view .LVU102
 421 0000 0895      		ret
 422               		.cfi_endproc
 423               	.LFE90:
 425               		.section	.text.rgblight_read_dword,"ax",@progbits
 426               	.global	rgblight_read_dword
 428               	rgblight_read_dword:
 429               	.LFB92:
 233:quantum/rgblight.c **** 
 430               		.loc 1 233 36 is_stmt 1 view -0
 431               		.cfi_startproc
 432               	/* prologue: function */
 433               	/* frame size = 0 */
 434               	/* stack size = 0 */
 435               	.L__stack_usage = 0
 233:quantum/rgblight.c **** 
 436               		.loc 1 233 38 view .LVU104
 233:quantum/rgblight.c **** 
 437               		.loc 1 233 60 is_stmt 0 view .LVU105
 438 0000 6091 0000 		lds r22,rgblight_config
 439 0004 7091 0000 		lds r23,rgblight_config+1
 440 0008 8091 0000 		lds r24,rgblight_config+2
 441 000c 9091 0000 		lds r25,rgblight_config+3
 442               	/* epilogue start */
 233:quantum/rgblight.c **** 
 443               		.loc 1 233 1 view .LVU106
 444 0010 0895      		ret
 445               		.cfi_endproc
 446               	.LFE92:
 448               		.section	.text.rgblight_get_mode,"ax",@progbits
 449               	.global	rgblight_get_mode
 451               	rgblight_get_mode:
 452               	.LFB102:
 282:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 453               		.loc 1 282 33 is_stmt 1 view -0
 454               		.cfi_startproc
 455               	/* prologue: function */
 456               	/* frame size = 0 */
 457               	/* stack size = 0 */
 458               	.L__stack_usage = 0
 283:quantum/rgblight.c ****         return false;
 459               		.loc 1 283 5 view .LVU108
 283:quantum/rgblight.c ****         return false;
 460               		.loc 1 283 25 is_stmt 0 view .LVU109
 461 0000 8091 0000 		lds r24,rgblight_config
 283:quantum/rgblight.c ****         return false;
 462               		.loc 1 283 8 view .LVU110
 463 0004 80FF      		sbrs r24,0
 464 0006 00C0      		rjmp .L22
 287:quantum/rgblight.c **** }
 465               		.loc 1 287 5 is_stmt 1 view .LVU111
 287:quantum/rgblight.c **** }
 466               		.loc 1 287 27 is_stmt 0 view .LVU112
 467 0008 8695      		lsr r24
 468 000a 0895      		ret
 469               	.L22:
 284:quantum/rgblight.c ****     }
 470               		.loc 1 284 16 view .LVU113
 471 000c 80E0      		ldi r24,0
 472               	/* epilogue start */
 288:quantum/rgblight.c **** 
 473               		.loc 1 288 1 view .LVU114
 474 000e 0895      		ret
 475               		.cfi_endproc
 476               	.LFE102:
 478               		.section	.text.rgblight_increase_speed,"ax",@progbits
 479               	.global	rgblight_increase_speed
 481               	rgblight_increase_speed:
 482               	.LFB130:
 410:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 483               		.loc 1 410 36 is_stmt 1 view -0
 484               		.cfi_startproc
 485               	/* prologue: function */
 486               	/* frame size = 0 */
 487               	/* stack size = 0 */
 488               	.L__stack_usage = 0
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 489               		.loc 1 411 5 view .LVU116
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 490               		.loc 1 411 24 is_stmt 0 view .LVU117
 491 0000 8091 0000 		lds r24,rgblight_config+4
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 492               		.loc 1 411 8 view .LVU118
 493 0004 8330      		cpi r24,lo8(3)
 494 0006 00F4      		brsh .L24
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 495               		.loc 1 411 36 is_stmt 1 discriminator 1 view .LVU119
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 496               		.loc 1 411 57 is_stmt 0 discriminator 1 view .LVU120
 497 0008 8F5F      		subi r24,lo8(-(1))
 498 000a 8093 0000 		sts rgblight_config+4,r24
 499               	.L24:
 413:quantum/rgblight.c **** }
 500               		.loc 1 413 5 is_stmt 1 view .LVU121
 501 000e 6091 0000 		lds r22,rgblight_config
 502 0012 7091 0000 		lds r23,rgblight_config+1
 503 0016 8091 0000 		lds r24,rgblight_config+2
 504 001a 9091 0000 		lds r25,rgblight_config+3
 505 001e 0C94 0000 		jmp eeconfig_update_rgblight
 506               	.LVL21:
 507               		.cfi_endproc
 508               	.LFE130:
 510               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 511               	.global	rgblight_decrease_speed
 513               	rgblight_decrease_speed:
 514               	.LFB131:
 416:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 515               		.loc 1 416 36 view -0
 516               		.cfi_startproc
 517               	/* prologue: function */
 518               	/* frame size = 0 */
 519               	/* stack size = 0 */
 520               	.L__stack_usage = 0
 417:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 521               		.loc 1 417 5 view .LVU123
 417:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 522               		.loc 1 417 24 is_stmt 0 view .LVU124
 523 0000 8091 0000 		lds r24,rgblight_config+4
 417:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 524               		.loc 1 417 8 view .LVU125
 525 0004 8823      		tst r24
 526 0006 01F0      		breq .L26
 417:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 527               		.loc 1 417 36 is_stmt 1 discriminator 1 view .LVU126
 417:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 528               		.loc 1 417 57 is_stmt 0 discriminator 1 view .LVU127
 529 0008 8150      		subi r24,lo8(-(-1))
 530 000a 8093 0000 		sts rgblight_config+4,r24
 531               	.L26:
 419:quantum/rgblight.c **** }
 532               		.loc 1 419 5 is_stmt 1 view .LVU128
 533 000e 6091 0000 		lds r22,rgblight_config
 534 0012 7091 0000 		lds r23,rgblight_config+1
 535 0016 8091 0000 		lds r24,rgblight_config+2
 536 001a 9091 0000 		lds r25,rgblight_config+3
 537 001e 0C94 0000 		jmp eeconfig_update_rgblight
 538               	.LVL22:
 539               		.cfi_endproc
 540               	.LFE131:
 542               		.section	.text.rgblight_get_speed,"ax",@progbits
 543               	.global	rgblight_get_speed
 545               	rgblight_get_speed:
 546               	.LFB136:
 506:quantum/rgblight.c **** 
 547               		.loc 1 506 34 view -0
 548               		.cfi_startproc
 549               	/* prologue: function */
 550               	/* frame size = 0 */
 551               	/* stack size = 0 */
 552               	.L__stack_usage = 0
 506:quantum/rgblight.c **** 
 553               		.loc 1 506 36 view .LVU130
 506:quantum/rgblight.c **** 
 554               		.loc 1 506 1 is_stmt 0 view .LVU131
 555 0000 8091 0000 		lds r24,rgblight_config+4
 556               	/* epilogue start */
 557 0004 0895      		ret
 558               		.cfi_endproc
 559               	.LFE136:
 561               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 562               	.global	rgblight_set_speed_eeprom_helper
 564               	rgblight_set_speed_eeprom_helper:
 565               	.LVL23:
 566               	.LFB137:
 508:quantum/rgblight.c ****     rgblight_config.speed = speed;
 567               		.loc 1 508 76 is_stmt 1 view -0
 568               		.cfi_startproc
 569               	/* prologue: function */
 570               	/* frame size = 0 */
 571               	/* stack size = 0 */
 572               	.L__stack_usage = 0
 509:quantum/rgblight.c ****     if (write_to_eeprom) {
 573               		.loc 1 509 5 view .LVU133
 509:quantum/rgblight.c ****     if (write_to_eeprom) {
 574               		.loc 1 509 27 is_stmt 0 view .LVU134
 575 0000 8093 0000 		sts rgblight_config+4,r24
 510:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 576               		.loc 1 510 5 is_stmt 1 view .LVU135
 510:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 577               		.loc 1 510 8 is_stmt 0 view .LVU136
 578 0004 6623      		tst r22
 579 0006 01F0      		breq .L31
 511:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 580               		.loc 1 511 9 is_stmt 1 view .LVU137
 581 0008 6091 0000 		lds r22,rgblight_config
 582 000c 7091 0000 		lds r23,rgblight_config+1
 583 0010 8091 0000 		lds r24,rgblight_config+2
 584 0014 9091 0000 		lds r25,rgblight_config+3
 585               	.LVL24:
 511:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 586               		.loc 1 511 9 is_stmt 0 view .LVU138
 587 0018 0C94 0000 		jmp eeconfig_update_rgblight
 588               	.LVL25:
 589               	.L31:
 590               	/* epilogue start */
 516:quantum/rgblight.c **** 
 591               		.loc 1 516 1 view .LVU139
 592 001c 0895      		ret
 593               		.cfi_endproc
 594               	.LFE137:
 596               		.section	.text.rgblight_set_speed,"ax",@progbits
 597               	.global	rgblight_set_speed
 599               	rgblight_set_speed:
 600               	.LVL26:
 601               	.LFB138:
 518:quantum/rgblight.c **** 
 602               		.loc 1 518 40 is_stmt 1 view -0
 603               		.cfi_startproc
 604               	/* prologue: function */
 605               	/* frame size = 0 */
 606               	/* stack size = 0 */
 607               	.L__stack_usage = 0
 518:quantum/rgblight.c **** 
 608               		.loc 1 518 42 view .LVU141
 609 0000 61E0      		ldi r22,lo8(1)
 610 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 611               	.LVL27:
 518:quantum/rgblight.c **** 
 612               		.loc 1 518 42 is_stmt 0 view .LVU142
 613               		.cfi_endproc
 614               	.LFE138:
 616               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 617               	.global	rgblight_set_speed_noeeprom
 619               	rgblight_set_speed_noeeprom:
 620               	.LVL28:
 621               	.LFB139:
 520:quantum/rgblight.c **** 
 622               		.loc 1 520 49 is_stmt 1 view -0
 623               		.cfi_startproc
 624               	/* prologue: function */
 625               	/* frame size = 0 */
 626               	/* stack size = 0 */
 627               	.L__stack_usage = 0
 520:quantum/rgblight.c **** 
 628               		.loc 1 520 51 view .LVU144
 629 0000 60E0      		ldi r22,0
 630 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 631               	.LVL29:
 520:quantum/rgblight.c **** 
 632               		.loc 1 520 51 is_stmt 0 view .LVU145
 633               		.cfi_endproc
 634               	.LFE139:
 636               		.section	.text.rgblight_get_hue,"ax",@progbits
 637               	.global	rgblight_get_hue
 639               	rgblight_get_hue:
 640               	.LFB140:
 522:quantum/rgblight.c **** 
 641               		.loc 1 522 32 is_stmt 1 view -0
 642               		.cfi_startproc
 643               	/* prologue: function */
 644               	/* frame size = 0 */
 645               	/* stack size = 0 */
 646               	.L__stack_usage = 0
 522:quantum/rgblight.c **** 
 647               		.loc 1 522 34 view .LVU147
 522:quantum/rgblight.c **** 
 648               		.loc 1 522 1 is_stmt 0 view .LVU148
 649 0000 8091 0000 		lds r24,rgblight_config+1
 650               	/* epilogue start */
 651 0004 0895      		ret
 652               		.cfi_endproc
 653               	.LFE140:
 655               		.section	.text.rgblight_get_sat,"ax",@progbits
 656               	.global	rgblight_get_sat
 658               	rgblight_get_sat:
 659               	.LFB141:
 524:quantum/rgblight.c **** 
 660               		.loc 1 524 32 is_stmt 1 view -0
 661               		.cfi_startproc
 662               	/* prologue: function */
 663               	/* frame size = 0 */
 664               	/* stack size = 0 */
 665               	.L__stack_usage = 0
 524:quantum/rgblight.c **** 
 666               		.loc 1 524 34 view .LVU150
 524:quantum/rgblight.c **** 
 667               		.loc 1 524 1 is_stmt 0 view .LVU151
 668 0000 8091 0000 		lds r24,rgblight_config+2
 669               	/* epilogue start */
 670 0004 0895      		ret
 671               		.cfi_endproc
 672               	.LFE141:
 674               		.section	.text.rgblight_get_val,"ax",@progbits
 675               	.global	rgblight_get_val
 677               	rgblight_get_val:
 678               	.LFB142:
 526:quantum/rgblight.c **** 
 679               		.loc 1 526 32 is_stmt 1 view -0
 680               		.cfi_startproc
 681               	/* prologue: function */
 682               	/* frame size = 0 */
 683               	/* stack size = 0 */
 684               	.L__stack_usage = 0
 526:quantum/rgblight.c **** 
 685               		.loc 1 526 34 view .LVU153
 526:quantum/rgblight.c **** 
 686               		.loc 1 526 1 is_stmt 0 view .LVU154
 687 0000 8091 0000 		lds r24,rgblight_config+3
 688               	/* epilogue start */
 689 0004 0895      		ret
 690               		.cfi_endproc
 691               	.LFE142:
 693               		.section	.text.rgblight_set,"ax",@progbits
 694               	.global	rgblight_set
 696               	rgblight_set:
 697               	.LFB153:
 668:quantum/rgblight.c ****     LED_TYPE *start_led;
 698               		.loc 1 668 25 is_stmt 1 view -0
 699               		.cfi_startproc
 700               	/* prologue: function */
 701               	/* frame size = 0 */
 702               	/* stack size = 0 */
 703               	.L__stack_usage = 0
 669:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 704               		.loc 1 669 5 view .LVU156
 670:quantum/rgblight.c **** 
 705               		.loc 1 670 5 view .LVU157
 670:quantum/rgblight.c **** 
 706               		.loc 1 670 15 is_stmt 0 view .LVU158
 707 0000 6091 0000 		lds r22,clipping_num_leds
 708 0004 70E0      		ldi r23,0
 709               	.LVL30:
 678:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 710               		.loc 1 678 5 is_stmt 1 view .LVU159
 678:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 711               		.loc 1 678 25 is_stmt 0 view .LVU160
 712 0006 8091 0000 		lds r24,rgblight_config
 678:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 713               		.loc 1 678 8 view .LVU161
 714 000a 80FF      		sbrs r24,0
 715 000c 00C0      		rjmp .L39
 716               	.L42:
 696:quantum/rgblight.c **** #    endif
 717               		.loc 1 696 5 is_stmt 1 view .LVU162
 718               	.LVL31:
 704:quantum/rgblight.c **** }
 719               		.loc 1 704 5 view .LVU163
 696:quantum/rgblight.c **** #    endif
 720               		.loc 1 696 21 is_stmt 0 view .LVU164
 721 000e 8091 0000 		lds r24,clipping_start_pos
 722 0012 23E0      		ldi r18,lo8(3)
 723 0014 829F      		mul r24,r18
 724 0016 C001      		movw r24,r0
 725 0018 1124      		clr __zero_reg__
 704:quantum/rgblight.c **** }
 726               		.loc 1 704 5 view .LVU165
 727 001a 8050      		subi r24,lo8(-(led))
 728 001c 9040      		sbci r25,hi8(-(led))
 729 001e 0C94 0000 		jmp ws2812_setleds
 730               	.LVL32:
 731               	.L39:
 679:quantum/rgblight.c ****             led[i].r = 0;
 732               		.loc 1 679 9 is_stmt 1 view .LVU166
 733               	.LBB22:
 679:quantum/rgblight.c ****             led[i].r = 0;
 734               		.loc 1 679 14 view .LVU167
 679:quantum/rgblight.c ****             led[i].r = 0;
 735               		.loc 1 679 22 is_stmt 0 view .LVU168
 736 0022 8091 0000 		lds r24,effect_start_pos
 737               	.LVL33:
 679:quantum/rgblight.c ****             led[i].r = 0;
 738               		.loc 1 679 46 view .LVU169
 739 0026 9091 0000 		lds r25,effect_end_pos
 740 002a 23E0      		ldi r18,lo8(3)
 741 002c 829F      		mul r24,r18
 742 002e F001      		movw r30,r0
 743 0030 1124      		clr __zero_reg__
 744 0032 E050      		subi r30,lo8(-(led))
 745 0034 F040      		sbci r31,hi8(-(led))
 746               	.L40:
 679:quantum/rgblight.c ****             led[i].r = 0;
 747               		.loc 1 679 9 discriminator 1 view .LVU170
 748 0036 8917      		cp r24,r25
 749 0038 00F4      		brsh .L42
 680:quantum/rgblight.c ****             led[i].g = 0;
 750               		.loc 1 680 13 is_stmt 1 discriminator 3 view .LVU171
 680:quantum/rgblight.c ****             led[i].g = 0;
 751               		.loc 1 680 22 is_stmt 0 discriminator 3 view .LVU172
 752 003a 1182      		std Z+1,__zero_reg__
 681:quantum/rgblight.c ****             led[i].b = 0;
 753               		.loc 1 681 13 is_stmt 1 discriminator 3 view .LVU173
 681:quantum/rgblight.c ****             led[i].b = 0;
 754               		.loc 1 681 22 is_stmt 0 discriminator 3 view .LVU174
 755 003c 1082      		st Z,__zero_reg__
 682:quantum/rgblight.c **** #    ifdef RGBW
 756               		.loc 1 682 13 is_stmt 1 discriminator 3 view .LVU175
 682:quantum/rgblight.c **** #    ifdef RGBW
 757               		.loc 1 682 22 is_stmt 0 discriminator 3 view .LVU176
 758 003e 1282      		std Z+2,__zero_reg__
 679:quantum/rgblight.c ****             led[i].r = 0;
 759               		.loc 1 679 65 discriminator 3 view .LVU177
 760 0040 8F5F      		subi r24,lo8(-(1))
 761               	.LVL34:
 679:quantum/rgblight.c ****             led[i].r = 0;
 762               		.loc 1 679 65 discriminator 3 view .LVU178
 763 0042 3396      		adiw r30,3
 764 0044 00C0      		rjmp .L40
 765               	.LBE22:
 766               		.cfi_endproc
 767               	.LFE153:
 769               		.section	.text.rgblight_setrgb,"ax",@progbits
 770               	.global	rgblight_setrgb
 772               	rgblight_setrgb:
 773               	.LVL35:
 774               	.LFB143:
 528:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 775               		.loc 1 528 55 is_stmt 1 view -0
 776               		.cfi_startproc
 777               	/* prologue: function */
 778               	/* frame size = 0 */
 779               	/* stack size = 0 */
 780               	.L__stack_usage = 0
 529:quantum/rgblight.c ****         return;
 781               		.loc 1 529 5 view .LVU180
 529:quantum/rgblight.c ****         return;
 782               		.loc 1 529 25 is_stmt 0 view .LVU181
 783 0000 9091 0000 		lds r25,rgblight_config
 529:quantum/rgblight.c ****         return;
 784               		.loc 1 529 8 view .LVU182
 785 0004 90FF      		sbrs r25,0
 786 0006 00C0      		rjmp .L43
 533:quantum/rgblight.c ****         led[i].r = r;
 787               		.loc 1 533 5 is_stmt 1 view .LVU183
 788               	.LBB23:
 533:quantum/rgblight.c ****         led[i].r = r;
 789               		.loc 1 533 10 view .LVU184
 533:quantum/rgblight.c ****         led[i].r = r;
 790               		.loc 1 533 18 is_stmt 0 view .LVU185
 791 0008 9091 0000 		lds r25,effect_start_pos
 792               	.LVL36:
 533:quantum/rgblight.c ****         led[i].r = r;
 793               		.loc 1 533 42 view .LVU186
 794 000c 2091 0000 		lds r18,effect_end_pos
 795 0010 33E0      		ldi r19,lo8(3)
 796 0012 939F      		mul r25,r19
 797 0014 F001      		movw r30,r0
 798 0016 1124      		clr __zero_reg__
 799 0018 E050      		subi r30,lo8(-(led))
 800 001a F040      		sbci r31,hi8(-(led))
 801               	.L45:
 533:quantum/rgblight.c ****         led[i].r = r;
 802               		.loc 1 533 5 discriminator 1 view .LVU187
 803 001c 9217      		cp r25,r18
 804 001e 00F0      		brlo .L46
 533:quantum/rgblight.c ****         led[i].r = r;
 805               		.loc 1 533 5 discriminator 1 view .LVU188
 806               	.LBE23:
 541:quantum/rgblight.c **** }
 807               		.loc 1 541 5 is_stmt 1 view .LVU189
 808 0020 0C94 0000 		jmp rgblight_set
 809               	.LVL37:
 810               	.L46:
 811               	.LBB24:
 534:quantum/rgblight.c ****         led[i].g = g;
 812               		.loc 1 534 9 discriminator 3 view .LVU190
 534:quantum/rgblight.c ****         led[i].g = g;
 813               		.loc 1 534 18 is_stmt 0 discriminator 3 view .LVU191
 814 0024 8183      		std Z+1,r24
 535:quantum/rgblight.c ****         led[i].b = b;
 815               		.loc 1 535 9 is_stmt 1 discriminator 3 view .LVU192
 535:quantum/rgblight.c ****         led[i].b = b;
 816               		.loc 1 535 18 is_stmt 0 discriminator 3 view .LVU193
 817 0026 6083      		st Z,r22
 536:quantum/rgblight.c **** #ifdef RGBW
 818               		.loc 1 536 9 is_stmt 1 discriminator 3 view .LVU194
 536:quantum/rgblight.c **** #ifdef RGBW
 819               		.loc 1 536 18 is_stmt 0 discriminator 3 view .LVU195
 820 0028 4283      		std Z+2,r20
 533:quantum/rgblight.c ****         led[i].r = r;
 821               		.loc 1 533 61 discriminator 3 view .LVU196
 822 002a 9F5F      		subi r25,lo8(-(1))
 823               	.LVL38:
 533:quantum/rgblight.c ****         led[i].r = r;
 824               		.loc 1 533 61 discriminator 3 view .LVU197
 825 002c 3396      		adiw r30,3
 826 002e 00C0      		rjmp .L45
 827               	.LVL39:
 828               	.L43:
 829               	/* epilogue start */
 533:quantum/rgblight.c ****         led[i].r = r;
 830               		.loc 1 533 61 discriminator 3 view .LVU198
 831               	.LBE24:
 542:quantum/rgblight.c **** 
 832               		.loc 1 542 1 view .LVU199
 833 0030 0895      		ret
 834               		.cfi_endproc
 835               	.LFE143:
 837               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 838               	.global	rgblight_sethsv_noeeprom_old
 840               	rgblight_sethsv_noeeprom_old:
 841               	.LVL40:
 842               	.LFB132:
 422:quantum/rgblight.c ****     if (rgblight_config.enable) {
 843               		.loc 1 422 74 is_stmt 1 view -0
 844               		.cfi_startproc
 422:quantum/rgblight.c ****     if (rgblight_config.enable) {
 845               		.loc 1 422 74 is_stmt 0 view .LVU201
 846 0000 CF93      		push r28
 847               	.LCFI6:
 848               		.cfi_def_cfa_offset 3
 849               		.cfi_offset 28, -2
 850 0002 DF93      		push r29
 851               	.LCFI7:
 852               		.cfi_def_cfa_offset 4
 853               		.cfi_offset 29, -3
 854 0004 00D0      		rcall .
 855 0006 0F92      		push __tmp_reg__
 856               	.LCFI8:
 857               		.cfi_def_cfa_offset 7
 858 0008 CDB7      		in r28,__SP_L__
 859 000a DEB7      		in r29,__SP_H__
 860               	.LCFI9:
 861               		.cfi_def_cfa_register 28
 862               	/* prologue: function */
 863               	/* frame size = 3 */
 864               	/* stack size = 5 */
 865               	.L__stack_usage = 5
 423:quantum/rgblight.c ****         LED_TYPE tmp_led;
 866               		.loc 1 423 5 is_stmt 1 view .LVU202
 423:quantum/rgblight.c ****         LED_TYPE tmp_led;
 867               		.loc 1 423 9 is_stmt 0 view .LVU203
 868 000c 9091 0000 		lds r25,rgblight_config
 423:quantum/rgblight.c ****         LED_TYPE tmp_led;
 869               		.loc 1 423 8 view .LVU204
 870 0010 90FF      		sbrs r25,0
 871 0012 00C0      		rjmp .L47
 872               	.LBB25:
 424:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 873               		.loc 1 424 9 is_stmt 1 view .LVU205
 425:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 874               		.loc 1 425 9 view .LVU206
 875 0014 9E01      		movw r18,r28
 876 0016 2F5F      		subi r18,-1
 877 0018 3F4F      		sbci r19,-1
 878 001a 0E94 0000 		call sethsv
 879               	.LVL41:
 426:quantum/rgblight.c ****     }
 880               		.loc 1 426 9 view .LVU207
 881 001e 4B81      		ldd r20,Y+3
 882 0020 6981      		ldd r22,Y+1
 883 0022 8A81      		ldd r24,Y+2
 884 0024 0E94 0000 		call rgblight_setrgb
 885               	.LVL42:
 886               	.L47:
 887               	/* epilogue start */
 888               	.LBE25:
 428:quantum/rgblight.c **** 
 889               		.loc 1 428 1 is_stmt 0 view .LVU208
 890 0028 0F90      		pop __tmp_reg__
 891 002a 0F90      		pop __tmp_reg__
 892 002c 0F90      		pop __tmp_reg__
 893 002e DF91      		pop r29
 894 0030 CF91      		pop r28
 895 0032 0895      		ret
 896               		.cfi_endproc
 897               	.LFE132:
 899               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 900               	.global	rgblight_effect_breathing
 902               	rgblight_effect_breathing:
 903               	.LVL43:
 904               	.LFB161:
 819:quantum/rgblight.c **** 
 820:quantum/rgblight.c **** void rgblight_task(void) {
 821:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 822:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 823:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 824:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 825:quantum/rgblight.c ****         animation_status.delta      = delta;
 826:quantum/rgblight.c **** 
 827:quantum/rgblight.c ****         // static light mode, do nothing here
 828:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 829:quantum/rgblight.c ****         }
 830:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 831:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 832:quantum/rgblight.c ****             // breathing mode
 833:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 834:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 835:quantum/rgblight.c ****         }
 836:quantum/rgblight.c **** #    endif
 837:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 838:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 839:quantum/rgblight.c ****             // rainbow mood mode
 840:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 841:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 842:quantum/rgblight.c ****         }
 843:quantum/rgblight.c **** #    endif
 844:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 845:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 846:quantum/rgblight.c ****             // rainbow swirl mode
 847:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 848:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 849:quantum/rgblight.c ****         }
 850:quantum/rgblight.c **** #    endif
 851:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 852:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 853:quantum/rgblight.c ****             // snake mode
 854:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 855:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 856:quantum/rgblight.c ****         }
 857:quantum/rgblight.c **** #    endif
 858:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 859:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 860:quantum/rgblight.c ****             // knight mode
 861:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 862:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 863:quantum/rgblight.c ****         }
 864:quantum/rgblight.c **** #    endif
 865:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 866:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 867:quantum/rgblight.c ****             // christmas mode
 868:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 869:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 870:quantum/rgblight.c ****         }
 871:quantum/rgblight.c **** #    endif
 872:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 873:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 874:quantum/rgblight.c ****             // RGB test mode
 875:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 876:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 877:quantum/rgblight.c ****         }
 878:quantum/rgblight.c **** #    endif
 879:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 880:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 881:quantum/rgblight.c ****             interval_time = 500;
 882:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 883:quantum/rgblight.c ****         }
 884:quantum/rgblight.c **** #    endif
 885:quantum/rgblight.c ****         if (animation_status.restart) {
 886:quantum/rgblight.c ****             animation_status.restart    = false;
 887:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 888:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 889:quantum/rgblight.c ****         }
 890:quantum/rgblight.c ****         if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 891:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 892:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
 893:quantum/rgblight.c ****             static bool     tick_flag         = false;
 894:quantum/rgblight.c ****             uint16_t        oldpos16;
 895:quantum/rgblight.c ****             if (tick_flag) {
 896:quantum/rgblight.c ****                 tick_flag = false;
 897:quantum/rgblight.c ****                 if (timer_elapsed(report_last_timer) >= 30000) {
 898:quantum/rgblight.c ****                     report_last_timer = timer_read();
 899:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
 900:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
 901:quantum/rgblight.c ****                 }
 902:quantum/rgblight.c ****             }
 903:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
 904:quantum/rgblight.c **** #    endif
 905:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
 906:quantum/rgblight.c ****             effect_func(&animation_status);
 907:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 908:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
 909:quantum/rgblight.c ****                 tick_flag = true;
 910:quantum/rgblight.c ****             }
 911:quantum/rgblight.c **** #    endif
 912:quantum/rgblight.c ****         }
 913:quantum/rgblight.c ****     }
 914:quantum/rgblight.c **** }
 915:quantum/rgblight.c **** 
 916:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 917:quantum/rgblight.c **** 
 918:quantum/rgblight.c **** // Effects
 919:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 920:quantum/rgblight.c **** 
 921:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 922:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 923:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
 924:quantum/rgblight.c **** #        endif
 925:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
 926:quantum/rgblight.c **** #    endif
 927:quantum/rgblight.c **** 
 928:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 929:quantum/rgblight.c **** 
 930:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 905               		.loc 1 930 58 is_stmt 1 view -0
 906               		.cfi_startproc
 907               		.loc 1 930 58 is_stmt 0 view .LVU210
 908 0000 CF93      		push r28
 909               	.LCFI10:
 910               		.cfi_def_cfa_offset 3
 911               		.cfi_offset 28, -2
 912 0002 DF93      		push r29
 913               	.LCFI11:
 914               		.cfi_def_cfa_offset 4
 915               		.cfi_offset 29, -3
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 2 */
 919               	.L__stack_usage = 2
 920 0004 EC01      		movw r28,r24
 931:quantum/rgblight.c ****     float val;
 921               		.loc 1 931 5 is_stmt 1 view .LVU211
 932:quantum/rgblight.c **** 
 933:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 934:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 935:quantum/rgblight.c ****     val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 922               		.loc 1 935 5 view .LVU212
 923               	.LBB26:
 924               		.loc 1 935 11 view .LVU213
 925               	.LVL44:
 926               		.loc 1 935 11 view .LVU214
 927               		.loc 1 935 11 view .LVU215
 928 0006 EC81      		ldd r30,Y+4
 929 0008 F0E0      		ldi r31,0
 930 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 931 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 932               	/* #APP */
 933               	 ;  935 "quantum/rgblight.c" 1
 934 000e 4491      		lpm r20, Z
 935               		
 936               	 ;  0 "" 2
 937               	.LVL45:
 938               		.loc 1 935 11 view .LVU216
 939               		.loc 1 935 11 is_stmt 0 view .LVU217
 940               	/* #NOAPP */
 941               	.LBE26:
 936:quantum/rgblight.c **** #    else
 937:quantum/rgblight.c ****     val = (exp(sin((anim->pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT
 938:quantum/rgblight.c **** #    endif
 939:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 942               		.loc 1 939 5 is_stmt 1 view .LVU218
 943 0010 E0E0      		ldi r30,lo8(rgblight_config)
 944 0012 F0E0      		ldi r31,hi8(rgblight_config)
 945 0014 6281      		ldd r22,Z+2
 946 0016 8181      		ldd r24,Z+1
 947               	.LVL46:
 948               		.loc 1 939 5 is_stmt 0 view .LVU219
 949 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 950               	.LVL47:
 940:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 951               		.loc 1 940 5 is_stmt 1 view .LVU220
 952               		.loc 1 940 28 is_stmt 0 view .LVU221
 953 001c 8C81      		ldd r24,Y+4
 954 001e 8F5F      		subi r24,lo8(-(1))
 955               		.loc 1 940 15 view .LVU222
 956 0020 8C83      		std Y+4,r24
 957               	/* epilogue start */
 941:quantum/rgblight.c **** }
 958               		.loc 1 941 1 view .LVU223
 959 0022 DF91      		pop r29
 960 0024 CF91      		pop r28
 961               	.LVL48:
 962               		.loc 1 941 1 view .LVU224
 963 0026 0895      		ret
 964               		.cfi_endproc
 965               	.LFE161:
 967               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 968               	.global	rgblight_effect_rainbow_mood
 970               	rgblight_effect_rainbow_mood:
 971               	.LVL49:
 972               	.LFB162:
 942:quantum/rgblight.c **** #endif
 943:quantum/rgblight.c **** 
 944:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 945:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 946:quantum/rgblight.c **** 
 947:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 973               		.loc 1 947 61 is_stmt 1 view -0
 974               		.cfi_startproc
 975               		.loc 1 947 61 is_stmt 0 view .LVU226
 976 0000 CF93      		push r28
 977               	.LCFI12:
 978               		.cfi_def_cfa_offset 3
 979               		.cfi_offset 28, -2
 980 0002 DF93      		push r29
 981               	.LCFI13:
 982               		.cfi_def_cfa_offset 4
 983               		.cfi_offset 29, -3
 984               	/* prologue: function */
 985               	/* frame size = 0 */
 986               	/* stack size = 2 */
 987               	.L__stack_usage = 2
 988 0004 EC01      		movw r28,r24
 948:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 989               		.loc 1 948 5 is_stmt 1 view .LVU227
 990 0006 E0E0      		ldi r30,lo8(rgblight_config)
 991 0008 F0E0      		ldi r31,hi8(rgblight_config)
 992 000a 4381      		ldd r20,Z+3
 993 000c 6281      		ldd r22,Z+2
 994 000e 8C81      		ldd r24,Y+4
 995               	.LVL50:
 996               		.loc 1 948 5 is_stmt 0 view .LVU228
 997 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 998               	.LVL51:
 949:quantum/rgblight.c ****     anim->current_hue++;
 999               		.loc 1 949 5 is_stmt 1 view .LVU229
 1000               		.loc 1 949 22 is_stmt 0 view .LVU230
 1001 0014 8C81      		ldd r24,Y+4
 1002 0016 8F5F      		subi r24,lo8(-(1))
 1003 0018 8C83      		std Y+4,r24
 1004               	/* epilogue start */
 950:quantum/rgblight.c **** }
 1005               		.loc 1 950 1 view .LVU231
 1006 001a DF91      		pop r29
 1007 001c CF91      		pop r28
 1008               	.LVL52:
 1009               		.loc 1 950 1 view .LVU232
 1010 001e 0895      		ret
 1011               		.cfi_endproc
 1012               	.LFE162:
 1014               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1015               	.global	rgblight_effect_rgbtest
 1017               	rgblight_effect_rgbtest:
 1018               	.LVL53:
 1019               	.LFB167:
 951:quantum/rgblight.c **** #endif
 952:quantum/rgblight.c **** 
 953:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 954:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 955:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 956:quantum/rgblight.c **** #    endif
 957:quantum/rgblight.c **** 
 958:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 959:quantum/rgblight.c **** 
 960:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 961:quantum/rgblight.c ****     uint8_t hue;
 962:quantum/rgblight.c ****     uint8_t i;
 963:quantum/rgblight.c **** 
 964:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 965:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 966:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 967:quantum/rgblight.c ****     }
 968:quantum/rgblight.c ****     rgblight_set();
 969:quantum/rgblight.c **** 
 970:quantum/rgblight.c ****     if (anim->delta % 2) {
 971:quantum/rgblight.c ****         anim->current_hue++;
 972:quantum/rgblight.c ****     } else {
 973:quantum/rgblight.c ****         anim->current_hue--;
 974:quantum/rgblight.c ****     }
 975:quantum/rgblight.c **** }
 976:quantum/rgblight.c **** #endif
 977:quantum/rgblight.c **** 
 978:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 979:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 980:quantum/rgblight.c **** 
 981:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 982:quantum/rgblight.c ****     static uint8_t pos = 0;
 983:quantum/rgblight.c ****     uint8_t        i, j;
 984:quantum/rgblight.c ****     int8_t         k;
 985:quantum/rgblight.c ****     int8_t         increment = 1;
 986:quantum/rgblight.c **** 
 987:quantum/rgblight.c ****     if (anim->delta % 2) {
 988:quantum/rgblight.c ****         increment = -1;
 989:quantum/rgblight.c ****     }
 990:quantum/rgblight.c **** 
 991:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 992:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 993:quantum/rgblight.c ****         if (increment == 1) {
 994:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 995:quantum/rgblight.c ****         } else {
 996:quantum/rgblight.c ****             pos = 0;
 997:quantum/rgblight.c ****         }
 998:quantum/rgblight.c ****         anim->pos = 1;
 999:quantum/rgblight.c ****     }
1000:quantum/rgblight.c **** #    endif
1001:quantum/rgblight.c **** 
1002:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
1003:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
1004:quantum/rgblight.c ****         ledp->r        = 0;
1005:quantum/rgblight.c ****         ledp->g        = 0;
1006:quantum/rgblight.c ****         ledp->b        = 0;
1007:quantum/rgblight.c **** #    ifdef RGBW
1008:quantum/rgblight.c ****         ledp->w = 0;
1009:quantum/rgblight.c **** #    endif
1010:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
1011:quantum/rgblight.c ****             k = pos + j * increment;
1012:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
1013:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
1014:quantum/rgblight.c ****             }
1015:quantum/rgblight.c ****             if (k < 0) {
1016:quantum/rgblight.c ****                 k = k + effect_num_leds;
1017:quantum/rgblight.c ****             }
1018:quantum/rgblight.c ****             if (i == k) {
1019:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
1020:quantum/rgblight.c ****             }
1021:quantum/rgblight.c ****         }
1022:quantum/rgblight.c ****     }
1023:quantum/rgblight.c ****     rgblight_set();
1024:quantum/rgblight.c ****     if (increment == 1) {
1025:quantum/rgblight.c ****         if (pos - 1 < 0) {
1026:quantum/rgblight.c ****             pos = effect_num_leds - 1;
1027:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1028:quantum/rgblight.c ****             anim->pos = 0;
1029:quantum/rgblight.c **** #    endif
1030:quantum/rgblight.c ****         } else {
1031:quantum/rgblight.c ****             pos -= 1;
1032:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1033:quantum/rgblight.c ****             anim->pos = 1;
1034:quantum/rgblight.c **** #    endif
1035:quantum/rgblight.c ****         }
1036:quantum/rgblight.c ****     } else {
1037:quantum/rgblight.c ****         pos = (pos + 1) % effect_num_leds;
1038:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1039:quantum/rgblight.c ****         anim->pos = pos;
1040:quantum/rgblight.c **** #    endif
1041:quantum/rgblight.c ****     }
1042:quantum/rgblight.c **** }
1043:quantum/rgblight.c **** #endif
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1046:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1047:quantum/rgblight.c **** 
1048:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1049:quantum/rgblight.c ****     static int8_t low_bound  = 0;
1050:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1051:quantum/rgblight.c ****     static int8_t increment  = 1;
1052:quantum/rgblight.c ****     uint8_t       i, cur;
1053:quantum/rgblight.c **** 
1054:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1055:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1056:quantum/rgblight.c ****         anim->pos  = 1;
1057:quantum/rgblight.c ****         low_bound  = 0;
1058:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1059:quantum/rgblight.c ****         increment  = 1;
1060:quantum/rgblight.c ****     }
1061:quantum/rgblight.c **** #    endif
1062:quantum/rgblight.c ****     // Set all the LEDs to 0
1063:quantum/rgblight.c ****     for (i = effect_start_pos; i < effect_end_pos; i++) {
1064:quantum/rgblight.c ****         led[i].r = 0;
1065:quantum/rgblight.c ****         led[i].g = 0;
1066:quantum/rgblight.c ****         led[i].b = 0;
1067:quantum/rgblight.c **** #    ifdef RGBW
1068:quantum/rgblight.c ****         led[i].w = 0;
1069:quantum/rgblight.c **** #    endif
1070:quantum/rgblight.c ****     }
1071:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1072:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1073:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
1074:quantum/rgblight.c **** 
1075:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1076:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1077:quantum/rgblight.c ****         } else {
1078:quantum/rgblight.c ****             led[cur].r = 0;
1079:quantum/rgblight.c ****             led[cur].g = 0;
1080:quantum/rgblight.c ****             led[cur].b = 0;
1081:quantum/rgblight.c **** #    ifdef RGBW
1082:quantum/rgblight.c ****             led[cur].w = 0;
1083:quantum/rgblight.c **** #    endif
1084:quantum/rgblight.c ****         }
1085:quantum/rgblight.c ****     }
1086:quantum/rgblight.c ****     rgblight_set();
1087:quantum/rgblight.c **** 
1088:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1089:quantum/rgblight.c ****     // time a boundary is hit.
1090:quantum/rgblight.c ****     low_bound += increment;
1091:quantum/rgblight.c ****     high_bound += increment;
1092:quantum/rgblight.c **** 
1093:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1094:quantum/rgblight.c ****         increment = -increment;
1095:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1096:quantum/rgblight.c ****         if (increment == 1) {
1097:quantum/rgblight.c ****             anim->pos = 0;
1098:quantum/rgblight.c ****         }
1099:quantum/rgblight.c **** #    endif
1100:quantum/rgblight.c ****     }
1101:quantum/rgblight.c **** }
1102:quantum/rgblight.c **** #endif
1103:quantum/rgblight.c **** 
1104:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1105:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1106:quantum/rgblight.c ****     uint8_t hue;
1107:quantum/rgblight.c ****     uint8_t i;
1108:quantum/rgblight.c **** 
1109:quantum/rgblight.c ****     anim->current_offset = (anim->current_offset + 1) % 2;
1110:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
1111:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
1112:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
1113:quantum/rgblight.c ****     }
1114:quantum/rgblight.c ****     rgblight_set();
1115:quantum/rgblight.c **** }
1116:quantum/rgblight.c **** #endif
1117:quantum/rgblight.c **** 
1118:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1119:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1120:quantum/rgblight.c **** 
1121:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1020               		.loc 1 1121 56 is_stmt 1 view -0
 1021               		.cfi_startproc
 1022               		.loc 1 1121 56 is_stmt 0 view .LVU234
 1023 0000 0F93      		push r16
 1024               	.LCFI14:
 1025               		.cfi_def_cfa_offset 3
 1026               		.cfi_offset 16, -2
 1027 0002 1F93      		push r17
 1028               	.LCFI15:
 1029               		.cfi_def_cfa_offset 4
 1030               		.cfi_offset 17, -3
 1031 0004 CF93      		push r28
 1032               	.LCFI16:
 1033               		.cfi_def_cfa_offset 5
 1034               		.cfi_offset 28, -4
 1035 0006 DF93      		push r29
 1036               	.LCFI17:
 1037               		.cfi_def_cfa_offset 6
 1038               		.cfi_offset 29, -5
 1039 0008 00D0      		rcall .
 1040 000a 0F92      		push __tmp_reg__
 1041               	.LCFI18:
 1042               		.cfi_def_cfa_offset 9
 1043 000c CDB7      		in r28,__SP_L__
 1044 000e DEB7      		in r29,__SP_H__
 1045               	.LCFI19:
 1046               		.cfi_def_cfa_register 28
 1047               	/* prologue: function */
 1048               	/* frame size = 3 */
 1049               	/* stack size = 7 */
 1050               	.L__stack_usage = 7
 1051 0010 8C01      		movw r16,r24
1122:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1052               		.loc 1 1122 5 is_stmt 1 view .LVU235
1123:quantum/rgblight.c ****     uint8_t        g;
 1053               		.loc 1 1123 5 view .LVU236
1124:quantum/rgblight.c ****     uint8_t        r;
 1054               		.loc 1 1124 5 view .LVU237
1125:quantum/rgblight.c ****     uint8_t        b;
 1055               		.loc 1 1125 5 view .LVU238
1126:quantum/rgblight.c **** 
1127:quantum/rgblight.c ****     if (maxval == 0) {
 1056               		.loc 1 1127 5 view .LVU239
 1057               		.loc 1 1127 8 is_stmt 0 view .LVU240
 1058 0012 8091 0000 		lds r24,maxval.3242
 1059               	.LVL54:
 1060               		.loc 1 1127 8 view .LVU241
 1061 0016 8111      		cpse r24,__zero_reg__
 1062 0018 00C0      		rjmp .L55
 1063               	.LBB27:
1128:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1064               		.loc 1 1128 9 is_stmt 1 view .LVU242
1129:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1065               		.loc 1 1129 9 view .LVU243
 1066 001a 9E01      		movw r18,r28
 1067 001c 2F5F      		subi r18,-1
 1068 001e 3F4F      		sbci r19,-1
 1069 0020 48E7      		ldi r20,lo8(120)
 1070 0022 6FEF      		ldi r22,lo8(-1)
 1071 0024 0E94 0000 		call sethsv
 1072               	.LVL55:
1130:quantum/rgblight.c ****         maxval = tmp_led.r;
 1073               		.loc 1 1130 9 view .LVU244
 1074               		.loc 1 1130 16 is_stmt 0 view .LVU245
 1075 0028 8A81      		ldd r24,Y+2
 1076 002a 8093 0000 		sts maxval.3242,r24
 1077               	.L55:
 1078               	.LBE27:
1131:quantum/rgblight.c ****     }
1132:quantum/rgblight.c ****     g = r = b = 0;
 1079               		.loc 1 1132 5 is_stmt 1 view .LVU246
 1080               	.LVL56:
1133:quantum/rgblight.c ****     switch (anim->pos) {
 1081               		.loc 1 1133 5 view .LVU247
 1082               		.loc 1 1133 17 is_stmt 0 view .LVU248
 1083 002e F801      		movw r30,r16
 1084 0030 6481      		ldd r22,Z+4
 1085               		.loc 1 1133 5 view .LVU249
 1086 0032 6130      		cpi r22,lo8(1)
 1087 0034 01F0      		breq .L56
1134:quantum/rgblight.c ****         case 0:
1135:quantum/rgblight.c ****             r = maxval;
 1088               		.loc 1 1135 15 view .LVU250
 1089 0036 8091 0000 		lds r24,maxval.3242
 1090               	.LVL57:
1136:quantum/rgblight.c ****             break;
 1091               		.loc 1 1136 13 is_stmt 1 view .LVU251
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1092               		.loc 1 1132 15 is_stmt 0 view .LVU252
 1093 003a 40E0      		ldi r20,0
1133:quantum/rgblight.c ****         case 0:
 1094               		.loc 1 1133 5 view .LVU253
 1095 003c 6623      		tst r22
 1096 003e 01F0      		breq .L59
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1097               		.loc 1 1132 15 view .LVU254
 1098 0040 40E0      		ldi r20,0
1133:quantum/rgblight.c ****         case 0:
 1099               		.loc 1 1133 5 view .LVU255
 1100 0042 6230      		cpi r22,lo8(2)
 1101 0044 01F4      		brne .L60
1137:quantum/rgblight.c ****         case 1:
1138:quantum/rgblight.c ****             g = maxval;
1139:quantum/rgblight.c ****             break;
1140:quantum/rgblight.c ****         case 2:
1141:quantum/rgblight.c ****             b = maxval;
 1102               		.loc 1 1141 13 is_stmt 1 view .LVU256
 1103               		.loc 1 1141 15 is_stmt 0 view .LVU257
 1104 0046 4091 0000 		lds r20,maxval.3242
 1105               	.L60:
 1106               	.LVL58:
1142:quantum/rgblight.c ****             break;
 1107               		.loc 1 1142 13 is_stmt 1 view .LVU258
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1108               		.loc 1 1132 11 is_stmt 0 view .LVU259
 1109 004a 80E0      		ldi r24,0
 1110               	.LVL59:
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1111               		.loc 1 1132 7 view .LVU260
 1112 004c 60E0      		ldi r22,0
 1113               		.loc 1 1142 13 view .LVU261
 1114 004e 00C0      		rjmp .L59
 1115               	.LVL60:
 1116               	.L56:
1138:quantum/rgblight.c ****             break;
 1117               		.loc 1 1138 13 is_stmt 1 view .LVU262
1138:quantum/rgblight.c ****             break;
 1118               		.loc 1 1138 15 is_stmt 0 view .LVU263
 1119 0050 6091 0000 		lds r22,maxval.3242
 1120               	.LVL61:
1139:quantum/rgblight.c ****         case 2:
 1121               		.loc 1 1139 13 is_stmt 1 view .LVU264
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1122               		.loc 1 1132 15 is_stmt 0 view .LVU265
 1123 0054 40E0      		ldi r20,0
1132:quantum/rgblight.c ****     switch (anim->pos) {
 1124               		.loc 1 1132 11 view .LVU266
 1125 0056 80E0      		ldi r24,0
 1126               	.LVL62:
 1127               	.L59:
1143:quantum/rgblight.c ****     }
1144:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1128               		.loc 1 1144 5 is_stmt 1 view .LVU267
 1129 0058 0E94 0000 		call rgblight_setrgb
 1130               	.LVL63:
1145:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1131               		.loc 1 1145 5 view .LVU268
 1132               		.loc 1 1145 22 is_stmt 0 view .LVU269
 1133 005c F801      		movw r30,r16
 1134 005e 8481      		ldd r24,Z+4
 1135 0060 90E0      		ldi r25,0
 1136               		.loc 1 1145 28 view .LVU270
 1137 0062 0196      		adiw r24,1
 1138               		.loc 1 1145 33 view .LVU271
 1139 0064 63E0      		ldi r22,lo8(3)
 1140 0066 70E0      		ldi r23,0
 1141 0068 0E94 0000 		call __divmodhi4
 1142               		.loc 1 1145 15 view .LVU272
 1143 006c 8483      		std Z+4,r24
 1144               	/* epilogue start */
1146:quantum/rgblight.c **** }
 1145               		.loc 1 1146 1 view .LVU273
 1146 006e 0F90      		pop __tmp_reg__
 1147 0070 0F90      		pop __tmp_reg__
 1148 0072 0F90      		pop __tmp_reg__
 1149 0074 DF91      		pop r29
 1150 0076 CF91      		pop r28
 1151 0078 1F91      		pop r17
 1152 007a 0F91      		pop r16
 1153               	.LVL64:
 1154               		.loc 1 1146 1 view .LVU274
 1155 007c 0895      		ret
 1156               		.cfi_endproc
 1157               	.LFE167:
 1159               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1160               	.global	rgblight_sethsv_eeprom_helper
 1162               	rgblight_sethsv_eeprom_helper:
 1163               	.LVL65:
 1164               	.LFB133:
 430:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1165               		.loc 1 430 97 is_stmt 1 view -0
 1166               		.cfi_startproc
 430:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1167               		.loc 1 430 97 is_stmt 0 view .LVU276
 1168 0000 AF92      		push r10
 1169               	.LCFI20:
 1170               		.cfi_def_cfa_offset 3
 1171               		.cfi_offset 10, -2
 1172 0002 BF92      		push r11
 1173               	.LCFI21:
 1174               		.cfi_def_cfa_offset 4
 1175               		.cfi_offset 11, -3
 1176 0004 CF92      		push r12
 1177               	.LCFI22:
 1178               		.cfi_def_cfa_offset 5
 1179               		.cfi_offset 12, -4
 1180 0006 DF92      		push r13
 1181               	.LCFI23:
 1182               		.cfi_def_cfa_offset 6
 1183               		.cfi_offset 13, -5
 1184 0008 EF92      		push r14
 1185               	.LCFI24:
 1186               		.cfi_def_cfa_offset 7
 1187               		.cfi_offset 14, -6
 1188 000a FF92      		push r15
 1189               	.LCFI25:
 1190               		.cfi_def_cfa_offset 8
 1191               		.cfi_offset 15, -7
 1192 000c 0F93      		push r16
 1193               	.LCFI26:
 1194               		.cfi_def_cfa_offset 9
 1195               		.cfi_offset 16, -8
 1196 000e 1F93      		push r17
 1197               	.LCFI27:
 1198               		.cfi_def_cfa_offset 10
 1199               		.cfi_offset 17, -9
 1200 0010 CF93      		push r28
 1201               	.LCFI28:
 1202               		.cfi_def_cfa_offset 11
 1203               		.cfi_offset 28, -10
 1204 0012 DF93      		push r29
 1205               	.LCFI29:
 1206               		.cfi_def_cfa_offset 12
 1207               		.cfi_offset 29, -11
 1208 0014 00D0      		rcall .
 1209 0016 0F92      		push __tmp_reg__
 1210               	.LCFI30:
 1211               		.cfi_def_cfa_offset 15
 1212 0018 CDB7      		in r28,__SP_L__
 1213 001a DEB7      		in r29,__SP_H__
 1214               	.LCFI31:
 1215               		.cfi_def_cfa_register 28
 1216               	/* prologue: function */
 1217               	/* frame size = 3 */
 1218               	/* stack size = 13 */
 1219               	.L__stack_usage = 13
 1220 001c 182F      		mov r17,r24
 1221 001e F62E      		mov r15,r22
 1222 0020 042F      		mov r16,r20
 1223 0022 E22E      		mov r14,r18
 431:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1224               		.loc 1 431 5 is_stmt 1 view .LVU277
 431:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1225               		.loc 1 431 9 is_stmt 0 view .LVU278
 1226 0024 9091 0000 		lds r25,rgblight_config
 431:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1227               		.loc 1 431 8 view .LVU279
 1228 0028 90FF      		sbrs r25,0
 1229 002a 00C0      		rjmp .L61
 432:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1230               		.loc 1 432 9 is_stmt 1 view .LVU280
 432:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1231               		.loc 1 432 68 is_stmt 0 view .LVU281
 1232 002c E92F      		mov r30,r25
 1233 002e E695      		lsr r30
 1234 0030 AE2F      		mov r26,r30
 1235 0032 B0E0      		ldi r27,0
 432:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1236               		.loc 1 432 52 view .LVU282
 1237 0034 A050      		subi r26,lo8(-(mode_base_table))
 1238 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1239 0038 8C91      		ld r24,X
 1240               	.LVL66:
 432:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1241               		.loc 1 432 35 view .LVU283
 1242 003a 8093 0000 		sts rgblight_status,r24
 433:quantum/rgblight.c ****             // same static color
 1243               		.loc 1 433 9 is_stmt 1 view .LVU284
 433:quantum/rgblight.c ****             // same static color
 1244               		.loc 1 433 34 is_stmt 0 view .LVU285
 1245 003e 9E7F      		andi r25,lo8(-2)
 433:quantum/rgblight.c ****             // same static color
 1246               		.loc 1 433 12 view .LVU286
 1247 0040 9230      		cpi r25,lo8(2)
 1248 0042 01F4      		brne .L64
 1249               	.LBB28:
 435:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1250               		.loc 1 435 13 is_stmt 1 view .LVU287
 436:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1251               		.loc 1 436 13 view .LVU288
 1252 0044 9E01      		movw r18,r28
 1253               	.LVL67:
 436:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1254               		.loc 1 436 13 is_stmt 0 view .LVU289
 1255 0046 2F5F      		subi r18,-1
 1256 0048 3F4F      		sbci r19,-1
 1257 004a 812F      		mov r24,r17
 1258 004c 0E94 0000 		call sethsv
 1259               	.LVL68:
 437:quantum/rgblight.c ****         } else {
 1260               		.loc 1 437 13 is_stmt 1 view .LVU290
 1261 0050 4B81      		ldd r20,Y+3
 1262 0052 6981      		ldd r22,Y+1
 1263 0054 8A81      		ldd r24,Y+2
 1264 0056 0E94 0000 		call rgblight_setrgb
 1265               	.LVL69:
 1266               	.L65:
 437:quantum/rgblight.c ****         } else {
 1267               		.loc 1 437 13 is_stmt 0 view .LVU291
 1268               	.LBE28:
 490:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1269               		.loc 1 490 9 is_stmt 1 view .LVU292
 490:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1270               		.loc 1 490 29 is_stmt 0 view .LVU293
 1271 005a 1093 0000 		sts rgblight_config+1,r17
 491:quantum/rgblight.c ****         rgblight_config.val = val;
 1272               		.loc 1 491 9 is_stmt 1 view .LVU294
 491:quantum/rgblight.c ****         rgblight_config.val = val;
 1273               		.loc 1 491 29 is_stmt 0 view .LVU295
 1274 005e F092 0000 		sts rgblight_config+2,r15
 492:quantum/rgblight.c ****         if (write_to_eeprom) {
 1275               		.loc 1 492 9 is_stmt 1 view .LVU296
 492:quantum/rgblight.c ****         if (write_to_eeprom) {
 1276               		.loc 1 492 29 is_stmt 0 view .LVU297
 1277 0062 0093 0000 		sts rgblight_config+3,r16
 493:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1278               		.loc 1 493 9 is_stmt 1 view .LVU298
 493:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1279               		.loc 1 493 12 is_stmt 0 view .LVU299
 1280 0066 EE20      		tst r14
 1281 0068 01F0      		breq .L61
 494:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1282               		.loc 1 494 13 is_stmt 1 view .LVU300
 1283 006a 6091 0000 		lds r22,rgblight_config
 1284 006e 7091 0000 		lds r23,rgblight_config+1
 1285 0072 8091 0000 		lds r24,rgblight_config+2
 1286 0076 9091 0000 		lds r25,rgblight_config+3
 1287 007a 0E94 0000 		call eeconfig_update_rgblight
 1288               	.LVL70:
 495:quantum/rgblight.c ****         } else {
 1289               		.loc 1 495 124 view .LVU301
 497:quantum/rgblight.c ****         }
 1290               		.loc 1 497 126 view .LVU302
 1291               	.L61:
 1292               	/* epilogue start */
 500:quantum/rgblight.c **** 
 1293               		.loc 1 500 1 is_stmt 0 view .LVU303
 1294 007e 0F90      		pop __tmp_reg__
 1295 0080 0F90      		pop __tmp_reg__
 1296 0082 0F90      		pop __tmp_reg__
 1297 0084 DF91      		pop r29
 1298 0086 CF91      		pop r28
 1299 0088 1F91      		pop r17
 1300               	.LVL71:
 500:quantum/rgblight.c **** 
 1301               		.loc 1 500 1 view .LVU304
 1302 008a 0F91      		pop r16
 1303               	.LVL72:
 500:quantum/rgblight.c **** 
 1304               		.loc 1 500 1 view .LVU305
 1305 008c FF90      		pop r15
 1306               	.LVL73:
 500:quantum/rgblight.c **** 
 1307               		.loc 1 500 1 view .LVU306
 1308 008e EF90      		pop r14
 1309               	.LVL74:
 500:quantum/rgblight.c **** 
 1310               		.loc 1 500 1 view .LVU307
 1311 0090 DF90      		pop r13
 1312 0092 CF90      		pop r12
 1313 0094 BF90      		pop r11
 1314 0096 AF90      		pop r10
 1315 0098 0895      		ret
 1316               	.LVL75:
 1317               	.L64:
 440:quantum/rgblight.c ****             }
 1318               		.loc 1 440 13 is_stmt 1 view .LVU308
 443:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1319               		.loc 1 443 18 view .LVU309
 443:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1320               		.loc 1 443 21 is_stmt 0 view .LVU310
 1321 009a 8230      		cpi r24,lo8(2)
 1322 009c 01F4      		brne .L66
 445:quantum/rgblight.c ****             }
 1323               		.loc 1 445 17 is_stmt 1 view .LVU311
 445:quantum/rgblight.c ****             }
 1324               		.loc 1 445 21 is_stmt 0 view .LVU312
 1325 009e 0091 0000 		lds r16,rgblight_config+3
 1326               	.LVL76:
 445:quantum/rgblight.c ****             }
 1327               		.loc 1 445 21 view .LVU313
 1328 00a2 00C0      		rjmp .L65
 1329               	.L66:
 449:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1330               		.loc 1 449 18 is_stmt 1 view .LVU314
 449:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1331               		.loc 1 449 21 is_stmt 0 view .LVU315
 1332 00a4 8630      		cpi r24,lo8(6)
 1333 00a6 01F4      		brne .L67
 1334               	.L68:
 451:quantum/rgblight.c ****             }
 1335               		.loc 1 451 17 is_stmt 1 view .LVU316
 451:quantum/rgblight.c ****             }
 1336               		.loc 1 451 21 is_stmt 0 view .LVU317
 1337 00a8 1091 0000 		lds r17,rgblight_config+1
 1338               	.LVL77:
 451:quantum/rgblight.c ****             }
 1339               		.loc 1 451 21 view .LVU318
 1340 00ac 00C0      		rjmp .L65
 1341               	.L67:
 455:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1342               		.loc 1 455 18 is_stmt 1 view .LVU319
 455:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1343               		.loc 1 455 21 is_stmt 0 view .LVU320
 1344 00ae 8930      		cpi r24,lo8(9)
 1345 00b0 01F0      		breq .L68
 461:quantum/rgblight.c ****                 // static gradient
 1346               		.loc 1 461 18 is_stmt 1 view .LVU321
 461:quantum/rgblight.c ****                 // static gradient
 1347               		.loc 1 461 21 is_stmt 0 view .LVU322
 1348 00b2 8931      		cpi r24,lo8(25)
 1349 00b4 01F4      		brne .L65
 1350               	.LBB29:
 463:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1351               		.loc 1 463 17 is_stmt 1 view .LVU323
 463:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1352               		.loc 1 463 25 is_stmt 0 view .LVU324
 1353 00b6 E951      		subi r30,lo8(-(-25))
 1354               	.LVL78:
 464:quantum/rgblight.c **** #    ifdef __AVR__
 1355               		.loc 1 464 17 is_stmt 1 view .LVU325
 464:quantum/rgblight.c **** #    ifdef __AVR__
 1356               		.loc 1 464 49 is_stmt 0 view .LVU326
 1357 00b8 8E2F      		mov r24,r30
 1358 00ba 8170      		andi r24,lo8(1)
 1359 00bc D82E      		mov r13,r24
 1360               	.LVL79:
 467:quantum/rgblight.c **** #    else
 1361               		.loc 1 467 17 is_stmt 1 view .LVU327
 1362               	.LBB30:
 467:quantum/rgblight.c **** #    else
 1363               		.loc 1 467 33 view .LVU328
 1364 00be E695      		lsr r30
 1365               	.LVL80:
 467:quantum/rgblight.c **** #    else
 1366               		.loc 1 467 33 is_stmt 0 view .LVU329
 1367 00c0 F0E0      		ldi r31,0
 1368 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1369 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1370               	.LVL81:
 467:quantum/rgblight.c **** #    else
 1371               		.loc 1 467 33 is_stmt 1 view .LVU330
 467:quantum/rgblight.c **** #    else
 1372               		.loc 1 467 33 view .LVU331
 1373               	/* #APP */
 1374               	 ;  467 "quantum/rgblight.c" 1
 1375 00c6 A590      		lpm r10, Z+
 1376 00c8 B490      		lpm r11, Z
 1377               		
 1378               	 ;  0 "" 2
 1379               	.LVL82:
 467:quantum/rgblight.c **** #    else
 1380               		.loc 1 467 33 view .LVU332
 467:quantum/rgblight.c **** #    else
 1381               		.loc 1 467 33 is_stmt 0 view .LVU333
 1382               	/* #NOAPP */
 1383               	.LBE30:
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1384               		.loc 1 471 17 is_stmt 1 view .LVU334
 1385               	.LBB31:
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1386               		.loc 1 471 22 view .LVU335
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1387               		.loc 1 471 30 is_stmt 0 view .LVU336
 1388 00ca C12C      		mov r12,__zero_reg__
 1389               	.LBB32:
 472:quantum/rgblight.c ****                     if (direction) {
 1390               		.loc 1 472 49 view .LVU337
 1391 00cc BB24      		clr r11
 1392               	.LVL83:
 1393               	.L69:
 472:quantum/rgblight.c ****                     if (direction) {
 1394               		.loc 1 472 49 view .LVU338
 1395               	.LBE32:
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1396               		.loc 1 471 39 discriminator 1 view .LVU339
 1397 00ce 6091 0000 		lds r22,effect_num_leds
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1398               		.loc 1 471 17 discriminator 1 view .LVU340
 1399 00d2 C616      		cp r12,r22
 1400 00d4 00F0      		brlo .L72
 1401               	.LBE31:
 481:quantum/rgblight.c ****             }
 1402               		.loc 1 481 17 is_stmt 1 view .LVU341
 1403 00d6 0E94 0000 		call rgblight_set
 1404               	.LVL84:
 1405 00da 00C0      		rjmp .L65
 1406               	.L72:
 1407               	.LBB35:
 1408               	.LBB33:
 472:quantum/rgblight.c ****                     if (direction) {
 1409               		.loc 1 472 21 view .LVU342
 472:quantum/rgblight.c ****                     if (direction) {
 1410               		.loc 1 472 37 is_stmt 0 view .LVU343
 1411 00dc 2C2D      		mov r18,r12
 1412 00de 30E0      		ldi r19,0
 472:quantum/rgblight.c ****                     if (direction) {
 1413               		.loc 1 472 49 view .LVU344
 1414 00e0 A29E      		mul r10,r18
 1415 00e2 C001      		movw r24,r0
 1416 00e4 A39E      		mul r10,r19
 1417 00e6 900D      		add r25,r0
 1418 00e8 B29E      		mul r11,r18
 1419 00ea 900D      		add r25,r0
 1420 00ec 1124      		clr r1
 472:quantum/rgblight.c ****                     if (direction) {
 1421               		.loc 1 472 68 view .LVU345
 1422 00ee 70E0      		ldi r23,0
 1423 00f0 0E94 0000 		call __udivmodhi4
 1424               	.LVL85:
 473:quantum/rgblight.c ****                         _hue = hue + _hue;
 1425               		.loc 1 473 21 is_stmt 1 view .LVU346
 474:quantum/rgblight.c ****                     } else {
 1426               		.loc 1 474 30 is_stmt 0 view .LVU347
 1427 00f4 812F      		mov r24,r17
 473:quantum/rgblight.c ****                         _hue = hue + _hue;
 1428               		.loc 1 473 24 view .LVU348
 1429 00f6 D110      		cpse r13,__zero_reg__
 1430 00f8 00C0      		rjmp .L70
 474:quantum/rgblight.c ****                     } else {
 1431               		.loc 1 474 25 is_stmt 1 view .LVU349
 474:quantum/rgblight.c ****                     } else {
 1432               		.loc 1 474 30 is_stmt 0 view .LVU350
 1433 00fa 860F      		add r24,r22
 1434               	.LVL86:
 1435               	.L71:
 478:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1436               		.loc 1 478 98 is_stmt 1 discriminator 2 view .LVU351
 479:quantum/rgblight.c ****                 }
 1437               		.loc 1 479 21 discriminator 2 view .LVU352
 479:quantum/rgblight.c ****                 }
 1438               		.loc 1 479 63 is_stmt 0 discriminator 2 view .LVU353
 1439 00fc 4091 0000 		lds r20,effect_start_pos
 1440 0100 420F      		add r20,r18
 1441 0102 532F      		mov r21,r19
 1442 0104 511D      		adc r21,__zero_reg__
 479:quantum/rgblight.c ****                 }
 1443               		.loc 1 479 21 discriminator 2 view .LVU354
 1444 0106 9A01      		movw r18,r20
 1445 0108 220F      		lsl r18
 1446 010a 331F      		rol r19
 1447 010c 240F      		add r18,r20
 1448 010e 351F      		adc r19,r21
 1449 0110 2050      		subi r18,lo8(-(led))
 1450 0112 3040      		sbci r19,hi8(-(led))
 1451 0114 402F      		mov r20,r16
 1452 0116 6F2D      		mov r22,r15
 1453 0118 0E94 0000 		call sethsv
 1454               	.LVL87:
 479:quantum/rgblight.c ****                 }
 1455               		.loc 1 479 21 discriminator 2 view .LVU355
 1456               	.LBE33:
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1457               		.loc 1 471 59 discriminator 2 view .LVU356
 1458 011c C394      		inc r12
 1459               	.LVL88:
 471:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1460               		.loc 1 471 59 discriminator 2 view .LVU357
 1461 011e 00C0      		rjmp .L69
 1462               	.LVL89:
 1463               	.L70:
 1464               	.LBB34:
 476:quantum/rgblight.c ****                     }
 1465               		.loc 1 476 25 is_stmt 1 view .LVU358
 476:quantum/rgblight.c ****                     }
 1466               		.loc 1 476 30 is_stmt 0 view .LVU359
 1467 0120 861B      		sub r24,r22
 1468               	.LVL90:
 476:quantum/rgblight.c ****                     }
 1469               		.loc 1 476 30 view .LVU360
 1470 0122 00C0      		rjmp .L71
 1471               	.LBE34:
 1472               	.LBE35:
 1473               	.LBE29:
 1474               		.cfi_endproc
 1475               	.LFE133:
 1477               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1478               	.global	rgblight_increase_hue_helper
 1480               	rgblight_increase_hue_helper:
 1481               	.LVL91:
 1482               	.LFB112:
 374:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1483               		.loc 1 374 57 is_stmt 1 view -0
 1484               		.cfi_startproc
 1485               	/* prologue: function */
 1486               	/* frame size = 0 */
 1487               	/* stack size = 0 */
 1488               	.L__stack_usage = 0
 375:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1489               		.loc 1 375 5 view .LVU362
 376:quantum/rgblight.c **** }
 1490               		.loc 1 376 5 view .LVU363
 1491 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1492 0002 F0E0      		ldi r31,hi8(rgblight_config)
 375:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1493               		.loc 1 375 13 is_stmt 0 view .LVU364
 1494 0004 9181      		ldd r25,Z+1
 376:quantum/rgblight.c **** }
 1495               		.loc 1 376 5 view .LVU365
 1496 0006 282F      		mov r18,r24
 1497 0008 4381      		ldd r20,Z+3
 1498 000a 6281      		ldd r22,Z+2
 1499 000c 8AE0      		ldi r24,lo8(10)
 1500               	.LVL92:
 376:quantum/rgblight.c **** }
 1501               		.loc 1 376 5 view .LVU366
 1502 000e 890F      		add r24,r25
 1503               	.LVL93:
 376:quantum/rgblight.c **** }
 1504               		.loc 1 376 5 view .LVU367
 1505 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1506               	.LVL94:
 376:quantum/rgblight.c **** }
 1507               		.loc 1 376 5 view .LVU368
 1508               		.cfi_endproc
 1509               	.LFE112:
 1511               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1512               	.global	rgblight_increase_hue_noeeprom
 1514               	rgblight_increase_hue_noeeprom:
 1515               	.LFB113:
 378:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1516               		.loc 1 378 43 is_stmt 1 view -0
 1517               		.cfi_startproc
 1518               	/* prologue: function */
 1519               	/* frame size = 0 */
 1520               	/* stack size = 0 */
 1521               	.L__stack_usage = 0
 378:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1522               		.loc 1 378 45 view .LVU370
 1523 0000 80E0      		ldi r24,0
 1524 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1525               	.LVL95:
 1526               		.cfi_endproc
 1527               	.LFE113:
 1529               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1530               	.global	rgblight_increase_hue
 1532               	rgblight_increase_hue:
 1533               	.LFB114:
 379:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1534               		.loc 1 379 34 view -0
 1535               		.cfi_startproc
 1536               	/* prologue: function */
 1537               	/* frame size = 0 */
 1538               	/* stack size = 0 */
 1539               	.L__stack_usage = 0
 379:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1540               		.loc 1 379 36 view .LVU372
 1541 0000 81E0      		ldi r24,lo8(1)
 1542 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1543               	.LVL96:
 1544               		.cfi_endproc
 1545               	.LFE114:
 1547               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1548               	.global	rgblight_decrease_hue_helper
 1550               	rgblight_decrease_hue_helper:
 1551               	.LVL97:
 1552               	.LFB115:
 380:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1553               		.loc 1 380 57 view -0
 1554               		.cfi_startproc
 1555               	/* prologue: function */
 1556               	/* frame size = 0 */
 1557               	/* stack size = 0 */
 1558               	.L__stack_usage = 0
 381:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1559               		.loc 1 381 5 view .LVU374
 382:quantum/rgblight.c **** }
 1560               		.loc 1 382 5 view .LVU375
 1561 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1562 0002 F0E0      		ldi r31,hi8(rgblight_config)
 381:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1563               		.loc 1 381 13 is_stmt 0 view .LVU376
 1564 0004 9181      		ldd r25,Z+1
 382:quantum/rgblight.c **** }
 1565               		.loc 1 382 5 view .LVU377
 1566 0006 282F      		mov r18,r24
 1567 0008 4381      		ldd r20,Z+3
 1568 000a 6281      		ldd r22,Z+2
 1569 000c 86EF      		ldi r24,lo8(-10)
 1570               	.LVL98:
 382:quantum/rgblight.c **** }
 1571               		.loc 1 382 5 view .LVU378
 1572 000e 890F      		add r24,r25
 1573               	.LVL99:
 382:quantum/rgblight.c **** }
 1574               		.loc 1 382 5 view .LVU379
 1575 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1576               	.LVL100:
 382:quantum/rgblight.c **** }
 1577               		.loc 1 382 5 view .LVU380
 1578               		.cfi_endproc
 1579               	.LFE115:
 1581               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1582               	.global	rgblight_decrease_hue_noeeprom
 1584               	rgblight_decrease_hue_noeeprom:
 1585               	.LFB116:
 384:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1586               		.loc 1 384 43 is_stmt 1 view -0
 1587               		.cfi_startproc
 1588               	/* prologue: function */
 1589               	/* frame size = 0 */
 1590               	/* stack size = 0 */
 1591               	.L__stack_usage = 0
 384:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1592               		.loc 1 384 45 view .LVU382
 1593 0000 80E0      		ldi r24,0
 1594 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1595               	.LVL101:
 1596               		.cfi_endproc
 1597               	.LFE116:
 1599               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1600               	.global	rgblight_decrease_hue
 1602               	rgblight_decrease_hue:
 1603               	.LFB117:
 385:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1604               		.loc 1 385 34 view -0
 1605               		.cfi_startproc
 1606               	/* prologue: function */
 1607               	/* frame size = 0 */
 1608               	/* stack size = 0 */
 1609               	.L__stack_usage = 0
 385:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1610               		.loc 1 385 36 view .LVU384
 1611 0000 81E0      		ldi r24,lo8(1)
 1612 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1613               	.LVL102:
 1614               		.cfi_endproc
 1615               	.LFE117:
 1617               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1618               	.global	rgblight_increase_sat_helper
 1620               	rgblight_increase_sat_helper:
 1621               	.LVL103:
 1622               	.LFB118:
 386:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1623               		.loc 1 386 57 view -0
 1624               		.cfi_startproc
 1625               	/* prologue: function */
 1626               	/* frame size = 0 */
 1627               	/* stack size = 0 */
 1628               	.L__stack_usage = 0
 387:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1629               		.loc 1 387 5 view .LVU386
 1630               	.LBB36:
 1631               	.LBI36:
 1632               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1633               		.loc 2 23 34 view .LVU387
 1634               	.LBB37:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1635               		.loc 2 30 5 view .LVU388
 1636               	.LBE37:
 1637               	.LBE36:
 387:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1638               		.loc 1 387 19 is_stmt 0 view .LVU389
 1639 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1640 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1641               	.LBB39:
 1642               	.LBB38:
 1643               		.loc 2 30 5 view .LVU390
 1644 0004 6281      		ldd r22,Z+2
 1645 0006 21E1      		ldi r18,lo8(17)
 1646               	/* #APP */
 1647               	 ;  30 "./lib/lib8tion/math8.h" 1
 1648 0008 620F      		add r22, r18    
 1649 000a 00F4      		brcc L_1270     
 1650 000c 6FEF      		ldi r22, 0xFF  
 1651               		L_1270: 
 1652               	 ;  0 "" 2
 1653               	.LVL104:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1654               		.loc 2 43 5 is_stmt 1 view .LVU391
 1655               		.loc 2 43 5 is_stmt 0 view .LVU392
 1656               	/* #NOAPP */
 1657               	.LBE38:
 1658               	.LBE39:
 388:quantum/rgblight.c **** }
 1659               		.loc 1 388 5 is_stmt 1 view .LVU393
 1660 000e 282F      		mov r18,r24
 1661 0010 4381      		ldd r20,Z+3
 1662 0012 8181      		ldd r24,Z+1
 1663               	.LVL105:
 388:quantum/rgblight.c **** }
 1664               		.loc 1 388 5 is_stmt 0 view .LVU394
 1665 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1666               	.LVL106:
 388:quantum/rgblight.c **** }
 1667               		.loc 1 388 5 view .LVU395
 1668               		.cfi_endproc
 1669               	.LFE118:
 1671               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1672               	.global	rgblight_increase_sat_noeeprom
 1674               	rgblight_increase_sat_noeeprom:
 1675               	.LFB119:
 390:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1676               		.loc 1 390 43 is_stmt 1 view -0
 1677               		.cfi_startproc
 1678               	/* prologue: function */
 1679               	/* frame size = 0 */
 1680               	/* stack size = 0 */
 1681               	.L__stack_usage = 0
 390:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1682               		.loc 1 390 45 view .LVU397
 1683 0000 80E0      		ldi r24,0
 1684 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1685               	.LVL107:
 1686               		.cfi_endproc
 1687               	.LFE119:
 1689               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1690               	.global	rgblight_increase_sat
 1692               	rgblight_increase_sat:
 1693               	.LFB120:
 391:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1694               		.loc 1 391 34 view -0
 1695               		.cfi_startproc
 1696               	/* prologue: function */
 1697               	/* frame size = 0 */
 1698               	/* stack size = 0 */
 1699               	.L__stack_usage = 0
 391:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1700               		.loc 1 391 36 view .LVU399
 1701 0000 81E0      		ldi r24,lo8(1)
 1702 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1703               	.LVL108:
 1704               		.cfi_endproc
 1705               	.LFE120:
 1707               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1708               	.global	rgblight_decrease_sat_helper
 1710               	rgblight_decrease_sat_helper:
 1711               	.LVL109:
 1712               	.LFB121:
 392:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1713               		.loc 1 392 57 view -0
 1714               		.cfi_startproc
 1715               	/* prologue: function */
 1716               	/* frame size = 0 */
 1717               	/* stack size = 0 */
 1718               	.L__stack_usage = 0
 393:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1719               		.loc 1 393 5 view .LVU401
 1720               	.LBB40:
 1721               	.LBI40:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1722               		.loc 2 88 34 view .LVU402
 1723               	.LBB41:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1724               		.loc 2 96 5 view .LVU403
 1725               	.LBE41:
 1726               	.LBE40:
 393:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1727               		.loc 1 393 19 is_stmt 0 view .LVU404
 1728 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1729 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1730               	.LBB43:
 1731               	.LBB42:
 1732               		.loc 2 96 5 view .LVU405
 1733 0004 6281      		ldd r22,Z+2
 1734 0006 21E1      		ldi r18,lo8(17)
 1735               	/* #APP */
 1736               	 ;  96 "./lib/lib8tion/math8.h" 1
 1737 0008 621B      		sub r22, r18    
 1738 000a 00F4      		brcc L_1326     
 1739 000c 60E0      		ldi r22, 0x00  
 1740               		L_1326: 
 1741               	 ;  0 "" 2
 1742               	.LVL110:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1743               		.loc 2 110 5 is_stmt 1 view .LVU406
 1744               		.loc 2 110 5 is_stmt 0 view .LVU407
 1745               	/* #NOAPP */
 1746               	.LBE42:
 1747               	.LBE43:
 394:quantum/rgblight.c **** }
 1748               		.loc 1 394 5 is_stmt 1 view .LVU408
 1749 000e 282F      		mov r18,r24
 1750 0010 4381      		ldd r20,Z+3
 1751 0012 8181      		ldd r24,Z+1
 1752               	.LVL111:
 394:quantum/rgblight.c **** }
 1753               		.loc 1 394 5 is_stmt 0 view .LVU409
 1754 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1755               	.LVL112:
 394:quantum/rgblight.c **** }
 1756               		.loc 1 394 5 view .LVU410
 1757               		.cfi_endproc
 1758               	.LFE121:
 1760               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1761               	.global	rgblight_decrease_sat_noeeprom
 1763               	rgblight_decrease_sat_noeeprom:
 1764               	.LFB122:
 396:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1765               		.loc 1 396 43 is_stmt 1 view -0
 1766               		.cfi_startproc
 1767               	/* prologue: function */
 1768               	/* frame size = 0 */
 1769               	/* stack size = 0 */
 1770               	.L__stack_usage = 0
 396:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1771               		.loc 1 396 45 view .LVU412
 1772 0000 80E0      		ldi r24,0
 1773 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1774               	.LVL113:
 1775               		.cfi_endproc
 1776               	.LFE122:
 1778               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1779               	.global	rgblight_decrease_sat
 1781               	rgblight_decrease_sat:
 1782               	.LFB123:
 397:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1783               		.loc 1 397 34 view -0
 1784               		.cfi_startproc
 1785               	/* prologue: function */
 1786               	/* frame size = 0 */
 1787               	/* stack size = 0 */
 1788               	.L__stack_usage = 0
 397:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1789               		.loc 1 397 36 view .LVU414
 1790 0000 81E0      		ldi r24,lo8(1)
 1791 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1792               	.LVL114:
 1793               		.cfi_endproc
 1794               	.LFE123:
 1796               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1797               	.global	rgblight_increase_val_helper
 1799               	rgblight_increase_val_helper:
 1800               	.LVL115:
 1801               	.LFB124:
 398:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1802               		.loc 1 398 57 view -0
 1803               		.cfi_startproc
 1804               	/* prologue: function */
 1805               	/* frame size = 0 */
 1806               	/* stack size = 0 */
 1807               	.L__stack_usage = 0
 399:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1808               		.loc 1 399 5 view .LVU416
 1809               	.LBB44:
 1810               	.LBI44:
  23:./lib/lib8tion/math8.h **** {
 1811               		.loc 2 23 34 view .LVU417
 1812               	.LBB45:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1813               		.loc 2 30 5 view .LVU418
 1814               	.LBE45:
 1815               	.LBE44:
 399:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1816               		.loc 1 399 19 is_stmt 0 view .LVU419
 1817 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1818 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1819               	.LBB47:
 1820               	.LBB46:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1821               		.loc 2 30 5 view .LVU420
 1822 0004 4381      		ldd r20,Z+3
 1823 0006 21E1      		ldi r18,lo8(17)
 1824               	/* #APP */
 1825               	 ;  30 "./lib/lib8tion/math8.h" 1
 1826 0008 420F      		add r20, r18    
 1827 000a 00F4      		brcc L_1382     
 1828 000c 4FEF      		ldi r20, 0xFF  
 1829               		L_1382: 
 1830               	 ;  0 "" 2
 1831               	.LVL116:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1832               		.loc 2 43 5 is_stmt 1 view .LVU421
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1833               		.loc 2 43 5 is_stmt 0 view .LVU422
 1834               	/* #NOAPP */
 1835               	.LBE46:
 1836               	.LBE47:
 400:quantum/rgblight.c **** }
 1837               		.loc 1 400 5 is_stmt 1 view .LVU423
 1838 000e 282F      		mov r18,r24
 1839 0010 6281      		ldd r22,Z+2
 1840 0012 8181      		ldd r24,Z+1
 1841               	.LVL117:
 400:quantum/rgblight.c **** }
 1842               		.loc 1 400 5 is_stmt 0 view .LVU424
 1843 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1844               	.LVL118:
 400:quantum/rgblight.c **** }
 1845               		.loc 1 400 5 view .LVU425
 1846               		.cfi_endproc
 1847               	.LFE124:
 1849               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 1850               	.global	rgblight_increase_val_noeeprom
 1852               	rgblight_increase_val_noeeprom:
 1853               	.LFB125:
 402:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1854               		.loc 1 402 43 is_stmt 1 view -0
 1855               		.cfi_startproc
 1856               	/* prologue: function */
 1857               	/* frame size = 0 */
 1858               	/* stack size = 0 */
 1859               	.L__stack_usage = 0
 402:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1860               		.loc 1 402 45 view .LVU427
 1861 0000 80E0      		ldi r24,0
 1862 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1863               	.LVL119:
 1864               		.cfi_endproc
 1865               	.LFE125:
 1867               		.section	.text.rgblight_increase_val,"ax",@progbits
 1868               	.global	rgblight_increase_val
 1870               	rgblight_increase_val:
 1871               	.LFB126:
 403:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1872               		.loc 1 403 34 view -0
 1873               		.cfi_startproc
 1874               	/* prologue: function */
 1875               	/* frame size = 0 */
 1876               	/* stack size = 0 */
 1877               	.L__stack_usage = 0
 403:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1878               		.loc 1 403 36 view .LVU429
 1879 0000 81E0      		ldi r24,lo8(1)
 1880 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1881               	.LVL120:
 1882               		.cfi_endproc
 1883               	.LFE126:
 1885               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 1886               	.global	rgblight_decrease_val_helper
 1888               	rgblight_decrease_val_helper:
 1889               	.LVL121:
 1890               	.LFB127:
 404:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1891               		.loc 1 404 57 view -0
 1892               		.cfi_startproc
 1893               	/* prologue: function */
 1894               	/* frame size = 0 */
 1895               	/* stack size = 0 */
 1896               	.L__stack_usage = 0
 405:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1897               		.loc 1 405 5 view .LVU431
 1898               	.LBB48:
 1899               	.LBI48:
  88:./lib/lib8tion/math8.h **** {
 1900               		.loc 2 88 34 view .LVU432
 1901               	.LBB49:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1902               		.loc 2 96 5 view .LVU433
 1903               	.LBE49:
 1904               	.LBE48:
 405:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1905               		.loc 1 405 19 is_stmt 0 view .LVU434
 1906 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1907 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1908               	.LBB51:
 1909               	.LBB50:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1910               		.loc 2 96 5 view .LVU435
 1911 0004 4381      		ldd r20,Z+3
 1912 0006 21E1      		ldi r18,lo8(17)
 1913               	/* #APP */
 1914               	 ;  96 "./lib/lib8tion/math8.h" 1
 1915 0008 421B      		sub r20, r18    
 1916 000a 00F4      		brcc L_1438     
 1917 000c 40E0      		ldi r20, 0x00  
 1918               		L_1438: 
 1919               	 ;  0 "" 2
 1920               	.LVL122:
 1921               		.loc 2 110 5 is_stmt 1 view .LVU436
 1922               		.loc 2 110 5 is_stmt 0 view .LVU437
 1923               	/* #NOAPP */
 1924               	.LBE50:
 1925               	.LBE51:
 406:quantum/rgblight.c **** }
 1926               		.loc 1 406 5 is_stmt 1 view .LVU438
 1927 000e 282F      		mov r18,r24
 1928 0010 6281      		ldd r22,Z+2
 1929 0012 8181      		ldd r24,Z+1
 1930               	.LVL123:
 406:quantum/rgblight.c **** }
 1931               		.loc 1 406 5 is_stmt 0 view .LVU439
 1932 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1933               	.LVL124:
 406:quantum/rgblight.c **** }
 1934               		.loc 1 406 5 view .LVU440
 1935               		.cfi_endproc
 1936               	.LFE127:
 1938               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 1939               	.global	rgblight_decrease_val_noeeprom
 1941               	rgblight_decrease_val_noeeprom:
 1942               	.LFB128:
 408:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1943               		.loc 1 408 43 is_stmt 1 view -0
 1944               		.cfi_startproc
 1945               	/* prologue: function */
 1946               	/* frame size = 0 */
 1947               	/* stack size = 0 */
 1948               	.L__stack_usage = 0
 408:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1949               		.loc 1 408 45 view .LVU442
 1950 0000 80E0      		ldi r24,0
 1951 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1952               	.LVL125:
 1953               		.cfi_endproc
 1954               	.LFE128:
 1956               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1957               	.global	rgblight_decrease_val
 1959               	rgblight_decrease_val:
 1960               	.LFB129:
 409:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1961               		.loc 1 409 34 view -0
 1962               		.cfi_startproc
 1963               	/* prologue: function */
 1964               	/* frame size = 0 */
 1965               	/* stack size = 0 */
 1966               	.L__stack_usage = 0
 409:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1967               		.loc 1 409 36 view .LVU444
 1968 0000 81E0      		ldi r24,lo8(1)
 1969 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1970               	.LVL126:
 1971               		.cfi_endproc
 1972               	.LFE129:
 1974               		.section	.text.rgblight_sethsv,"ax",@progbits
 1975               	.global	rgblight_sethsv
 1977               	rgblight_sethsv:
 1978               	.LVL127:
 1979               	.LFB134:
 502:quantum/rgblight.c **** 
 1980               		.loc 1 502 61 view -0
 1981               		.cfi_startproc
 1982               	/* prologue: function */
 1983               	/* frame size = 0 */
 1984               	/* stack size = 0 */
 1985               	.L__stack_usage = 0
 502:quantum/rgblight.c **** 
 1986               		.loc 1 502 63 view .LVU446
 1987 0000 21E0      		ldi r18,lo8(1)
 1988 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1989               	.LVL128:
 502:quantum/rgblight.c **** 
 1990               		.loc 1 502 63 is_stmt 0 view .LVU447
 1991               		.cfi_endproc
 1992               	.LFE134:
 1994               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 1995               	.global	rgblight_sethsv_noeeprom
 1997               	rgblight_sethsv_noeeprom:
 1998               	.LVL129:
 1999               	.LFB135:
 504:quantum/rgblight.c **** 
 2000               		.loc 1 504 70 is_stmt 1 view -0
 2001               		.cfi_startproc
 2002               	/* prologue: function */
 2003               	/* frame size = 0 */
 2004               	/* stack size = 0 */
 2005               	.L__stack_usage = 0
 504:quantum/rgblight.c **** 
 2006               		.loc 1 504 72 view .LVU449
 2007 0000 20E0      		ldi r18,0
 2008 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2009               	.LVL130:
 504:quantum/rgblight.c **** 
 2010               		.loc 1 504 72 is_stmt 0 view .LVU450
 2011               		.cfi_endproc
 2012               	.LFE135:
 2014               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2015               	.global	rgblight_setrgb_at
 2017               	rgblight_setrgb_at:
 2018               	.LVL131:
 2019               	.LFB144:
 544:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2020               		.loc 1 544 73 is_stmt 1 view -0
 2021               		.cfi_startproc
 2022               	/* prologue: function */
 2023               	/* frame size = 0 */
 2024               	/* stack size = 0 */
 2025               	.L__stack_usage = 0
 545:quantum/rgblight.c ****         return;
 2026               		.loc 1 545 5 view .LVU452
 545:quantum/rgblight.c ****         return;
 2027               		.loc 1 545 25 is_stmt 0 view .LVU453
 2028 0000 9091 0000 		lds r25,rgblight_config
 545:quantum/rgblight.c ****         return;
 2029               		.loc 1 545 8 view .LVU454
 2030 0004 90FF      		sbrs r25,0
 2031 0006 00C0      		rjmp .L100
 545:quantum/rgblight.c ****         return;
 2032               		.loc 1 545 33 discriminator 1 view .LVU455
 2033 0008 2B31      		cpi r18,lo8(27)
 2034 000a 00F4      		brsh .L100
 549:quantum/rgblight.c ****     led[index].g = g;
 2035               		.loc 1 549 5 is_stmt 1 view .LVU456
 549:quantum/rgblight.c ****     led[index].g = g;
 2036               		.loc 1 549 15 is_stmt 0 view .LVU457
 2037 000c 30E0      		ldi r19,0
 549:quantum/rgblight.c ****     led[index].g = g;
 2038               		.loc 1 549 18 view .LVU458
 2039 000e F901      		movw r30,r18
 2040 0010 EE0F      		lsl r30
 2041 0012 FF1F      		rol r31
 2042 0014 E20F      		add r30,r18
 2043 0016 F31F      		adc r31,r19
 2044 0018 E050      		subi r30,lo8(-(led))
 2045 001a F040      		sbci r31,hi8(-(led))
 2046 001c 8183      		std Z+1,r24
 550:quantum/rgblight.c ****     led[index].b = b;
 2047               		.loc 1 550 5 is_stmt 1 view .LVU459
 550:quantum/rgblight.c ****     led[index].b = b;
 2048               		.loc 1 550 18 is_stmt 0 view .LVU460
 2049 001e 6083      		st Z,r22
 551:quantum/rgblight.c **** #ifdef RGBW
 2050               		.loc 1 551 5 is_stmt 1 view .LVU461
 551:quantum/rgblight.c **** #ifdef RGBW
 2051               		.loc 1 551 18 is_stmt 0 view .LVU462
 2052 0020 4283      		std Z+2,r20
 555:quantum/rgblight.c **** }
 2053               		.loc 1 555 5 is_stmt 1 view .LVU463
 2054 0022 0C94 0000 		jmp rgblight_set
 2055               	.LVL132:
 2056               	.L100:
 2057               	/* epilogue start */
 556:quantum/rgblight.c **** 
 2058               		.loc 1 556 1 is_stmt 0 view .LVU464
 2059 0026 0895      		ret
 2060               		.cfi_endproc
 2061               	.LFE144:
 2063               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2064               	.global	rgblight_sethsv_at
 2066               	rgblight_sethsv_at:
 2067               	.LVL133:
 2068               	.LFB145:
 558:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2069               		.loc 1 558 79 is_stmt 1 view -0
 2070               		.cfi_startproc
 558:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2071               		.loc 1 558 79 is_stmt 0 view .LVU466
 2072 0000 1F93      		push r17
 2073               	.LCFI32:
 2074               		.cfi_def_cfa_offset 3
 2075               		.cfi_offset 17, -2
 2076 0002 CF93      		push r28
 2077               	.LCFI33:
 2078               		.cfi_def_cfa_offset 4
 2079               		.cfi_offset 28, -3
 2080 0004 DF93      		push r29
 2081               	.LCFI34:
 2082               		.cfi_def_cfa_offset 5
 2083               		.cfi_offset 29, -4
 2084 0006 00D0      		rcall .
 2085 0008 0F92      		push __tmp_reg__
 2086               	.LCFI35:
 2087               		.cfi_def_cfa_offset 8
 2088 000a CDB7      		in r28,__SP_L__
 2089 000c DEB7      		in r29,__SP_H__
 2090               	.LCFI36:
 2091               		.cfi_def_cfa_register 28
 2092               	/* prologue: function */
 2093               	/* frame size = 3 */
 2094               	/* stack size = 6 */
 2095               	.L__stack_usage = 6
 2096 000e 122F      		mov r17,r18
 559:quantum/rgblight.c ****         return;
 2097               		.loc 1 559 5 is_stmt 1 view .LVU467
 559:quantum/rgblight.c ****         return;
 2098               		.loc 1 559 25 is_stmt 0 view .LVU468
 2099 0010 9091 0000 		lds r25,rgblight_config
 559:quantum/rgblight.c ****         return;
 2100               		.loc 1 559 8 view .LVU469
 2101 0014 90FF      		sbrs r25,0
 2102 0016 00C0      		rjmp .L105
 563:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2103               		.loc 1 563 5 is_stmt 1 view .LVU470
 564:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2104               		.loc 1 564 5 view .LVU471
 2105 0018 9E01      		movw r18,r28
 2106               	.LVL134:
 564:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2107               		.loc 1 564 5 is_stmt 0 view .LVU472
 2108 001a 2F5F      		subi r18,-1
 2109 001c 3F4F      		sbci r19,-1
 2110 001e 0E94 0000 		call sethsv
 2111               	.LVL135:
 565:quantum/rgblight.c **** }
 2112               		.loc 1 565 5 is_stmt 1 view .LVU473
 2113 0022 212F      		mov r18,r17
 2114 0024 4B81      		ldd r20,Y+3
 2115 0026 6981      		ldd r22,Y+1
 2116 0028 8A81      		ldd r24,Y+2
 2117 002a 0E94 0000 		call rgblight_setrgb_at
 2118               	.LVL136:
 2119               	.L105:
 2120               	/* epilogue start */
 566:quantum/rgblight.c **** 
 2121               		.loc 1 566 1 is_stmt 0 view .LVU474
 2122 002e 0F90      		pop __tmp_reg__
 2123 0030 0F90      		pop __tmp_reg__
 2124 0032 0F90      		pop __tmp_reg__
 2125 0034 DF91      		pop r29
 2126 0036 CF91      		pop r28
 2127 0038 1F91      		pop r17
 2128               	.LVL137:
 566:quantum/rgblight.c **** 
 2129               		.loc 1 566 1 view .LVU475
 2130 003a 0895      		ret
 2131               		.cfi_endproc
 2132               	.LFE145:
 2134               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2135               	.global	rgblight_setrgb_range
 2137               	rgblight_setrgb_range:
 2138               	.LVL138:
 2139               	.LFB147:
 580:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2140               		.loc 1 580 89 is_stmt 1 view -0
 2141               		.cfi_startproc
 580:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2142               		.loc 1 580 89 is_stmt 0 view .LVU477
 2143 0000 0F93      		push r16
 2144               	.LCFI37:
 2145               		.cfi_def_cfa_offset 3
 2146               		.cfi_offset 16, -2
 2147               	/* prologue: function */
 2148               	/* frame size = 0 */
 2149               	/* stack size = 1 */
 2150               	.L__stack_usage = 1
 581:quantum/rgblight.c ****         return;
 2151               		.loc 1 581 5 is_stmt 1 view .LVU478
 581:quantum/rgblight.c ****         return;
 2152               		.loc 1 581 25 is_stmt 0 view .LVU479
 2153 0002 9091 0000 		lds r25,rgblight_config
 581:quantum/rgblight.c ****         return;
 2154               		.loc 1 581 8 view .LVU480
 2155 0006 90FF      		sbrs r25,0
 2156 0008 00C0      		rjmp .L108
 581:quantum/rgblight.c ****         return;
 2157               		.loc 1 581 46 discriminator 1 view .LVU481
 2158 000a 2017      		cp r18,r16
 2159 000c 00F4      		brsh .L108
 581:quantum/rgblight.c ****         return;
 2160               		.loc 1 581 62 discriminator 2 view .LVU482
 2161 000e 0C31      		cpi r16,lo8(28)
 2162 0010 00F4      		brsh .L108
 2163 0012 93E0      		ldi r25,lo8(3)
 2164 0014 299F      		mul r18,r25
 2165 0016 F001      		movw r30,r0
 2166 0018 1124      		clr __zero_reg__
 2167 001a E050      		subi r30,lo8(-(led))
 2168 001c F040      		sbci r31,hi8(-(led))
 2169               	.LVL139:
 2170               	.L110:
 2171               	.LBB52:
 586:quantum/rgblight.c ****         led[i].g = g;
 2172               		.loc 1 586 9 is_stmt 1 discriminator 3 view .LVU483
 586:quantum/rgblight.c ****         led[i].g = g;
 2173               		.loc 1 586 18 is_stmt 0 discriminator 3 view .LVU484
 2174 001e 8183      		std Z+1,r24
 587:quantum/rgblight.c ****         led[i].b = b;
 2175               		.loc 1 587 9 is_stmt 1 discriminator 3 view .LVU485
 587:quantum/rgblight.c ****         led[i].b = b;
 2176               		.loc 1 587 18 is_stmt 0 discriminator 3 view .LVU486
 2177 0020 6083      		st Z,r22
 588:quantum/rgblight.c **** #ifdef RGBW
 2178               		.loc 1 588 9 is_stmt 1 discriminator 3 view .LVU487
 588:quantum/rgblight.c **** #ifdef RGBW
 2179               		.loc 1 588 18 is_stmt 0 discriminator 3 view .LVU488
 2180 0022 4283      		std Z+2,r20
 585:quantum/rgblight.c ****         led[i].r = r;
 2181               		.loc 1 585 39 discriminator 3 view .LVU489
 2182 0024 2F5F      		subi r18,lo8(-(1))
 2183               	.LVL140:
 585:quantum/rgblight.c ****         led[i].r = r;
 2184               		.loc 1 585 39 discriminator 3 view .LVU490
 2185 0026 3396      		adiw r30,3
 585:quantum/rgblight.c ****         led[i].r = r;
 2186               		.loc 1 585 5 discriminator 3 view .LVU491
 2187 0028 0213      		cpse r16,r18
 2188 002a 00C0      		rjmp .L110
 585:quantum/rgblight.c ****         led[i].r = r;
 2189               		.loc 1 585 5 discriminator 3 view .LVU492
 2190               	.LBE52:
 593:quantum/rgblight.c ****     wait_ms(1);
 2191               		.loc 1 593 5 is_stmt 1 view .LVU493
 2192 002c 0E94 0000 		call rgblight_set
 2193               	.LVL141:
 594:quantum/rgblight.c **** }
 2194               		.loc 1 594 5 view .LVU494
 2195               	.LBB53:
 2196               	.LBI53:
 2197               		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\util\\delay.h"
   1:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    All rights reserved.
   5:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   6:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   9:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  12:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      distribution.
  16:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  17:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  21:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  33:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  35:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  38:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  endif
  42:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  44:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <math.h>
  47:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  48:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \file */
  49:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \code
  51:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \endcode
  55:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  56:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     used.
  60:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  61:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  70:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  79:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  83:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** */
  84:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  85:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
  89:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  90:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \def F_CPU
  95:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  97:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 103:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     integer value.
 107:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 108:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 110:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 111:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 114:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 115:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  include <math.h>
 119:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 120:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 121:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /**
 122:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 124:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 126:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 129:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 131:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 137:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 142:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 147:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    respectively.
 151:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 152:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \note
 153:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 154:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 164:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 165:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** void
 166:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** _delay_ms(double __ms)
 2198               		.loc 3 166 1 view .LVU495
 2199               	.LBB54:
 167:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 168:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	double __tmp ;
 2200               		.loc 3 168 2 view .LVU496
 169:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 2201               		.loc 3 172 2 view .LVU497
 173:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2202               		.loc 3 173 2 view .LVU498
 174:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2203               		.loc 3 174 2 view .LVU499
 175:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 176:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 179:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 182:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#else
 183:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		//round up by default
 184:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2204               		.loc 3 184 3 view .LVU500
 185:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 186:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 187:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2205               		.loc 3 187 2 view .LVU501
 2206 0030 8FE9      		ldi r24,lo8(3999)
 2207 0032 9FE0      		ldi r25,hi8(3999)
 2208 0034 0197      	1:	sbiw r24,1
 2209 0036 01F4      		brne 1b
 2210 0038 00C0      		rjmp .
 2211 003a 0000      		nop
 2212               	.LVL142:
 2213               	.L108:
 2214               	/* epilogue start */
 2215               		.loc 3 187 2 is_stmt 0 view .LVU502
 2216               	.LBE54:
 2217               	.LBE53:
 595:quantum/rgblight.c **** 
 2218               		.loc 1 595 1 view .LVU503
 2219 003c 0F91      		pop r16
 2220               	.LVL143:
 595:quantum/rgblight.c **** 
 2221               		.loc 1 595 1 view .LVU504
 2222 003e 0895      		ret
 2223               		.cfi_endproc
 2224               	.LFE147:
 2226               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2227               	.global	rgblight_sethsv_range
 2229               	rgblight_sethsv_range:
 2230               	.LVL144:
 2231               	.LFB148:
 597:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2232               		.loc 1 597 95 is_stmt 1 view -0
 2233               		.cfi_startproc
 597:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2234               		.loc 1 597 95 is_stmt 0 view .LVU506
 2235 0000 0F93      		push r16
 2236               	.LCFI38:
 2237               		.cfi_def_cfa_offset 3
 2238               		.cfi_offset 16, -2
 2239 0002 1F93      		push r17
 2240               	.LCFI39:
 2241               		.cfi_def_cfa_offset 4
 2242               		.cfi_offset 17, -3
 2243 0004 CF93      		push r28
 2244               	.LCFI40:
 2245               		.cfi_def_cfa_offset 5
 2246               		.cfi_offset 28, -4
 2247 0006 DF93      		push r29
 2248               	.LCFI41:
 2249               		.cfi_def_cfa_offset 6
 2250               		.cfi_offset 29, -5
 2251 0008 00D0      		rcall .
 2252 000a 0F92      		push __tmp_reg__
 2253               	.LCFI42:
 2254               		.cfi_def_cfa_offset 9
 2255 000c CDB7      		in r28,__SP_L__
 2256 000e DEB7      		in r29,__SP_H__
 2257               	.LCFI43:
 2258               		.cfi_def_cfa_register 28
 2259               	/* prologue: function */
 2260               	/* frame size = 3 */
 2261               	/* stack size = 7 */
 2262               	.L__stack_usage = 7
 2263 0010 122F      		mov r17,r18
 598:quantum/rgblight.c ****         return;
 2264               		.loc 1 598 5 is_stmt 1 view .LVU507
 598:quantum/rgblight.c ****         return;
 2265               		.loc 1 598 25 is_stmt 0 view .LVU508
 2266 0012 9091 0000 		lds r25,rgblight_config
 598:quantum/rgblight.c ****         return;
 2267               		.loc 1 598 8 view .LVU509
 2268 0016 90FF      		sbrs r25,0
 2269 0018 00C0      		rjmp .L115
 602:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2270               		.loc 1 602 5 is_stmt 1 view .LVU510
 603:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2271               		.loc 1 603 5 view .LVU511
 2272 001a 9E01      		movw r18,r28
 2273               	.LVL145:
 603:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2274               		.loc 1 603 5 is_stmt 0 view .LVU512
 2275 001c 2F5F      		subi r18,-1
 2276 001e 3F4F      		sbci r19,-1
 2277 0020 0E94 0000 		call sethsv
 2278               	.LVL146:
 604:quantum/rgblight.c **** }
 2279               		.loc 1 604 5 is_stmt 1 view .LVU513
 2280 0024 212F      		mov r18,r17
 2281 0026 4B81      		ldd r20,Y+3
 2282 0028 6981      		ldd r22,Y+1
 2283 002a 8A81      		ldd r24,Y+2
 2284 002c 0E94 0000 		call rgblight_setrgb_range
 2285               	.LVL147:
 2286               	.L115:
 2287               	/* epilogue start */
 605:quantum/rgblight.c **** 
 2288               		.loc 1 605 1 is_stmt 0 view .LVU514
 2289 0030 0F90      		pop __tmp_reg__
 2290 0032 0F90      		pop __tmp_reg__
 2291 0034 0F90      		pop __tmp_reg__
 2292 0036 DF91      		pop r29
 2293 0038 CF91      		pop r28
 2294 003a 1F91      		pop r17
 2295               	.LVL148:
 605:quantum/rgblight.c **** 
 2296               		.loc 1 605 1 view .LVU515
 2297 003c 0F91      		pop r16
 2298               	.LVL149:
 605:quantum/rgblight.c **** 
 2299               		.loc 1 605 1 view .LVU516
 2300 003e 0895      		ret
 2301               		.cfi_endproc
 2302               	.LFE148:
 2304               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2305               	.global	rgblight_sethsv_master
 2307               	rgblight_sethsv_master:
 2308               	.LVL150:
 2309               	.LFB151:
 612:quantum/rgblight.c **** 
 2310               		.loc 1 612 68 is_stmt 1 view -0
 2311               		.cfi_startproc
 612:quantum/rgblight.c **** 
 2312               		.loc 1 612 68 is_stmt 0 view .LVU518
 2313 0000 0F93      		push r16
 2314               	.LCFI44:
 2315               		.cfi_def_cfa_offset 3
 2316               		.cfi_offset 16, -2
 2317               	/* prologue: function */
 2318               	/* frame size = 0 */
 2319               	/* stack size = 1 */
 2320               	.L__stack_usage = 1
 612:quantum/rgblight.c **** 
 2321               		.loc 1 612 70 is_stmt 1 view .LVU519
 2322 0002 0DE0      		ldi r16,lo8(13)
 2323 0004 20E0      		ldi r18,0
 2324 0006 0E94 0000 		call rgblight_sethsv_range
 2325               	.LVL151:
 2326               	/* epilogue start */
 612:quantum/rgblight.c **** 
 2327               		.loc 1 612 1 is_stmt 0 view .LVU520
 2328 000a 0F91      		pop r16
 2329 000c 0895      		ret
 2330               		.cfi_endproc
 2331               	.LFE151:
 2333               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2334               	.global	rgblight_sethsv_slave
 2336               	rgblight_sethsv_slave:
 2337               	.LVL152:
 2338               	.LFB152:
 614:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2339               		.loc 1 614 67 is_stmt 1 view -0
 2340               		.cfi_startproc
 614:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2341               		.loc 1 614 67 is_stmt 0 view .LVU522
 2342 0000 0F93      		push r16
 2343               	.LCFI45:
 2344               		.cfi_def_cfa_offset 3
 2345               		.cfi_offset 16, -2
 2346               	/* prologue: function */
 2347               	/* frame size = 0 */
 2348               	/* stack size = 1 */
 2349               	.L__stack_usage = 1
 614:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2350               		.loc 1 614 69 is_stmt 1 view .LVU523
 2351 0002 0BE1      		ldi r16,lo8(27)
 2352 0004 2DE0      		ldi r18,lo8(13)
 2353 0006 0E94 0000 		call rgblight_sethsv_range
 2354               	.LVL153:
 2355               	/* epilogue start */
 614:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2356               		.loc 1 614 1 is_stmt 0 view .LVU524
 2357 000a 0F91      		pop r16
 2358 000c 0895      		ret
 2359               		.cfi_endproc
 2360               	.LFE152:
 2362               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2363               	.global	rgblight_setrgb_master
 2365               	rgblight_setrgb_master:
 2366               	.LVL154:
 2367               	.LFB149:
 608:quantum/rgblight.c **** 
 2368               		.loc 1 608 62 is_stmt 1 view -0
 2369               		.cfi_startproc
 608:quantum/rgblight.c **** 
 2370               		.loc 1 608 62 is_stmt 0 view .LVU526
 2371 0000 0F93      		push r16
 2372               	.LCFI46:
 2373               		.cfi_def_cfa_offset 3
 2374               		.cfi_offset 16, -2
 2375               	/* prologue: function */
 2376               	/* frame size = 0 */
 2377               	/* stack size = 1 */
 2378               	.L__stack_usage = 1
 608:quantum/rgblight.c **** 
 2379               		.loc 1 608 64 is_stmt 1 view .LVU527
 2380 0002 0DE0      		ldi r16,lo8(13)
 2381 0004 20E0      		ldi r18,0
 2382 0006 0E94 0000 		call rgblight_setrgb_range
 2383               	.LVL155:
 2384               	/* epilogue start */
 608:quantum/rgblight.c **** 
 2385               		.loc 1 608 1 is_stmt 0 view .LVU528
 2386 000a 0F91      		pop r16
 2387 000c 0895      		ret
 2388               		.cfi_endproc
 2389               	.LFE149:
 2391               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2392               	.global	rgblight_setrgb_slave
 2394               	rgblight_setrgb_slave:
 2395               	.LVL156:
 2396               	.LFB150:
 610:quantum/rgblight.c **** 
 2397               		.loc 1 610 61 is_stmt 1 view -0
 2398               		.cfi_startproc
 610:quantum/rgblight.c **** 
 2399               		.loc 1 610 61 is_stmt 0 view .LVU530
 2400 0000 0F93      		push r16
 2401               	.LCFI47:
 2402               		.cfi_def_cfa_offset 3
 2403               		.cfi_offset 16, -2
 2404               	/* prologue: function */
 2405               	/* frame size = 0 */
 2406               	/* stack size = 1 */
 2407               	.L__stack_usage = 1
 610:quantum/rgblight.c **** 
 2408               		.loc 1 610 63 is_stmt 1 view .LVU531
 2409 0002 0BE1      		ldi r16,lo8(27)
 2410 0004 2DE0      		ldi r18,lo8(13)
 2411 0006 0E94 0000 		call rgblight_setrgb_range
 2412               	.LVL157:
 2413               	/* epilogue start */
 610:quantum/rgblight.c **** 
 2414               		.loc 1 610 1 is_stmt 0 view .LVU532
 2415 000a 0F91      		pop r16
 2416 000c 0895      		ret
 2417               		.cfi_endproc
 2418               	.LFE150:
 2420               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2421               	.global	rgblight_effect_rainbow_swirl
 2423               	rgblight_effect_rainbow_swirl:
 2424               	.LVL158:
 2425               	.LFB163:
 960:quantum/rgblight.c ****     uint8_t hue;
 2426               		.loc 1 960 62 is_stmt 1 view -0
 2427               		.cfi_startproc
 960:quantum/rgblight.c ****     uint8_t hue;
 2428               		.loc 1 960 62 is_stmt 0 view .LVU534
 2429 0000 EF92      		push r14
 2430               	.LCFI48:
 2431               		.cfi_def_cfa_offset 3
 2432               		.cfi_offset 14, -2
 2433 0002 FF92      		push r15
 2434               	.LCFI49:
 2435               		.cfi_def_cfa_offset 4
 2436               		.cfi_offset 15, -3
 2437 0004 1F93      		push r17
 2438               	.LCFI50:
 2439               		.cfi_def_cfa_offset 5
 2440               		.cfi_offset 17, -4
 2441 0006 CF93      		push r28
 2442               	.LCFI51:
 2443               		.cfi_def_cfa_offset 6
 2444               		.cfi_offset 28, -5
 2445 0008 DF93      		push r29
 2446               	.LCFI52:
 2447               		.cfi_def_cfa_offset 7
 2448               		.cfi_offset 29, -6
 2449               	/* prologue: function */
 2450               	/* frame size = 0 */
 2451               	/* stack size = 5 */
 2452               	.L__stack_usage = 5
 2453 000a EC01      		movw r28,r24
 961:quantum/rgblight.c ****     uint8_t i;
 2454               		.loc 1 961 5 is_stmt 1 view .LVU535
 962:quantum/rgblight.c **** 
 2455               		.loc 1 962 5 view .LVU536
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2456               		.loc 1 964 5 view .LVU537
 2457               	.LVL159:
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2458               		.loc 1 964 12 is_stmt 0 view .LVU538
 2459 000c 10E0      		ldi r17,0
 965:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2460               		.loc 1 965 45 view .LVU539
 2461 000e EE24      		clr r14
 2462 0010 EA94      		dec r14
 2463 0012 F12C      		mov r15,__zero_reg__
 2464               	.LVL160:
 2465               	.L123:
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2466               		.loc 1 964 19 discriminator 1 view .LVU540
 2467 0014 6091 0000 		lds r22,effect_num_leds
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2468               		.loc 1 964 5 discriminator 1 view .LVU541
 2469 0018 1617      		cp r17,r22
 2470 001a 00F0      		brlo .L124
 968:quantum/rgblight.c **** 
 2471               		.loc 1 968 5 is_stmt 1 view .LVU542
 2472 001c 0E94 0000 		call rgblight_set
 2473               	.LVL161:
 970:quantum/rgblight.c ****         anim->current_hue++;
 2474               		.loc 1 970 5 view .LVU543
 970:quantum/rgblight.c ****         anim->current_hue++;
 2475               		.loc 1 970 9 is_stmt 0 view .LVU544
 2476 0020 9A81      		ldd r25,Y+2
 2477 0022 8C81      		ldd r24,Y+4
 970:quantum/rgblight.c ****         anim->current_hue++;
 2478               		.loc 1 970 8 view .LVU545
 2479 0024 90FF      		sbrs r25,0
 2480 0026 00C0      		rjmp .L125
 971:quantum/rgblight.c ****     } else {
 2481               		.loc 1 971 9 is_stmt 1 view .LVU546
 971:quantum/rgblight.c ****     } else {
 2482               		.loc 1 971 26 is_stmt 0 view .LVU547
 2483 0028 8F5F      		subi r24,lo8(-(1))
 2484               	.L127:
 973:quantum/rgblight.c ****     }
 2485               		.loc 1 973 26 view .LVU548
 2486 002a 8C83      		std Y+4,r24
 2487               	/* epilogue start */
 975:quantum/rgblight.c **** #endif
 2488               		.loc 1 975 1 view .LVU549
 2489 002c DF91      		pop r29
 2490 002e CF91      		pop r28
 2491               	.LVL162:
 975:quantum/rgblight.c **** #endif
 2492               		.loc 1 975 1 view .LVU550
 2493 0030 1F91      		pop r17
 2494               	.LVL163:
 975:quantum/rgblight.c **** #endif
 2495               		.loc 1 975 1 view .LVU551
 2496 0032 FF90      		pop r15
 2497 0034 EF90      		pop r14
 2498 0036 0895      		ret
 2499               	.LVL164:
 2500               	.L124:
 965:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2501               		.loc 1 965 9 is_stmt 1 discriminator 3 view .LVU552
 966:quantum/rgblight.c ****     }
 2502               		.loc 1 966 9 discriminator 3 view .LVU553
 966:quantum/rgblight.c ****     }
 2503               		.loc 1 966 82 is_stmt 0 discriminator 3 view .LVU554
 2504 0038 2091 0000 		lds r18,effect_start_pos
 2505 003c 422F      		mov r20,r18
 2506 003e 410F      		add r20,r17
 2507 0040 5527      		clr r21
 2508 0042 551F      		rol r21
 2509 0044 CA01      		movw r24,r20
 966:quantum/rgblight.c ****     }
 2510               		.loc 1 966 9 discriminator 3 view .LVU555
 2511 0046 9A01      		movw r18,r20
 2512 0048 220F      		lsl r18
 2513 004a 331F      		rol r19
 2514 004c 280F      		add r18,r24
 2515 004e 391F      		adc r19,r25
 2516 0050 2050      		subi r18,lo8(-(led))
 2517 0052 3040      		sbci r19,hi8(-(led))
 965:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2518               		.loc 1 965 45 discriminator 3 view .LVU556
 2519 0054 70E0      		ldi r23,0
 2520 0056 C701      		movw r24,r14
 2521 0058 0E94 0000 		call __divmodhi4
 2522               	.LVL165:
 965:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2523               		.loc 1 965 45 discriminator 3 view .LVU557
 2524 005c 962F      		mov r25,r22
 965:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2525               		.loc 1 965 13 discriminator 3 view .LVU558
 2526 005e 8C81      		ldd r24,Y+4
 966:quantum/rgblight.c ****     }
 2527               		.loc 1 966 9 discriminator 3 view .LVU559
 2528 0060 4091 0000 		lds r20,rgblight_config+3
 2529 0064 6091 0000 		lds r22,rgblight_config+2
 2530 0068 199F      		mul r17,r25
 2531 006a 800D      		add r24,r0
 2532 006c 1124      		clr __zero_reg__
 2533 006e 0E94 0000 		call sethsv
 2534               	.LVL166:
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2535               		.loc 1 964 39 discriminator 3 view .LVU560
 2536 0072 1F5F      		subi r17,lo8(-(1))
 2537               	.LVL167:
 964:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2538               		.loc 1 964 39 discriminator 3 view .LVU561
 2539 0074 00C0      		rjmp .L123
 2540               	.L125:
 973:quantum/rgblight.c ****     }
 2541               		.loc 1 973 9 is_stmt 1 view .LVU562
 973:quantum/rgblight.c ****     }
 2542               		.loc 1 973 26 is_stmt 0 view .LVU563
 2543 0076 8150      		subi r24,lo8(-(-1))
 2544 0078 00C0      		rjmp .L127
 2545               		.cfi_endproc
 2546               	.LFE163:
 2548               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2549               	.global	rgblight_effect_snake
 2551               	rgblight_effect_snake:
 2552               	.LVL168:
 2553               	.LFB164:
 981:quantum/rgblight.c ****     static uint8_t pos = 0;
 2554               		.loc 1 981 54 is_stmt 1 view -0
 2555               		.cfi_startproc
 981:quantum/rgblight.c ****     static uint8_t pos = 0;
 2556               		.loc 1 981 54 is_stmt 0 view .LVU565
 2557 0000 AF92      		push r10
 2558               	.LCFI53:
 2559               		.cfi_def_cfa_offset 3
 2560               		.cfi_offset 10, -2
 2561 0002 BF92      		push r11
 2562               	.LCFI54:
 2563               		.cfi_def_cfa_offset 4
 2564               		.cfi_offset 11, -3
 2565 0004 CF92      		push r12
 2566               	.LCFI55:
 2567               		.cfi_def_cfa_offset 5
 2568               		.cfi_offset 12, -4
 2569 0006 DF92      		push r13
 2570               	.LCFI56:
 2571               		.cfi_def_cfa_offset 6
 2572               		.cfi_offset 13, -5
 2573 0008 EF92      		push r14
 2574               	.LCFI57:
 2575               		.cfi_def_cfa_offset 7
 2576               		.cfi_offset 14, -6
 2577 000a FF92      		push r15
 2578               	.LCFI58:
 2579               		.cfi_def_cfa_offset 8
 2580               		.cfi_offset 15, -7
 2581 000c 0F93      		push r16
 2582               	.LCFI59:
 2583               		.cfi_def_cfa_offset 9
 2584               		.cfi_offset 16, -8
 2585 000e 1F93      		push r17
 2586               	.LCFI60:
 2587               		.cfi_def_cfa_offset 10
 2588               		.cfi_offset 17, -9
 2589 0010 CF93      		push r28
 2590               	.LCFI61:
 2591               		.cfi_def_cfa_offset 11
 2592               		.cfi_offset 28, -10
 2593 0012 DF93      		push r29
 2594               	.LCFI62:
 2595               		.cfi_def_cfa_offset 12
 2596               		.cfi_offset 29, -11
 2597               	/* prologue: function */
 2598               	/* frame size = 0 */
 2599               	/* stack size = 10 */
 2600               	.L__stack_usage = 10
 982:quantum/rgblight.c ****     uint8_t        i, j;
 2601               		.loc 1 982 5 is_stmt 1 view .LVU566
 983:quantum/rgblight.c ****     int8_t         k;
 2602               		.loc 1 983 5 view .LVU567
 984:quantum/rgblight.c ****     int8_t         increment = 1;
 2603               		.loc 1 984 5 view .LVU568
 985:quantum/rgblight.c **** 
 2604               		.loc 1 985 5 view .LVU569
 2605               	.LVL169:
 987:quantum/rgblight.c ****         increment = -1;
 2606               		.loc 1 987 5 view .LVU570
 987:quantum/rgblight.c ****         increment = -1;
 2607               		.loc 1 987 9 is_stmt 0 view .LVU571
 2608 0014 FC01      		movw r30,r24
 2609 0016 8281      		ldd r24,Z+2
 2610               	.LVL170:
 988:quantum/rgblight.c ****     }
 2611               		.loc 1 988 19 view .LVU572
 2612 0018 0FEF      		ldi r16,lo8(-1)
 987:quantum/rgblight.c ****         increment = -1;
 2613               		.loc 1 987 8 view .LVU573
 2614 001a 80FF      		sbrs r24,0
 985:quantum/rgblight.c **** 
 2615               		.loc 1 985 20 view .LVU574
 2616 001c 01E0      		ldi r16,lo8(1)
 2617               	.L129:
 2618               	.LVL171:
1002:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2619               		.loc 1 1002 5 is_stmt 1 view .LVU575
1002:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2620               		.loc 1 1002 12 is_stmt 0 view .LVU576
 2621 001e 10E0      		ldi r17,0
 2622               	.LBB55:
1013:quantum/rgblight.c ****             }
 2623               		.loc 1 1013 19 view .LVU577
 2624 0020 4BE1      		ldi r20,lo8(27)
 2625 0022 A42E      		mov r10,r20
 2626               	.LVL172:
 2627               	.L130:
1013:quantum/rgblight.c ****             }
 2628               		.loc 1 1013 19 view .LVU578
 2629               	.LBE55:
1002:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2630               		.loc 1 1002 5 discriminator 1 view .LVU579
 2631 0024 8091 0000 		lds r24,effect_num_leds
 2632 0028 1817      		cp r17,r24
 2633 002a 00F0      		brlo .L135
1023:quantum/rgblight.c ****     if (increment == 1) {
 2634               		.loc 1 1023 5 is_stmt 1 view .LVU580
 2635 002c 0E94 0000 		call rgblight_set
 2636               	.LVL173:
1024:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2637               		.loc 1 1024 5 view .LVU581
 2638 0030 8091 0000 		lds r24,pos.3203
1024:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2639               		.loc 1 1024 8 is_stmt 0 view .LVU582
 2640 0034 0130      		cpi r16,lo8(1)
 2641 0036 01F0      		breq .+2
 2642 0038 00C0      		rjmp .L136
1025:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 2643               		.loc 1 1025 9 is_stmt 1 view .LVU583
1025:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 2644               		.loc 1 1025 12 is_stmt 0 view .LVU584
 2645 003a 8111      		cpse r24,__zero_reg__
 2646 003c 00C0      		rjmp .L137
1026:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2647               		.loc 1 1026 13 is_stmt 1 view .LVU585
1026:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2648               		.loc 1 1026 35 is_stmt 0 view .LVU586
 2649 003e 8091 0000 		lds r24,effect_num_leds
 2650               	.L137:
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2651               		.loc 1 1031 13 is_stmt 1 view .LVU587
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2652               		.loc 1 1031 17 is_stmt 0 view .LVU588
 2653 0042 8150      		subi r24,lo8(-(-1))
 2654               	.L141:
1037:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2655               		.loc 1 1037 13 view .LVU589
 2656 0044 8093 0000 		sts pos.3203,r24
 2657               	/* epilogue start */
1042:quantum/rgblight.c **** #endif
 2658               		.loc 1 1042 1 view .LVU590
 2659 0048 DF91      		pop r29
 2660 004a CF91      		pop r28
 2661 004c 1F91      		pop r17
 2662               	.LVL174:
1042:quantum/rgblight.c **** #endif
 2663               		.loc 1 1042 1 view .LVU591
 2664 004e 0F91      		pop r16
 2665               	.LVL175:
1042:quantum/rgblight.c **** #endif
 2666               		.loc 1 1042 1 view .LVU592
 2667 0050 FF90      		pop r15
 2668 0052 EF90      		pop r14
 2669 0054 DF90      		pop r13
 2670 0056 CF90      		pop r12
 2671 0058 BF90      		pop r11
 2672 005a AF90      		pop r10
 2673 005c 0895      		ret
 2674               	.LVL176:
 2675               	.L135:
 2676               	.LBB56:
1003:quantum/rgblight.c ****         ledp->r        = 0;
 2677               		.loc 1 1003 9 is_stmt 1 view .LVU593
1003:quantum/rgblight.c ****         ledp->r        = 0;
 2678               		.loc 1 1003 34 is_stmt 0 view .LVU594
 2679 005e C091 0000 		lds r28,effect_start_pos
 2680 0062 C12E      		mov r12,r17
 2681 0064 D12C      		mov r13,__zero_reg__
 2682 0066 CC0D      		add r28,r12
 2683 0068 DD2D      		mov r29,r13
 2684 006a D11D      		adc r29,__zero_reg__
 2685 006c CE01      		movw r24,r28
 2686 006e 880F      		lsl r24
 2687 0070 991F      		rol r25
 2688 0072 C80F      		add r28,r24
 2689 0074 D91F      		adc r29,r25
1003:quantum/rgblight.c ****         ledp->r        = 0;
 2690               		.loc 1 1003 19 view .LVU595
 2691 0076 C050      		subi r28,lo8(-(led))
 2692 0078 D040      		sbci r29,hi8(-(led))
 2693               	.LVL177:
1004:quantum/rgblight.c ****         ledp->g        = 0;
 2694               		.loc 1 1004 9 is_stmt 1 view .LVU596
1004:quantum/rgblight.c ****         ledp->g        = 0;
 2695               		.loc 1 1004 24 is_stmt 0 view .LVU597
 2696 007a 1982      		std Y+1,__zero_reg__
1005:quantum/rgblight.c ****         ledp->b        = 0;
 2697               		.loc 1 1005 9 is_stmt 1 view .LVU598
1005:quantum/rgblight.c ****         ledp->b        = 0;
 2698               		.loc 1 1005 24 is_stmt 0 view .LVU599
 2699 007c 1882      		st Y,__zero_reg__
1006:quantum/rgblight.c **** #    ifdef RGBW
 2700               		.loc 1 1006 9 is_stmt 1 view .LVU600
1006:quantum/rgblight.c **** #    ifdef RGBW
 2701               		.loc 1 1006 24 is_stmt 0 view .LVU601
 2702 007e 1A82      		std Y+2,__zero_reg__
1010:quantum/rgblight.c ****             k = pos + j * increment;
 2703               		.loc 1 1010 9 is_stmt 1 view .LVU602
 2704               	.LVL178:
1006:quantum/rgblight.c **** #    ifdef RGBW
 2705               		.loc 1 1006 24 is_stmt 0 view .LVU603
 2706 0080 34E0      		ldi r19,lo8(4)
 2707 0082 E32E      		mov r14,r19
 2708 0084 F12C      		mov r15,__zero_reg__
 2709 0086 B12C      		mov r11,__zero_reg__
 2710               	.LVL179:
 2711               	.L134:
1011:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2712               		.loc 1 1011 13 is_stmt 1 view .LVU604
1011:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2713               		.loc 1 1011 21 is_stmt 0 view .LVU605
 2714 0088 8091 0000 		lds r24,pos.3203
 2715 008c 8B0D      		add r24,r11
 2716               	.LVL180:
1012:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2717               		.loc 1 1012 13 is_stmt 1 view .LVU606
1012:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2718               		.loc 1 1012 16 is_stmt 0 view .LVU607
 2719 008e 8C31      		cpi r24,lo8(28)
 2720 0090 04F0      		brlt .L131
1013:quantum/rgblight.c ****             }
 2721               		.loc 1 1013 17 is_stmt 1 view .LVU608
1013:quantum/rgblight.c ****             }
 2722               		.loc 1 1013 19 is_stmt 0 view .LVU609
 2723 0092 6A2D      		mov r22,r10
 2724 0094 0E94 0000 		call __divmodqi4
 2725               	.LVL181:
1013:quantum/rgblight.c ****             }
 2726               		.loc 1 1013 19 view .LVU610
 2727 0098 892F      		mov r24,r25
 2728               	.LVL182:
1015:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2729               		.loc 1 1015 13 is_stmt 1 view .LVU611
 2730               	.L132:
1018:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2731               		.loc 1 1018 13 view .LVU612
1018:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2732               		.loc 1 1018 19 is_stmt 0 view .LVU613
 2733 009a 082E      		mov __tmp_reg__,r24
 2734 009c 000C      		lsl r0
 2735 009e 990B      		sbc r25,r25
1018:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2736               		.loc 1 1018 16 view .LVU614
 2737 00a0 C816      		cp r12,r24
 2738 00a2 D906      		cpc r13,r25
 2739 00a4 01F4      		brne .L133
1019:quantum/rgblight.c ****             }
 2740               		.loc 1 1019 17 is_stmt 1 view .LVU615
1019:quantum/rgblight.c ****             }
 2741               		.loc 1 1019 91 is_stmt 0 view .LVU616
 2742 00a6 8091 0000 		lds r24,rgblight_config+3
 2743               	.LVL183:
1019:quantum/rgblight.c ****             }
 2744               		.loc 1 1019 96 view .LVU617
 2745 00aa 8E9D      		mul r24,r14
 2746 00ac A001      		movw r20,r0
 2747 00ae 8F9D      		mul r24,r15
 2748 00b0 500D      		add r21,r0
 2749 00b2 1124      		clr __zero_reg__
1019:quantum/rgblight.c ****             }
 2750               		.loc 1 1019 133 view .LVU618
 2751 00b4 5595      		asr r21
 2752 00b6 4795      		ror r20
 2753 00b8 5595      		asr r21
 2754 00ba 4795      		ror r20
1019:quantum/rgblight.c ****             }
 2755               		.loc 1 1019 17 view .LVU619
 2756 00bc 9E01      		movw r18,r28
 2757 00be 6091 0000 		lds r22,rgblight_config+2
 2758 00c2 8091 0000 		lds r24,rgblight_config+1
 2759 00c6 0E94 0000 		call sethsv
 2760               	.LVL184:
 2761               	.L133:
1019:quantum/rgblight.c ****             }
 2762               		.loc 1 1019 17 view .LVU620
 2763 00ca B00E      		add r11,r16
 2764 00cc F1E0      		ldi r31,1
 2765 00ce EF1A      		sub r14,r31
 2766 00d0 F108      		sbc r15,__zero_reg__
1010:quantum/rgblight.c ****             k = pos + j * increment;
 2767               		.loc 1 1010 9 discriminator 2 view .LVU621
 2768 00d2 01F4      		brne .L134
 2769               	.LBE56:
1002:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2770               		.loc 1 1002 39 discriminator 2 view .LVU622
 2771 00d4 1F5F      		subi r17,lo8(-(1))
 2772               	.LVL185:
1002:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2773               		.loc 1 1002 39 discriminator 2 view .LVU623
 2774 00d6 00C0      		rjmp .L130
 2775               	.LVL186:
 2776               	.L131:
 2777               	.LBB57:
1015:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2778               		.loc 1 1015 13 is_stmt 1 view .LVU624
1015:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2779               		.loc 1 1015 16 is_stmt 0 view .LVU625
 2780 00d8 87FF      		sbrs r24,7
 2781 00da 00C0      		rjmp .L132
1016:quantum/rgblight.c ****             }
 2782               		.loc 1 1016 17 is_stmt 1 view .LVU626
1016:quantum/rgblight.c ****             }
 2783               		.loc 1 1016 23 is_stmt 0 view .LVU627
 2784 00dc 9091 0000 		lds r25,effect_num_leds
 2785 00e0 890F      		add r24,r25
 2786               	.LVL187:
1016:quantum/rgblight.c ****             }
 2787               		.loc 1 1016 23 view .LVU628
 2788 00e2 00C0      		rjmp .L132
 2789               	.LVL188:
 2790               	.L136:
1016:quantum/rgblight.c ****             }
 2791               		.loc 1 1016 23 view .LVU629
 2792               	.LBE57:
1037:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2793               		.loc 1 1037 9 is_stmt 1 view .LVU630
1037:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2794               		.loc 1 1037 20 is_stmt 0 view .LVU631
 2795 00e4 90E0      		ldi r25,0
 2796 00e6 0196      		adiw r24,1
1037:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2797               		.loc 1 1037 25 view .LVU632
 2798 00e8 6091 0000 		lds r22,effect_num_leds
 2799 00ec 70E0      		ldi r23,0
 2800 00ee 0E94 0000 		call __divmodhi4
 2801 00f2 00C0      		rjmp .L141
 2802               		.cfi_endproc
 2803               	.LFE164:
 2805               		.section	.text.rgblight_effect_knight,"ax",@progbits
 2806               	.global	rgblight_effect_knight
 2808               	rgblight_effect_knight:
 2809               	.LVL189:
 2810               	.LFB165:
1048:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 2811               		.loc 1 1048 55 is_stmt 1 view -0
 2812               		.cfi_startproc
1048:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 2813               		.loc 1 1048 55 is_stmt 0 view .LVU634
 2814 0000 0F93      		push r16
 2815               	.LCFI63:
 2816               		.cfi_def_cfa_offset 3
 2817               		.cfi_offset 16, -2
 2818 0002 1F93      		push r17
 2819               	.LCFI64:
 2820               		.cfi_def_cfa_offset 4
 2821               		.cfi_offset 17, -3
 2822 0004 CF93      		push r28
 2823               	.LCFI65:
 2824               		.cfi_def_cfa_offset 5
 2825               		.cfi_offset 28, -4
 2826 0006 DF93      		push r29
 2827               	.LCFI66:
 2828               		.cfi_def_cfa_offset 6
 2829               		.cfi_offset 29, -5
 2830               	/* prologue: function */
 2831               	/* frame size = 0 */
 2832               	/* stack size = 4 */
 2833               	.L__stack_usage = 4
1049:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2834               		.loc 1 1049 5 is_stmt 1 view .LVU635
1050:quantum/rgblight.c ****     static int8_t increment  = 1;
 2835               		.loc 1 1050 5 view .LVU636
1051:quantum/rgblight.c ****     uint8_t       i, cur;
 2836               		.loc 1 1051 5 view .LVU637
1052:quantum/rgblight.c **** 
 2837               		.loc 1 1052 5 view .LVU638
1063:quantum/rgblight.c ****         led[i].r = 0;
 2838               		.loc 1 1063 5 view .LVU639
1063:quantum/rgblight.c ****         led[i].r = 0;
 2839               		.loc 1 1063 12 is_stmt 0 view .LVU640
 2840 0008 8091 0000 		lds r24,effect_start_pos
 2841               	.LVL190:
1063:quantum/rgblight.c ****         led[i].r = 0;
 2842               		.loc 1 1063 34 view .LVU641
 2843 000c 9091 0000 		lds r25,effect_end_pos
 2844 0010 23E0      		ldi r18,lo8(3)
 2845 0012 829F      		mul r24,r18
 2846 0014 F001      		movw r30,r0
 2847 0016 1124      		clr __zero_reg__
 2848 0018 E050      		subi r30,lo8(-(led))
 2849 001a F040      		sbci r31,hi8(-(led))
 2850               	.L143:
1063:quantum/rgblight.c ****         led[i].r = 0;
 2851               		.loc 1 1063 5 discriminator 1 view .LVU642
 2852 001c 8917      		cp r24,r25
 2853 001e 00F0      		brlo .L144
1072:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2854               		.loc 1 1072 12 view .LVU643
 2855 0020 C0E0      		ldi r28,0
1076:quantum/rgblight.c ****         } else {
 2856               		.loc 1 1076 13 view .LVU644
 2857 0022 D3E0      		ldi r29,lo8(3)
 2858               	.LVL191:
 2859               	.L145:
1072:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2860               		.loc 1 1072 19 discriminator 1 view .LVU645
 2861 0024 6091 0000 		lds r22,effect_num_leds
1072:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2862               		.loc 1 1072 5 discriminator 1 view .LVU646
 2863 0028 C617      		cp r28,r22
 2864 002a 00F0      		brlo .L148
1086:quantum/rgblight.c **** 
 2865               		.loc 1 1086 5 is_stmt 1 view .LVU647
 2866 002c 0E94 0000 		call rgblight_set
 2867               	.LVL192:
1090:quantum/rgblight.c ****     high_bound += increment;
 2868               		.loc 1 1090 5 view .LVU648
1090:quantum/rgblight.c ****     high_bound += increment;
 2869               		.loc 1 1090 15 is_stmt 0 view .LVU649
 2870 0030 2091 0000 		lds r18,increment.3221
 2871 0034 8091 0000 		lds r24,low_bound.3219
 2872 0038 820F      		add r24,r18
 2873 003a 8093 0000 		sts low_bound.3219,r24
1091:quantum/rgblight.c **** 
 2874               		.loc 1 1091 5 is_stmt 1 view .LVU650
1091:quantum/rgblight.c **** 
 2875               		.loc 1 1091 16 is_stmt 0 view .LVU651
 2876 003e 9091 0000 		lds r25,high_bound.3220
 2877 0042 920F      		add r25,r18
 2878 0044 9093 0000 		sts high_bound.3220,r25
1093:quantum/rgblight.c ****         increment = -increment;
 2879               		.loc 1 1093 5 is_stmt 1 view .LVU652
1093:quantum/rgblight.c ****         increment = -increment;
 2880               		.loc 1 1093 8 is_stmt 0 view .LVU653
 2881 0048 1916      		cp __zero_reg__,r25
 2882 004a 04F4      		brge .L149
1093:quantum/rgblight.c ****         increment = -increment;
 2883               		.loc 1 1093 38 discriminator 1 view .LVU654
 2884 004c 082E      		mov __tmp_reg__,r24
 2885 004e 000C      		lsl r0
 2886 0050 990B      		sbc r25,r25
1093:quantum/rgblight.c ****         increment = -increment;
 2887               		.loc 1 1093 72 discriminator 1 view .LVU655
 2888 0052 4091 0000 		lds r20,effect_num_leds
 2889 0056 4150      		subi r20,1
 2890 0058 550B      		sbc r21,r21
1093:quantum/rgblight.c ****         increment = -increment;
 2891               		.loc 1 1093 25 discriminator 1 view .LVU656
 2892 005a 8417      		cp r24,r20
 2893 005c 9507      		cpc r25,r21
 2894 005e 04F0      		brlt .L142
 2895               	.L149:
1094:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2896               		.loc 1 1094 9 is_stmt 1 view .LVU657
1094:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2897               		.loc 1 1094 19 is_stmt 0 view .LVU658
 2898 0060 2195      		neg r18
 2899 0062 2093 0000 		sts increment.3221,r18
 2900               	.L142:
 2901               	/* epilogue start */
1101:quantum/rgblight.c **** #endif
 2902               		.loc 1 1101 1 view .LVU659
 2903 0066 DF91      		pop r29
 2904 0068 CF91      		pop r28
 2905               	.LVL193:
1101:quantum/rgblight.c **** #endif
 2906               		.loc 1 1101 1 view .LVU660
 2907 006a 1F91      		pop r17
 2908 006c 0F91      		pop r16
 2909 006e 0895      		ret
 2910               	.LVL194:
 2911               	.L144:
1064:quantum/rgblight.c ****         led[i].g = 0;
 2912               		.loc 1 1064 9 is_stmt 1 discriminator 3 view .LVU661
1064:quantum/rgblight.c ****         led[i].g = 0;
 2913               		.loc 1 1064 18 is_stmt 0 discriminator 3 view .LVU662
 2914 0070 1182      		std Z+1,__zero_reg__
1065:quantum/rgblight.c ****         led[i].b = 0;
 2915               		.loc 1 1065 9 is_stmt 1 discriminator 3 view .LVU663
1065:quantum/rgblight.c ****         led[i].b = 0;
 2916               		.loc 1 1065 18 is_stmt 0 discriminator 3 view .LVU664
 2917 0072 1082      		st Z,__zero_reg__
1066:quantum/rgblight.c **** #    ifdef RGBW
 2918               		.loc 1 1066 9 is_stmt 1 discriminator 3 view .LVU665
1066:quantum/rgblight.c **** #    ifdef RGBW
 2919               		.loc 1 1066 18 is_stmt 0 discriminator 3 view .LVU666
 2920 0074 1282      		std Z+2,__zero_reg__
1063:quantum/rgblight.c ****         led[i].r = 0;
 2921               		.loc 1 1063 53 discriminator 3 view .LVU667
 2922 0076 8F5F      		subi r24,lo8(-(1))
 2923               	.LVL195:
1063:quantum/rgblight.c ****         led[i].r = 0;
 2924               		.loc 1 1063 53 discriminator 3 view .LVU668
 2925 0078 3396      		adiw r30,3
 2926 007a 00C0      		rjmp .L143
 2927               	.LVL196:
 2928               	.L148:
1073:quantum/rgblight.c **** 
 2929               		.loc 1 1073 9 is_stmt 1 view .LVU669
1073:quantum/rgblight.c **** 
 2930               		.loc 1 1073 18 is_stmt 0 view .LVU670
 2931 007c 0C2F      		mov r16,r28
 2932 007e 10E0      		ldi r17,0
1073:quantum/rgblight.c **** 
 2933               		.loc 1 1073 51 view .LVU671
 2934 0080 70E0      		ldi r23,0
 2935 0082 C801      		movw r24,r16
 2936 0084 0E94 0000 		call __divmodhi4
1073:quantum/rgblight.c **** 
 2937               		.loc 1 1073 13 view .LVU672
 2938 0088 2091 0000 		lds r18,effect_start_pos
 2939 008c 820F      		add r24,r18
 2940               	.LVL197:
1075:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2941               		.loc 1 1075 9 is_stmt 1 view .LVU673
 2942 008e 482F      		mov r20,r24
 2943 0090 50E0      		ldi r21,0
1075:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2944               		.loc 1 1075 15 is_stmt 0 view .LVU674
 2945 0092 2091 0000 		lds r18,low_bound.3219
 2946 0096 022E      		mov __tmp_reg__,r18
 2947 0098 000C      		lsl r0
 2948 009a 330B      		sbc r19,r19
1075:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2949               		.loc 1 1075 12 view .LVU675
 2950 009c 0217      		cp r16,r18
 2951 009e 1307      		cpc r17,r19
 2952 00a0 04F0      		brlt .L146
 2953               	.LVL198:
1075:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2954               		.loc 1 1075 33 discriminator 1 view .LVU676
 2955 00a2 2091 0000 		lds r18,high_bound.3220
 2956 00a6 022E      		mov __tmp_reg__,r18
 2957 00a8 000C      		lsl r0
 2958 00aa 330B      		sbc r19,r19
1075:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2959               		.loc 1 1075 28 discriminator 1 view .LVU677
 2960 00ac 2017      		cp r18,r16
 2961 00ae 3107      		cpc r19,r17
 2962 00b0 04F0      		brlt .L146
1076:quantum/rgblight.c ****         } else {
 2963               		.loc 1 1076 13 is_stmt 1 view .LVU678
 2964 00b2 8D9F      		mul r24,r29
 2965 00b4 9001      		movw r18,r0
 2966 00b6 1124      		clr __zero_reg__
 2967 00b8 2050      		subi r18,lo8(-(led))
 2968 00ba 3040      		sbci r19,hi8(-(led))
 2969 00bc 4091 0000 		lds r20,rgblight_config+3
 2970 00c0 6091 0000 		lds r22,rgblight_config+2
 2971 00c4 8091 0000 		lds r24,rgblight_config+1
 2972               	.LVL199:
1076:quantum/rgblight.c ****         } else {
 2973               		.loc 1 1076 13 is_stmt 0 view .LVU679
 2974 00c8 0E94 0000 		call sethsv
 2975               	.LVL200:
 2976               	.L147:
1072:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2977               		.loc 1 1072 54 discriminator 2 view .LVU680
 2978 00cc CF5F      		subi r28,lo8(-(1))
 2979               	.LVL201:
1072:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2980               		.loc 1 1072 54 discriminator 2 view .LVU681
 2981 00ce 00C0      		rjmp .L145
 2982               	.LVL202:
 2983               	.L146:
1078:quantum/rgblight.c ****             led[cur].g = 0;
 2984               		.loc 1 1078 13 is_stmt 1 view .LVU682
1078:quantum/rgblight.c ****             led[cur].g = 0;
 2985               		.loc 1 1078 24 is_stmt 0 view .LVU683
 2986 00d0 FA01      		movw r30,r20
 2987 00d2 EE0F      		lsl r30
 2988 00d4 FF1F      		rol r31
 2989 00d6 E40F      		add r30,r20
 2990 00d8 F51F      		adc r31,r21
 2991 00da E050      		subi r30,lo8(-(led))
 2992 00dc F040      		sbci r31,hi8(-(led))
 2993 00de 1182      		std Z+1,__zero_reg__
1079:quantum/rgblight.c ****             led[cur].b = 0;
 2994               		.loc 1 1079 13 is_stmt 1 view .LVU684
1079:quantum/rgblight.c ****             led[cur].b = 0;
 2995               		.loc 1 1079 24 is_stmt 0 view .LVU685
 2996 00e0 1082      		st Z,__zero_reg__
1080:quantum/rgblight.c **** #    ifdef RGBW
 2997               		.loc 1 1080 13 is_stmt 1 view .LVU686
1080:quantum/rgblight.c **** #    ifdef RGBW
 2998               		.loc 1 1080 24 is_stmt 0 view .LVU687
 2999 00e2 1282      		std Z+2,__zero_reg__
 3000 00e4 00C0      		rjmp .L147
 3001               		.cfi_endproc
 3002               	.LFE165:
 3004               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3005               	.global	rgblight_effect_christmas
 3007               	rgblight_effect_christmas:
 3008               	.LVL203:
 3009               	.LFB166:
1105:quantum/rgblight.c ****     uint8_t hue;
 3010               		.loc 1 1105 58 is_stmt 1 view -0
 3011               		.cfi_startproc
1105:quantum/rgblight.c ****     uint8_t hue;
 3012               		.loc 1 1105 58 is_stmt 0 view .LVU689
 3013 0000 0F93      		push r16
 3014               	.LCFI67:
 3015               		.cfi_def_cfa_offset 3
 3016               		.cfi_offset 16, -2
 3017 0002 1F93      		push r17
 3018               	.LCFI68:
 3019               		.cfi_def_cfa_offset 4
 3020               		.cfi_offset 17, -3
 3021 0004 CF93      		push r28
 3022               	.LCFI69:
 3023               		.cfi_def_cfa_offset 5
 3024               		.cfi_offset 28, -4
 3025 0006 DF93      		push r29
 3026               	.LCFI70:
 3027               		.cfi_def_cfa_offset 6
 3028               		.cfi_offset 29, -5
 3029               	/* prologue: function */
 3030               	/* frame size = 0 */
 3031               	/* stack size = 4 */
 3032               	.L__stack_usage = 4
 3033 0008 8C01      		movw r16,r24
1106:quantum/rgblight.c ****     uint8_t i;
 3034               		.loc 1 1106 5 is_stmt 1 view .LVU690
1107:quantum/rgblight.c **** 
 3035               		.loc 1 1107 5 view .LVU691
1109:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3036               		.loc 1 1109 5 view .LVU692
1109:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3037               		.loc 1 1109 50 is_stmt 0 view .LVU693
 3038 000a FC01      		movw r30,r24
 3039 000c 8481      		ldd r24,Z+4
 3040 000e 9581      		ldd r25,Z+5
 3041               	.LVL204:
1109:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3042               		.loc 1 1109 50 view .LVU694
 3043 0010 0196      		adiw r24,1
1109:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3044               		.loc 1 1109 55 view .LVU695
 3045 0012 8170      		andi r24,1
 3046 0014 9927      		clr r25
1109:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3047               		.loc 1 1109 26 view .LVU696
 3048 0016 9583      		std Z+5,r25
 3049 0018 8483      		std Z+4,r24
1110:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3050               		.loc 1 1110 5 is_stmt 1 view .LVU697
 3051               	.LVL205:
1110:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3052               		.loc 1 1110 12 is_stmt 0 view .LVU698
 3053 001a C0E0      		ldi r28,0
1111:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3054               		.loc 1 1111 13 view .LVU699
 3055 001c D5E5      		ldi r29,lo8(85)
 3056               	.LVL206:
 3057               	.L152:
1110:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3058               		.loc 1 1110 5 discriminator 1 view .LVU700
 3059 001e 8091 0000 		lds r24,effect_num_leds
 3060 0022 C817      		cp r28,r24
 3061 0024 00F0      		brlo .L153
1114:quantum/rgblight.c **** }
 3062               		.loc 1 1114 5 is_stmt 1 view .LVU701
 3063               	/* epilogue start */
1115:quantum/rgblight.c **** #endif
 3064               		.loc 1 1115 1 is_stmt 0 view .LVU702
 3065 0026 DF91      		pop r29
 3066 0028 CF91      		pop r28
 3067               	.LVL207:
1115:quantum/rgblight.c **** #endif
 3068               		.loc 1 1115 1 view .LVU703
 3069 002a 1F91      		pop r17
 3070 002c 0F91      		pop r16
 3071               	.LVL208:
1114:quantum/rgblight.c **** }
 3072               		.loc 1 1114 5 view .LVU704
 3073 002e 0C94 0000 		jmp rgblight_set
 3074               	.LVL209:
 3075               	.L153:
1111:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3076               		.loc 1 1111 9 is_stmt 1 discriminator 3 view .LVU705
1112:quantum/rgblight.c ****     }
 3077               		.loc 1 1112 9 discriminator 3 view .LVU706
1112:quantum/rgblight.c ****     }
 3078               		.loc 1 1112 82 is_stmt 0 discriminator 3 view .LVU707
 3079 0032 2091 0000 		lds r18,effect_start_pos
 3080 0036 422F      		mov r20,r18
 3081 0038 4C0F      		add r20,r28
 3082 003a 5527      		clr r21
 3083 003c 551F      		rol r21
 3084 003e CA01      		movw r24,r20
1112:quantum/rgblight.c ****     }
 3085               		.loc 1 1112 9 discriminator 3 view .LVU708
 3086 0040 9A01      		movw r18,r20
 3087 0042 220F      		lsl r18
 3088 0044 331F      		rol r19
 3089 0046 280F      		add r18,r24
 3090 0048 391F      		adc r19,r25
 3091 004a 2050      		subi r18,lo8(-(led))
 3092 004c 3040      		sbci r19,hi8(-(led))
1111:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3093               		.loc 1 1111 23 discriminator 3 view .LVU709
 3094 004e 8C2F      		mov r24,r28
 3095 0050 8695      		lsr r24
1111:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3096               		.loc 1 1111 56 discriminator 3 view .LVU710
 3097 0052 F801      		movw r30,r16
 3098 0054 4481      		ldd r20,Z+4
 3099 0056 5581      		ldd r21,Z+5
 3100 0058 840F      		add r24,r20
 3101 005a 952F      		mov r25,r21
 3102 005c 911D      		adc r25,__zero_reg__
1111:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3103               		.loc 1 1111 13 discriminator 3 view .LVU711
 3104 005e 8170      		andi r24,lo8(1)
1112:quantum/rgblight.c ****     }
 3105               		.loc 1 1112 9 discriminator 3 view .LVU712
 3106 0060 4091 0000 		lds r20,rgblight_config+3
 3107 0064 6091 0000 		lds r22,rgblight_config+2
 3108 0068 8D9F      		mul r24,r29
 3109 006a 802D      		mov r24,r0
 3110 006c 1124      		clr r1
 3111 006e 0E94 0000 		call sethsv
 3112               	.LVL210:
1110:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3113               		.loc 1 1110 39 discriminator 3 view .LVU713
 3114 0072 CF5F      		subi r28,lo8(-(1))
 3115               	.LVL211:
1110:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3116               		.loc 1 1110 39 discriminator 3 view .LVU714
 3117 0074 00C0      		rjmp .L152
 3118               		.cfi_endproc
 3119               	.LFE166:
 3121               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3122               	.global	rgblight_effect_alternating
 3124               	rgblight_effect_alternating:
 3125               	.LVL212:
 3126               	.LFB168:
1147:quantum/rgblight.c **** #endif
1148:quantum/rgblight.c **** 
1149:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1150:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3127               		.loc 1 1150 60 is_stmt 1 view -0
 3128               		.cfi_startproc
 3129               		.loc 1 1150 60 is_stmt 0 view .LVU716
 3130 0000 0F93      		push r16
 3131               	.LCFI71:
 3132               		.cfi_def_cfa_offset 3
 3133               		.cfi_offset 16, -2
 3134 0002 1F93      		push r17
 3135               	.LCFI72:
 3136               		.cfi_def_cfa_offset 4
 3137               		.cfi_offset 17, -3
 3138 0004 CF93      		push r28
 3139               	.LCFI73:
 3140               		.cfi_def_cfa_offset 5
 3141               		.cfi_offset 28, -4
 3142 0006 DF93      		push r29
 3143               	.LCFI74:
 3144               		.cfi_def_cfa_offset 6
 3145               		.cfi_offset 29, -5
 3146               	/* prologue: function */
 3147               	/* frame size = 0 */
 3148               	/* stack size = 4 */
 3149               	.L__stack_usage = 4
 3150 0008 EC01      		movw r28,r24
1151:quantum/rgblight.c ****     for (int i = 0; i < effect_num_leds; i++) {
 3151               		.loc 1 1151 5 is_stmt 1 view .LVU717
 3152               	.LBB58:
 3153               		.loc 1 1151 10 view .LVU718
 3154               	.LVL213:
 3155               		.loc 1 1151 14 is_stmt 0 view .LVU719
 3156 000a 10E0      		ldi r17,0
 3157 000c 00E0      		ldi r16,0
 3158               	.LVL214:
 3159               	.L155:
 3160               		.loc 1 1151 23 discriminator 1 view .LVU720
 3161 000e 9091 0000 		lds r25,effect_num_leds
 3162               		.loc 1 1151 5 discriminator 1 view .LVU721
 3163 0012 9017      		cp r25,r16
 3164 0014 1106      		cpc __zero_reg__,r17
 3165 0016 01F0      		breq .+2
 3166 0018 04F4      		brge .L159
 3167               	.LBE58:
1152:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
1153:quantum/rgblight.c ****         if (i < effect_num_leds / 2 && anim->pos) {
1154:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1155:quantum/rgblight.c ****         } else if (i >= effect_num_leds / 2 && !anim->pos) {
1156:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1157:quantum/rgblight.c ****         } else {
1158:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1159:quantum/rgblight.c ****         }
1160:quantum/rgblight.c ****     }
1161:quantum/rgblight.c ****     rgblight_set();
 3168               		.loc 1 1161 5 is_stmt 1 view .LVU722
 3169 001a 0E94 0000 		call rgblight_set
 3170               	.LVL215:
1162:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3171               		.loc 1 1162 5 view .LVU723
 3172               		.loc 1 1162 22 is_stmt 0 view .LVU724
 3173 001e 8C81      		ldd r24,Y+4
 3174 0020 90E0      		ldi r25,0
 3175               		.loc 1 1162 28 view .LVU725
 3176 0022 0196      		adiw r24,1
 3177               		.loc 1 1162 33 view .LVU726
 3178 0024 8170      		andi r24,1
 3179 0026 9927      		clr r25
 3180               		.loc 1 1162 15 view .LVU727
 3181 0028 8C83      		std Y+4,r24
 3182               	/* epilogue start */
1163:quantum/rgblight.c **** }
 3183               		.loc 1 1163 1 view .LVU728
 3184 002a DF91      		pop r29
 3185 002c CF91      		pop r28
 3186               	.LVL216:
 3187               		.loc 1 1163 1 view .LVU729
 3188 002e 1F91      		pop r17
 3189 0030 0F91      		pop r16
 3190               	.LVL217:
 3191               		.loc 1 1163 1 view .LVU730
 3192 0032 0895      		ret
 3193               	.LVL218:
 3194               	.L159:
 3195               	.LBB61:
 3196               	.LBB59:
1152:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3197               		.loc 1 1152 9 is_stmt 1 view .LVU731
1152:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3198               		.loc 1 1152 34 is_stmt 0 view .LVU732
 3199 0034 2091 0000 		lds r18,effect_start_pos
 3200 0038 A801      		movw r20,r16
 3201 003a 420F      		add r20,r18
 3202 003c 511D      		adc r21,__zero_reg__
 3203 003e 9A01      		movw r18,r20
 3204 0040 220F      		lsl r18
 3205 0042 331F      		rol r19
 3206 0044 240F      		add r18,r20
 3207 0046 351F      		adc r19,r21
1152:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3208               		.loc 1 1152 19 view .LVU733
 3209 0048 2050      		subi r18,lo8(-(led))
 3210 004a 3040      		sbci r19,hi8(-(led))
 3211               	.LVL219:
1153:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3212               		.loc 1 1153 9 is_stmt 1 view .LVU734
 3213 004c 4C81      		ldd r20,Y+4
 3214 004e 6091 0000 		lds r22,rgblight_config+2
 3215 0052 8091 0000 		lds r24,rgblight_config+1
1153:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3216               		.loc 1 1153 33 is_stmt 0 view .LVU735
 3217 0056 9695      		lsr r25
1153:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3218               		.loc 1 1153 12 view .LVU736
 3219 0058 9017      		cp r25,r16
 3220 005a 1106      		cpc __zero_reg__,r17
 3221 005c 01F0      		breq .L156
 3222 005e 04F0      		brlt .L156
1153:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3223               		.loc 1 1153 37 discriminator 1 view .LVU737
 3224 0060 4423      		tst r20
 3225 0062 01F0      		breq .L157
 3226               	.L164:
1156:quantum/rgblight.c ****         } else {
 3227               		.loc 1 1156 13 is_stmt 1 view .LVU738
 3228 0064 4091 0000 		lds r20,rgblight_config+3
 3229               	.L163:
1158:quantum/rgblight.c ****         }
 3230               		.loc 1 1158 13 is_stmt 0 view .LVU739
 3231 0068 0E94 0000 		call sethsv
 3232               	.LVL220:
1158:quantum/rgblight.c ****         }
 3233               		.loc 1 1158 13 view .LVU740
 3234               	.LBE59:
1151:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3235               		.loc 1 1151 43 view .LVU741
 3236 006c 0F5F      		subi r16,-1
 3237 006e 1F4F      		sbci r17,-1
 3238               	.LVL221:
1151:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3239               		.loc 1 1151 43 view .LVU742
 3240 0070 00C0      		rjmp .L155
 3241               	.LVL222:
 3242               	.L156:
 3243               	.LBB60:
1155:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3244               		.loc 1 1155 16 is_stmt 1 discriminator 1 view .LVU743
1155:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3245               		.loc 1 1155 45 is_stmt 0 discriminator 1 view .LVU744
 3246 0072 4423      		tst r20
 3247 0074 01F0      		breq .L164
 3248               	.L157:
1158:quantum/rgblight.c ****         }
 3249               		.loc 1 1158 13 is_stmt 1 view .LVU745
 3250 0076 40E0      		ldi r20,0
 3251 0078 00C0      		rjmp .L163
 3252               	.LBE60:
 3253               	.LBE61:
 3254               		.cfi_endproc
 3255               	.LFE168:
 3257               		.section	.text.rgblight_disable,"ax",@progbits
 3258               	.global	rgblight_disable
 3260               	rgblight_disable:
 3261               	.LFB110:
 355:quantum/rgblight.c ****     rgblight_config.enable = 0;
 3262               		.loc 1 355 29 view -0
 3263               		.cfi_startproc
 3264               	/* prologue: function */
 3265               	/* frame size = 0 */
 3266               	/* stack size = 0 */
 3267               	.L__stack_usage = 0
 356:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3268               		.loc 1 356 5 view .LVU747
 356:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3269               		.loc 1 356 28 is_stmt 0 view .LVU748
 3270 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3271 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3272 0004 8081      		ld r24,Z
 3273 0006 8E7F      		andi r24,lo8(~(1<<0))
 3274 0008 8083      		st Z,r24
 357:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3275               		.loc 1 357 5 is_stmt 1 view .LVU749
 3276 000a 6081      		ld r22,Z
 3277 000c 7181      		ldd r23,Z+1
 3278 000e 8281      		ldd r24,Z+2
 3279 0010 9381      		ldd r25,Z+3
 3280 0012 0E94 0000 		call eeconfig_update_rgblight
 3281               	.LVL223:
 358:quantum/rgblight.c ****     rgblight_timer_disable();
 3282               		.loc 1 358 96 view .LVU750
 359:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 3283               		.loc 1 359 5 view .LVU751
 3284               	.LBB66:
 3285               	.LBI66:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3286               		.loc 1 760 6 view .LVU752
 3287               	.LBB67:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3288               		.loc 1 777 5 view .LVU753
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3289               		.loc 1 777 35 is_stmt 0 view .LVU754
 3290 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 3291               		.loc 1 778 43 is_stmt 1 view .LVU755
 3292               	.LBE67:
 3293               	.LBE66:
 360:quantum/rgblight.c ****     wait_ms(50);
 3294               		.loc 1 360 35 view .LVU756
 361:quantum/rgblight.c ****     rgblight_set();
 3295               		.loc 1 361 5 view .LVU757
 3296               	.LVL224:
 3297               	.LBB68:
 3298               	.LBI68:
 166:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 3299               		.loc 3 166 1 view .LVU758
 3300               	.LBB69:
 168:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 3301               		.loc 3 168 2 view .LVU759
 172:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 3302               		.loc 3 172 2 view .LVU760
 173:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 3303               		.loc 3 173 2 view .LVU761
 174:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 3304               		.loc 3 174 2 view .LVU762
 184:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 3305               		.loc 3 184 3 view .LVU763
 3306               		.loc 3 187 2 view .LVU764
 3307 001a 2FEF      		ldi r18,lo8(159999)
 3308 001c 80E7      		ldi r24,hi8(159999)
 3309 001e 92E0      		ldi r25,hlo8(159999)
 3310 0020 2150      	1:	subi r18,1
 3311 0022 8040      		sbci r24,0
 3312 0024 9040      		sbci r25,0
 3313 0026 01F4      		brne 1b
 3314 0028 00C0      		rjmp .
 3315 002a 0000      		nop
 3316               	.LVL225:
 3317               		.loc 3 187 2 is_stmt 0 view .LVU765
 3318               	.LBE69:
 3319               	.LBE68:
 362:quantum/rgblight.c **** }
 3320               		.loc 1 362 5 is_stmt 1 view .LVU766
 3321 002c 0C94 0000 		jmp rgblight_set
 3322               	.LVL226:
 3323               		.cfi_endproc
 3324               	.LFE110:
 3326               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 3327               	.global	rgblight_disable_noeeprom
 3329               	rgblight_disable_noeeprom:
 3330               	.LFB111:
 365:quantum/rgblight.c ****     rgblight_config.enable = 0;
 3331               		.loc 1 365 38 view -0
 3332               		.cfi_startproc
 3333               	/* prologue: function */
 3334               	/* frame size = 0 */
 3335               	/* stack size = 0 */
 3336               	.L__stack_usage = 0
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3337               		.loc 1 366 5 view .LVU768
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3338               		.loc 1 366 28 is_stmt 0 view .LVU769
 3339 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3340 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3341 0004 8081      		ld r24,Z
 3342 0006 8E7F      		andi r24,lo8(~(1<<0))
 3343 0008 8083      		st Z,r24
 367:quantum/rgblight.c ****     rgblight_timer_disable();
 3344               		.loc 1 367 98 is_stmt 1 view .LVU770
 368:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 3345               		.loc 1 368 5 view .LVU771
 3346               	.LBB74:
 3347               	.LBI74:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3348               		.loc 1 760 6 view .LVU772
 3349               	.LBB75:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3350               		.loc 1 777 5 view .LVU773
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3351               		.loc 1 777 35 is_stmt 0 view .LVU774
 3352 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 3353               		.loc 1 778 43 is_stmt 1 view .LVU775
 3354               	.LBE75:
 3355               	.LBE74:
 369:quantum/rgblight.c ****     wait_ms(50);
 3356               		.loc 1 369 35 view .LVU776
 370:quantum/rgblight.c ****     rgblight_set();
 3357               		.loc 1 370 5 view .LVU777
 3358               	.LVL227:
 3359               	.LBB76:
 3360               	.LBI76:
 166:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 3361               		.loc 3 166 1 view .LVU778
 3362               	.LBB77:
 168:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 3363               		.loc 3 168 2 view .LVU779
 172:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 3364               		.loc 3 172 2 view .LVU780
 173:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 3365               		.loc 3 173 2 view .LVU781
 174:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 3366               		.loc 3 174 2 view .LVU782
 184:c:\msys64\home\kyleo\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 3367               		.loc 3 184 3 view .LVU783
 3368               		.loc 3 187 2 view .LVU784
 3369 000e 2FEF      		ldi r18,lo8(159999)
 3370 0010 80E7      		ldi r24,hi8(159999)
 3371 0012 92E0      		ldi r25,hlo8(159999)
 3372 0014 2150      	1:	subi r18,1
 3373 0016 8040      		sbci r24,0
 3374 0018 9040      		sbci r25,0
 3375 001a 01F4      		brne 1b
 3376 001c 00C0      		rjmp .
 3377 001e 0000      		nop
 3378               	.LVL228:
 3379               		.loc 3 187 2 is_stmt 0 view .LVU785
 3380               	.LBE77:
 3381               	.LBE76:
 371:quantum/rgblight.c **** }
 3382               		.loc 1 371 5 is_stmt 1 view .LVU786
 3383 0020 0C94 0000 		jmp rgblight_set
 3384               	.LVL229:
 3385               		.cfi_endproc
 3386               	.LFE111:
 3388               		.section	.text.rgblight_timer_init,"ax",@progbits
 3389               	.global	rgblight_timer_init
 3391               	rgblight_timer_init:
 3392               	.LFB154:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3393               		.loc 1 760 32 view -0
 3394               		.cfi_startproc
 3395               	/* prologue: function */
 3396               	/* frame size = 0 */
 3397               	/* stack size = 0 */
 3398               	.L__stack_usage = 0
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3399               		.loc 1 777 5 view .LVU788
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3400               		.loc 1 777 35 is_stmt 0 view .LVU789
 3401 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 3402               		.loc 1 778 43 is_stmt 1 view .LVU790
 3403               	/* epilogue start */
 779:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 3404               		.loc 1 779 1 is_stmt 0 view .LVU791
 3405 0004 0895      		ret
 3406               		.cfi_endproc
 3407               	.LFE154:
 3409               		.section	.text.rgblight_timer_enable,"ax",@progbits
 3410               	.global	rgblight_timer_enable
 3412               	rgblight_timer_enable:
 3413               	.LFB155:
 780:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 3414               		.loc 1 780 34 is_stmt 1 view -0
 3415               		.cfi_startproc
 3416               	/* prologue: function */
 3417               	/* frame size = 0 */
 3418               	/* stack size = 0 */
 3419               	.L__stack_usage = 0
 781:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3420               		.loc 1 781 5 view .LVU793
 3421               	.LVL230:
 3422               	.LBB80:
 3423               	.LBI80:
  83:quantum/rgblight.c **** 
 3424               		.loc 1 83 19 view .LVU794
 3425               	.LBB81:
  83:quantum/rgblight.c **** 
 3426               		.loc 1 83 52 view .LVU795
 3427               	.LBE81:
 3428               	.LBE80:
 781:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3429               		.loc 1 781 42 is_stmt 0 view .LVU796
 3430 0000 6091 0000 		lds r22,rgblight_config
 3431 0004 6695      		lsr r22
 3432               	.LBB83:
 3433               	.LBB82:
  83:quantum/rgblight.c **** 
 3434               		.loc 1 83 59 view .LVU797
 3435 0006 70E0      		ldi r23,0
 3436 0008 4BE0      		ldi r20,lo8(11)
 3437 000a 50E0      		ldi r21,0
 3438 000c 80E0      		ldi r24,lo8(static_effect_table)
 3439 000e 90E0      		ldi r25,hi8(static_effect_table)
 3440 0010 0E94 0000 		call memchr
 3441               	.LVL231:
  83:quantum/rgblight.c **** 
 3442               		.loc 1 83 59 view .LVU798
 3443               	.LBE82:
 3444               	.LBE83:
 781:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3445               		.loc 1 781 8 view .LVU799
 3446 0014 892B      		or r24,r25
 3447 0016 01F4      		brne .L169
 782:quantum/rgblight.c ****     }
 3448               		.loc 1 782 9 is_stmt 1 view .LVU800
 782:quantum/rgblight.c ****     }
 3449               		.loc 1 782 39 is_stmt 0 view .LVU801
 3450 0018 81E0      		ldi r24,lo8(1)
 3451 001a 8093 0000 		sts rgblight_status+1,r24
 3452               	.L169:
 784:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3453               		.loc 1 784 5 is_stmt 1 view .LVU802
 784:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3454               		.loc 1 784 35 is_stmt 0 view .LVU803
 3455 001e 0E94 0000 		call timer_read
 3456               	.LVL232:
 784:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3457               		.loc 1 784 33 view .LVU804
 3458 0022 9093 0000 		sts animation_status+1,r25
 3459 0026 8093 0000 		sts animation_status,r24
 785:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 3460               		.loc 1 785 43 is_stmt 1 view .LVU805
 786:quantum/rgblight.c **** }
 3461               		.loc 1 786 41 view .LVU806
 3462               	/* epilogue start */
 787:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 3463               		.loc 1 787 1 is_stmt 0 view .LVU807
 3464 002a 0895      		ret
 3465               		.cfi_endproc
 3466               	.LFE155:
 3468               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 3469               	.global	rgblight_mode_eeprom_helper
 3471               	rgblight_mode_eeprom_helper:
 3472               	.LVL233:
 3473               	.LFB103:
 290:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 3474               		.loc 1 290 70 is_stmt 1 view -0
 3475               		.cfi_startproc
 3476               	/* prologue: function */
 3477               	/* frame size = 0 */
 3478               	/* stack size = 0 */
 3479               	.L__stack_usage = 0
 291:quantum/rgblight.c ****         return;
 3480               		.loc 1 291 5 view .LVU809
 291:quantum/rgblight.c ****         return;
 3481               		.loc 1 291 25 is_stmt 0 view .LVU810
 3482 0000 9091 0000 		lds r25,rgblight_config
 291:quantum/rgblight.c ****         return;
 3483               		.loc 1 291 8 view .LVU811
 3484 0004 90FF      		sbrs r25,0
 3485 0006 00C0      		rjmp .L170
 294:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3486               		.loc 1 294 5 is_stmt 1 view .LVU812
 3487 0008 9170      		andi r25,lo8(1)
 294:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3488               		.loc 1 294 8 is_stmt 0 view .LVU813
 3489 000a 8111      		cpse r24,__zero_reg__
 3490 000c 00C0      		rjmp .L172
 295:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 3491               		.loc 1 295 9 is_stmt 1 view .LVU814
 295:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 3492               		.loc 1 295 30 is_stmt 0 view .LVU815
 3493 000e 9260      		ori r25,lo8(2)
 3494               	.LVL234:
 3495               	.L181:
 299:quantum/rgblight.c ****     }
 3496               		.loc 1 299 30 view .LVU816
 3497 0010 9093 0000 		sts rgblight_config,r25
 301:quantum/rgblight.c ****     if (write_to_eeprom) {
 3498               		.loc 1 301 35 is_stmt 1 view .LVU817
 302:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 3499               		.loc 1 302 5 view .LVU818
 302:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 3500               		.loc 1 302 8 is_stmt 0 view .LVU819
 3501 0014 6623      		tst r22
 3502 0016 01F0      		breq .L175
 303:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3503               		.loc 1 303 9 is_stmt 1 view .LVU820
 3504 0018 6091 0000 		lds r22,rgblight_config
 3505 001c 7091 0000 		lds r23,rgblight_config+1
 3506 0020 8091 0000 		lds r24,rgblight_config+2
 3507 0024 9091 0000 		lds r25,rgblight_config+3
 3508               	.LVL235:
 303:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3509               		.loc 1 303 9 is_stmt 0 view .LVU821
 3510 0028 0E94 0000 		call eeconfig_update_rgblight
 3511               	.LVL236:
 304:quantum/rgblight.c ****     } else {
 3512               		.loc 1 304 70 is_stmt 1 view .LVU822
 3513               	.L175:
 306:quantum/rgblight.c ****     }
 3514               		.loc 1 306 72 view .LVU823
 308:quantum/rgblight.c ****         rgblight_timer_disable();
 3515               		.loc 1 308 5 view .LVU824
 3516               	.LBB88:
 3517               	.LBI88:
  83:quantum/rgblight.c **** 
 3518               		.loc 1 83 19 view .LVU825
 3519               	.LBB89:
  83:quantum/rgblight.c **** 
 3520               		.loc 1 83 52 view .LVU826
 3521               	.LBE89:
 3522               	.LBE88:
 308:quantum/rgblight.c ****         rgblight_timer_disable();
 3523               		.loc 1 308 41 is_stmt 0 view .LVU827
 3524 002c 6091 0000 		lds r22,rgblight_config
 3525 0030 6695      		lsr r22
 3526               	.LBB91:
 3527               	.LBB90:
  83:quantum/rgblight.c **** 
 3528               		.loc 1 83 59 view .LVU828
 3529 0032 70E0      		ldi r23,0
 3530 0034 4BE0      		ldi r20,lo8(11)
 3531 0036 50E0      		ldi r21,0
 3532 0038 80E0      		ldi r24,lo8(static_effect_table)
 3533 003a 90E0      		ldi r25,hi8(static_effect_table)
 3534 003c 0E94 0000 		call memchr
 3535               	.LVL237:
  83:quantum/rgblight.c **** 
 3536               		.loc 1 83 59 view .LVU829
 3537               	.LBE90:
 3538               	.LBE91:
 308:quantum/rgblight.c ****         rgblight_timer_disable();
 3539               		.loc 1 308 8 view .LVU830
 3540 0040 892B      		or r24,r25
 3541 0042 01F0      		breq .L176
 309:quantum/rgblight.c ****     } else {
 3542               		.loc 1 309 9 is_stmt 1 view .LVU831
 3543               	.LBB92:
 3544               	.LBI92:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3545               		.loc 1 760 6 view .LVU832
 3546               	.LBB93:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3547               		.loc 1 777 5 view .LVU833
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3548               		.loc 1 777 35 is_stmt 0 view .LVU834
 3549 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 3550               		.loc 1 778 43 is_stmt 1 view .LVU835
 3551               	.L177:
 3552               	.LBE93:
 3553               	.LBE92:
 314:quantum/rgblight.c **** #endif
 3554               		.loc 1 314 5 view .LVU836
 314:quantum/rgblight.c **** #endif
 3555               		.loc 1 314 30 is_stmt 0 view .LVU837
 3556 0048 81E0      		ldi r24,lo8(1)
 3557 004a 8093 0000 		sts animation_status+3,r24
 316:quantum/rgblight.c **** }
 3558               		.loc 1 316 5 is_stmt 1 view .LVU838
 3559 004e 4091 0000 		lds r20,rgblight_config+3
 3560 0052 6091 0000 		lds r22,rgblight_config+2
 3561 0056 8091 0000 		lds r24,rgblight_config+1
 3562 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 3563               	.LVL238:
 3564               	.L172:
 296:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 3565               		.loc 1 296 12 view .LVU839
 296:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 3566               		.loc 1 296 15 is_stmt 0 view .LVU840
 3567 005e 8532      		cpi r24,lo8(37)
 3568 0060 00F0      		brlo .L174
 297:quantum/rgblight.c ****     } else {
 3569               		.loc 1 297 9 is_stmt 1 view .LVU841
 297:quantum/rgblight.c ****     } else {
 3570               		.loc 1 297 30 is_stmt 0 view .LVU842
 3571 0062 9864      		ori r25,lo8(72)
 3572 0064 00C0      		rjmp .L181
 3573               	.L174:
 299:quantum/rgblight.c ****     }
 3574               		.loc 1 299 9 is_stmt 1 view .LVU843
 299:quantum/rgblight.c ****     }
 3575               		.loc 1 299 30 is_stmt 0 view .LVU844
 3576 0066 880F      		lsl r24
 3577               	.LVL239:
 299:quantum/rgblight.c ****     }
 3578               		.loc 1 299 30 view .LVU845
 3579 0068 982B      		or r25,r24
 3580 006a 00C0      		rjmp .L181
 3581               	.LVL240:
 3582               	.L176:
 311:quantum/rgblight.c ****     }
 3583               		.loc 1 311 9 is_stmt 1 view .LVU846
 3584 006c 0E94 0000 		call rgblight_timer_enable
 3585               	.LVL241:
 3586 0070 00C0      		rjmp .L177
 3587               	.LVL242:
 3588               	.L170:
 3589               	/* epilogue start */
 317:quantum/rgblight.c **** 
 3590               		.loc 1 317 1 is_stmt 0 view .LVU847
 3591 0072 0895      		ret
 3592               		.cfi_endproc
 3593               	.LFE103:
 3595               		.section	.text.rgblight_step_helper,"ax",@progbits
 3596               	.global	rgblight_step_helper
 3598               	rgblight_step_helper:
 3599               	.LVL243:
 3600               	.LFB96:
 261:quantum/rgblight.c ****     uint8_t mode = 0;
 3601               		.loc 1 261 49 is_stmt 1 view -0
 3602               		.cfi_startproc
 3603               	/* prologue: function */
 3604               	/* frame size = 0 */
 3605               	/* stack size = 0 */
 3606               	.L__stack_usage = 0
 261:quantum/rgblight.c ****     uint8_t mode = 0;
 3607               		.loc 1 261 49 is_stmt 0 view .LVU849
 3608 0000 682F      		mov r22,r24
 262:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 3609               		.loc 1 262 5 is_stmt 1 view .LVU850
 3610               	.LVL244:
 263:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3611               		.loc 1 263 5 view .LVU851
 263:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3612               		.loc 1 263 35 is_stmt 0 view .LVU852
 3613 0002 9091 0000 		lds r25,rgblight_config
 3614 0006 9695      		lsr r25
 263:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3615               		.loc 1 263 18 view .LVU853
 3616 0008 81E0      		ldi r24,lo8(1)
 3617               	.LVL245:
 263:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3618               		.loc 1 263 18 view .LVU854
 3619 000a 890F      		add r24,r25
 3620               	.LVL246:
 264:quantum/rgblight.c ****         mode = 1;
 3621               		.loc 1 264 5 is_stmt 1 view .LVU855
 264:quantum/rgblight.c ****         mode = 1;
 3622               		.loc 1 264 8 is_stmt 0 view .LVU856
 3623 000c 8532      		cpi r24,lo8(37)
 3624 000e 00F0      		brlo .L183
 265:quantum/rgblight.c ****     }
 3625               		.loc 1 265 14 view .LVU857
 3626 0010 81E0      		ldi r24,lo8(1)
 3627               	.LVL247:
 3628               	.L183:
 267:quantum/rgblight.c **** }
 3629               		.loc 1 267 5 is_stmt 1 view .LVU858
 3630 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3631               	.LVL248:
 267:quantum/rgblight.c **** }
 3632               		.loc 1 267 5 is_stmt 0 view .LVU859
 3633               		.cfi_endproc
 3634               	.LFE96:
 3636               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 3637               	.global	rgblight_step_noeeprom
 3639               	rgblight_step_noeeprom:
 3640               	.LFB97:
 269:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 3641               		.loc 1 269 35 is_stmt 1 view -0
 3642               		.cfi_startproc
 3643               	/* prologue: function */
 3644               	/* frame size = 0 */
 3645               	/* stack size = 0 */
 3646               	.L__stack_usage = 0
 269:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 3647               		.loc 1 269 37 view .LVU861
 3648 0000 80E0      		ldi r24,0
 3649 0002 0C94 0000 		jmp rgblight_step_helper
 3650               	.LVL249:
 3651               		.cfi_endproc
 3652               	.LFE97:
 3654               		.section	.text.rgblight_step,"ax",@progbits
 3655               	.global	rgblight_step
 3657               	rgblight_step:
 3658               	.LFB98:
 270:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 3659               		.loc 1 270 26 view -0
 3660               		.cfi_startproc
 3661               	/* prologue: function */
 3662               	/* frame size = 0 */
 3663               	/* stack size = 0 */
 3664               	.L__stack_usage = 0
 270:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 3665               		.loc 1 270 28 view .LVU863
 3666 0000 81E0      		ldi r24,lo8(1)
 3667 0002 0C94 0000 		jmp rgblight_step_helper
 3668               	.LVL250:
 3669               		.cfi_endproc
 3670               	.LFE98:
 3672               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 3673               	.global	rgblight_step_reverse_helper
 3675               	rgblight_step_reverse_helper:
 3676               	.LVL251:
 3677               	.LFB99:
 271:quantum/rgblight.c ****     uint8_t mode = 0;
 3678               		.loc 1 271 57 view -0
 3679               		.cfi_startproc
 3680               	/* prologue: function */
 3681               	/* frame size = 0 */
 3682               	/* stack size = 0 */
 3683               	.L__stack_usage = 0
 271:quantum/rgblight.c ****     uint8_t mode = 0;
 3684               		.loc 1 271 57 is_stmt 0 view .LVU865
 3685 0000 682F      		mov r22,r24
 272:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 3686               		.loc 1 272 5 is_stmt 1 view .LVU866
 3687               	.LVL252:
 273:quantum/rgblight.c ****     if (mode < 1) {
 3688               		.loc 1 273 5 view .LVU867
 273:quantum/rgblight.c ****     if (mode < 1) {
 3689               		.loc 1 273 35 is_stmt 0 view .LVU868
 3690 0002 9091 0000 		lds r25,rgblight_config
 3691 0006 9695      		lsr r25
 273:quantum/rgblight.c ****     if (mode < 1) {
 3692               		.loc 1 273 18 view .LVU869
 3693 0008 8FEF      		ldi r24,lo8(-1)
 3694               	.LVL253:
 273:quantum/rgblight.c ****     if (mode < 1) {
 3695               		.loc 1 273 18 view .LVU870
 3696 000a 890F      		add r24,r25
 3697               	.LVL254:
 274:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3698               		.loc 1 274 5 is_stmt 1 view .LVU871
 274:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3699               		.loc 1 274 8 is_stmt 0 view .LVU872
 3700 000c 01F4      		brne .L187
 275:quantum/rgblight.c ****     }
 3701               		.loc 1 275 14 view .LVU873
 3702 000e 84E2      		ldi r24,lo8(36)
 3703               	.LVL255:
 3704               	.L187:
 277:quantum/rgblight.c **** }
 3705               		.loc 1 277 5 is_stmt 1 view .LVU874
 3706 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3707               	.LVL256:
 277:quantum/rgblight.c **** }
 3708               		.loc 1 277 5 is_stmt 0 view .LVU875
 3709               		.cfi_endproc
 3710               	.LFE99:
 3712               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 3713               	.global	rgblight_step_reverse_noeeprom
 3715               	rgblight_step_reverse_noeeprom:
 3716               	.LFB100:
 279:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3717               		.loc 1 279 43 is_stmt 1 view -0
 3718               		.cfi_startproc
 3719               	/* prologue: function */
 3720               	/* frame size = 0 */
 3721               	/* stack size = 0 */
 3722               	.L__stack_usage = 0
 279:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3723               		.loc 1 279 45 view .LVU877
 3724 0000 80E0      		ldi r24,0
 3725 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3726               	.LVL257:
 3727               		.cfi_endproc
 3728               	.LFE100:
 3730               		.section	.text.rgblight_step_reverse,"ax",@progbits
 3731               	.global	rgblight_step_reverse
 3733               	rgblight_step_reverse:
 3734               	.LFB101:
 280:quantum/rgblight.c **** 
 3735               		.loc 1 280 34 view -0
 3736               		.cfi_startproc
 3737               	/* prologue: function */
 3738               	/* frame size = 0 */
 3739               	/* stack size = 0 */
 3740               	.L__stack_usage = 0
 280:quantum/rgblight.c **** 
 3741               		.loc 1 280 36 view .LVU879
 3742 0000 81E0      		ldi r24,lo8(1)
 3743 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3744               	.LVL258:
 3745               		.cfi_endproc
 3746               	.LFE101:
 3748               		.section	.text.rgblight_mode,"ax",@progbits
 3749               	.global	rgblight_mode
 3751               	rgblight_mode:
 3752               	.LVL259:
 3753               	.LFB104:
 319:quantum/rgblight.c **** 
 3754               		.loc 1 319 34 view -0
 3755               		.cfi_startproc
 3756               	/* prologue: function */
 3757               	/* frame size = 0 */
 3758               	/* stack size = 0 */
 3759               	.L__stack_usage = 0
 319:quantum/rgblight.c **** 
 3760               		.loc 1 319 36 view .LVU881
 3761 0000 61E0      		ldi r22,lo8(1)
 3762 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3763               	.LVL260:
 319:quantum/rgblight.c **** 
 3764               		.loc 1 319 36 is_stmt 0 view .LVU882
 3765               		.cfi_endproc
 3766               	.LFE104:
 3768               		.section	.text.rgblight_increase,"ax",@progbits
 3769               	.global	rgblight_increase
 3771               	rgblight_increase:
 3772               	.LFB94:
 246:quantum/rgblight.c ****     uint8_t mode = 0;
 3773               		.loc 1 246 30 is_stmt 1 view -0
 3774               		.cfi_startproc
 3775               	/* prologue: function */
 3776               	/* frame size = 0 */
 3777               	/* stack size = 0 */
 3778               	.L__stack_usage = 0
 247:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3779               		.loc 1 247 5 view .LVU884
 3780               	.LVL261:
 248:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3781               		.loc 1 248 5 view .LVU885
 248:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3782               		.loc 1 248 24 is_stmt 0 view .LVU886
 3783 0000 8091 0000 		lds r24,rgblight_config
 3784 0004 8695      		lsr r24
 248:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3785               		.loc 1 248 8 view .LVU887
 3786 0006 8432      		cpi r24,lo8(36)
 3787 0008 00F4      		brsh .L193
 249:quantum/rgblight.c ****     }
 3788               		.loc 1 249 9 is_stmt 1 view .LVU888
 249:quantum/rgblight.c ****     }
 3789               		.loc 1 249 14 is_stmt 0 view .LVU889
 3790 000a 8F5F      		subi r24,lo8(-(1))
 3791               	.LVL262:
 3792               	.L192:
 251:quantum/rgblight.c **** }
 3793               		.loc 1 251 5 is_stmt 1 view .LVU890
 3794 000c 0C94 0000 		jmp rgblight_mode
 3795               	.LVL263:
 3796               	.L193:
 247:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3797               		.loc 1 247 13 is_stmt 0 view .LVU891
 3798 0010 80E0      		ldi r24,0
 3799 0012 00C0      		rjmp .L192
 3800               		.cfi_endproc
 3801               	.LFE94:
 3803               		.section	.text.rgblight_decrease,"ax",@progbits
 3804               	.global	rgblight_decrease
 3806               	rgblight_decrease:
 3807               	.LFB95:
 253:quantum/rgblight.c ****     uint8_t mode = 0;
 3808               		.loc 1 253 30 is_stmt 1 view -0
 3809               		.cfi_startproc
 3810               	/* prologue: function */
 3811               	/* frame size = 0 */
 3812               	/* stack size = 0 */
 3813               	.L__stack_usage = 0
 254:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3814               		.loc 1 254 5 view .LVU893
 3815               	.LVL264:
 256:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3816               		.loc 1 256 5 view .LVU894
 256:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3817               		.loc 1 256 24 is_stmt 0 view .LVU895
 3818 0000 8091 0000 		lds r24,rgblight_config
 3819 0004 8695      		lsr r24
 256:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3820               		.loc 1 256 8 view .LVU896
 3821 0006 8230      		cpi r24,lo8(2)
 3822 0008 00F0      		brlo .L196
 257:quantum/rgblight.c ****     }
 3823               		.loc 1 257 9 is_stmt 1 view .LVU897
 257:quantum/rgblight.c ****     }
 3824               		.loc 1 257 14 is_stmt 0 view .LVU898
 3825 000a 8150      		subi r24,lo8(-(-1))
 3826               	.LVL265:
 3827               	.L195:
 259:quantum/rgblight.c **** }
 3828               		.loc 1 259 5 is_stmt 1 view .LVU899
 3829 000c 0C94 0000 		jmp rgblight_mode
 3830               	.LVL266:
 3831               	.L196:
 254:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3832               		.loc 1 254 13 is_stmt 0 view .LVU900
 3833 0010 80E0      		ldi r24,0
 3834 0012 00C0      		rjmp .L195
 3835               		.cfi_endproc
 3836               	.LFE95:
 3838               		.section	.text.rgblight_enable,"ax",@progbits
 3839               	.global	rgblight_enable
 3841               	rgblight_enable:
 3842               	.LFB108:
 341:quantum/rgblight.c ****     rgblight_config.enable = 1;
 3843               		.loc 1 341 28 is_stmt 1 view -0
 3844               		.cfi_startproc
 3845               	/* prologue: function */
 3846               	/* frame size = 0 */
 3847               	/* stack size = 0 */
 3848               	.L__stack_usage = 0
 342:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3849               		.loc 1 342 5 view .LVU902
 342:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3850               		.loc 1 342 28 is_stmt 0 view .LVU903
 3851 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3852 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3853 0004 8081      		ld r24,Z
 3854 0006 8160      		ori r24,lo8(1<<0)
 3855 0008 8083      		st Z,r24
 345:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 3856               		.loc 1 345 95 is_stmt 1 view .LVU904
 346:quantum/rgblight.c **** }
 3857               		.loc 1 346 5 view .LVU905
 3858 000a 8695      		lsr r24
 3859 000c 0C94 0000 		jmp rgblight_mode
 3860               	.LVL267:
 3861               		.cfi_endproc
 3862               	.LFE108:
 3864               		.section	.text.rgblight_toggle,"ax",@progbits
 3865               	.global	rgblight_toggle
 3867               	rgblight_toggle:
 3868               	.LFB106:
 323:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3869               		.loc 1 323 28 view -0
 3870               		.cfi_startproc
 3871               	/* prologue: function */
 3872               	/* frame size = 0 */
 3873               	/* stack size = 0 */
 3874               	.L__stack_usage = 0
 324:quantum/rgblight.c ****     if (rgblight_config.enable) {
 3875               		.loc 1 324 96 view .LVU907
 325:quantum/rgblight.c ****         rgblight_disable();
 3876               		.loc 1 325 5 view .LVU908
 325:quantum/rgblight.c ****         rgblight_disable();
 3877               		.loc 1 325 9 is_stmt 0 view .LVU909
 3878 0000 8091 0000 		lds r24,rgblight_config
 325:quantum/rgblight.c ****         rgblight_disable();
 3879               		.loc 1 325 8 view .LVU910
 3880 0004 80FD      		sbrc r24,0
 326:quantum/rgblight.c ****     } else {
 3881               		.loc 1 326 9 is_stmt 1 view .LVU911
 3882 0006 0C94 0000 		jmp rgblight_disable
 3883               	.LVL268:
 3884               	.L199:
 328:quantum/rgblight.c ****     }
 3885               		.loc 1 328 9 view .LVU912
 3886 000a 0C94 0000 		jmp rgblight_enable
 3887               	.LVL269:
 3888               		.cfi_endproc
 3889               	.LFE106:
 3891               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 3892               	.global	rgblight_mode_noeeprom
 3894               	rgblight_mode_noeeprom:
 3895               	.LVL270:
 3896               	.LFB105:
 321:quantum/rgblight.c **** 
 3897               		.loc 1 321 43 view -0
 3898               		.cfi_startproc
 3899               	/* prologue: function */
 3900               	/* frame size = 0 */
 3901               	/* stack size = 0 */
 3902               	.L__stack_usage = 0
 321:quantum/rgblight.c **** 
 3903               		.loc 1 321 45 view .LVU914
 3904 0000 60E0      		ldi r22,0
 3905 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3906               	.LVL271:
 321:quantum/rgblight.c **** 
 3907               		.loc 1 321 45 is_stmt 0 view .LVU915
 3908               		.cfi_endproc
 3909               	.LFE105:
 3911               		.section	.text.rgblight_init,"ax",@progbits
 3912               	.global	rgblight_init
 3914               	rgblight_init:
 3915               	.LFB91:
 198:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 3916               		.loc 1 198 26 is_stmt 1 view -0
 3917               		.cfi_startproc
 3918               	/* prologue: function */
 3919               	/* frame size = 0 */
 3920               	/* stack size = 0 */
 3921               	.L__stack_usage = 0
 202:quantum/rgblight.c ****         return;
 3922               		.loc 1 202 5 view .LVU917
 202:quantum/rgblight.c ****         return;
 3923               		.loc 1 202 8 is_stmt 0 view .LVU918
 3924 0000 8091 0000 		lds r24,is_rgblight_initialized
 3925 0004 8111      		cpse r24,__zero_reg__
 3926 0006 00C0      		rjmp .L201
 206:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 3927               		.loc 1 206 39 is_stmt 1 view .LVU919
 207:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 3928               		.loc 1 207 38 view .LVU920
 208:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3929               		.loc 1 208 5 view .LVU921
 208:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3930               		.loc 1 208 10 is_stmt 0 view .LVU922
 3931 0008 0E94 0000 		call eeconfig_is_enabled
 3932               	.LVL272:
 208:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3933               		.loc 1 208 8 view .LVU923
 3934 000c 8111      		cpse r24,__zero_reg__
 3935 000e 00C0      		rjmp .L203
 209:quantum/rgblight.c ****         eeconfig_init();
 3936               		.loc 1 209 60 is_stmt 1 view .LVU924
 210:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3937               		.loc 1 210 9 view .LVU925
 3938 0010 0E94 0000 		call eeconfig_init
 3939               	.LVL273:
 211:quantum/rgblight.c ****     }
 3940               		.loc 1 211 9 view .LVU926
 3941 0014 0E94 0000 		call eeconfig_update_rgblight_default
 3942               	.LVL274:
 3943               	.L203:
 213:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3944               		.loc 1 213 5 view .LVU927
 213:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3945               		.loc 1 213 27 is_stmt 0 view .LVU928
 3946 0018 0E94 0000 		call eeconfig_read_rgblight
 3947               	.LVL275:
 213:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3948               		.loc 1 213 25 view .LVU929
 3949 001c 6093 0000 		sts rgblight_config,r22
 3950 0020 7093 0000 		sts rgblight_config+1,r23
 3951 0024 8093 0000 		sts rgblight_config+2,r24
 3952 0028 9093 0000 		sts rgblight_config+3,r25
 214:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 3953               		.loc 1 214 39 is_stmt 1 view .LVU930
 215:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3954               		.loc 1 215 5 view .LVU931
 215:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3955               		.loc 1 215 9 is_stmt 0 view .LVU932
 3956 002c 6E7F      		andi r22,lo8(-2)
 215:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3957               		.loc 1 215 8 view .LVU933
 3958 002e 01F4      		brne .L204
 216:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3959               		.loc 1 216 93 is_stmt 1 view .LVU934
 217:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 3960               		.loc 1 217 9 view .LVU935
 3961 0030 0E94 0000 		call eeconfig_update_rgblight_default
 3962               	.LVL276:
 218:quantum/rgblight.c ****     }
 3963               		.loc 1 218 9 view .LVU936
 218:quantum/rgblight.c ****     }
 3964               		.loc 1 218 31 is_stmt 0 view .LVU937
 3965 0034 0E94 0000 		call eeconfig_read_rgblight
 3966               	.LVL277:
 218:quantum/rgblight.c ****     }
 3967               		.loc 1 218 29 view .LVU938
 3968 0038 6093 0000 		sts rgblight_config,r22
 3969 003c 7093 0000 		sts rgblight_config+1,r23
 3970 0040 8093 0000 		sts rgblight_config+2,r24
 3971 0044 9093 0000 		sts rgblight_config+3,r25
 3972               	.L204:
 220:quantum/rgblight.c **** 
 3973               		.loc 1 220 5 is_stmt 1 view .LVU939
 3974 0048 0E94 0000 		call rgblight_check_config
 3975               	.LVL278:
 222:quantum/rgblight.c **** 
 3976               		.loc 1 222 5 view .LVU940
 224:quantum/rgblight.c **** 
 3977               		.loc 1 224 5 view .LVU941
 3978               	.LBB96:
 3979               	.LBI96:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3980               		.loc 1 760 6 view .LVU942
 3981               	.LBB97:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3982               		.loc 1 777 5 view .LVU943
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3983               		.loc 1 777 35 is_stmt 0 view .LVU944
 3984 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 3985               		.loc 1 778 43 is_stmt 1 view .LVU945
 3986               	.LBE97:
 3987               	.LBE96:
 226:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3988               		.loc 1 226 5 view .LVU946
 226:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3989               		.loc 1 226 9 is_stmt 0 view .LVU947
 3990 0050 8091 0000 		lds r24,rgblight_config
 226:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3991               		.loc 1 226 8 view .LVU948
 3992 0054 80FF      		sbrs r24,0
 3993 0056 00C0      		rjmp .L205
 227:quantum/rgblight.c ****     }
 3994               		.loc 1 227 9 is_stmt 1 view .LVU949
 3995 0058 8695      		lsr r24
 3996 005a 0E94 0000 		call rgblight_mode_noeeprom
 3997               	.LVL279:
 3998               	.L205:
 230:quantum/rgblight.c **** }
 3999               		.loc 1 230 5 view .LVU950
 230:quantum/rgblight.c **** }
 4000               		.loc 1 230 29 is_stmt 0 view .LVU951
 4001 005e 81E0      		ldi r24,lo8(1)
 4002 0060 8093 0000 		sts is_rgblight_initialized,r24
 4003               	.L201:
 4004               	/* epilogue start */
 231:quantum/rgblight.c **** 
 4005               		.loc 1 231 1 view .LVU952
 4006 0064 0895      		ret
 4007               		.cfi_endproc
 4008               	.LFE91:
 4010               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 4011               	.global	rgblight_enable_noeeprom
 4013               	rgblight_enable_noeeprom:
 4014               	.LFB109:
 349:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4015               		.loc 1 349 37 is_stmt 1 view -0
 4016               		.cfi_startproc
 4017               	/* prologue: function */
 4018               	/* frame size = 0 */
 4019               	/* stack size = 0 */
 4020               	.L__stack_usage = 0
 350:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4021               		.loc 1 350 5 view .LVU954
 350:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4022               		.loc 1 350 28 is_stmt 0 view .LVU955
 4023 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4024 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4025 0004 8081      		ld r24,Z
 4026 0006 8160      		ori r24,lo8(1<<0)
 4027 0008 8083      		st Z,r24
 351:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4028               		.loc 1 351 97 is_stmt 1 view .LVU956
 352:quantum/rgblight.c **** }
 4029               		.loc 1 352 5 view .LVU957
 4030 000a 8695      		lsr r24
 4031 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 4032               	.LVL280:
 4033               		.cfi_endproc
 4034               	.LFE109:
 4036               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 4037               	.global	rgblight_toggle_noeeprom
 4039               	rgblight_toggle_noeeprom:
 4040               	.LFB107:
 332:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4041               		.loc 1 332 37 view -0
 4042               		.cfi_startproc
 4043               	/* prologue: function */
 4044               	/* frame size = 0 */
 4045               	/* stack size = 0 */
 4046               	.L__stack_usage = 0
 333:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4047               		.loc 1 333 98 view .LVU959
 334:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4048               		.loc 1 334 5 view .LVU960
 334:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4049               		.loc 1 334 9 is_stmt 0 view .LVU961
 4050 0000 8091 0000 		lds r24,rgblight_config
 334:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4051               		.loc 1 334 8 view .LVU962
 4052 0004 80FD      		sbrc r24,0
 335:quantum/rgblight.c ****     } else {
 4053               		.loc 1 335 9 is_stmt 1 view .LVU963
 4054 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 4055               	.LVL281:
 4056               	.L211:
 337:quantum/rgblight.c ****     }
 4057               		.loc 1 337 9 view .LVU964
 4058 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 4059               	.LVL282:
 4060               		.cfi_endproc
 4061               	.LFE107:
 4063               		.section	.text.rgblight_update_dword,"ax",@progbits
 4064               	.global	rgblight_update_dword
 4066               	rgblight_update_dword:
 4067               	.LVL283:
 4068               	.LFB93:
 235:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4069               		.loc 1 235 44 view -0
 4070               		.cfi_startproc
 4071               	/* prologue: function */
 4072               	/* frame size = 0 */
 4073               	/* stack size = 0 */
 4074               	.L__stack_usage = 0
 236:quantum/rgblight.c ****     rgblight_config.raw = dword;
 4075               		.loc 1 236 39 view .LVU966
 237:quantum/rgblight.c ****     if (rgblight_config.enable)
 4076               		.loc 1 237 5 view .LVU967
 237:quantum/rgblight.c ****     if (rgblight_config.enable)
 4077               		.loc 1 237 25 is_stmt 0 view .LVU968
 4078 0000 6093 0000 		sts rgblight_config,r22
 4079 0004 7093 0000 		sts rgblight_config+1,r23
 4080 0008 8093 0000 		sts rgblight_config+2,r24
 4081 000c 9093 0000 		sts rgblight_config+3,r25
 238:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4082               		.loc 1 238 5 is_stmt 1 view .LVU969
 238:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4083               		.loc 1 238 8 is_stmt 0 view .LVU970
 4084 0010 60FF      		sbrs r22,0
 4085 0012 00C0      		rjmp .L213
 239:quantum/rgblight.c ****     else {
 4086               		.loc 1 239 9 is_stmt 1 view .LVU971
 4087 0014 862F      		mov r24,r22
 4088 0016 8695      		lsr r24
 4089 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 4090               	.LVL284:
 4091               	.L213:
 241:quantum/rgblight.c ****         rgblight_set();
 4092               		.loc 1 241 9 view .LVU972
 4093               	.LBB100:
 4094               	.LBI100:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4095               		.loc 1 760 6 view .LVU973
 4096               	.LBB101:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4097               		.loc 1 777 5 view .LVU974
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4098               		.loc 1 777 35 is_stmt 0 view .LVU975
 4099 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 4100               		.loc 1 778 43 is_stmt 1 view .LVU976
 4101               	.LBE101:
 4102               	.LBE100:
 242:quantum/rgblight.c ****     }
 4103               		.loc 1 242 9 view .LVU977
 4104 0020 0C94 0000 		jmp rgblight_set
 4105               	.LVL285:
 242:quantum/rgblight.c ****     }
 4106               		.loc 1 242 9 is_stmt 0 view .LVU978
 4107               		.cfi_endproc
 4108               	.LFE93:
 4110               		.section	.text.rgblight_timer_disable,"ax",@progbits
 4111               	.global	rgblight_timer_disable
 4113               	rgblight_timer_disable:
 4114               	.LFB171:
 4115               		.cfi_startproc
 4116               	/* prologue: function */
 4117               	/* frame size = 0 */
 4118               	/* stack size = 0 */
 4119               	.L__stack_usage = 0
 4120 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 4121               	/* epilogue start */
 4122 0004 0895      		ret
 4123               		.cfi_endproc
 4124               	.LFE171:
 4126               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 4127               	.global	rgblight_timer_toggle
 4129               	rgblight_timer_toggle:
 4130               	.LFB157:
 793:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 4131               		.loc 1 793 34 is_stmt 1 view -0
 4132               		.cfi_startproc
 4133               	/* prologue: function */
 4134               	/* frame size = 0 */
 4135               	/* stack size = 0 */
 4136               	.L__stack_usage = 0
 794:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 4137               		.loc 1 794 40 view .LVU980
 795:quantum/rgblight.c ****         rgblight_timer_disable();
 4138               		.loc 1 795 5 view .LVU981
 795:quantum/rgblight.c ****         rgblight_timer_disable();
 4139               		.loc 1 795 8 is_stmt 0 view .LVU982
 4140 0000 8091 0000 		lds r24,rgblight_status+1
 4141 0004 8823      		tst r24
 4142 0006 01F0      		breq .L216
 796:quantum/rgblight.c ****     } else {
 4143               		.loc 1 796 9 is_stmt 1 view .LVU983
 4144               	.LBB104:
 4145               	.LBI104:
 760:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4146               		.loc 1 760 6 view .LVU984
 4147               	.LBB105:
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4148               		.loc 1 777 5 view .LVU985
 777:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4149               		.loc 1 777 35 is_stmt 0 view .LVU986
 4150 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 778:quantum/rgblight.c **** }
 4151               		.loc 1 778 43 is_stmt 1 view .LVU987
 4152               	/* epilogue start */
 4153               	.LBE105:
 4154               	.LBE104:
 800:quantum/rgblight.c **** 
 4155               		.loc 1 800 1 is_stmt 0 view .LVU988
 4156 000c 0895      		ret
 4157               	.L216:
 798:quantum/rgblight.c ****     }
 4158               		.loc 1 798 9 is_stmt 1 view .LVU989
 4159 000e 0C94 0000 		jmp rgblight_timer_enable
 4160               	.LVL286:
 4161               		.cfi_endproc
 4162               	.LFE157:
 4164               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 4165               	.global	rgblight_show_solid_color
 4167               	rgblight_show_solid_color:
 4168               	.LVL287:
 4169               	.LFB158:
 802:quantum/rgblight.c ****     rgblight_enable();
 4170               		.loc 1 802 65 view -0
 4171               		.cfi_startproc
 802:quantum/rgblight.c ****     rgblight_enable();
 4172               		.loc 1 802 65 is_stmt 0 view .LVU991
 4173 0000 1F93      		push r17
 4174               	.LCFI75:
 4175               		.cfi_def_cfa_offset 3
 4176               		.cfi_offset 17, -2
 4177 0002 CF93      		push r28
 4178               	.LCFI76:
 4179               		.cfi_def_cfa_offset 4
 4180               		.cfi_offset 28, -3
 4181 0004 DF93      		push r29
 4182               	.LCFI77:
 4183               		.cfi_def_cfa_offset 5
 4184               		.cfi_offset 29, -4
 4185               	/* prologue: function */
 4186               	/* frame size = 0 */
 4187               	/* stack size = 3 */
 4188               	.L__stack_usage = 3
 4189 0006 C82F      		mov r28,r24
 4190 0008 D62F      		mov r29,r22
 4191 000a 142F      		mov r17,r20
 803:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 4192               		.loc 1 803 5 is_stmt 1 view .LVU992
 4193 000c 0E94 0000 		call rgblight_enable
 4194               	.LVL288:
 804:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 4195               		.loc 1 804 5 view .LVU993
 4196 0010 81E0      		ldi r24,lo8(1)
 4197 0012 0E94 0000 		call rgblight_mode
 4198               	.LVL289:
 805:quantum/rgblight.c **** }
 4199               		.loc 1 805 5 view .LVU994
 4200 0016 412F      		mov r20,r17
 4201 0018 6D2F      		mov r22,r29
 4202 001a 8C2F      		mov r24,r28
 4203               	/* epilogue start */
 806:quantum/rgblight.c **** 
 4204               		.loc 1 806 1 is_stmt 0 view .LVU995
 4205 001c DF91      		pop r29
 4206               	.LVL290:
 806:quantum/rgblight.c **** 
 4207               		.loc 1 806 1 view .LVU996
 4208 001e CF91      		pop r28
 4209               	.LVL291:
 806:quantum/rgblight.c **** 
 4210               		.loc 1 806 1 view .LVU997
 4211 0020 1F91      		pop r17
 4212               	.LVL292:
 805:quantum/rgblight.c **** }
 4213               		.loc 1 805 5 view .LVU998
 4214 0022 0C94 0000 		jmp rgblight_setrgb
 4215               	.LVL293:
 805:quantum/rgblight.c **** }
 4216               		.loc 1 805 5 view .LVU999
 4217               		.cfi_endproc
 4218               	.LFE158:
 4220               		.section	.text.rgblight_task,"ax",@progbits
 4221               	.global	rgblight_task
 4223               	rgblight_task:
 4224               	.LFB160:
 820:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 4225               		.loc 1 820 26 is_stmt 1 view -0
 4226               		.cfi_startproc
 4227 0000 0F93      		push r16
 4228               	.LCFI78:
 4229               		.cfi_def_cfa_offset 3
 4230               		.cfi_offset 16, -2
 4231 0002 1F93      		push r17
 4232               	.LCFI79:
 4233               		.cfi_def_cfa_offset 4
 4234               		.cfi_offset 17, -3
 4235 0004 CF93      		push r28
 4236               	.LCFI80:
 4237               		.cfi_def_cfa_offset 5
 4238               		.cfi_offset 28, -4
 4239 0006 DF93      		push r29
 4240               	.LCFI81:
 4241               		.cfi_def_cfa_offset 6
 4242               		.cfi_offset 29, -5
 4243               	/* prologue: function */
 4244               	/* frame size = 0 */
 4245               	/* stack size = 4 */
 4246               	.L__stack_usage = 4
 821:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 4247               		.loc 1 821 5 view .LVU1001
 821:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 4248               		.loc 1 821 8 is_stmt 0 view .LVU1002
 4249 0008 8091 0000 		lds r24,rgblight_status+1
 4250 000c 8823      		tst r24
 4251 000e 01F4      		brne .+2
 4252 0010 00C0      		rjmp .L220
 4253               	.LBB123:
 822:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4254               		.loc 1 822 9 is_stmt 1 view .LVU1003
 4255               	.LVL294:
 823:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 4256               		.loc 1 823 9 view .LVU1004
 824:quantum/rgblight.c ****         animation_status.delta      = delta;
 4257               		.loc 1 824 9 view .LVU1005
 824:quantum/rgblight.c ****         animation_status.delta      = delta;
 4258               		.loc 1 824 77 is_stmt 0 view .LVU1006
 4259 0012 8091 0000 		lds r24,rgblight_status
 824:quantum/rgblight.c ****         animation_status.delta      = delta;
 4260               		.loc 1 824 54 view .LVU1007
 4261 0016 E091 0000 		lds r30,rgblight_config
 4262 001a E695      		lsr r30
 824:quantum/rgblight.c ****         animation_status.delta      = delta;
 4263               		.loc 1 824 23 view .LVU1008
 4264 001c E81B      		sub r30,r24
 4265               	.LVL295:
 825:quantum/rgblight.c **** 
 4266               		.loc 1 825 9 is_stmt 1 view .LVU1009
 825:quantum/rgblight.c **** 
 4267               		.loc 1 825 37 is_stmt 0 view .LVU1010
 4268 001e E093 0000 		sts animation_status+2,r30
 828:quantum/rgblight.c ****         }
 4269               		.loc 1 828 9 is_stmt 1 view .LVU1011
 831:quantum/rgblight.c ****             // breathing mode
 4270               		.loc 1 831 14 view .LVU1012
 831:quantum/rgblight.c ****             // breathing mode
 4271               		.loc 1 831 17 is_stmt 0 view .LVU1013
 4272 0022 8230      		cpi r24,lo8(2)
 4273 0024 01F4      		brne .L223
 833:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4274               		.loc 1 833 13 is_stmt 1 view .LVU1014
 4275               	.LVL296:
 4276               	.LBB124:
 4277               	.LBI124:
 570:quantum/rgblight.c ****     return
 4278               		.loc 1 570 16 view .LVU1015
 570:quantum/rgblight.c ****     return
 4279               		.loc 1 570 16 is_stmt 0 view .LVU1016
 4280               	.LBE124:
 4281               	.LBE123:
 571:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4282               		.loc 1 571 5 is_stmt 1 view .LVU1017
 4283               	.LBB150:
 4284               	.LBB127:
 4285               	.LBB125:
 575:quantum/rgblight.c **** }
 4286               		.loc 1 575 29 view .LVU1018
 575:quantum/rgblight.c **** }
 4287               		.loc 1 575 29 view .LVU1019
 575:quantum/rgblight.c **** }
 4288               		.loc 1 575 29 view .LVU1020
 4289               	.LBE125:
 4290               	.LBE127:
 833:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4291               		.loc 1 833 29 is_stmt 0 view .LVU1021
 4292 0026 F0E0      		ldi r31,0
 4293 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 4294 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 4295               	.LVL297:
 4296               	.LBB128:
 4297               	.LBB126:
 575:quantum/rgblight.c **** }
 4298               		.loc 1 575 29 view .LVU1022
 4299               	/* #APP */
 4300               	 ;  575 "quantum/rgblight.c" 1
 4301 002c E491      		lpm r30, Z
 4302               		
 4303               	 ;  0 "" 2
 4304               	.LVL298:
 575:quantum/rgblight.c **** }
 4305               		.loc 1 575 29 is_stmt 1 view .LVU1023
 575:quantum/rgblight.c **** }
 4306               		.loc 1 575 29 is_stmt 0 view .LVU1024
 4307               	/* #NOAPP */
 4308               	.LBE126:
 4309               	.LBE128:
 833:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4310               		.loc 1 833 27 view .LVU1025
 4311 002e CE2F      		mov r28,r30
 4312 0030 D0E0      		ldi r29,0
 4313               	.LVL299:
 834:quantum/rgblight.c ****         }
 4314               		.loc 1 834 13 is_stmt 1 view .LVU1026
 834:quantum/rgblight.c ****         }
 4315               		.loc 1 834 27 is_stmt 0 view .LVU1027
 4316 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 4317 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 4318               	.LVL300:
 4319               	.L224:
 885:quantum/rgblight.c ****             animation_status.restart    = false;
 4320               		.loc 1 885 9 is_stmt 1 view .LVU1028
 885:quantum/rgblight.c ****             animation_status.restart    = false;
 4321               		.loc 1 885 12 is_stmt 0 view .LVU1029
 4322 0036 8091 0000 		lds r24,animation_status+3
 4323 003a 8823      		tst r24
 4324 003c 01F0      		breq .L230
 886:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 4325               		.loc 1 886 13 is_stmt 1 view .LVU1030
 886:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 4326               		.loc 1 886 41 is_stmt 0 view .LVU1031
 4327 003e 1092 0000 		sts animation_status+3,__zero_reg__
 887:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4328               		.loc 1 887 13 is_stmt 1 view .LVU1032
 887:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4329               		.loc 1 887 43 is_stmt 0 view .LVU1033
 4330 0042 0E94 0000 		call timer_read
 4331               	.LVL301:
 887:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4332               		.loc 1 887 72 view .LVU1034
 4333 0046 9E01      		movw r18,r28
 4334 0048 2095      		com r18
 4335 004a 3095      		com r19
 4336 004c 820F      		add r24,r18
 4337 004e 931F      		adc r25,r19
 887:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4338               		.loc 1 887 41 view .LVU1035
 4339 0050 9093 0000 		sts animation_status+1,r25
 4340 0054 8093 0000 		sts animation_status,r24
 888:quantum/rgblight.c ****         }
 4341               		.loc 1 888 13 is_stmt 1 view .LVU1036
 888:quantum/rgblight.c ****         }
 4342               		.loc 1 888 41 is_stmt 0 view .LVU1037
 4343 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 4344 005c 1092 0000 		sts animation_status+4,__zero_reg__
 4345               	.L230:
 890:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4346               		.loc 1 890 9 is_stmt 1 view .LVU1038
 890:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4347               		.loc 1 890 13 is_stmt 0 view .LVU1039
 4348 0060 8091 0000 		lds r24,animation_status
 4349 0064 9091 0000 		lds r25,animation_status+1
 4350 0068 0E94 0000 		call timer_elapsed
 4351               	.LVL302:
 890:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4352               		.loc 1 890 12 view .LVU1040
 4353 006c 8C17      		cp r24,r28
 4354 006e 9D07      		cpc r25,r29
 4355 0070 00F4      		brsh .+2
 4356 0072 00C0      		rjmp .L220
 905:quantum/rgblight.c ****             effect_func(&animation_status);
 4357               		.loc 1 905 13 is_stmt 1 view .LVU1041
 905:quantum/rgblight.c ****             effect_func(&animation_status);
 4358               		.loc 1 905 41 is_stmt 0 view .LVU1042
 4359 0074 E091 0000 		lds r30,animation_status
 4360 0078 F091 0000 		lds r31,animation_status+1
 4361 007c CE0F      		add r28,r30
 4362 007e DF1F      		adc r29,r31
 4363               	.LVL303:
 905:quantum/rgblight.c ****             effect_func(&animation_status);
 4364               		.loc 1 905 41 view .LVU1043
 4365 0080 D093 0000 		sts animation_status+1,r29
 4366 0084 C093 0000 		sts animation_status,r28
 906:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4367               		.loc 1 906 13 is_stmt 1 view .LVU1044
 4368 0088 80E0      		ldi r24,lo8(animation_status)
 4369 008a 90E0      		ldi r25,hi8(animation_status)
 4370 008c F801      		movw r30,r16
 4371               	/* epilogue start */
 4372               	.LBE150:
 914:quantum/rgblight.c **** 
 4373               		.loc 1 914 1 is_stmt 0 view .LVU1045
 4374 008e DF91      		pop r29
 4375 0090 CF91      		pop r28
 4376 0092 1F91      		pop r17
 4377 0094 0F91      		pop r16
 4378               	.LVL304:
 4379               	.LBB151:
 906:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4380               		.loc 1 906 13 view .LVU1046
 4381 0096 0994      		ijmp
 4382               	.LVL305:
 4383               	.L223:
 838:quantum/rgblight.c ****             // rainbow mood mode
 4384               		.loc 1 838 14 is_stmt 1 view .LVU1047
 838:quantum/rgblight.c ****             // rainbow mood mode
 4385               		.loc 1 838 17 is_stmt 0 view .LVU1048
 4386 0098 8630      		cpi r24,lo8(6)
 4387 009a 01F4      		brne .L225
 840:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4388               		.loc 1 840 13 is_stmt 1 view .LVU1049
 4389               	.LVL306:
 4390               	.LBB129:
 4391               	.LBI129:
 570:quantum/rgblight.c ****     return
 4392               		.loc 1 570 16 view .LVU1050
 570:quantum/rgblight.c ****     return
 4393               		.loc 1 570 16 is_stmt 0 view .LVU1051
 4394               	.LBE129:
 4395               	.LBE151:
 571:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4396               		.loc 1 571 5 is_stmt 1 view .LVU1052
 4397               	.LBB152:
 4398               	.LBB132:
 4399               	.LBB130:
 575:quantum/rgblight.c **** }
 4400               		.loc 1 575 29 view .LVU1053
 575:quantum/rgblight.c **** }
 4401               		.loc 1 575 29 view .LVU1054
 575:quantum/rgblight.c **** }
 4402               		.loc 1 575 29 view .LVU1055
 4403               	.LBE130:
 4404               	.LBE132:
 840:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4405               		.loc 1 840 29 is_stmt 0 view .LVU1056
 4406 009c F0E0      		ldi r31,0
 4407 009e E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4408 00a0 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4409               	.LVL307:
 4410               	.LBB133:
 4411               	.LBB131:
 575:quantum/rgblight.c **** }
 4412               		.loc 1 575 29 view .LVU1057
 4413               	/* #APP */
 4414               	 ;  575 "quantum/rgblight.c" 1
 4415 00a2 E491      		lpm r30, Z
 4416               		
 4417               	 ;  0 "" 2
 4418               	.LVL308:
 575:quantum/rgblight.c **** }
 4419               		.loc 1 575 29 is_stmt 1 view .LVU1058
 575:quantum/rgblight.c **** }
 4420               		.loc 1 575 29 is_stmt 0 view .LVU1059
 4421               	/* #NOAPP */
 4422               	.LBE131:
 4423               	.LBE133:
 840:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4424               		.loc 1 840 27 view .LVU1060
 4425 00a4 CE2F      		mov r28,r30
 4426 00a6 D0E0      		ldi r29,0
 4427               	.LVL309:
 841:quantum/rgblight.c ****         }
 4428               		.loc 1 841 13 is_stmt 1 view .LVU1061
 841:quantum/rgblight.c ****         }
 4429               		.loc 1 841 27 is_stmt 0 view .LVU1062
 4430 00a8 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 4431 00aa 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 4432 00ac 00C0      		rjmp .L224
 4433               	.LVL310:
 4434               	.L225:
 845:quantum/rgblight.c ****             // rainbow swirl mode
 4435               		.loc 1 845 14 is_stmt 1 view .LVU1063
 845:quantum/rgblight.c ****             // rainbow swirl mode
 4436               		.loc 1 845 17 is_stmt 0 view .LVU1064
 4437 00ae 8930      		cpi r24,lo8(9)
 4438 00b0 01F4      		brne .L226
 847:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4439               		.loc 1 847 13 is_stmt 1 view .LVU1065
 4440               	.LVL311:
 4441               	.LBB134:
 4442               	.LBI134:
 570:quantum/rgblight.c ****     return
 4443               		.loc 1 570 16 view .LVU1066
 570:quantum/rgblight.c ****     return
 4444               		.loc 1 570 16 is_stmt 0 view .LVU1067
 4445               	.LBE134:
 4446               	.LBE152:
 571:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4447               		.loc 1 571 5 is_stmt 1 view .LVU1068
 4448               	.LBB153:
 4449               	.LBB137:
 4450               	.LBB135:
 575:quantum/rgblight.c **** }
 4451               		.loc 1 575 29 view .LVU1069
 575:quantum/rgblight.c **** }
 4452               		.loc 1 575 29 view .LVU1070
 575:quantum/rgblight.c **** }
 4453               		.loc 1 575 29 view .LVU1071
 4454               	.LBE135:
 4455               	.LBE137:
 847:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4456               		.loc 1 847 85 is_stmt 0 view .LVU1072
 4457 00b2 E695      		lsr r30
 4458               	.LVL312:
 847:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4459               		.loc 1 847 29 view .LVU1073
 4460 00b4 F0E0      		ldi r31,0
 4461 00b6 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4462 00b8 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4463               	.LBB138:
 4464               	.LBB136:
 575:quantum/rgblight.c **** }
 4465               		.loc 1 575 29 view .LVU1074
 4466               	/* #APP */
 4467               	 ;  575 "quantum/rgblight.c" 1
 4468 00ba E491      		lpm r30, Z
 4469               		
 4470               	 ;  0 "" 2
 4471               	.LVL313:
 575:quantum/rgblight.c **** }
 4472               		.loc 1 575 29 is_stmt 1 view .LVU1075
 575:quantum/rgblight.c **** }
 4473               		.loc 1 575 29 is_stmt 0 view .LVU1076
 4474               	/* #NOAPP */
 4475               	.LBE136:
 4476               	.LBE138:
 847:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4477               		.loc 1 847 27 view .LVU1077
 4478 00bc CE2F      		mov r28,r30
 4479 00be D0E0      		ldi r29,0
 4480               	.LVL314:
 848:quantum/rgblight.c ****         }
 4481               		.loc 1 848 13 is_stmt 1 view .LVU1078
 848:quantum/rgblight.c ****         }
 4482               		.loc 1 848 27 is_stmt 0 view .LVU1079
 4483 00c0 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 4484 00c2 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 4485 00c4 00C0      		rjmp .L224
 4486               	.LVL315:
 4487               	.L226:
 852:quantum/rgblight.c ****             // snake mode
 4488               		.loc 1 852 14 is_stmt 1 view .LVU1080
 852:quantum/rgblight.c ****             // snake mode
 4489               		.loc 1 852 17 is_stmt 0 view .LVU1081
 4490 00c6 8F30      		cpi r24,lo8(15)
 4491 00c8 01F4      		brne .L227
 854:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4492               		.loc 1 854 13 is_stmt 1 view .LVU1082
 4493               	.LVL316:
 4494               	.LBB139:
 4495               	.LBI139:
 570:quantum/rgblight.c ****     return
 4496               		.loc 1 570 16 view .LVU1083
 570:quantum/rgblight.c ****     return
 4497               		.loc 1 570 16 is_stmt 0 view .LVU1084
 4498               	.LBE139:
 4499               	.LBE153:
 571:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4500               		.loc 1 571 5 is_stmt 1 view .LVU1085
 4501               	.LBB154:
 4502               	.LBB142:
 4503               	.LBB140:
 575:quantum/rgblight.c **** }
 4504               		.loc 1 575 29 view .LVU1086
 575:quantum/rgblight.c **** }
 4505               		.loc 1 575 29 view .LVU1087
 575:quantum/rgblight.c **** }
 4506               		.loc 1 575 29 view .LVU1088
 4507               	.LBE140:
 4508               	.LBE142:
 854:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4509               		.loc 1 854 77 is_stmt 0 view .LVU1089
 4510 00ca E695      		lsr r30
 4511               	.LVL317:
 854:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4512               		.loc 1 854 29 view .LVU1090
 4513 00cc F0E0      		ldi r31,0
 4514 00ce E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 4515 00d0 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 4516               	.LBB143:
 4517               	.LBB141:
 575:quantum/rgblight.c **** }
 4518               		.loc 1 575 29 view .LVU1091
 4519               	/* #APP */
 4520               	 ;  575 "quantum/rgblight.c" 1
 4521 00d2 E491      		lpm r30, Z
 4522               		
 4523               	 ;  0 "" 2
 4524               	.LVL318:
 575:quantum/rgblight.c **** }
 4525               		.loc 1 575 29 is_stmt 1 view .LVU1092
 575:quantum/rgblight.c **** }
 4526               		.loc 1 575 29 is_stmt 0 view .LVU1093
 4527               	/* #NOAPP */
 4528               	.LBE141:
 4529               	.LBE143:
 854:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4530               		.loc 1 854 27 view .LVU1094
 4531 00d4 CE2F      		mov r28,r30
 4532 00d6 D0E0      		ldi r29,0
 4533               	.LVL319:
 855:quantum/rgblight.c ****         }
 4534               		.loc 1 855 13 is_stmt 1 view .LVU1095
 855:quantum/rgblight.c ****         }
 4535               		.loc 1 855 27 is_stmt 0 view .LVU1096
 4536 00d8 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 4537 00da 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 4538 00dc 00C0      		rjmp .L224
 4539               	.LVL320:
 4540               	.L227:
 859:quantum/rgblight.c ****             // knight mode
 4541               		.loc 1 859 14 is_stmt 1 view .LVU1097
 859:quantum/rgblight.c ****             // knight mode
 4542               		.loc 1 859 17 is_stmt 0 view .LVU1098
 4543 00de 8531      		cpi r24,lo8(21)
 4544 00e0 01F4      		brne .L228
 861:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4545               		.loc 1 861 13 is_stmt 1 view .LVU1099
 4546               	.LVL321:
 4547               	.LBB144:
 4548               	.LBI144:
 570:quantum/rgblight.c ****     return
 4549               		.loc 1 570 16 view .LVU1100
 570:quantum/rgblight.c ****     return
 4550               		.loc 1 570 16 is_stmt 0 view .LVU1101
 4551               	.LBE144:
 4552               	.LBE154:
 571:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4553               		.loc 1 571 5 is_stmt 1 view .LVU1102
 4554               	.LBB155:
 4555               	.LBB147:
 4556               	.LBB145:
 575:quantum/rgblight.c **** }
 4557               		.loc 1 575 29 view .LVU1103
 575:quantum/rgblight.c **** }
 4558               		.loc 1 575 29 view .LVU1104
 575:quantum/rgblight.c **** }
 4559               		.loc 1 575 29 view .LVU1105
 4560               	.LBE145:
 4561               	.LBE147:
 861:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4562               		.loc 1 861 29 is_stmt 0 view .LVU1106
 4563 00e2 F0E0      		ldi r31,0
 4564 00e4 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 4565 00e6 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 4566               	.LVL322:
 4567               	.LBB148:
 4568               	.LBB146:
 575:quantum/rgblight.c **** }
 4569               		.loc 1 575 29 view .LVU1107
 4570               	/* #APP */
 4571               	 ;  575 "quantum/rgblight.c" 1
 4572 00e8 E491      		lpm r30, Z
 4573               		
 4574               	 ;  0 "" 2
 4575               	.LVL323:
 575:quantum/rgblight.c **** }
 4576               		.loc 1 575 29 is_stmt 1 view .LVU1108
 575:quantum/rgblight.c **** }
 4577               		.loc 1 575 29 is_stmt 0 view .LVU1109
 4578               	/* #NOAPP */
 4579               	.LBE146:
 4580               	.LBE148:
 861:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4581               		.loc 1 861 27 view .LVU1110
 4582 00ea CE2F      		mov r28,r30
 4583 00ec D0E0      		ldi r29,0
 4584               	.LVL324:
 862:quantum/rgblight.c ****         }
 4585               		.loc 1 862 13 is_stmt 1 view .LVU1111
 862:quantum/rgblight.c ****         }
 4586               		.loc 1 862 27 is_stmt 0 view .LVU1112
 4587 00ee 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 4588 00f0 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 4589 00f2 00C0      		rjmp .L224
 4590               	.LVL325:
 4591               	.L228:
 866:quantum/rgblight.c ****             // christmas mode
 4592               		.loc 1 866 14 is_stmt 1 view .LVU1113
 868:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 4593               		.loc 1 868 27 is_stmt 0 view .LVU1114
 4594 00f4 C8EE      		ldi r28,lo8(-24)
 4595 00f6 D3E0      		ldi r29,lo8(3)
 869:quantum/rgblight.c ****         }
 4596               		.loc 1 869 27 view .LVU1115
 4597 00f8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 4598 00fa 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 866:quantum/rgblight.c ****             // christmas mode
 4599               		.loc 1 866 17 view .LVU1116
 4600 00fc 8831      		cpi r24,lo8(24)
 4601 00fe 01F4      		brne .+2
 4602 0100 00C0      		rjmp .L224
 873:quantum/rgblight.c ****             // RGB test mode
 4603               		.loc 1 873 14 is_stmt 1 view .LVU1117
 873:quantum/rgblight.c ****             // RGB test mode
 4604               		.loc 1 873 17 is_stmt 0 view .LVU1118
 4605 0102 8332      		cpi r24,lo8(35)
 4606 0104 01F4      		brne .L229
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4607               		.loc 1 875 13 is_stmt 1 view .LVU1119
 4608               	.LBB149:
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4609               		.loc 1 875 29 view .LVU1120
 4610               	.LVL326:
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4611               		.loc 1 875 29 view .LVU1121
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4612               		.loc 1 875 29 view .LVU1122
 4613 0106 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 4614 0108 F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 4615               	.LVL327:
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4616               		.loc 1 875 29 is_stmt 0 view .LVU1123
 4617               	/* #APP */
 4618               	 ;  875 "quantum/rgblight.c" 1
 4619 010a C591      		lpm r28, Z+
 4620 010c D491      		lpm r29, Z
 4621               		
 4622               	 ;  0 "" 2
 4623               	.LVL328:
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4624               		.loc 1 875 29 is_stmt 1 view .LVU1124
 875:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4625               		.loc 1 875 29 is_stmt 0 view .LVU1125
 4626               	/* #NOAPP */
 4627               	.LBE149:
 876:quantum/rgblight.c ****         }
 4628               		.loc 1 876 13 is_stmt 1 view .LVU1126
 876:quantum/rgblight.c ****         }
 4629               		.loc 1 876 27 is_stmt 0 view .LVU1127
 4630 010e 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 4631 0110 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 4632 0112 00C0      		rjmp .L224
 4633               	.LVL329:
 4634               	.L229:
 880:quantum/rgblight.c ****             interval_time = 500;
 4635               		.loc 1 880 14 is_stmt 1 view .LVU1128
 881:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 4636               		.loc 1 881 27 is_stmt 0 view .LVU1129
 4637 0114 C4EF      		ldi r28,lo8(-12)
 4638 0116 D1E0      		ldi r29,lo8(1)
 882:quantum/rgblight.c ****         }
 4639               		.loc 1 882 27 view .LVU1130
 4640 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 4641 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 880:quantum/rgblight.c ****             interval_time = 500;
 4642               		.loc 1 880 17 view .LVU1131
 4643 011c 8432      		cpi r24,lo8(36)
 4644 011e 01F4      		brne .+2
 4645 0120 00C0      		rjmp .L224
 823:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 4646               		.loc 1 823 23 view .LVU1132
 4647 0122 C0ED      		ldi r28,lo8(-48)
 4648 0124 D7E0      		ldi r29,lo8(7)
 822:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4649               		.loc 1 822 23 view .LVU1133
 4650 0126 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 4651 0128 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 4652 012a 00C0      		rjmp .L224
 4653               	.LVL330:
 4654               	.L220:
 4655               	/* epilogue start */
 822:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4656               		.loc 1 822 23 view .LVU1134
 4657               	.LBE155:
 914:quantum/rgblight.c **** 
 4658               		.loc 1 914 1 view .LVU1135
 4659 012c DF91      		pop r29
 4660 012e CF91      		pop r28
 4661 0130 1F91      		pop r17
 4662 0132 0F91      		pop r16
 4663 0134 0895      		ret
 4664               		.cfi_endproc
 4665               	.LFE160:
 4667               		.section	.bss.maxval.3242,"aw",@nobits
 4670               	maxval.3242:
 4671 0000 00        		.zero	1
 4672               		.section	.data.increment.3221,"aw"
 4675               	increment.3221:
 4676 0000 01        		.byte	1
 4677               		.section	.data.high_bound.3220,"aw"
 4680               	high_bound.3220:
 4681 0000 02        		.byte	2
 4682               		.section	.bss.low_bound.3219,"aw",@nobits
 4685               	low_bound.3219:
 4686 0000 00        		.zero	1
 4687               		.section	.bss.pos.3203,"aw",@nobits
 4690               	pos.3203:
 4691 0000 00        		.zero	1
 4692               		.weak	RGBLED_RGBTEST_INTERVALS
 4693               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 4696               	RGBLED_RGBTEST_INTERVALS:
 4697 0000 0004      		.word	1024
 4698               		.weak	RGBLED_KNIGHT_INTERVALS
 4699               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 4702               	RGBLED_KNIGHT_INTERVALS:
 4703 0000 7F        		.byte	127
 4704 0001 3F        		.byte	63
 4705 0002 1F        		.byte	31
 4706               		.weak	RGBLED_SNAKE_INTERVALS
 4707               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 4710               	RGBLED_SNAKE_INTERVALS:
 4711 0000 64        		.byte	100
 4712 0001 32        		.byte	50
 4713 0002 14        		.byte	20
 4714               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 4715               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 4718               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 4719 0000 64        		.byte	100
 4720 0001 32        		.byte	50
 4721 0002 14        		.byte	20
 4722               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 4723               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 4726               	RGBLED_RAINBOW_MOOD_INTERVALS:
 4727 0000 78        		.byte	120
 4728 0001 3C        		.byte	60
 4729 0002 1E        		.byte	30
 4730               		.weak	RGBLED_BREATHING_INTERVALS
 4731               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 4734               	RGBLED_BREATHING_INTERVALS:
 4735 0000 1E        		.byte	30
 4736 0001 14        		.byte	20
 4737 0002 0A        		.byte	10
 4738 0003 05        		.byte	5
 4739               	.global	rgblight_effect_breathe_table
 4740               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 4743               	rgblight_effect_breathe_table:
 4744 0000 22        		.byte	34
 4745 0001 23        		.byte	35
 4746 0002 25        		.byte	37
 4747 0003 26        		.byte	38
 4748 0004 28        		.byte	40
 4749 0005 29        		.byte	41
 4750 0006 2A        		.byte	42
 4751 0007 2C        		.byte	44
 4752 0008 2D        		.byte	45
 4753 0009 2F        		.byte	47
 4754 000a 30        		.byte	48
 4755 000b 32        		.byte	50
 4756 000c 33        		.byte	51
 4757 000d 35        		.byte	53
 4758 000e 36        		.byte	54
 4759 000f 38        		.byte	56
 4760 0010 3A        		.byte	58
 4761 0011 3B        		.byte	59
 4762 0012 3D        		.byte	61
 4763 0013 3E        		.byte	62
 4764 0014 40        		.byte	64
 4765 0015 42        		.byte	66
 4766 0016 43        		.byte	67
 4767 0017 45        		.byte	69
 4768 0018 47        		.byte	71
 4769 0019 49        		.byte	73
 4770 001a 4A        		.byte	74
 4771 001b 4C        		.byte	76
 4772 001c 4E        		.byte	78
 4773 001d 50        		.byte	80
 4774 001e 51        		.byte	81
 4775 001f 53        		.byte	83
 4776 0020 55        		.byte	85
 4777 0021 57        		.byte	87
 4778 0022 59        		.byte	89
 4779 0023 5A        		.byte	90
 4780 0024 5C        		.byte	92
 4781 0025 5E        		.byte	94
 4782 0026 60        		.byte	96
 4783 0027 62        		.byte	98
 4784 0028 64        		.byte	100
 4785 0029 66        		.byte	102
 4786 002a 68        		.byte	104
 4787 002b 69        		.byte	105
 4788 002c 6B        		.byte	107
 4789 002d 6D        		.byte	109
 4790 002e 6F        		.byte	111
 4791 002f 71        		.byte	113
 4792 0030 73        		.byte	115
 4793 0031 75        		.byte	117
 4794 0032 77        		.byte	119
 4795 0033 79        		.byte	121
 4796 0034 7B        		.byte	123
 4797 0035 7D        		.byte	125
 4798 0036 7F        		.byte	127
 4799 0037 81        		.byte	-127
 4800 0038 83        		.byte	-125
 4801 0039 85        		.byte	-123
 4802 003a 87        		.byte	-121
 4803 003b 89        		.byte	-119
 4804 003c 8A        		.byte	-118
 4805 003d 8C        		.byte	-116
 4806 003e 8E        		.byte	-114
 4807 003f 90        		.byte	-112
 4808 0040 92        		.byte	-110
 4809 0041 94        		.byte	-108
 4810 0042 96        		.byte	-106
 4811 0043 98        		.byte	-104
 4812 0044 9A        		.byte	-102
 4813 0045 9C        		.byte	-100
 4814 0046 9E        		.byte	-98
 4815 0047 9F        		.byte	-97
 4816 0048 A1        		.byte	-95
 4817 0049 A3        		.byte	-93
 4818 004a A5        		.byte	-91
 4819 004b A7        		.byte	-89
 4820 004c A8        		.byte	-88
 4821 004d AA        		.byte	-86
 4822 004e AC        		.byte	-84
 4823 004f AE        		.byte	-82
 4824 0050 AF        		.byte	-81
 4825 0051 B1        		.byte	-79
 4826 0052 B3        		.byte	-77
 4827 0053 B4        		.byte	-76
 4828 0054 B6        		.byte	-74
 4829 0055 B8        		.byte	-72
 4830 0056 B9        		.byte	-71
 4831 0057 BB        		.byte	-69
 4832 0058 BC        		.byte	-68
 4833 0059 BE        		.byte	-66
 4834 005a BF        		.byte	-65
 4835 005b C1        		.byte	-63
 4836 005c C2        		.byte	-62
 4837 005d C3        		.byte	-61
 4838 005e C5        		.byte	-59
 4839 005f C6        		.byte	-58
 4840 0060 C7        		.byte	-57
 4841 0061 C9        		.byte	-55
 4842 0062 CA        		.byte	-54
 4843 0063 CB        		.byte	-53
 4844 0064 CC        		.byte	-52
 4845 0065 CD        		.byte	-51
 4846 0066 CE        		.byte	-50
 4847 0067 D0        		.byte	-48
 4848 0068 D1        		.byte	-47
 4849 0069 D2        		.byte	-46
 4850 006a D2        		.byte	-46
 4851 006b D3        		.byte	-45
 4852 006c D4        		.byte	-44
 4853 006d D5        		.byte	-43
 4854 006e D6        		.byte	-42
 4855 006f D7        		.byte	-41
 4856 0070 D7        		.byte	-41
 4857 0071 D8        		.byte	-40
 4858 0072 D9        		.byte	-39
 4859 0073 D9        		.byte	-39
 4860 0074 DA        		.byte	-38
 4861 0075 DA        		.byte	-38
 4862 0076 DB        		.byte	-37
 4863 0077 DB        		.byte	-37
 4864 0078 DB        		.byte	-37
 4865 0079 DC        		.byte	-36
 4866 007a DC        		.byte	-36
 4867 007b DC        		.byte	-36
 4868 007c DC        		.byte	-36
 4869 007d DC        		.byte	-36
 4870 007e DD        		.byte	-35
 4871 007f DD        		.byte	-35
 4872 0080 DD        		.byte	-35
 4873 0081 DD        		.byte	-35
 4874 0082 DC        		.byte	-36
 4875 0083 DC        		.byte	-36
 4876 0084 DC        		.byte	-36
 4877 0085 DC        		.byte	-36
 4878 0086 DC        		.byte	-36
 4879 0087 DB        		.byte	-37
 4880 0088 DB        		.byte	-37
 4881 0089 DB        		.byte	-37
 4882 008a DA        		.byte	-38
 4883 008b DA        		.byte	-38
 4884 008c D9        		.byte	-39
 4885 008d D9        		.byte	-39
 4886 008e D8        		.byte	-40
 4887 008f D7        		.byte	-41
 4888 0090 D7        		.byte	-41
 4889 0091 D6        		.byte	-42
 4890 0092 D5        		.byte	-43
 4891 0093 D4        		.byte	-44
 4892 0094 D3        		.byte	-45
 4893 0095 D2        		.byte	-46
 4894 0096 D2        		.byte	-46
 4895 0097 D1        		.byte	-47
 4896 0098 D0        		.byte	-48
 4897 0099 CE        		.byte	-50
 4898 009a CD        		.byte	-51
 4899 009b CC        		.byte	-52
 4900 009c CB        		.byte	-53
 4901 009d CA        		.byte	-54
 4902 009e C9        		.byte	-55
 4903 009f C7        		.byte	-57
 4904 00a0 C6        		.byte	-58
 4905 00a1 C5        		.byte	-59
 4906 00a2 C3        		.byte	-61
 4907 00a3 C2        		.byte	-62
 4908 00a4 C1        		.byte	-63
 4909 00a5 BF        		.byte	-65
 4910 00a6 BE        		.byte	-66
 4911 00a7 BC        		.byte	-68
 4912 00a8 BB        		.byte	-69
 4913 00a9 B9        		.byte	-71
 4914 00aa B8        		.byte	-72
 4915 00ab B6        		.byte	-74
 4916 00ac B4        		.byte	-76
 4917 00ad B3        		.byte	-77
 4918 00ae B1        		.byte	-79
 4919 00af AF        		.byte	-81
 4920 00b0 AE        		.byte	-82
 4921 00b1 AC        		.byte	-84
 4922 00b2 AA        		.byte	-86
 4923 00b3 A8        		.byte	-88
 4924 00b4 A7        		.byte	-89
 4925 00b5 A5        		.byte	-91
 4926 00b6 A3        		.byte	-93
 4927 00b7 A1        		.byte	-95
 4928 00b8 9F        		.byte	-97
 4929 00b9 9E        		.byte	-98
 4930 00ba 9C        		.byte	-100
 4931 00bb 9A        		.byte	-102
 4932 00bc 98        		.byte	-104
 4933 00bd 96        		.byte	-106
 4934 00be 94        		.byte	-108
 4935 00bf 92        		.byte	-110
 4936 00c0 90        		.byte	-112
 4937 00c1 8E        		.byte	-114
 4938 00c2 8C        		.byte	-116
 4939 00c3 8A        		.byte	-118
 4940 00c4 89        		.byte	-119
 4941 00c5 87        		.byte	-121
 4942 00c6 85        		.byte	-123
 4943 00c7 83        		.byte	-125
 4944 00c8 81        		.byte	-127
 4945 00c9 7F        		.byte	127
 4946 00ca 7D        		.byte	125
 4947 00cb 7B        		.byte	123
 4948 00cc 79        		.byte	121
 4949 00cd 77        		.byte	119
 4950 00ce 75        		.byte	117
 4951 00cf 73        		.byte	115
 4952 00d0 71        		.byte	113
 4953 00d1 6F        		.byte	111
 4954 00d2 6D        		.byte	109
 4955 00d3 6B        		.byte	107
 4956 00d4 69        		.byte	105
 4957 00d5 68        		.byte	104
 4958 00d6 66        		.byte	102
 4959 00d7 64        		.byte	100
 4960 00d8 62        		.byte	98
 4961 00d9 60        		.byte	96
 4962 00da 5E        		.byte	94
 4963 00db 5C        		.byte	92
 4964 00dc 5A        		.byte	90
 4965 00dd 59        		.byte	89
 4966 00de 57        		.byte	87
 4967 00df 55        		.byte	85
 4968 00e0 53        		.byte	83
 4969 00e1 51        		.byte	81
 4970 00e2 50        		.byte	80
 4971 00e3 4E        		.byte	78
 4972 00e4 4C        		.byte	76
 4973 00e5 4A        		.byte	74
 4974 00e6 49        		.byte	73
 4975 00e7 47        		.byte	71
 4976 00e8 45        		.byte	69
 4977 00e9 43        		.byte	67
 4978 00ea 42        		.byte	66
 4979 00eb 40        		.byte	64
 4980 00ec 3E        		.byte	62
 4981 00ed 3D        		.byte	61
 4982 00ee 3B        		.byte	59
 4983 00ef 3A        		.byte	58
 4984 00f0 38        		.byte	56
 4985 00f1 36        		.byte	54
 4986 00f2 35        		.byte	53
 4987 00f3 33        		.byte	51
 4988 00f4 32        		.byte	50
 4989 00f5 30        		.byte	48
 4990 00f6 2F        		.byte	47
 4991 00f7 2D        		.byte	45
 4992 00f8 2C        		.byte	44
 4993 00f9 2A        		.byte	42
 4994 00fa 29        		.byte	41
 4995 00fb 28        		.byte	40
 4996 00fc 26        		.byte	38
 4997 00fd 25        		.byte	37
 4998 00fe 23        		.byte	35
 4999 00ff 22        		.byte	34
 5000               		.section	.data.effect_num_leds,"aw"
 5003               	effect_num_leds:
 5004 0000 1B        		.byte	27
 5005               		.section	.data.effect_end_pos,"aw"
 5008               	effect_end_pos:
 5009 0000 1B        		.byte	27
 5010               		.section	.bss.effect_start_pos,"aw",@nobits
 5013               	effect_start_pos:
 5014 0000 00        		.zero	1
 5015               		.section	.data.clipping_num_leds,"aw"
 5018               	clipping_num_leds:
 5019 0000 1B        		.byte	27
 5020               		.section	.bss.clipping_start_pos,"aw",@nobits
 5023               	clipping_start_pos:
 5024 0000 00        		.zero	1
 5025               		.comm	led,81,1
 5026               	.global	animation_status
 5027               		.section	.bss.animation_status,"aw",@nobits
 5030               	animation_status:
 5031 0000 0000 0000 		.zero	6
 5031      0000 
 5032               	.global	is_rgblight_initialized
 5033               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 5036               	is_rgblight_initialized:
 5037 0000 00        		.zero	1
 5038               	.global	rgblight_status
 5039               		.section	.bss.rgblight_status,"aw",@nobits
 5042               	rgblight_status:
 5043 0000 0000      		.zero	2
 5044               		.comm	rgblight_config,5,1
 5045               		.weak	RGBLED_GRADIENT_RANGES
 5046               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 5049               	RGBLED_GRADIENT_RANGES:
 5050 0000 FF        		.byte	-1
 5051 0001 AA        		.byte	-86
 5052 0002 7F        		.byte	127
 5053 0003 55        		.byte	85
 5054 0004 40        		.byte	64
 5055               		.section	.rodata.mode_base_table,"a"
 5058               	mode_base_table:
 5059 0000 00        		.byte	0
 5060 0001 01        		.byte	1
 5061 0002 02        		.byte	2
 5062 0003 02        		.byte	2
 5063 0004 02        		.byte	2
 5064 0005 02        		.byte	2
 5065 0006 06        		.byte	6
 5066 0007 06        		.byte	6
 5067 0008 06        		.byte	6
 5068 0009 09        		.byte	9
 5069 000a 09        		.byte	9
 5070 000b 09        		.byte	9
 5071 000c 09        		.byte	9
 5072 000d 09        		.byte	9
 5073 000e 09        		.byte	9
 5074 000f 0F        		.byte	15
 5075 0010 0F        		.byte	15
 5076 0011 0F        		.byte	15
 5077 0012 0F        		.byte	15
 5078 0013 0F        		.byte	15
 5079 0014 0F        		.byte	15
 5080 0015 15        		.byte	21
 5081 0016 15        		.byte	21
 5082 0017 15        		.byte	21
 5083 0018 18        		.byte	24
 5084 0019 19        		.byte	25
 5085 001a 19        		.byte	25
 5086 001b 19        		.byte	25
 5087 001c 19        		.byte	25
 5088 001d 19        		.byte	25
 5089 001e 19        		.byte	25
 5090 001f 19        		.byte	25
 5091 0020 19        		.byte	25
 5092 0021 19        		.byte	25
 5093 0022 19        		.byte	25
 5094 0023 23        		.byte	35
 5095 0024 24        		.byte	36
 5096               		.section	.data.static_effect_table,"aw"
 5099               	static_effect_table:
 5100 0000 01        		.byte	1
 5101 0001 19        		.byte	25
 5102 0002 1A        		.byte	26
 5103 0003 1B        		.byte	27
 5104 0004 1C        		.byte	28
 5105 0005 1D        		.byte	29
 5106 0006 1E        		.byte	30
 5107 0007 1F        		.byte	31
 5108 0008 20        		.byte	32
 5109 0009 21        		.byte	33
 5110 000a 22        		.byte	34
 5111               		.text
 5112               	.Letext0:
 5113               		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 5114               		.file 5 "./quantum/color.h"
 5115               		.file 6 "tmk_core/common/timer.h"
 5116               		.file 7 "quantum/rgblight.h"
 5117               		.file 8 "tmk_core/common/debug.h"
 5118               		.file 9 "quantum/led_tables.h"
 5119               		.file 10 "./lib/lib8tion/random8.h"
 5120               		.file 11 "./lib/lib8tion/trig8.h"
 5121               		.file 12 "quantum/rgblight_breathe_table.h"
 5122               		.file 13 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\string.h"
 5123               		.file 14 "drivers/avr/ws2812.h"
 5124               		.file 15 "tmk_core/common/eeconfig.h"
 5125               		.file 16 "c:\\msys64\\home\\kyleo\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\avr\\eeprom.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rgblight.c
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2      *ABS*:0000003e __SP_H__
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3      *ABS*:0000003d __SP_L__
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4      *ABS*:0000003f __SREG__
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:6      *ABS*:00000001 __zero_reg__
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:12     .text.rgblight_effect_dummy:00000000 rgblight_effect_dummy
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:31     .text.rgblight_set_clipping_range:00000000 rgblight_set_clipping_range
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5023   .bss.clipping_start_pos:00000000 clipping_start_pos
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5018   .data.clipping_num_leds:00000000 clipping_num_leds
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:55     .text.rgblight_set_effect_range:00000000 rgblight_set_effect_range
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5013   .bss.effect_start_pos:00000000 effect_start_pos
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5008   .data.effect_end_pos:00000000 effect_end_pos
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5003   .data.effect_num_leds:00000000 effect_num_leds
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:101    .text.sethsv_raw:00000000 sethsv_raw
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:163    .text.sethsv:00000000 sethsv
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:188    .text.setrgb:00000000 setrgb
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:217    .text.rgblight_check_config:00000000 rgblight_check_config
                            *COM*:00000005 rgblight_config
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:269    .text.eeconfig_read_rgblight:00000000 eeconfig_read_rgblight
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:289    .text.eeconfig_update_rgblight:00000000 eeconfig_update_rgblight
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:340    .text.eeconfig_update_rgblight_current:00000000 eeconfig_update_rgblight_current
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:361    .text.eeconfig_update_rgblight_default:00000000 eeconfig_update_rgblight_default
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:404    .text.eeconfig_debug_rgblight:00000000 eeconfig_debug_rgblight
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:428    .text.rgblight_read_dword:00000000 rgblight_read_dword
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:451    .text.rgblight_get_mode:00000000 rgblight_get_mode
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:481    .text.rgblight_increase_speed:00000000 rgblight_increase_speed
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:513    .text.rgblight_decrease_speed:00000000 rgblight_decrease_speed
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:545    .text.rgblight_get_speed:00000000 rgblight_get_speed
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:564    .text.rgblight_set_speed_eeprom_helper:00000000 rgblight_set_speed_eeprom_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:599    .text.rgblight_set_speed:00000000 rgblight_set_speed
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:619    .text.rgblight_set_speed_noeeprom:00000000 rgblight_set_speed_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:639    .text.rgblight_get_hue:00000000 rgblight_get_hue
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:658    .text.rgblight_get_sat:00000000 rgblight_get_sat
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:677    .text.rgblight_get_val:00000000 rgblight_get_val
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:696    .text.rgblight_set:00000000 rgblight_set
                            *COM*:00000051 led
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:772    .text.rgblight_setrgb:00000000 rgblight_setrgb
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:840    .text.rgblight_sethsv_noeeprom_old:00000000 rgblight_sethsv_noeeprom_old
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:902    .text.rgblight_effect_breathing:00000000 rgblight_effect_breathing
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4743   .progmem.data.rgblight_effect_breathe_table:00000000 rgblight_effect_breathe_table
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:970    .text.rgblight_effect_rainbow_mood:00000000 rgblight_effect_rainbow_mood
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1017   .text.rgblight_effect_rgbtest:00000000 rgblight_effect_rgbtest
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4670   .bss.maxval.3242:00000000 maxval.3242
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1162   .text.rgblight_sethsv_eeprom_helper:00000000 rgblight_sethsv_eeprom_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5058   .rodata.mode_base_table:00000000 mode_base_table
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5042   .bss.rgblight_status:00000000 rgblight_status
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5049   .progmem.data.RGBLED_GRADIENT_RANGES:00000000 RGBLED_GRADIENT_RANGES
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1480   .text.rgblight_increase_hue_helper:00000000 rgblight_increase_hue_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1514   .text.rgblight_increase_hue_noeeprom:00000000 rgblight_increase_hue_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1532   .text.rgblight_increase_hue:00000000 rgblight_increase_hue
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1550   .text.rgblight_decrease_hue_helper:00000000 rgblight_decrease_hue_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1584   .text.rgblight_decrease_hue_noeeprom:00000000 rgblight_decrease_hue_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1602   .text.rgblight_decrease_hue:00000000 rgblight_decrease_hue
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1620   .text.rgblight_increase_sat_helper:00000000 rgblight_increase_sat_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1651   .text.rgblight_increase_sat_helper:0000000e L_1270
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1674   .text.rgblight_increase_sat_noeeprom:00000000 rgblight_increase_sat_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1692   .text.rgblight_increase_sat:00000000 rgblight_increase_sat
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1710   .text.rgblight_decrease_sat_helper:00000000 rgblight_decrease_sat_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1740   .text.rgblight_decrease_sat_helper:0000000e L_1326
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1763   .text.rgblight_decrease_sat_noeeprom:00000000 rgblight_decrease_sat_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1781   .text.rgblight_decrease_sat:00000000 rgblight_decrease_sat
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1799   .text.rgblight_increase_val_helper:00000000 rgblight_increase_val_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1829   .text.rgblight_increase_val_helper:0000000e L_1382
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1852   .text.rgblight_increase_val_noeeprom:00000000 rgblight_increase_val_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1870   .text.rgblight_increase_val:00000000 rgblight_increase_val
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1888   .text.rgblight_decrease_val_helper:00000000 rgblight_decrease_val_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1918   .text.rgblight_decrease_val_helper:0000000e L_1438
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1941   .text.rgblight_decrease_val_noeeprom:00000000 rgblight_decrease_val_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1959   .text.rgblight_decrease_val:00000000 rgblight_decrease_val
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1977   .text.rgblight_sethsv:00000000 rgblight_sethsv
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:1997   .text.rgblight_sethsv_noeeprom:00000000 rgblight_sethsv_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2017   .text.rgblight_setrgb_at:00000000 rgblight_setrgb_at
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2066   .text.rgblight_sethsv_at:00000000 rgblight_sethsv_at
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2137   .text.rgblight_setrgb_range:00000000 rgblight_setrgb_range
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2229   .text.rgblight_sethsv_range:00000000 rgblight_sethsv_range
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2307   .text.rgblight_sethsv_master:00000000 rgblight_sethsv_master
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2336   .text.rgblight_sethsv_slave:00000000 rgblight_sethsv_slave
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2365   .text.rgblight_setrgb_master:00000000 rgblight_setrgb_master
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2394   .text.rgblight_setrgb_slave:00000000 rgblight_setrgb_slave
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2423   .text.rgblight_effect_rainbow_swirl:00000000 rgblight_effect_rainbow_swirl
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2551   .text.rgblight_effect_snake:00000000 rgblight_effect_snake
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4690   .bss.pos.3203:00000000 pos.3203
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:2808   .text.rgblight_effect_knight:00000000 rgblight_effect_knight
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4675   .data.increment.3221:00000000 increment.3221
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4685   .bss.low_bound.3219:00000000 low_bound.3219
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4680   .data.high_bound.3220:00000000 high_bound.3220
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3007   .text.rgblight_effect_christmas:00000000 rgblight_effect_christmas
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3124   .text.rgblight_effect_alternating:00000000 rgblight_effect_alternating
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3260   .text.rgblight_disable:00000000 rgblight_disable
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3329   .text.rgblight_disable_noeeprom:00000000 rgblight_disable_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3391   .text.rgblight_timer_init:00000000 rgblight_timer_init
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3412   .text.rgblight_timer_enable:00000000 rgblight_timer_enable
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5099   .data.static_effect_table:00000000 static_effect_table
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5030   .bss.animation_status:00000000 animation_status
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3471   .text.rgblight_mode_eeprom_helper:00000000 rgblight_mode_eeprom_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3598   .text.rgblight_step_helper:00000000 rgblight_step_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3639   .text.rgblight_step_noeeprom:00000000 rgblight_step_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3657   .text.rgblight_step:00000000 rgblight_step
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3675   .text.rgblight_step_reverse_helper:00000000 rgblight_step_reverse_helper
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3715   .text.rgblight_step_reverse_noeeprom:00000000 rgblight_step_reverse_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3733   .text.rgblight_step_reverse:00000000 rgblight_step_reverse
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3751   .text.rgblight_mode:00000000 rgblight_mode
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3771   .text.rgblight_increase:00000000 rgblight_increase
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3806   .text.rgblight_decrease:00000000 rgblight_decrease
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3841   .text.rgblight_enable:00000000 rgblight_enable
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3867   .text.rgblight_toggle:00000000 rgblight_toggle
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3894   .text.rgblight_mode_noeeprom:00000000 rgblight_mode_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:3914   .text.rgblight_init:00000000 rgblight_init
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:5036   .bss.is_rgblight_initialized:00000000 is_rgblight_initialized
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4013   .text.rgblight_enable_noeeprom:00000000 rgblight_enable_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4039   .text.rgblight_toggle_noeeprom:00000000 rgblight_toggle_noeeprom
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4066   .text.rgblight_update_dword:00000000 rgblight_update_dword
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4113   .text.rgblight_timer_disable:00000000 rgblight_timer_disable
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4129   .text.rgblight_timer_toggle:00000000 rgblight_timer_toggle
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4167   .text.rgblight_show_solid_color:00000000 rgblight_show_solid_color
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4223   .text.rgblight_task:00000000 rgblight_task
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4734   .progmem.data.RGBLED_BREATHING_INTERVALS:00000000 RGBLED_BREATHING_INTERVALS
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4726   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:00000000 RGBLED_RAINBOW_MOOD_INTERVALS
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4718   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:00000000 RGBLED_RAINBOW_SWIRL_INTERVALS
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4710   .progmem.data.RGBLED_SNAKE_INTERVALS:00000000 RGBLED_SNAKE_INTERVALS
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4702   .progmem.data.RGBLED_KNIGHT_INTERVALS:00000000 RGBLED_KNIGHT_INTERVALS
C:\Users\kyleo\AppData\Local\Temp\ccEnfKnc.s:4696   .progmem.data.RGBLED_RGBTEST_INTERVALS:00000000 RGBLED_RGBTEST_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
__udivmodhi4
__divmodqi4
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
