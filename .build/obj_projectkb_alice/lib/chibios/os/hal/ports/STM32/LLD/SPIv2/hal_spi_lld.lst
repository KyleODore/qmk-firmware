   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_spi_lld.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.spi_lld_serve_tx_interrupt,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	spi_lld_serve_tx_interrupt:
  24              	.LVL0:
  25              	.LFB187:
  26              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @file    SPIv2/hal_spi_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   STM32 SPI subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @addtogroup SPI
  22:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if HAL_USE_SPI || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  33:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI1_RX_DMA_STREAM                                                 \
  34:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI1_RX_DMA_STREAM,                        \
  35:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI1_RX_DMA_CHN)
  36:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  37:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI1_TX_DMA_STREAM                                                 \
  38:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI1_TX_DMA_STREAM,                        \
  39:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI1_TX_DMA_CHN)
  40:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  41:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI2_RX_DMA_STREAM                                                 \
  42:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI2_RX_DMA_STREAM,                        \
  43:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI2_RX_DMA_CHN)
  44:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  45:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI2_TX_DMA_STREAM                                                 \
  46:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI2_TX_DMA_STREAM,                        \
  47:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI2_TX_DMA_CHN)
  48:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  49:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI3_RX_DMA_STREAM                                                 \
  50:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI3_RX_DMA_STREAM,                        \
  51:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI3_RX_DMA_CHN)
  52:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  53:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI3_TX_DMA_STREAM                                                 \
  54:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI3_TX_DMA_STREAM,                        \
  55:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI3_TX_DMA_CHN)
  56:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  57:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI4_RX_DMA_STREAM                                                 \
  58:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI4_RX_DMA_STREAM,                        \
  59:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI4_RX_DMA_CHN)
  60:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  61:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI4_TX_DMA_STREAM                                                 \
  62:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI4_TX_DMA_STREAM,                        \
  63:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI4_TX_DMA_CHN)
  64:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  65:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI5_RX_DMA_STREAM                                                 \
  66:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI5_RX_DMA_STREAM,                        \
  67:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI5_RX_DMA_CHN)
  68:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  69:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI5_TX_DMA_STREAM                                                 \
  70:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI5_TX_DMA_STREAM,                        \
  71:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI5_TX_DMA_CHN)
  72:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  73:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI6_RX_DMA_STREAM                                                 \
  74:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI6_RX_DMA_STREAM,                        \
  75:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI6_RX_DMA_CHN)
  76:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  77:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #define SPI6_TX_DMA_STREAM                                                 \
  78:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   STM32_DMA_GETCHANNEL(STM32_SPI_SPI6_TX_DMA_STREAM,                        \
  79:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                        STM32_SPI6_TX_DMA_CHN)
  80:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  81:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
  82:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver exported variables.                                                */
  83:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
  84:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  85:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI1 driver identifier.*/
  86:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI1 || defined(__DOXYGEN__)
  87:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID1;
  88:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
  89:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  90:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI2 driver identifier.*/
  91:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI2 || defined(__DOXYGEN__)
  92:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID2;
  93:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
  94:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  95:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI3 driver identifier.*/
  96:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI3 || defined(__DOXYGEN__)
  97:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID3;
  98:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
  99:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 100:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI4 driver identifier.*/
 101:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI4 || defined(__DOXYGEN__)
 102:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID4;
 103:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 104:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 105:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI5 driver identifier.*/
 106:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI5 || defined(__DOXYGEN__)
 107:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID5;
 108:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 109:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 110:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /** @brief SPI6 driver identifier.*/
 111:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI6 || defined(__DOXYGEN__)
 112:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** SPIDriver SPID6;
 113:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 114:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 115:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 116:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver local variables and types.                                         */
 117:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 118:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 119:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** static const uint16_t dummytx = 0xFFFFU;
 120:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** static uint16_t dummyrx;
 121:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 122:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 123:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver local functions.                                                   */
 124:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 125:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 126:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 127:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Shared end-of-rx service routine.
 128:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 129:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 130:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] flags     pre-shifted content of the ISR register
 131:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 132:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** static void spi_lld_serve_rx_interrupt(SPIDriver *spip, uint32_t flags) {
 133:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 134:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* DMA errors handling.*/
 135:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if defined(STM32_SPI_DMA_ERROR_HOOK)
 136:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if ((flags & (STM32_DMA_ISR_TEIF | STM32_DMA_ISR_DMEIF)) != 0) {
 137:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     STM32_SPI_DMA_ERROR_HOOK(spip);
 138:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 139:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #else
 140:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   (void)flags;
 141:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 142:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 143:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (spip->config->circular) {
 144:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0U) {
 145:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* Half buffer interrupt.*/
 146:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       _spi_isr_half_code(spip);
 147:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 148:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if ((flags & STM32_DMA_ISR_TCIF) != 0U) {
 149:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* End buffer interrupt.*/
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       _spi_isr_full_code(spip);
 151:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 152:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 153:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   else {
 154:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* Stopping DMAs.*/
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmatx);
 156:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 157:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 158:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* Portable SPI ISR code defined in the high level driver, note, it is
 159:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****        a macro.*/
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     _spi_isr_code(spip);
 161:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 162:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 163:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 164:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 165:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Shared end-of-tx service routine.
 166:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 167:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 168:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] flags     pre-shifted content of the ISR register
 169:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 170:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** static void spi_lld_serve_tx_interrupt(SPIDriver *spip, uint32_t flags) {
  27              		.loc 1 170 73 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 171:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 172:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* DMA errors handling.*/
 173:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if defined(STM32_SPI_DMA_ERROR_HOOK)
 174:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   (void)spip;
  31              		.loc 1 174 3 view .LVU1
 175:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if ((flags & (STM32_DMA_ISR_TEIF | STM32_DMA_ISR_DMEIF)) != 0) {
  32              		.loc 1 175 3 view .LVU2
 170:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  33              		.loc 1 170 73 is_stmt 0 view .LVU3
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 175 6 view .LVU4
  39 0002 0B07     		lsls	r3, r1, #28
  40 0004 02D5     		bpl	.L1
 176:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     STM32_SPI_DMA_ERROR_HOOK(spip);
  41              		.loc 1 176 5 is_stmt 1 view .LVU5
  42              	.LVL1:
  43              	.LBB56:
  44              	.LBI56:
  45              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
  46              		.loc 2 478 20 view .LVU6
  47              	.LBB57:
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
  48              		.loc 2 480 3 view .LVU7
  49 0006 0248     		ldr	r0, .L6
  50              	.LVL2:
  51              		.loc 2 480 3 is_stmt 0 view .LVU8
  52 0008 FFF7FEFF 		bl	chSysHalt
  53              	.LVL3:
  54              	.L1:
  55              		.loc 2 480 3 view .LVU9
  56              	.LBE57:
  57              	.LBE56:
 177:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 178:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #else
 179:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   (void)spip;
 180:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   (void)flags;
 181:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 182:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
  58              		.loc 1 182 1 view .LVU10
  59              		@ sp needed
  60 000c 10BD     		pop	{r4, pc}
  61              	.L7:
  62 000e C046     		.align	2
  63              	.L6:
  64 0010 00000000 		.word	.LC0
  65              		.cfi_endproc
  66              	.LFE187:
  68              		.section	.text.spi_lld_serve_rx_interrupt,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.code	16
  72              		.thumb_func
  73              		.fpu softvfp
  75              	spi_lld_serve_rx_interrupt:
  76              	.LVL4:
  77              	.LFB186:
 132:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  78              		.loc 1 132 73 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
 136:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     STM32_SPI_DMA_ERROR_HOOK(spip);
  82              		.loc 1 136 3 view .LVU12
 132:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  83              		.loc 1 132 73 is_stmt 0 view .LVU13
  84 0000 70B5     		push	{r4, r5, r6, lr}
  85              		.cfi_def_cfa_offset 16
  86              		.cfi_offset 4, -16
  87              		.cfi_offset 5, -12
  88              		.cfi_offset 6, -8
  89              		.cfi_offset 14, -4
 132:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
  90              		.loc 1 132 73 view .LVU14
  91 0002 0400     		movs	r4, r0
  92 0004 0D00     		movs	r5, r1
 136:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     STM32_SPI_DMA_ERROR_HOOK(spip);
  93              		.loc 1 136 6 view .LVU15
  94 0006 0B07     		lsls	r3, r1, #28
  95 0008 02D5     		bpl	.L9
 137:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
  96              		.loc 1 137 5 is_stmt 1 view .LVU16
  97              	.LVL5:
  98              	.LBB58:
  99              	.LBI58:
 478:./lib/chibios/os/hal/osal/rt/osal.h **** 
 100              		.loc 2 478 20 view .LVU17
 101              	.LBB59:
 102              		.loc 2 480 3 view .LVU18
 103 000a 2348     		ldr	r0, .L32
 104              	.LVL6:
 105              		.loc 2 480 3 is_stmt 0 view .LVU19
 106 000c FFF7FEFF 		bl	chSysHalt
 107              	.LVL7:
 108              	.L9:
 109              		.loc 2 480 3 view .LVU20
 110              	.LBE59:
 111              	.LBE58:
 143:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0U) {
 112              		.loc 1 143 3 is_stmt 1 view .LVU21
 143:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0U) {
 113              		.loc 1 143 11 is_stmt 0 view .LVU22
 114 0010 6268     		ldr	r2, [r4, #4]
 143:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0U) {
 115              		.loc 1 143 6 view .LVU23
 116 0012 1378     		ldrb	r3, [r2]
 117 0014 002B     		cmp	r3, #0
 118 0016 16D0     		beq	.L10
 144:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* Half buffer interrupt.*/
 119              		.loc 1 144 5 is_stmt 1 view .LVU24
 144:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* Half buffer interrupt.*/
 120              		.loc 1 144 8 is_stmt 0 view .LVU25
 121 0018 6B07     		lsls	r3, r5, #29
 122 001a 04D5     		bpl	.L11
 146:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 123              		.loc 1 146 7 is_stmt 1 view .LVU26
 124 001c 5368     		ldr	r3, [r2, #4]
 125 001e 002B     		cmp	r3, #0
 126 0020 01D0     		beq	.L11
 146:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 127              		.loc 1 146 7 discriminator 1 view .LVU27
 128 0022 2000     		movs	r0, r4
 129 0024 9847     		blx	r3
 130              	.LVL8:
 131              	.L11:
 146:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 132              		.loc 1 146 31 discriminator 3 view .LVU28
 148:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* End buffer interrupt.*/
 133              		.loc 1 148 5 discriminator 3 view .LVU29
 148:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       /* End buffer interrupt.*/
 134              		.loc 1 148 8 is_stmt 0 discriminator 3 view .LVU30
 135 0026 AB07     		lsls	r3, r5, #30
 136 0028 0CD5     		bpl	.L8
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 137              		.loc 1 150 7 is_stmt 1 view .LVU31
 138 002a 6368     		ldr	r3, [r4, #4]
 139 002c 5B68     		ldr	r3, [r3, #4]
 140 002e 002B     		cmp	r3, #0
 141 0030 08D0     		beq	.L8
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 142              		.loc 1 150 7 discriminator 1 view .LVU32
 143 0032 0422     		movs	r2, #4
 144 0034 2000     		movs	r0, r4
 145 0036 2270     		strb	r2, [r4]
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 146              		.loc 1 150 7 discriminator 1 view .LVU33
 147 0038 9847     		blx	r3
 148              	.LVL9:
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 149              		.loc 1 150 7 discriminator 1 view .LVU34
 150 003a 2378     		ldrb	r3, [r4]
 151 003c 042B     		cmp	r3, #4
 152 003e 01D1     		bne	.L8
 150:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 153              		.loc 1 150 7 discriminator 3 view .LVU35
 154 0040 013B     		subs	r3, r3, #1
 155 0042 2370     		strb	r3, [r4]
 156              	.LVL10:
 157              	.L8:
 162:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 158              		.loc 1 162 1 is_stmt 0 view .LVU36
 159              		@ sp needed
 160              	.LVL11:
 162:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 161              		.loc 1 162 1 view .LVU37
 162 0044 70BD     		pop	{r4, r5, r6, pc}
 163              	.LVL12:
 164              	.L10:
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 165              		.loc 1 155 5 is_stmt 1 view .LVU38
 166 0046 0F25     		movs	r5, #15
 167              	.LVL13:
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 168              		.loc 1 155 5 is_stmt 0 view .LVU39
 169 0048 636A     		ldr	r3, [r4, #36]
 170 004a 5868     		ldr	r0, [r3, #4]
 171 004c 0168     		ldr	r1, [r0]
 172 004e A943     		bics	r1, r5
 173 0050 0160     		str	r1, [r0]
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 174              		.loc 1 155 5 is_stmt 1 view .LVU40
 175 0052 587B     		ldrb	r0, [r3, #13]
 176 0054 1968     		ldr	r1, [r3]
 177 0056 0E23     		movs	r3, #14
 178 0058 1E00     		movs	r6, r3
 179 005a 8640     		lsls	r6, r6, r0
 180 005c 4E60     		str	r6, [r1, #4]
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 181              		.loc 1 155 5 view .LVU41
 155:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamDisable(spip->dmarx);
 182              		.loc 1 155 34 view .LVU42
 156:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 183              		.loc 1 156 5 view .LVU43
 184 005e 216A     		ldr	r1, [r4, #32]
 185 0060 4E68     		ldr	r6, [r1, #4]
 186 0062 3068     		ldr	r0, [r6]
 187 0064 A843     		bics	r0, r5
 188 0066 3060     		str	r0, [r6]
 156:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 189              		.loc 1 156 5 view .LVU44
 190 0068 0868     		ldr	r0, [r1]
 191 006a 497B     		ldrb	r1, [r1, #13]
 192 006c 8B40     		lsls	r3, r3, r1
 193 006e 4360     		str	r3, [r0, #4]
 156:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 194              		.loc 1 156 5 view .LVU45
 156:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 195              		.loc 1 156 34 view .LVU46
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 196              		.loc 1 160 5 view .LVU47
 197 0070 5368     		ldr	r3, [r2, #4]
 198 0072 002B     		cmp	r3, #0
 199 0074 06D0     		beq	.L15
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 200              		.loc 1 160 5 discriminator 1 view .LVU48
 201 0076 0422     		movs	r2, #4
 202 0078 2000     		movs	r0, r4
 203 007a 2270     		strb	r2, [r4]
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 204              		.loc 1 160 5 discriminator 1 view .LVU49
 205 007c 9847     		blx	r3
 206              	.LVL14:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 207              		.loc 1 160 5 discriminator 1 view .LVU50
 208 007e 2378     		ldrb	r3, [r4]
 209 0080 042B     		cmp	r3, #4
 210 0082 01D1     		bne	.L16
 211              	.L15:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 212              		.loc 1 160 5 discriminator 3 view .LVU51
 213 0084 0223     		movs	r3, #2
 214 0086 2370     		strb	r3, [r4]
 215              	.L16:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 216              		.loc 1 160 5 discriminator 4 view .LVU52
 217              	.LBB60:
 218              	.LBI60:
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 219              		.loc 2 531 20 discriminator 4 view .LVU53
 220              	.LBE60:
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 221              		.loc 2 533 3 discriminator 4 view .LVU54
 222              	.LBB72:
 223              	.LBB61:
 224              	.LBI61:
 225              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 226              		.loc 3 393 20 discriminator 4 view .LVU55
 227              	.LBE61:
 228              	.LBE72:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 229              		.loc 3 395 3 discriminator 4 view .LVU56
 230              	.LBB73:
 231              	.LBB69:
 232              	.LBB62:
 233              	.LBI62:
 234              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock_from_isr(void) {
 235              		.loc 4 406 20 discriminator 4 view .LVU57
 236              	.LBE62:
 237              	.LBE69:
 238              	.LBE73:
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_lock();
 239              		.loc 4 408 3 discriminator 4 view .LVU58
 240              	.LBB74:
 241              	.LBB70:
 242              	.LBB67:
 243              	.LBB63:
 244              	.LBI63:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 245              		.loc 4 387 20 discriminator 4 view .LVU59
 246              	.LBE63:
 247              	.LBE67:
 248              	.LBE70:
 249              	.LBE74:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 250              		.loc 4 389 3 discriminator 4 view .LVU60
 251              	.LBB75:
 252              	.LBB71:
 253              	.LBB68:
 254              	.LBB66:
 255              	.LBB64:
 256              	.LBI64:
 257              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 258              		.loc 5 140 27 discriminator 4 view .LVU61
 259              	.LBB65:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 260              		.loc 5 142 3 discriminator 4 view .LVU62
 261              		.syntax divided
 262              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 263 0088 72B6     		cpsid i
 264              	@ 0 "" 2
 265              		.thumb
 266              		.syntax unified
 267              	.LBE65:
 268              	.LBE64:
 269              	.LBE66:
 270              	.LBE68:
 271              	.LBE71:
 272              	.LBE75:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 273              		.loc 3 396 34 discriminator 4 view .LVU63
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 274              		.loc 3 397 29 discriminator 4 view .LVU64
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 275              		.loc 1 160 5 discriminator 4 view .LVU65
 276              	.LVL15:
 277              	.LBB76:
 278              	.LBI76:
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 279              		.loc 2 773 20 discriminator 4 view .LVU66
 280              	.LBB77:
 774:./lib/chibios/os/hal/osal/rt/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 281              		.loc 2 775 3 discriminator 4 view .LVU67
 282              	.LBE77:
 283              	.LBE76:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 284              		.loc 1 160 5 is_stmt 0 discriminator 4 view .LVU68
 285 008a 2000     		movs	r0, r4
 286              	.LBB80:
 287              	.LBB78:
 288              		.loc 2 775 3 discriminator 4 view .LVU69
 289 008c 0021     		movs	r1, #0
 290              	.LBE78:
 291              	.LBE80:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 292              		.loc 1 160 5 discriminator 4 view .LVU70
 293 008e 0830     		adds	r0, r0, #8
 294              	.LVL16:
 295              	.LBB81:
 296              	.LBB79:
 297              		.loc 2 775 3 discriminator 4 view .LVU71
 298 0090 FFF7FEFF 		bl	chThdResumeI
 299              	.LVL17:
 300              		.loc 2 775 3 discriminator 4 view .LVU72
 301              	.LBE79:
 302              	.LBE81:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 303              		.loc 1 160 5 is_stmt 1 discriminator 4 view .LVU73
 304              	.LBB82:
 305              	.LBI82:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 306              		.loc 2 542 20 discriminator 4 view .LVU74
 307              	.LBE82:
 544:./lib/chibios/os/hal/osal/rt/osal.h **** }
 308              		.loc 2 544 3 discriminator 4 view .LVU75
 309              	.LBB94:
 310              	.LBB83:
 311              	.LBI83:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 312              		.loc 3 413 20 discriminator 4 view .LVU76
 313              	.LBE83:
 314              	.LBE94:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 315              		.loc 3 415 31 discriminator 4 view .LVU77
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 316              		.loc 3 416 33 discriminator 4 view .LVU78
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 317              		.loc 3 417 3 discriminator 4 view .LVU79
 318              	.LBB95:
 319              	.LBB91:
 320              	.LBB84:
 321              	.LBI84:
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock_from_isr(void) {
 322              		.loc 4 416 20 discriminator 4 view .LVU80
 323              	.LBE84:
 324              	.LBE91:
 325              	.LBE95:
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_unlock();
 326              		.loc 4 418 3 discriminator 4 view .LVU81
 327              	.LBB96:
 328              	.LBB92:
 329              	.LBB89:
 330              	.LBB85:
 331              	.LBI85:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 332              		.loc 4 396 20 discriminator 4 view .LVU82
 333              	.LBE85:
 334              	.LBE89:
 335              	.LBE92:
 336              	.LBE96:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 337              		.loc 4 398 3 discriminator 4 view .LVU83
 338              	.LBB97:
 339              	.LBB93:
 340              	.LBB90:
 341              	.LBB88:
 342              	.LBB86:
 343              	.LBI86:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 344              		.loc 5 129 27 discriminator 4 view .LVU84
 345              	.LBB87:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 346              		.loc 5 131 3 discriminator 4 view .LVU85
 347              		.syntax divided
 348              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 349 0094 62B6     		cpsie i
 350              	@ 0 "" 2
 351              		.thumb
 352              		.syntax unified
 353              	.LBE87:
 354              	.LBE86:
 355              	.LBE88:
 356              	.LBE90:
 357              	.LBE93:
 358              	.LBE97:
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 359              		.loc 1 160 5 discriminator 4 view .LVU86
 160:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 360              		.loc 1 160 24 discriminator 4 view .LVU87
 162:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 361              		.loc 1 162 1 is_stmt 0 discriminator 4 view .LVU88
 362 0096 D5E7     		b	.L8
 363              	.L33:
 364              		.align	2
 365              	.L32:
 366 0098 00000000 		.word	.LC0
 367              		.cfi_endproc
 368              	.LFE186:
 370              		.section	.text.spi_lld_init,"ax",%progbits
 371              		.align	1
 372              		.global	spi_lld_init
 373              		.syntax unified
 374              		.code	16
 375              		.thumb_func
 376              		.fpu softvfp
 378              	spi_lld_init:
 379              	.LFB188:
 183:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 184:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 185:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver interrupt handlers.                                                */
 186:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 187:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 188:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 189:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /* Driver exported functions.                                                */
 190:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /*===========================================================================*/
 191:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 192:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 193:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Low level SPI driver initialization.
 194:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 195:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 196:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 197:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_init(void) {
 380              		.loc 1 197 25 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 198:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 199:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI1
 200:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID1);
 201:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID1.spi       = SPI1;
 202:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID1.dmarx     = NULL;
 203:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID1.dmatx     = NULL;
 204:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID1.rxdmamode = STM32_DMA_CR_CHSEL(SPI1_RX_DMA_STREAM) |
 205:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI1_DMA_PRIORITY) |
 206:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 207:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 208:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 209:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 210:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID1.txdmamode = STM32_DMA_CR_CHSEL(SPI1_TX_DMA_STREAM) |
 211:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI1_DMA_PRIORITY) |
 212:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 213:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 214:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 215:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 216:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 217:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI2
 218:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID2);
 384              		.loc 1 218 3 view .LVU90
 197:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 385              		.loc 1 197 25 is_stmt 0 view .LVU91
 386 0000 10B5     		push	{r4, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
 390              		.loc 1 218 3 view .LVU92
 391 0002 074C     		ldr	r4, .L35
 219:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.spi       = SPI2;
 220:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.dmarx     = NULL;
 221:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.dmatx     = NULL;
 222:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.rxdmamode = STM32_DMA_CR_CHSEL(SPI2_RX_DMA_STREAM) |
 223:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 224:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 225:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 226:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 227:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 228:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.txdmamode = STM32_DMA_CR_CHSEL(SPI2_TX_DMA_STREAM) |
 229:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 230:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 231:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 232:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 233:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 234:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 235:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI3
 236:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID3);
 237:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID3.spi       = SPI3;
 238:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID3.dmarx     = NULL;
 239:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID3.dmatx     = NULL;
 240:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID3.rxdmamode = STM32_DMA_CR_CHSEL(SPI3_RX_DMA_STREAM) |
 241:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI3_DMA_PRIORITY) |
 242:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 243:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 244:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 245:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 246:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID3.txdmamode = STM32_DMA_CR_CHSEL(SPI3_TX_DMA_STREAM) |
 247:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI3_DMA_PRIORITY) |
 248:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 249:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 250:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 251:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 252:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 253:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI4
 254:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID4);
 255:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID4.spi       = SPI4;
 256:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID4.dmarx     = NULL;
 257:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID4.dmatx     = NULL;
 258:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID4.rxdmamode = STM32_DMA_CR_CHSEL(SPI4_RX_DMA_STREAM) |
 259:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI4_DMA_PRIORITY) |
 260:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 261:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 262:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 263:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 264:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID4.txdmamode = STM32_DMA_CR_CHSEL(SPI4_TX_DMA_STREAM) |
 265:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI4_DMA_PRIORITY) |
 266:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 267:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 268:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 269:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 270:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 271:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI5
 272:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID5);
 273:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID5.spi       = SPI5;
 274:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID5.dmarx     = NULL;
 275:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID5.dmatx     = NULL;
 276:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID5.rxdmamode = STM32_DMA_CR_CHSEL(SPI5_RX_DMA_STREAM) |
 277:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI5_DMA_PRIORITY) |
 278:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 279:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 280:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 281:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 282:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID5.txdmamode = STM32_DMA_CR_CHSEL(SPI5_TX_DMA_STREAM) |
 283:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI5_DMA_PRIORITY) |
 284:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 285:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 286:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 287:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 288:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 289:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI6
 290:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spiObjectInit(&SPID6);
 291:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID6.spi       = SPI6;
 292:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID6.dmarx     = NULL;
 293:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID6.dmatx     = NULL;
 294:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID6.rxdmamode = STM32_DMA_CR_CHSEL(SPI6_RX_DMA_STREAM) |
 295:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI6_DMA_PRIORITY) |
 296:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_P2M |
 297:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TCIE |
 298:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 299:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 300:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID6.txdmamode = STM32_DMA_CR_CHSEL(SPI6_TX_DMA_STREAM) |
 301:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI6_DMA_PRIORITY) |
 302:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DIR_M2P |
 303:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_DMEIE |
 304:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_TEIE;
 305:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 306:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 392              		.loc 1 306 1 view .LVU93
 393              		@ sp needed
 218:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.spi       = SPI2;
 394              		.loc 1 218 3 view .LVU94
 395 0004 2000     		movs	r0, r4
 396 0006 FFF7FEFF 		bl	spiObjectInit
 397              	.LVL18:
 219:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.spi       = SPI2;
 398              		.loc 1 219 3 is_stmt 1 view .LVU95
 219:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.spi       = SPI2;
 399              		.loc 1 219 19 is_stmt 0 view .LVU96
 400 000a 064B     		ldr	r3, .L35+4
 401 000c E361     		str	r3, [r4, #28]
 220:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.dmatx     = NULL;
 402              		.loc 1 220 3 is_stmt 1 view .LVU97
 220:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.dmatx     = NULL;
 403              		.loc 1 220 19 is_stmt 0 view .LVU98
 404 000e 0023     		movs	r3, #0
 405 0010 2362     		str	r3, [r4, #32]
 221:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.rxdmamode = STM32_DMA_CR_CHSEL(SPI2_RX_DMA_STREAM) |
 406              		.loc 1 221 3 is_stmt 1 view .LVU99
 221:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   SPID2.rxdmamode = STM32_DMA_CR_CHSEL(SPI2_RX_DMA_STREAM) |
 407              		.loc 1 221 19 is_stmt 0 view .LVU100
 408 0012 6362     		str	r3, [r4, #36]
 222:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 409              		.loc 1 222 3 is_stmt 1 view .LVU101
 222:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 410              		.loc 1 222 19 is_stmt 0 view .LVU102
 411 0014 044B     		ldr	r3, .L35+8
 412 0016 A362     		str	r3, [r4, #40]
 228:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 413              		.loc 1 228 3 is_stmt 1 view .LVU103
 228:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     STM32_DMA_CR_PL(STM32_SPI_SPI2_DMA_PRIORITY) |
 414              		.loc 1 228 19 is_stmt 0 view .LVU104
 415 0018 044B     		ldr	r3, .L35+12
 416 001a E362     		str	r3, [r4, #44]
 417              		.loc 1 306 1 view .LVU105
 418 001c 10BD     		pop	{r4, pc}
 419              	.L36:
 420 001e C046     		.align	2
 421              	.L35:
 422 0020 00000000 		.word	.LANCHOR0
 423 0024 00380040 		.word	1073756160
 424 0028 0A100000 		.word	4106
 425 002c 18100000 		.word	4120
 426              		.cfi_endproc
 427              	.LFE188:
 429              		.section	.text.spi_lld_start,"ax",%progbits
 430              		.align	1
 431              		.global	spi_lld_start
 432              		.syntax unified
 433              		.code	16
 434              		.thumb_func
 435              		.fpu softvfp
 437              	spi_lld_start:
 438              	.LVL19:
 439              	.LFB189:
 307:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 308:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 309:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Configures and activates the SPI peripheral.
 310:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 311:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 312:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 313:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 314:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 315:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_start(SPIDriver *spip) {
 440              		.loc 1 315 37 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 316:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   uint32_t ds;
 444              		.loc 1 316 3 view .LVU107
 317:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 318:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* If in stopped state then enables the SPI and DMA clocks.*/
 319:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (spip->state == SPI_STOP) {
 445              		.loc 1 319 3 view .LVU108
 446              		.loc 1 319 6 is_stmt 0 view .LVU109
 447 0000 0378     		ldrb	r3, [r0]
 315:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   uint32_t ds;
 448              		.loc 1 315 37 view .LVU110
 449 0002 70B5     		push	{r4, r5, r6, lr}
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 4, -16
 452              		.cfi_offset 5, -12
 453              		.cfi_offset 6, -8
 454              		.cfi_offset 14, -4
 315:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   uint32_t ds;
 455              		.loc 1 315 37 view .LVU111
 456 0004 0400     		movs	r4, r0
 457              		.loc 1 319 6 view .LVU112
 458 0006 012B     		cmp	r3, #1
 459 0008 1FD1     		bne	.L38
 320:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI1
 321:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID1 == spip) {
 322:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI1_RX_DMA_STREAM,
 323:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI1_IRQ_PRIORITY,
 324:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 325:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 326:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 327:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI1_TX_DMA_STREAM,
 328:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI1_IRQ_PRIORITY,
 329:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 330:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 331:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 332:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI1(true);
 333:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 334:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI1_RX);
 335:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI1_TX);
 336:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 337:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 338:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 339:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI2
 340:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID2 == spip) {
 460              		.loc 1 340 5 is_stmt 1 view .LVU113
 461              		.loc 1 340 8 is_stmt 0 view .LVU114
 462 000a 2B4B     		ldr	r3, .L44
 463 000c 9842     		cmp	r0, r3
 464 000e 14D1     		bne	.L39
 341:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI2_RX_DMA_STREAM,
 465              		.loc 1 341 7 is_stmt 1 view .LVU115
 466              		.loc 1 341 21 is_stmt 0 view .LVU116
 467 0010 0300     		movs	r3, r0
 468 0012 2A4A     		ldr	r2, .L44+4
 469 0014 0221     		movs	r1, #2
 470 0016 0320     		movs	r0, #3
 471              	.LVL20:
 472              		.loc 1 341 21 view .LVU117
 473 0018 FFF7FEFF 		bl	dmaStreamAllocI
 474              	.LVL21:
 342:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI2_IRQ_PRIORITY,
 343:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 344:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 345:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 346:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI2_TX_DMA_STREAM,
 475              		.loc 1 346 21 view .LVU118
 476 001c 2300     		movs	r3, r4
 341:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI2_RX_DMA_STREAM,
 477              		.loc 1 341 19 view .LVU119
 478 001e 2062     		str	r0, [r4, #32]
 345:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI2_TX_DMA_STREAM,
 479              		.loc 1 345 7 is_stmt 1 view .LVU120
 345:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI2_TX_DMA_STREAM,
 480              		.loc 1 345 7 view .LVU121
 481              		.loc 1 346 7 view .LVU122
 482              		.loc 1 346 21 is_stmt 0 view .LVU123
 483 0020 274A     		ldr	r2, .L44+8
 484 0022 0221     		movs	r1, #2
 485 0024 0420     		movs	r0, #4
 486 0026 FFF7FEFF 		bl	dmaStreamAllocI
 487              	.LVL22:
 347:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI2_IRQ_PRIORITY,
 348:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 349:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 350:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 351:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI2(true);
 488              		.loc 1 351 7 view .LVU124
 489 002a 8022     		movs	r2, #128
 490 002c 254B     		ldr	r3, .L44+12
 491 002e D201     		lsls	r2, r2, #7
 492 0030 D969     		ldr	r1, [r3, #28]
 346:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI2_IRQ_PRIORITY,
 493              		.loc 1 346 19 view .LVU125
 494 0032 6062     		str	r0, [r4, #36]
 350:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI2(true);
 495              		.loc 1 350 7 is_stmt 1 view .LVU126
 350:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI2(true);
 496              		.loc 1 350 7 view .LVU127
 497              		.loc 1 351 7 view .LVU128
 498 0034 0A43     		orrs	r2, r1
 499 0036 DA61     		str	r2, [r3, #28]
 500              		.loc 1 351 7 view .LVU129
 501 0038 DB69     		ldr	r3, [r3, #28]
 502              	.L39:
 503              		.loc 1 351 26 discriminator 1 view .LVU130
 352:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 353:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI2_RX);
 354:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI2_TX);
 355:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 356:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 357:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 358:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI3
 359:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID3 == spip) {
 360:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI3_RX_DMA_STREAM,
 361:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI3_IRQ_PRIORITY,
 362:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 363:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 364:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 365:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI3_TX_DMA_STREAM,
 366:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI3_IRQ_PRIORITY,
 367:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 368:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 369:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 370:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI3(true);
 371:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 372:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI3_RX);
 373:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI3_TX);
 374:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 375:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 376:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 377:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI4
 378:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID4 == spip) {
 379:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI4_RX_DMA_STREAM,
 380:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI4_IRQ_PRIORITY,
 381:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 382:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 383:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 384:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI4_TX_DMA_STREAM,
 385:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI4_IRQ_PRIORITY,
 386:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 387:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 388:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 389:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI4(true);
 390:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 391:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI4_RX);
 392:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI4_TX);
 393:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 394:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 395:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 396:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI5
 397:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID5 == spip) {
 398:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI5_RX_DMA_STREAM,
 399:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI5_IRQ_PRIORITY,
 400:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 401:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 402:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 403:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI5_TX_DMA_STREAM,
 404:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI5_IRQ_PRIORITY,
 405:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 406:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 407:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 408:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI5(true);
 409:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 410:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI5_RX);
 411:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI5_TX);
 412:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 413:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 414:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 415:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI6
 416:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID6 == spip) {
 417:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmarx = dmaStreamAllocI(STM32_SPI_SPI6_RX_DMA_STREAM,
 418:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI6_IRQ_PRIORITY,
 419:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_rx_interrupt,
 420:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 421:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmarx != NULL, "unable to allocate stream");
 422:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       spip->dmatx = dmaStreamAllocI(STM32_SPI_SPI6_TX_DMA_STREAM,
 423:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     STM32_SPI_SPI6_IRQ_PRIORITY,
 424:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (stm32_dmaisr_t)spi_lld_serve_tx_interrupt,
 425:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                     (void *)spip);
 426:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       osalDbgAssert(spip->dmatx != NULL, "unable to allocate stream");
 427:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccEnableSPI6(true);
 428:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_DMA_SUPPORTS_DMAMUX
 429:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmarx, STM32_DMAMUX1_SPI6_RX);
 430:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       dmaSetRequestSource(spip->dmatx, STM32_DMAMUX1_SPI6_TX);
 431:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 432:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     }
 433:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 434:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 435:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* DMA setup.*/
 436:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamSetPeripheral(spip->dmarx, &spip->spi->DR);
 504              		.loc 1 436 5 discriminator 1 view .LVU131
 505 003a 236A     		ldr	r3, [r4, #32]
 506 003c 5A68     		ldr	r2, [r3, #4]
 507 003e E369     		ldr	r3, [r4, #28]
 508 0040 0C33     		adds	r3, r3, #12
 509 0042 9360     		str	r3, [r2, #8]
 510              		.loc 1 436 56 discriminator 1 view .LVU132
 437:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamSetPeripheral(spip->dmatx, &spip->spi->DR);
 511              		.loc 1 437 5 discriminator 1 view .LVU133
 512 0044 626A     		ldr	r2, [r4, #36]
 513 0046 5268     		ldr	r2, [r2, #4]
 514 0048 9360     		str	r3, [r2, #8]
 515              	.L38:
 516              		.loc 1 437 56 discriminator 1 view .LVU134
 438:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 439:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 440:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* Configuration-specific DMA setup.*/
 441:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   ds = spip->config->cr2 & SPI_CR2_DS;
 517              		.loc 1 441 3 discriminator 1 view .LVU135
 442:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (!ds || (ds <= (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0))) {
 518              		.loc 1 442 6 is_stmt 0 discriminator 1 view .LVU136
 519 004a F026     		movs	r6, #240
 520 004c E025     		movs	r5, #224
 521 004e 1E48     		ldr	r0, .L44+16
 522 0050 E26A     		ldr	r2, [r4, #44]
 441:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (!ds || (ds <= (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0))) {
 523              		.loc 1 441 12 discriminator 1 view .LVU137
 524 0052 6168     		ldr	r1, [r4, #4]
 525              	.LVL23:
 526              		.loc 1 442 3 is_stmt 1 discriminator 1 view .LVU138
 527 0054 A36A     		ldr	r3, [r4, #40]
 528              		.loc 1 442 6 is_stmt 0 discriminator 1 view .LVU139
 529 0056 3601     		lsls	r6, r6, #4
 530 0058 0340     		ands	r3, r0
 531 005a 1040     		ands	r0, r2
 532 005c 4A8A     		ldrh	r2, [r1, #18]
 533 005e ED00     		lsls	r5, r5, #3
 534 0060 3240     		ands	r2, r6
 535 0062 AA42     		cmp	r2, r5
 536 0064 1CD8     		bhi	.L40
 443:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* Frame width is 8 bits or smaller.*/
 444:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->rxdmamode = (spip->rxdmamode & ~STM32_DMA_CR_SIZE_MASK) |
 537              		.loc 1 444 5 is_stmt 1 view .LVU140
 538              		.loc 1 444 21 is_stmt 0 view .LVU141
 539 0066 A362     		str	r3, [r4, #40]
 445:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 446:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode = (spip->txdmamode & ~STM32_DMA_CR_SIZE_MASK) |
 540              		.loc 1 446 5 is_stmt 1 view .LVU142
 541              		.loc 1 446 21 is_stmt 0 view .LVU143
 542 0068 E062     		str	r0, [r4, #44]
 543              	.L41:
 447:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 448:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 449:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   else {
 450:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* Frame width is larger than 8 bits.*/
 451:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->rxdmamode = (spip->rxdmamode & ~STM32_DMA_CR_SIZE_MASK) |
 452:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 453:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode = (spip->txdmamode & ~STM32_DMA_CR_SIZE_MASK) |
 454:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 455:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 456:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 457:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (spip->config->circular) {
 544              		.loc 1 457 3 is_stmt 1 view .LVU144
 545              		.loc 1 457 6 is_stmt 0 view .LVU145
 546 006a 0D78     		ldrb	r5, [r1]
 547 006c A26A     		ldr	r2, [r4, #40]
 548 006e E06A     		ldr	r0, [r4, #44]
 549 0070 2423     		movs	r3, #36
 550 0072 002D     		cmp	r5, #0
 551 0074 1BD0     		beq	.L42
 458:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->rxdmamode |= (STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 552              		.loc 1 458 5 is_stmt 1 view .LVU146
 553              		.loc 1 458 21 is_stmt 0 view .LVU147
 554 0076 1A43     		orrs	r2, r3
 459:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode |= (STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 555              		.loc 1 459 21 view .LVU148
 556 0078 0343     		orrs	r3, r0
 458:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->rxdmamode |= (STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 557              		.loc 1 458 21 view .LVU149
 558 007a A262     		str	r2, [r4, #40]
 559              		.loc 1 459 5 is_stmt 1 view .LVU150
 560              		.loc 1 459 21 is_stmt 0 view .LVU151
 561 007c E362     		str	r3, [r4, #44]
 562              	.L43:
 460:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 461:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   else {
 462:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->rxdmamode &= ~(STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 463:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode &= ~(STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 464:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 465:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 466:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* SPI setup and enable.*/
 467:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1 &= ~SPI_CR1_SPE;
 563              		.loc 1 467 3 is_stmt 1 view .LVU152
 564              		.loc 1 467 18 is_stmt 0 view .LVU153
 565 007e 4022     		movs	r2, #64
 566              		.loc 1 467 7 view .LVU154
 567 0080 E369     		ldr	r3, [r4, #28]
 468:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 469:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR2  = spip->config->cr2 | SPI_CR2_FRXTH | SPI_CR2_SSOE |
 470:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN;
 471:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1 |= SPI_CR1_SPE;
 472:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 568              		.loc 1 472 1 view .LVU155
 569              		@ sp needed
 467:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 570              		.loc 1 467 18 view .LVU156
 571 0082 1868     		ldr	r0, [r3]
 572 0084 9043     		bics	r0, r2
 573 0086 1860     		str	r0, [r3]
 468:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 574              		.loc 1 468 3 is_stmt 1 view .LVU157
 468:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 575              		.loc 1 468 39 is_stmt 0 view .LVU158
 576 0088 0420     		movs	r0, #4
 577 008a 0C8A     		ldrh	r4, [r1, #16]
 578              	.LVL24:
 468:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 579              		.loc 1 468 39 view .LVU159
 580 008c 2043     		orrs	r0, r4
 468:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1  = spip->config->cr1 | SPI_CR1_MSTR;
 581              		.loc 1 468 19 view .LVU160
 582 008e 1860     		str	r0, [r3]
 469:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN;
 583              		.loc 1 469 3 is_stmt 1 view .LVU161
 470:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1 |= SPI_CR1_SPE;
 584              		.loc 1 470 37 is_stmt 0 view .LVU162
 585 0090 488A     		ldrh	r0, [r1, #18]
 586 0092 0E49     		ldr	r1, .L44+20
 587              	.LVL25:
 470:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   spip->spi->CR1 |= SPI_CR1_SPE;
 588              		.loc 1 470 37 view .LVU163
 589 0094 0143     		orrs	r1, r0
 469:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                     SPI_CR2_RXDMAEN | SPI_CR2_TXDMAEN;
 590              		.loc 1 469 19 view .LVU164
 591 0096 5960     		str	r1, [r3, #4]
 471:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 592              		.loc 1 471 3 is_stmt 1 view .LVU165
 471:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 593              		.loc 1 471 18 is_stmt 0 view .LVU166
 594 0098 1968     		ldr	r1, [r3]
 595 009a 0A43     		orrs	r2, r1
 596 009c 1A60     		str	r2, [r3]
 597              		.loc 1 472 1 view .LVU167
 598 009e 70BD     		pop	{r4, r5, r6, pc}
 599              	.LVL26:
 600              	.L40:
 451:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 601              		.loc 1 451 5 is_stmt 1 view .LVU168
 452:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode = (spip->txdmamode & ~STM32_DMA_CR_SIZE_MASK) |
 602              		.loc 1 452 48 is_stmt 0 view .LVU169
 603 00a0 A022     		movs	r2, #160
 604 00a2 D200     		lsls	r2, r2, #3
 605 00a4 1343     		orrs	r3, r2
 454:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 606              		.loc 1 454 48 view .LVU170
 607 00a6 0243     		orrs	r2, r0
 451:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 608              		.loc 1 451 21 view .LVU171
 609 00a8 A362     		str	r3, [r4, #40]
 453:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 610              		.loc 1 453 5 is_stmt 1 view .LVU172
 453:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 611              		.loc 1 453 21 is_stmt 0 view .LVU173
 612 00aa E262     		str	r2, [r4, #44]
 613 00ac DDE7     		b	.L41
 614              	.L42:
 462:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode &= ~(STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 615              		.loc 1 462 5 is_stmt 1 view .LVU174
 462:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode &= ~(STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 616              		.loc 1 462 21 is_stmt 0 view .LVU175
 617 00ae 9A43     		bics	r2, r3
 463:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 618              		.loc 1 463 21 view .LVU176
 619 00b0 9843     		bics	r0, r3
 462:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->txdmamode &= ~(STM32_DMA_CR_CIRC | STM32_DMA_CR_HTIE);
 620              		.loc 1 462 21 view .LVU177
 621 00b2 A262     		str	r2, [r4, #40]
 463:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 622              		.loc 1 463 5 is_stmt 1 view .LVU178
 463:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 623              		.loc 1 463 21 is_stmt 0 view .LVU179
 624 00b4 E062     		str	r0, [r4, #44]
 625 00b6 E2E7     		b	.L43
 626              	.L45:
 627              		.align	2
 628              	.L44:
 629 00b8 00000000 		.word	.LANCHOR0
 630 00bc 00000000 		.word	spi_lld_serve_rx_interrupt
 631 00c0 00000000 		.word	spi_lld_serve_tx_interrupt
 632 00c4 00100240 		.word	1073876992
 633 00c8 FFF0FFFF 		.word	-3841
 634 00cc 07100000 		.word	4103
 635              		.cfi_endproc
 636              	.LFE189:
 638              		.section	.text.spi_lld_stop,"ax",%progbits
 639              		.align	1
 640              		.global	spi_lld_stop
 641              		.syntax unified
 642              		.code	16
 643              		.thumb_func
 644              		.fpu softvfp
 646              	spi_lld_stop:
 647              	.LVL27:
 648              	.LFB190:
 473:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 474:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 475:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Deactivates the SPI peripheral.
 476:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 477:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 478:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 479:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 480:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 481:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_stop(SPIDriver *spip) {
 649              		.loc 1 481 36 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 482:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 483:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* If in ready state then disables the SPI clock.*/
 484:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if (spip->state == SPI_READY) {
 653              		.loc 1 484 3 view .LVU181
 654              		.loc 1 484 6 is_stmt 0 view .LVU182
 655 0000 0378     		ldrb	r3, [r0]
 481:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 656              		.loc 1 481 36 view .LVU183
 657 0002 70B5     		push	{r4, r5, r6, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
 481:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 663              		.loc 1 481 36 view .LVU184
 664 0004 0400     		movs	r4, r0
 665              		.loc 1 484 6 view .LVU185
 666 0006 022B     		cmp	r3, #2
 667 0008 18D1     		bne	.L46
 485:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 486:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     /* SPI disable.*/
 487:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR1 &= ~SPI_CR1_SPE;
 668              		.loc 1 487 5 is_stmt 1 view .LVU186
 669              		.loc 1 487 20 is_stmt 0 view .LVU187
 670 000a 4021     		movs	r1, #64
 488:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR1  = 0;
 671              		.loc 1 488 21 view .LVU188
 672 000c 0025     		movs	r5, #0
 487:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR1  = 0;
 673              		.loc 1 487 9 view .LVU189
 674 000e C369     		ldr	r3, [r0, #28]
 489:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR2  = 0;
 490:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamFreeI(spip->dmarx);
 675              		.loc 1 490 5 view .LVU190
 676 0010 006A     		ldr	r0, [r0, #32]
 677              	.LVL28:
 487:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR1  = 0;
 678              		.loc 1 487 20 view .LVU191
 679 0012 1A68     		ldr	r2, [r3]
 680 0014 8A43     		bics	r2, r1
 681 0016 1A60     		str	r2, [r3]
 488:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR2  = 0;
 682              		.loc 1 488 5 is_stmt 1 view .LVU192
 488:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR2  = 0;
 683              		.loc 1 488 21 is_stmt 0 view .LVU193
 684 0018 1D60     		str	r5, [r3]
 489:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR2  = 0;
 685              		.loc 1 489 5 is_stmt 1 view .LVU194
 489:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->CR2  = 0;
 686              		.loc 1 489 21 is_stmt 0 view .LVU195
 687 001a 5D60     		str	r5, [r3, #4]
 688              		.loc 1 490 5 is_stmt 1 view .LVU196
 689 001c FFF7FEFF 		bl	dmaStreamFreeI
 690              	.LVL29:
 491:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     dmaStreamFreeI(spip->dmatx);
 691              		.loc 1 491 5 view .LVU197
 692 0020 606A     		ldr	r0, [r4, #36]
 693 0022 FFF7FEFF 		bl	dmaStreamFreeI
 694              	.LVL30:
 492:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->dmarx = NULL;
 695              		.loc 1 492 5 view .LVU198
 493:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->dmatx = NULL;
 494:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 495:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI1
 496:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID1 == spip)
 497:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI1();
 498:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 499:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI2
 500:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID2 == spip)
 696              		.loc 1 500 8 is_stmt 0 view .LVU199
 697 0026 064B     		ldr	r3, .L50
 492:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->dmarx = NULL;
 698              		.loc 1 492 17 view .LVU200
 699 0028 2562     		str	r5, [r4, #32]
 493:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->dmatx = NULL;
 700              		.loc 1 493 5 is_stmt 1 view .LVU201
 493:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->dmatx = NULL;
 701              		.loc 1 493 17 is_stmt 0 view .LVU202
 702 002a 6562     		str	r5, [r4, #36]
 703              		.loc 1 500 5 is_stmt 1 view .LVU203
 704              		.loc 1 500 8 is_stmt 0 view .LVU204
 705 002c 9C42     		cmp	r4, r3
 706 002e 05D1     		bne	.L46
 501:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI2();
 707              		.loc 1 501 7 is_stmt 1 view .LVU205
 708 0030 044B     		ldr	r3, .L50+4
 709 0032 0549     		ldr	r1, .L50+8
 710 0034 DA69     		ldr	r2, [r3, #28]
 711 0036 0A40     		ands	r2, r1
 712 0038 DA61     		str	r2, [r3, #28]
 713              		.loc 1 501 7 view .LVU206
 714 003a DB69     		ldr	r3, [r3, #28]
 715              		.loc 1 501 23 view .LVU207
 716              	.L46:
 502:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 503:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI3
 504:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID3 == spip)
 505:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI3();
 506:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 507:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI4
 508:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID4 == spip)
 509:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI4();
 510:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 511:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI5
 512:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID5 == spip)
 513:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI5();
 514:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 515:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if STM32_SPI_USE_SPI6
 516:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     if (&SPID6 == spip)
 517:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       rccDisableSPI6();
 518:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 519:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 520:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 717              		.loc 1 520 1 is_stmt 0 view .LVU208
 718              		@ sp needed
 719              	.LVL31:
 720              		.loc 1 520 1 view .LVU209
 721 003c 70BD     		pop	{r4, r5, r6, pc}
 722              	.L51:
 723 003e C046     		.align	2
 724              	.L50:
 725 0040 00000000 		.word	.LANCHOR0
 726 0044 00100240 		.word	1073876992
 727 0048 FFBFFFFF 		.word	-16385
 728              		.cfi_endproc
 729              	.LFE190:
 731              		.section	.text.spi_lld_ignore,"ax",%progbits
 732              		.align	1
 733              		.global	spi_lld_ignore
 734              		.syntax unified
 735              		.code	16
 736              		.thumb_func
 737              		.fpu softvfp
 739              	spi_lld_ignore:
 740              	.LVL32:
 741              	.LFB191:
 521:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 522:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if (SPI_SELECT_MODE == SPI_SELECT_MODE_LLD) || defined(__DOXYGEN__)
 523:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 524:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Asserts the slave select signal and prepares for transfers.
 525:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 526:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 527:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 528:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 529:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 530:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_select(SPIDriver *spip) {
 531:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 532:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* No implementation on STM32.*/
 533:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 534:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 535:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 536:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Deasserts the slave select signal.
 537:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details The previously selected peripheral is unselected.
 538:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 539:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 540:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 541:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 542:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 543:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_unselect(SPIDriver *spip) {
 544:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 545:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* No implementation on STM32.*/
 546:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 547:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif
 548:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 549:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 550:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Ignores data on the SPI bus.
 551:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details This asynchronous function starts the transmission of a series of
 552:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          idle words on the SPI bus and ignores the received data.
 553:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @post    At the end of the operation the configured callback is invoked.
 554:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 555:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 556:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] n         number of words to be ignored
 557:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 558:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 559:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 560:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_ignore(SPIDriver *spip, size_t n) {
 742              		.loc 1 560 48 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 561:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 562:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   osalDbgAssert(n < 65536, "unsupported DMA transfer size");
 746              		.loc 1 562 3 view .LVU211
 747              		.loc 1 562 3 view .LVU212
 563:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 564:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmarx, &dummyrx);
 748              		.loc 1 564 3 view .LVU213
 749 0000 036A     		ldr	r3, [r0, #32]
 560:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 750              		.loc 1 560 48 is_stmt 0 view .LVU214
 751 0002 10B5     		push	{r4, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 4, -8
 754              		.cfi_offset 14, -4
 755              		.loc 1 564 3 view .LVU215
 756 0004 5A68     		ldr	r2, [r3, #4]
 757 0006 0A4B     		ldr	r3, .L53
 565:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 566:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode);
 567:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 568:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmatx, &dummytx);
 758              		.loc 1 568 3 view .LVU216
 759 0008 0A4C     		ldr	r4, .L53+4
 564:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 760              		.loc 1 564 3 view .LVU217
 761 000a D360     		str	r3, [r2, #12]
 564:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 762              		.loc 1 564 45 is_stmt 1 view .LVU218
 565:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 763              		.loc 1 565 3 view .LVU219
 566:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 764              		.loc 1 566 3 is_stmt 0 view .LVU220
 765 000c 836A     		ldr	r3, [r0, #40]
 565:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 766              		.loc 1 565 3 view .LVU221
 767 000e 5160     		str	r1, [r2, #4]
 565:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 768              		.loc 1 565 46 is_stmt 1 view .LVU222
 566:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 769              		.loc 1 566 3 view .LVU223
 770 0010 1360     		str	r3, [r2]
 566:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 771              		.loc 1 566 49 view .LVU224
 772              		.loc 1 568 3 view .LVU225
 773 0012 436A     		ldr	r3, [r0, #36]
 569:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 570:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode);
 571:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 572:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmarx);
 573:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 574:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 774              		.loc 1 574 1 is_stmt 0 view .LVU226
 775              		@ sp needed
 568:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 776              		.loc 1 568 3 view .LVU227
 777 0014 5B68     		ldr	r3, [r3, #4]
 778 0016 DC60     		str	r4, [r3, #12]
 568:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 779              		.loc 1 568 45 is_stmt 1 view .LVU228
 569:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 780              		.loc 1 569 3 view .LVU229
 781 0018 5960     		str	r1, [r3, #4]
 569:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 782              		.loc 1 569 46 view .LVU230
 570:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 783              		.loc 1 570 3 view .LVU231
 784 001a C16A     		ldr	r1, [r0, #44]
 785              	.LVL33:
 570:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 786              		.loc 1 570 3 is_stmt 0 view .LVU232
 787 001c 1960     		str	r1, [r3]
 788              	.LVL34:
 570:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 789              		.loc 1 570 49 is_stmt 1 view .LVU233
 572:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 790              		.loc 1 572 3 view .LVU234
 791 001e 0121     		movs	r1, #1
 792 0020 1068     		ldr	r0, [r2]
 793              	.LVL35:
 572:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 794              		.loc 1 572 3 is_stmt 0 view .LVU235
 795 0022 0843     		orrs	r0, r1
 796 0024 1060     		str	r0, [r2]
 572:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 797              		.loc 1 572 31 is_stmt 1 view .LVU236
 573:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 798              		.loc 1 573 3 view .LVU237
 799 0026 1A68     		ldr	r2, [r3]
 800 0028 1143     		orrs	r1, r2
 801 002a 1960     		str	r1, [r3]
 573:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 802              		.loc 1 573 31 view .LVU238
 803              		.loc 1 574 1 is_stmt 0 view .LVU239
 804 002c 10BD     		pop	{r4, pc}
 805              	.L54:
 806 002e C046     		.align	2
 807              	.L53:
 808 0030 00000000 		.word	.LANCHOR1
 809 0034 00000000 		.word	.LANCHOR2
 810              		.cfi_endproc
 811              	.LFE191:
 813              		.section	.text.spi_lld_exchange,"ax",%progbits
 814              		.align	1
 815              		.global	spi_lld_exchange
 816              		.syntax unified
 817              		.code	16
 818              		.thumb_func
 819              		.fpu softvfp
 821              	spi_lld_exchange:
 822              	.LVL36:
 823              	.LFB192:
 575:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 576:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 577:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Exchanges data on the SPI bus.
 578:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details This asynchronous function starts a simultaneous transmit/receive
 579:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          operation.
 580:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @post    At the end of the operation the configured callback is invoked.
 581:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @note    The buffers are organized as uint8_t arrays for data sizes below or
 582:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          equal to 8 bits else it is organized as uint16_t arrays.
 583:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 584:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 585:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] n         number of words to be exchanged
 586:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] txbuf     the pointer to the transmit buffer
 587:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[out] rxbuf    the pointer to the receive buffer
 588:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 589:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 590:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 591:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_exchange(SPIDriver *spip, size_t n,
 592:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                       const void *txbuf, void *rxbuf) {
 824              		.loc 1 592 55 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 593:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 594:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   osalDbgAssert(n < 65536, "unsupported DMA transfer size");
 828              		.loc 1 594 3 view .LVU241
 829              		.loc 1 594 3 view .LVU242
 595:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 596:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmarx, rxbuf);
 830              		.loc 1 596 3 view .LVU243
 592:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 831              		.loc 1 592 55 is_stmt 0 view .LVU244
 832 0000 30B5     		push	{r4, r5, lr}
 833              		.cfi_def_cfa_offset 12
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 5, -8
 836              		.cfi_offset 14, -4
 597:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 598:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode | STM32_DMA_CR_MINC);
 837              		.loc 1 598 3 view .LVU245
 838 0002 8025     		movs	r5, #128
 596:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 839              		.loc 1 596 3 view .LVU246
 840 0004 046A     		ldr	r4, [r0, #32]
 599:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 600:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmatx, txbuf);
 601:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 602:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 603:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 604:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmarx);
 605:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 606:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 841              		.loc 1 606 1 view .LVU247
 842              		@ sp needed
 596:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 843              		.loc 1 596 3 view .LVU248
 844 0006 6468     		ldr	r4, [r4, #4]
 845 0008 E360     		str	r3, [r4, #12]
 596:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 846              		.loc 1 596 42 is_stmt 1 view .LVU249
 597:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode | STM32_DMA_CR_MINC);
 847              		.loc 1 597 3 view .LVU250
 598:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 848              		.loc 1 598 3 is_stmt 0 view .LVU251
 849 000a 836A     		ldr	r3, [r0, #40]
 850              	.LVL37:
 597:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode | STM32_DMA_CR_MINC);
 851              		.loc 1 597 3 view .LVU252
 852 000c 6160     		str	r1, [r4, #4]
 853              	.LVL38:
 597:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode | STM32_DMA_CR_MINC);
 854              		.loc 1 597 46 is_stmt 1 view .LVU253
 598:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 855              		.loc 1 598 3 view .LVU254
 856 000e 2B43     		orrs	r3, r5
 857 0010 2360     		str	r3, [r4]
 598:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 858              		.loc 1 598 69 view .LVU255
 600:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 859              		.loc 1 600 3 view .LVU256
 860 0012 436A     		ldr	r3, [r0, #36]
 861 0014 5B68     		ldr	r3, [r3, #4]
 862 0016 DA60     		str	r2, [r3, #12]
 600:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 863              		.loc 1 600 42 view .LVU257
 601:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 864              		.loc 1 601 3 view .LVU258
 602:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 865              		.loc 1 602 3 is_stmt 0 view .LVU259
 866 0018 C26A     		ldr	r2, [r0, #44]
 867              	.LVL39:
 601:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 868              		.loc 1 601 3 view .LVU260
 869 001a 5960     		str	r1, [r3, #4]
 870              	.LVL40:
 601:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 871              		.loc 1 601 46 is_stmt 1 view .LVU261
 602:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 872              		.loc 1 602 3 view .LVU262
 873 001c 1543     		orrs	r5, r2
 604:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 874              		.loc 1 604 3 is_stmt 0 view .LVU263
 875 001e 0122     		movs	r2, #1
 602:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 876              		.loc 1 602 3 view .LVU264
 877 0020 1D60     		str	r5, [r3]
 602:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 878              		.loc 1 602 69 is_stmt 1 view .LVU265
 604:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 879              		.loc 1 604 3 view .LVU266
 880 0022 2168     		ldr	r1, [r4]
 881              	.LVL41:
 604:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 882              		.loc 1 604 3 is_stmt 0 view .LVU267
 883 0024 1143     		orrs	r1, r2
 884 0026 2160     		str	r1, [r4]
 604:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 885              		.loc 1 604 31 is_stmt 1 view .LVU268
 605:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 886              		.loc 1 605 3 view .LVU269
 887 0028 1968     		ldr	r1, [r3]
 888 002a 0A43     		orrs	r2, r1
 889 002c 1A60     		str	r2, [r3]
 605:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 890              		.loc 1 605 31 view .LVU270
 891              		.loc 1 606 1 is_stmt 0 view .LVU271
 892 002e 30BD     		pop	{r4, r5, pc}
 893              		.cfi_endproc
 894              	.LFE192:
 896              		.section	.text.spi_lld_send,"ax",%progbits
 897              		.align	1
 898              		.global	spi_lld_send
 899              		.syntax unified
 900              		.code	16
 901              		.thumb_func
 902              		.fpu softvfp
 904              	spi_lld_send:
 905              	.LVL42:
 906              	.LFB193:
 607:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 608:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 609:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Sends data over the SPI bus.
 610:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details This asynchronous function starts a transmit operation.
 611:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @post    At the end of the operation the configured callback is invoked.
 612:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @note    The buffers are organized as uint8_t arrays for data sizes below or
 613:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          equal to 8 bits else it is organized as uint16_t arrays.
 614:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 615:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 616:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] n         number of words to send
 617:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] txbuf     the pointer to the transmit buffer
 618:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 619:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 620:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 621:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_send(SPIDriver *spip, size_t n, const void *txbuf) {
 907              		.loc 1 621 65 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 622:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 623:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   osalDbgAssert(n < 65536, "unsupported DMA transfer size");
 911              		.loc 1 623 3 view .LVU273
 912              		.loc 1 623 3 view .LVU274
 624:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 625:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmarx, &dummyrx);
 913              		.loc 1 625 3 view .LVU275
 914 0000 036A     		ldr	r3, [r0, #32]
 621:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 915              		.loc 1 621 65 is_stmt 0 view .LVU276
 916 0002 10B5     		push	{r4, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 4, -8
 919              		.cfi_offset 14, -4
 920              		.loc 1 625 3 view .LVU277
 921 0004 5C68     		ldr	r4, [r3, #4]
 922 0006 0A4B     		ldr	r3, .L57
 626:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 627:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode);
 628:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 629:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmatx, txbuf);
 630:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 631:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 632:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 633:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmarx);
 634:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 635:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 923              		.loc 1 635 1 view .LVU278
 924              		@ sp needed
 625:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 925              		.loc 1 625 3 view .LVU279
 926 0008 E360     		str	r3, [r4, #12]
 625:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 927              		.loc 1 625 45 is_stmt 1 view .LVU280
 626:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 928              		.loc 1 626 3 view .LVU281
 627:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 929              		.loc 1 627 3 is_stmt 0 view .LVU282
 930 000a 836A     		ldr	r3, [r0, #40]
 626:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 931              		.loc 1 626 3 view .LVU283
 932 000c 6160     		str	r1, [r4, #4]
 626:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 933              		.loc 1 626 46 is_stmt 1 view .LVU284
 627:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 934              		.loc 1 627 3 view .LVU285
 935 000e 2360     		str	r3, [r4]
 627:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 936              		.loc 1 627 49 view .LVU286
 629:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 937              		.loc 1 629 3 view .LVU287
 938 0010 436A     		ldr	r3, [r0, #36]
 939 0012 5B68     		ldr	r3, [r3, #4]
 940 0014 DA60     		str	r2, [r3, #12]
 629:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 941              		.loc 1 629 42 view .LVU288
 630:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 942              		.loc 1 630 3 view .LVU289
 631:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 943              		.loc 1 631 3 is_stmt 0 view .LVU290
 944 0016 8022     		movs	r2, #128
 945              	.LVL43:
 630:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 946              		.loc 1 630 3 view .LVU291
 947 0018 5960     		str	r1, [r3, #4]
 948              	.LVL44:
 630:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode | STM32_DMA_CR_MINC);
 949              		.loc 1 630 46 is_stmt 1 view .LVU292
 631:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 950              		.loc 1 631 3 view .LVU293
 951 001a C16A     		ldr	r1, [r0, #44]
 952              	.LVL45:
 631:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 953              		.loc 1 631 3 is_stmt 0 view .LVU294
 954 001c 0A43     		orrs	r2, r1
 955 001e 1A60     		str	r2, [r3]
 956              	.LVL46:
 631:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 957              		.loc 1 631 69 is_stmt 1 view .LVU295
 633:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 958              		.loc 1 633 3 view .LVU296
 959 0020 0122     		movs	r2, #1
 960 0022 2168     		ldr	r1, [r4]
 961 0024 1143     		orrs	r1, r2
 962 0026 2160     		str	r1, [r4]
 633:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 963              		.loc 1 633 31 view .LVU297
 634:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 964              		.loc 1 634 3 view .LVU298
 965 0028 1968     		ldr	r1, [r3]
 966 002a 0A43     		orrs	r2, r1
 967 002c 1A60     		str	r2, [r3]
 634:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 968              		.loc 1 634 31 view .LVU299
 969              		.loc 1 635 1 is_stmt 0 view .LVU300
 970 002e 10BD     		pop	{r4, pc}
 971              	.L58:
 972              		.align	2
 973              	.L57:
 974 0030 00000000 		.word	.LANCHOR1
 975              		.cfi_endproc
 976              	.LFE193:
 978              		.section	.text.spi_lld_receive,"ax",%progbits
 979              		.align	1
 980              		.global	spi_lld_receive
 981              		.syntax unified
 982              		.code	16
 983              		.thumb_func
 984              		.fpu softvfp
 986              	spi_lld_receive:
 987              	.LVL47:
 988              	.LFB194:
 636:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 637:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 638:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Receives data from the SPI bus.
 639:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details This asynchronous function starts a receive operation.
 640:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @post    At the end of the operation the configured callback is invoked.
 641:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @note    The buffers are organized as uint8_t arrays for data sizes below or
 642:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          equal to 8 bits else it is organized as uint16_t arrays.
 643:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 644:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 645:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] n         number of words to receive
 646:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[out] rxbuf    the pointer to the receive buffer
 647:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 648:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 649:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 650:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_receive(SPIDriver *spip, size_t n, void *rxbuf) {
 989              		.loc 1 650 62 is_stmt 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 651:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 652:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   osalDbgAssert(n < 65536, "unsupported DMA transfer size");
 993              		.loc 1 652 3 view .LVU302
 994              		.loc 1 652 3 view .LVU303
 653:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 654:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmarx, rxbuf);
 995              		.loc 1 654 3 view .LVU304
 996 0000 036A     		ldr	r3, [r0, #32]
 650:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 997              		.loc 1 650 62 is_stmt 0 view .LVU305
 998 0002 10B5     		push	{r4, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 4, -8
 1001              		.cfi_offset 14, -4
 1002              		.loc 1 654 3 view .LVU306
 1003 0004 5C68     		ldr	r4, [r3, #4]
 655:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 656:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmarx, spip->rxdmamode | STM32_DMA_CR_MINC);
 1004              		.loc 1 656 3 view .LVU307
 1005 0006 8023     		movs	r3, #128
 654:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 1006              		.loc 1 654 3 view .LVU308
 1007 0008 E260     		str	r2, [r4, #12]
 654:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 1008              		.loc 1 654 42 is_stmt 1 view .LVU309
 655:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 1009              		.loc 1 655 3 view .LVU310
 1010              		.loc 1 656 3 is_stmt 0 view .LVU311
 1011 000a 826A     		ldr	r2, [r0, #40]
 1012              	.LVL48:
 655:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 1013              		.loc 1 655 3 view .LVU312
 1014 000c 6160     		str	r1, [r4, #4]
 1015              	.LVL49:
 655:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmarx, n);
 1016              		.loc 1 655 46 is_stmt 1 view .LVU313
 1017              		.loc 1 656 3 view .LVU314
 1018 000e 1343     		orrs	r3, r2
 1019 0010 2360     		str	r3, [r4]
 1020              		.loc 1 656 69 view .LVU315
 657:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 658:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMemory0(spip->dmatx, &dummytx);
 1021              		.loc 1 658 3 view .LVU316
 1022 0012 436A     		ldr	r3, [r0, #36]
 1023 0014 064A     		ldr	r2, .L60
 1024 0016 5B68     		ldr	r3, [r3, #4]
 659:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 660:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetMode(spip->dmatx, spip->txdmamode);
 661:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 662:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmarx);
 663:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 664:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 1025              		.loc 1 664 1 is_stmt 0 view .LVU317
 1026              		@ sp needed
 658:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 1027              		.loc 1 658 3 view .LVU318
 1028 0018 DA60     		str	r2, [r3, #12]
 658:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 1029              		.loc 1 658 45 is_stmt 1 view .LVU319
 659:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 1030              		.loc 1 659 3 view .LVU320
 660:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 1031              		.loc 1 660 3 is_stmt 0 view .LVU321
 1032 001a C26A     		ldr	r2, [r0, #44]
 659:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 1033              		.loc 1 659 3 view .LVU322
 1034 001c 5960     		str	r1, [r3, #4]
 659:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamSetTransactionSize(spip->dmatx, n);
 1035              		.loc 1 659 46 is_stmt 1 view .LVU323
 660:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 1036              		.loc 1 660 3 view .LVU324
 1037 001e 1A60     		str	r2, [r3]
 660:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 1038              		.loc 1 660 49 view .LVU325
 662:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 1039              		.loc 1 662 3 view .LVU326
 1040 0020 0122     		movs	r2, #1
 1041 0022 2168     		ldr	r1, [r4]
 1042              	.LVL50:
 662:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 1043              		.loc 1 662 3 is_stmt 0 view .LVU327
 1044 0024 1143     		orrs	r1, r2
 1045 0026 2160     		str	r1, [r4]
 662:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamEnable(spip->dmatx);
 1046              		.loc 1 662 31 is_stmt 1 view .LVU328
 663:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 1047              		.loc 1 663 3 view .LVU329
 1048 0028 1968     		ldr	r1, [r3]
 1049 002a 0A43     		orrs	r2, r1
 1050 002c 1A60     		str	r2, [r3]
 663:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 1051              		.loc 1 663 31 view .LVU330
 1052              		.loc 1 664 1 is_stmt 0 view .LVU331
 1053 002e 10BD     		pop	{r4, pc}
 1054              	.L61:
 1055              		.align	2
 1056              	.L60:
 1057 0030 00000000 		.word	.LANCHOR2
 1058              		.cfi_endproc
 1059              	.LFE194:
 1061              		.section	.text.spi_lld_abort,"ax",%progbits
 1062              		.align	1
 1063              		.global	spi_lld_abort
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	spi_lld_abort:
 1070              	.LVL51:
 1071              	.LFB195:
 665:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 666:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #if (SPI_SUPPORTS_CIRCULAR == TRUE) || defined(__DOXYGEN__)
 667:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 668:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Aborts the ongoing SPI operation, if any.
 669:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 670:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 671:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 672:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @notapi
 673:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 674:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** void spi_lld_abort(SPIDriver *spip) {
 1072              		.loc 1 674 37 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 675:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 676:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /* Stopping DMAs.*/
 677:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmatx);
 1076              		.loc 1 677 3 view .LVU333
 674:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 1077              		.loc 1 674 37 is_stmt 0 view .LVU334
 1078 0000 30B5     		push	{r4, r5, lr}
 1079              		.cfi_def_cfa_offset 12
 1080              		.cfi_offset 4, -12
 1081              		.cfi_offset 5, -8
 1082              		.cfi_offset 14, -4
 1083              		.loc 1 677 3 view .LVU335
 1084 0002 0F24     		movs	r4, #15
 1085 0004 436A     		ldr	r3, [r0, #36]
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 679:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 1086              		.loc 1 679 1 view .LVU336
 1087              		@ sp needed
 677:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1088              		.loc 1 677 3 view .LVU337
 1089 0006 5968     		ldr	r1, [r3, #4]
 1090 0008 0A68     		ldr	r2, [r1]
 1091 000a A243     		bics	r2, r4
 1092 000c 0A60     		str	r2, [r1]
 677:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1093              		.loc 1 677 3 is_stmt 1 view .LVU338
 1094 000e 597B     		ldrb	r1, [r3, #13]
 1095 0010 1A68     		ldr	r2, [r3]
 1096 0012 0E23     		movs	r3, #14
 1097 0014 1D00     		movs	r5, r3
 1098 0016 8D40     		lsls	r5, r5, r1
 1099 0018 5560     		str	r5, [r2, #4]
 677:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1100              		.loc 1 677 3 view .LVU339
 677:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1101              		.loc 1 677 32 view .LVU340
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1102              		.loc 1 678 3 view .LVU341
 1103 001a 026A     		ldr	r2, [r0, #32]
 1104 001c 5068     		ldr	r0, [r2, #4]
 1105              	.LVL52:
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1106              		.loc 1 678 3 is_stmt 0 view .LVU342
 1107 001e 0168     		ldr	r1, [r0]
 1108 0020 A143     		bics	r1, r4
 1109 0022 0160     		str	r1, [r0]
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1110              		.loc 1 678 3 is_stmt 1 view .LVU343
 1111 0024 1168     		ldr	r1, [r2]
 1112 0026 527B     		ldrb	r2, [r2, #13]
 1113 0028 9340     		lsls	r3, r3, r2
 1114 002a 4B60     		str	r3, [r1, #4]
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1115              		.loc 1 678 3 view .LVU344
 678:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   dmaStreamDisable(spip->dmarx);
 1116              		.loc 1 678 32 view .LVU345
 1117              		.loc 1 679 1 is_stmt 0 view .LVU346
 1118 002c 30BD     		pop	{r4, r5, pc}
 1119              		.cfi_endproc
 1120              	.LFE195:
 1122              		.section	.text.spi_lld_polled_exchange,"ax",%progbits
 1123              		.align	1
 1124              		.global	spi_lld_polled_exchange
 1125              		.syntax unified
 1126              		.code	16
 1127              		.thumb_func
 1128              		.fpu softvfp
 1130              	spi_lld_polled_exchange:
 1131              	.LVL53:
 1132              	.LFB196:
 680:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** #endif /* SPI_SUPPORTS_CIRCULAR == TRUE */
 681:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 682:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** /**
 683:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @brief   Exchanges one frame using a polled wait.
 684:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @details This synchronous function exchanges one frame using a polled
 685:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          synchronization method. This function is useful when exchanging
 686:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          small amount of data on high speed channels, usually in this
 687:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          situation is much more efficient just wait for completion using
 688:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *          polling than suspending the thread waiting for an interrupt.
 689:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  *
 690:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] spip      pointer to the @p SPIDriver object
 691:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @param[in] frame     the data frame to send over the SPI bus
 692:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  * @return              The received data frame from the SPI bus.
 693:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****  */
 694:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** uint16_t spi_lld_polled_exchange(SPIDriver *spip, uint16_t frame) {
 1133              		.loc 1 694 67 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 695:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 696:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   /*
 697:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****    * Data register must be accessed with the appropriate data size.
 698:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****    * Byte size access (uint8_t *) for transactions that are <= 8-bit.
 699:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****    * Halfword size access (uint16_t) for transactions that are <= 8-bit.
 700:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****    */
 701:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   if ((spip->config->cr2 & SPI_CR2_DS) <= (SPI_CR2_DS_2 |
 1137              		.loc 1 701 3 view .LVU348
 694:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** 
 1138              		.loc 1 694 67 is_stmt 0 view .LVU349
 1139 0000 30B5     		push	{r4, r5, lr}
 1140              		.cfi_def_cfa_offset 12
 1141              		.cfi_offset 4, -12
 1142              		.cfi_offset 5, -8
 1143              		.cfi_offset 14, -4
 1144              		.loc 1 701 6 view .LVU350
 1145 0002 F025     		movs	r5, #240
 1146 0004 E024     		movs	r4, #224
 1147 0006 4268     		ldr	r2, [r0, #4]
 1148 0008 2D01     		lsls	r5, r5, #4
 1149 000a 528A     		ldrh	r2, [r2, #18]
 1150 000c C369     		ldr	r3, [r0, #28]
 1151 000e E400     		lsls	r4, r4, #3
 1152 0010 2A40     		ands	r2, r5
 1153 0012 A242     		cmp	r2, r4
 1154 0014 08D8     		bhi	.L64
 1155              	.LBB98:
 702:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                            SPI_CR2_DS_1 |
 703:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****                                            SPI_CR2_DS_0)) {
 704:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     volatile uint8_t *spidr = (volatile uint8_t *)&spip->spi->DR;
 1156              		.loc 1 704 5 is_stmt 1 view .LVU351
 1157              	.LVL54:
 705:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     *spidr = (uint8_t)frame;
 1158              		.loc 1 705 5 view .LVU352
 706:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 1159              		.loc 1 706 27 is_stmt 0 view .LVU353
 1160 0016 0122     		movs	r2, #1
 705:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     *spidr = (uint8_t)frame;
 1161              		.loc 1 705 14 view .LVU354
 1162 0018 C9B2     		uxtb	r1, r1
 1163              	.LVL55:
 705:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     *spidr = (uint8_t)frame;
 1164              		.loc 1 705 12 view .LVU355
 1165 001a 1973     		strb	r1, [r3, #12]
 1166              		.loc 1 706 5 is_stmt 1 view .LVU356
 1167              		.loc 1 706 17 is_stmt 0 view .LVU357
 1168 001c C069     		ldr	r0, [r0, #28]
 1169              	.LVL56:
 1170              	.L65:
 707:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 1171              		.loc 1 707 7 is_stmt 1 discriminator 1 view .LVU358
 706:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 1172              		.loc 1 706 22 is_stmt 0 discriminator 1 view .LVU359
 1173 001e 8168     		ldr	r1, [r0, #8]
 706:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 1174              		.loc 1 706 11 discriminator 1 view .LVU360
 1175 0020 1142     		tst	r1, r2
 1176 0022 FCD0     		beq	.L65
 708:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     return (uint16_t)*spidr;
 1177              		.loc 1 708 5 is_stmt 1 view .LVU361
 1178              		.loc 1 708 22 is_stmt 0 view .LVU362
 1179 0024 187B     		ldrb	r0, [r3, #12]
 1180              	.LVL57:
 1181              	.L66:
 1182              		.loc 1 708 22 view .LVU363
 1183              	.LBE98:
 709:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 710:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   else {
 711:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     spip->spi->DR = frame;
 712:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 713:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 714:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     return spip->spi->DR;
 715:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 716:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c **** }
 1184              		.loc 1 716 1 view .LVU364
 1185              		@ sp needed
 1186 0026 30BD     		pop	{r4, r5, pc}
 1187              	.LVL58:
 1188              	.L64:
 711:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 1189              		.loc 1 711 5 is_stmt 1 view .LVU365
 712:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 1190              		.loc 1 712 27 is_stmt 0 view .LVU366
 1191 0028 0122     		movs	r2, #1
 711:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     while ((spip->spi->SR & SPI_SR_RXNE) == 0)
 1192              		.loc 1 711 19 view .LVU367
 1193 002a D960     		str	r1, [r3, #12]
 712:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 1194              		.loc 1 712 5 is_stmt 1 view .LVU368
 1195              	.LVL59:
 1196              	.L67:
 713:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****     return spip->spi->DR;
 1197              		.loc 1 713 7 discriminator 1 view .LVU369
 712:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 1198              		.loc 1 712 22 is_stmt 0 discriminator 1 view .LVU370
 1199 002c 9968     		ldr	r1, [r3, #8]
 712:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****       ;
 1200              		.loc 1 712 11 discriminator 1 view .LVU371
 1201 002e 1142     		tst	r1, r2
 1202 0030 FCD0     		beq	.L67
 714:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 1203              		.loc 1 714 5 is_stmt 1 view .LVU372
 714:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 1204              		.loc 1 714 21 is_stmt 0 view .LVU373
 1205 0032 D868     		ldr	r0, [r3, #12]
 1206              	.LVL60:
 714:lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.c ****   }
 1207              		.loc 1 714 21 view .LVU374
 1208 0034 80B2     		uxth	r0, r0
 1209 0036 F6E7     		b	.L66
 1210              		.cfi_endproc
 1211              	.LFE196:
 1213              		.global	SPID2
 1214              		.section	.bss.SPID2,"aw",%nobits
 1215              		.align	2
 1216              		.set	.LANCHOR0,. + 0
 1219              	SPID2:
 1220 0000 00000000 		.space	48
 1220      00000000 
 1220      00000000 
 1220      00000000 
 1220      00000000 
 1221              		.section	.bss.dummyrx,"aw",%nobits
 1222              		.align	1
 1223              		.set	.LANCHOR1,. + 0
 1226              	dummyrx:
 1227 0000 0000     		.space	2
 1228              		.section	.rodata.dummytx,"a"
 1229              		.align	1
 1230              		.set	.LANCHOR2,. + 0
 1233              	dummytx:
 1234 0000 FFFF     		.short	-1
 1235              		.section	.rodata.spi_lld_serve_tx_interrupt.str1.1,"aMS",%progbits,1
 1236              	.LC0:
 1237 0000 444D4120 		.ascii	"DMA failure\000"
 1237      6661696C 
 1237      75726500 
 1238              		.text
 1239              	.Letext0:
 1240              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 1241              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1242              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1243              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 1244              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1245              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 1246              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 1247              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 1248              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1249              		.file 15 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 1250              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1251              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1252              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 1253              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 1254              		.file 20 "./lib/chibios/os/rt/include/chregistry.h"
 1255              		.file 21 "./lib/chibios/os/oslib/include/chmemcore.h"
 1256              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1257              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 1258              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1259              		.file 25 "./lib/chibios/os/hal/include/hal_i2c.h"
 1260              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1261              		.file 27 "./lib/chibios/os/hal/include/hal_pwm.h"
 1262              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1263              		.file 29 "./lib/chibios/os/hal/include/hal_spi.h"
 1264              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 1265              		.file 31 "./lib/chibios/os/hal/include/hal_usb.h"
 1266              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1267              		.file 33 "./lib/chibios/os/rt/include/ch.h"
 1268              		.file 34 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_spi_lld.c
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:16     .text.spi_lld_serve_tx_interrupt:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:23     .text.spi_lld_serve_tx_interrupt:00000000 spi_lld_serve_tx_interrupt
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:64     .text.spi_lld_serve_tx_interrupt:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:69     .text.spi_lld_serve_rx_interrupt:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:75     .text.spi_lld_serve_rx_interrupt:00000000 spi_lld_serve_rx_interrupt
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:366    .text.spi_lld_serve_rx_interrupt:00000098 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:371    .text.spi_lld_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:378    .text.spi_lld_init:00000000 spi_lld_init
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:422    .text.spi_lld_init:00000020 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:430    .text.spi_lld_start:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:437    .text.spi_lld_start:00000000 spi_lld_start
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:629    .text.spi_lld_start:000000b8 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:639    .text.spi_lld_stop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:646    .text.spi_lld_stop:00000000 spi_lld_stop
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:725    .text.spi_lld_stop:00000040 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:732    .text.spi_lld_ignore:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:739    .text.spi_lld_ignore:00000000 spi_lld_ignore
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:808    .text.spi_lld_ignore:00000030 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:814    .text.spi_lld_exchange:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:821    .text.spi_lld_exchange:00000000 spi_lld_exchange
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:897    .text.spi_lld_send:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:904    .text.spi_lld_send:00000000 spi_lld_send
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:974    .text.spi_lld_send:00000030 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:979    .text.spi_lld_receive:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:986    .text.spi_lld_receive:00000000 spi_lld_receive
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1057   .text.spi_lld_receive:00000030 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1062   .text.spi_lld_abort:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1069   .text.spi_lld_abort:00000000 spi_lld_abort
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1123   .text.spi_lld_polled_exchange:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1130   .text.spi_lld_polled_exchange:00000000 spi_lld_polled_exchange
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1219   .bss.SPID2:00000000 SPID2
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1215   .bss.SPID2:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1222   .bss.dummyrx:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1226   .bss.dummyrx:00000000 dummyrx
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1229   .rodata.dummytx:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\cc8HKQfZ.s:1233   .rodata.dummytx:00000000 dummytx

UNDEFINED SYMBOLS
chSysHalt
chThdResumeI
spiObjectInit
dmaStreamAllocI
dmaStreamFreeI
