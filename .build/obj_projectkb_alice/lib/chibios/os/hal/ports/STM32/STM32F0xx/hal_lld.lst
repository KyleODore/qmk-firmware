   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_lld.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Vector68,"ax",%progbits
  16              		.align	1
  17              		.global	Vector68
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Vector68:
  25              	.LFB187:
  26              		.file 1 "lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c"
   1:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @file    STM32F0xx/hal_lld.c
  19:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   STM32F0xx HAL subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @addtogroup HAL
  22:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  28:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver local definitions.                                                 */
  29:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  31:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #define STM32_PLLXTPRE_OFFSET   17          /**< PLLXTPRE offset             */
  32:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #define STM32_PLLXTPRE_MASK     0x01        /**< PLLXTPRE mask               */
  33:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  34:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  35:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver exported variables.                                                */
  36:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  37:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  38:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
  39:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   CMSIS system core clock variable.
  40:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    It is declared in system_stm32f0xx.h.
  41:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
  42:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** uint32_t SystemCoreClock = STM32_HCLK;
  43:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  44:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  45:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver local variables and types.                                         */
  46:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  47:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  48:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  49:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver local functions.                                                   */
  50:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  51:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  52:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
  53:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   Initializes the backup domain.
  54:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    WARNING! Changing clock source impossible without resetting
  55:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *          of the whole BKP domain.
  56:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
  57:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** static void hal_lld_backup_domain_init(void) {
  58:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  59:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Backup domain access enabled and left open.*/
  60:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   PWR->CR |= PWR_CR_DBP;
  61:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  62:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Reset BKP domain if different clock source selected.*/
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   if ((RCC->BDCR & STM32_RTCSEL_MASK) != STM32_RTCSEL) {
  64:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
  65:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR = RCC_BDCR_BDRST;
  66:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR = 0;
  67:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
  68:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  69:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* If enabled then the LSE is started.*/
  70:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_LSE_ENABLED
  71:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_LSE_BYPASS)
  72:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* LSE Bypass.*/
  73:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->BDCR |= STM32_LSEDRV | RCC_BDCR_LSEON | RCC_BDCR_LSEBYP;
  74:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #else
  75:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* No LSE Bypass.*/
  76:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->BDCR |= STM32_LSEDRV | RCC_BDCR_LSEON;
  77:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
  78:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->BDCR & RCC_BDCR_LSERDY) == 0)
  79:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                     /* Waits until LSE is stable.   */
  80:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
  81:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  82:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_RTCSEL != STM32_RTCSEL_NOCLOCK
  83:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* If the backup domain hasn't been initialized yet then proceed with
  84:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      initialization.*/
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
  86:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
  87:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR |= STM32_RTCSEL;
  88:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  89:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* RTC clock enabled.*/
  90:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR |= RCC_BDCR_RTCEN;
  91:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
  92:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* STM32_RTCSEL != STM32_RTCSEL_NOCLOCK */
  93:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
  94:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  95:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  96:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver interrupt handlers.                                                */
  97:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
  98:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  99:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA_REQUIRED) || defined(__DOXYGEN__)
 100:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA1_CH23_HANDLER) || defined(__DOXYGEN__)
 101:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 102:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   DMA1 streams 2 and 3 shared ISR.
 103:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    It is declared here because this device has a non-standard
 104:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *          DMA shared IRQ handler.
 105:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 106:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @isr
 107:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 108:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH23_HANDLER) {
  27              		.loc 1 108 43 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 109:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 110:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_PROLOGUE();
  31              		.loc 1 110 3 view .LVU1
  32              	.LVL0:
  33              		.loc 1 110 3 view .LVU2
  34              		.loc 1 110 3 view .LVU3
  35              		.loc 1 110 3 view .LVU4
  36              		.loc 1 110 3 view .LVU5
  37              		.loc 1 110 22 view .LVU6
 111:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 112:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 2.*/
 113:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM2);
  38              		.loc 1 113 3 view .LVU7
 108:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  39              		.loc 1 108 43 is_stmt 0 view .LVU8
  40 0000 10B5     		push	{r4, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 4, -8
  43              		.cfi_offset 14, -4
  44 0002 7446     		mov	r4, lr
  45              		.loc 1 113 3 view .LVU9
  46 0004 0448     		ldr	r0, .L2
  47 0006 FFF7FEFF 		bl	dmaServeInterrupt
  48              	.LVL1:
 114:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 115:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 3.*/
 116:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM3);
  49              		.loc 1 116 3 is_stmt 1 view .LVU10
  50 000a 0448     		ldr	r0, .L2+4
  51 000c FFF7FEFF 		bl	dmaServeInterrupt
  52              	.LVL2:
 117:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 118:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_EPILOGUE();
  53              		.loc 1 118 3 view .LVU11
  54              		.loc 1 118 3 view .LVU12
  55              		.loc 1 118 3 view .LVU13
  56              		.loc 1 118 3 view .LVU14
  57              		.loc 1 118 3 view .LVU15
  58 0010 2000     		movs	r0, r4
  59 0012 FFF7FEFF 		bl	_port_irq_epilogue
  60              	.LVL3:
 119:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
  61              		.loc 1 119 1 is_stmt 0 view .LVU16
  62              		@ sp needed
  63 0016 10BD     		pop	{r4, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0018 10000000 		.word	_stm32_dma_streams+16
  68 001c 20000000 		.word	_stm32_dma_streams+32
  69              		.cfi_endproc
  70              	.LFE187:
  72              		.section	.text.Vector6C,"ax",%progbits
  73              		.align	1
  74              		.global	Vector6C
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  78              		.fpu softvfp
  80              	Vector6C:
  81              	.LFB188:
 120:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* defined(STM32_DMA1_CH23_HANDLER) */
 121:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 122:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA1_CH4567_HANDLER) || defined(__DOXYGEN__)
 123:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 124:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   DMA1 streams 4, 5, 6 and 7 shared ISR.
 125:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 126:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @isr
 127:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 128:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH4567_HANDLER) {
  82              		.loc 1 128 45 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
 129:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 130:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_PROLOGUE();
  86              		.loc 1 130 3 view .LVU18
  87              	.LVL4:
  88              		.loc 1 130 3 view .LVU19
  89              		.loc 1 130 3 view .LVU20
  90              		.loc 1 130 3 view .LVU21
  91              		.loc 1 130 3 view .LVU22
  92              		.loc 1 130 22 view .LVU23
 131:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 132:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 4.*/
 133:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM4);
  93              		.loc 1 133 3 view .LVU24
 128:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
  94              		.loc 1 128 45 is_stmt 0 view .LVU25
  95 0000 10B5     		push	{r4, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  99 0002 7446     		mov	r4, lr
 100              		.loc 1 133 3 view .LVU26
 101 0004 0748     		ldr	r0, .L5
 102 0006 FFF7FEFF 		bl	dmaServeInterrupt
 103              	.LVL5:
 134:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 135:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 5.*/
 136:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM5);
 104              		.loc 1 136 3 is_stmt 1 view .LVU27
 105 000a 0748     		ldr	r0, .L5+4
 106 000c FFF7FEFF 		bl	dmaServeInterrupt
 107              	.LVL6:
 137:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 138:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_DMA1_NUM_CHANNELS > 5
 139:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 6.*/
 140:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM6);
 108              		.loc 1 140 3 view .LVU28
 109 0010 0648     		ldr	r0, .L5+8
 110 0012 FFF7FEFF 		bl	dmaServeInterrupt
 111              	.LVL7:
 141:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 142:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 143:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_DMA1_NUM_CHANNELS > 6
 144:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 7.*/
 145:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM7);
 112              		.loc 1 145 3 view .LVU29
 113 0016 0648     		ldr	r0, .L5+12
 114 0018 FFF7FEFF 		bl	dmaServeInterrupt
 115              	.LVL8:
 146:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 147:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 148:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_EPILOGUE();
 116              		.loc 1 148 3 view .LVU30
 117              		.loc 1 148 3 view .LVU31
 118              		.loc 1 148 3 view .LVU32
 119              		.loc 1 148 3 view .LVU33
 120              		.loc 1 148 3 view .LVU34
 121 001c 2000     		movs	r0, r4
 122 001e FFF7FEFF 		bl	_port_irq_epilogue
 123              	.LVL9:
 149:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
 124              		.loc 1 149 1 is_stmt 0 view .LVU35
 125              		@ sp needed
 126 0022 10BD     		pop	{r4, pc}
 127              	.L6:
 128              		.align	2
 129              	.L5:
 130 0024 30000000 		.word	_stm32_dma_streams+48
 131 0028 40000000 		.word	_stm32_dma_streams+64
 132 002c 50000000 		.word	_stm32_dma_streams+80
 133 0030 60000000 		.word	_stm32_dma_streams+96
 134              		.cfi_endproc
 135              	.LFE188:
 137              		.section	.text.hal_lld_init,"ax",%progbits
 138              		.align	1
 139              		.global	hal_lld_init
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 143              		.fpu softvfp
 145              	hal_lld_init:
 146              	.LFB189:
 150:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* defined(STM32_DMA1_CH4567_HANDLER) */
 151:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 152:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA12_CH23_CH12_HANDLER) || defined(__DOXYGEN__)
 153:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 154:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   DMA1 streams 2 and 3, DMA2 streams 1 and 1 shared ISR.
 155:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    It is declared here because this device has a non-standard
 156:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *          DMA shared IRQ handler.
 157:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 158:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @isr
 159:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 160:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** OSAL_IRQ_HANDLER(STM32_DMA12_CH23_CH12_HANDLER) {
 161:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 162:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_PROLOGUE();
 163:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 164:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 2 of DMA1.*/
 165:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM2);
 166:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 167:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 3 of DMA1.*/
 168:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM3);
 169:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 170:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 1 of DMA2.*/
 171:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA2_STREAM1);
 172:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 173:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 2 of DMA2.*/
 174:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA2_STREAM2);
 175:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 176:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_EPILOGUE();
 177:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
 178:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* defined(STM32_DMA12_CH23_CH12_HANDLER) */
 179:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 180:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA12_CH4567_CH345_HANDLER) || defined(__DOXYGEN__)
 181:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 182:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   DMA1 streams 4, 5, 6 and 7, DMA2 streams 3, 4 and 5 shared ISR.
 183:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    It is declared here because this device has a non-standard
 184:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *          DMA shared IRQ handler.
 185:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 186:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @isr
 187:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 188:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** OSAL_IRQ_HANDLER(STM32_DMA12_CH4567_CH345_HANDLER) {
 189:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 190:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_PROLOGUE();
 191:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 192:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 4 of DMA1.*/
 193:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM4);
 194:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 195:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 5 of DMA1.*/
 196:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM5);
 197:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 198:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 6 of DMA1.*/
 199:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM6);
 200:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 201:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 7 of DMA1.*/
 202:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA1_STREAM7);
 203:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 204:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 3 of DMA2.*/
 205:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA2_STREAM3);
 206:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 207:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 4 of DMA2.*/
 208:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA2_STREAM4);
 209:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 210:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Check on channel 5 of DMA2.*/
 211:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaServeInterrupt(STM32_DMA2_STREAM5);
 212:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 213:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   OSAL_IRQ_EPILOGUE();
 214:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
 215:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* defined(STM32_DMA12_CH4567_CH345_HANDLER) */
 216:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* defined(STM32_DMA_REQUIRED) */
 217:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 218:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
 219:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /* Driver exported functions.                                                */
 220:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /*===========================================================================*/
 221:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 222:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 223:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   Low level HAL driver initialization.
 224:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 225:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @notapi
 226:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 227:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** void hal_lld_init(void) {
 147              		.loc 1 227 25 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 228:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 229:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Reset of all peripherals.
 230:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      Note, GPIOs are not reset because initialized before this point in
 231:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      board files.*/
 232:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   rccResetAHB(~STM32_GPIO_EN_MASK);
 151              		.loc 1 232 3 view .LVU37
 152 0000 234B     		ldr	r3, .L10
 153 0002 244A     		ldr	r2, .L10+4
 154 0004 996A     		ldr	r1, [r3, #40]
 227:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 155              		.loc 1 227 25 is_stmt 0 view .LVU38
 156 0006 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160              		.loc 1 232 3 view .LVU39
 161 0008 0A43     		orrs	r2, r1
 162 000a FC21     		movs	r1, #252
 163 000c 9A62     		str	r2, [r3, #40]
 164              		.loc 1 232 3 is_stmt 1 view .LVU40
 165 000e 9A6A     		ldr	r2, [r3, #40]
 166 0010 C903     		lsls	r1, r1, #15
 167 0012 0A40     		ands	r2, r1
 168 0014 9A62     		str	r2, [r3, #40]
 169              		.loc 1 232 3 view .LVU41
 170 0016 9A6A     		ldr	r2, [r3, #40]
 171              		.loc 1 232 35 view .LVU42
 233:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   rccResetAPB1(0xFFFFFFFF);
 172              		.loc 1 233 3 view .LVU43
 173 0018 1A69     		ldr	r2, [r3, #16]
 174 001a 0122     		movs	r2, #1
 175 001c 0021     		movs	r1, #0
 176 001e 5242     		rsbs	r2, r2, #0
 177 0020 1A61     		str	r2, [r3, #16]
 178              		.loc 1 233 3 view .LVU44
 179 0022 1A69     		ldr	r2, [r3, #16]
 180 0024 1961     		str	r1, [r3, #16]
 181              		.loc 1 233 3 view .LVU45
 182 0026 1A69     		ldr	r2, [r3, #16]
 183              		.loc 1 233 27 view .LVU46
 234:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   rccResetAPB2(~RCC_APB2RSTR_DBGMCURST);
 184              		.loc 1 234 3 view .LVU47
 185 0028 D868     		ldr	r0, [r3, #12]
 186 002a 1B4A     		ldr	r2, .L10+8
 187 002c 0243     		orrs	r2, r0
 188 002e 8020     		movs	r0, #128
 189 0030 DA60     		str	r2, [r3, #12]
 190              		.loc 1 234 3 view .LVU48
 191 0032 DA68     		ldr	r2, [r3, #12]
 192 0034 C003     		lsls	r0, r0, #15
 193 0036 0240     		ands	r2, r0
 194 0038 DA60     		str	r2, [r3, #12]
 195              		.loc 1 234 3 view .LVU49
 196 003a DA68     		ldr	r2, [r3, #12]
 197              		.loc 1 234 40 view .LVU50
 235:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 236:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* PWR clock enabled.*/
 237:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   rccEnablePWRInterface(true);
 198              		.loc 1 237 3 view .LVU51
 199 003c 8022     		movs	r2, #128
 200 003e D869     		ldr	r0, [r3, #28]
 201 0040 5205     		lsls	r2, r2, #21
 202 0042 0243     		orrs	r2, r0
 203 0044 DA61     		str	r2, [r3, #28]
 204              		.loc 1 237 3 view .LVU52
 205 0046 DA69     		ldr	r2, [r3, #28]
 206              		.loc 1 237 30 view .LVU53
 238:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 239:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Initializes the backup domain.*/
 240:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   hal_lld_backup_domain_init();
 207              		.loc 1 240 3 view .LVU54
 208              	.LBB4:
 209              	.LBI4:
  57:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 210              		.loc 1 57 13 view .LVU55
 211              	.LBB5:
  60:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 212              		.loc 1 60 3 view .LVU56
  60:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 213              		.loc 1 60 11 is_stmt 0 view .LVU57
 214 0048 8022     		movs	r2, #128
 215 004a 1448     		ldr	r0, .L10+12
 216 004c 5200     		lsls	r2, r2, #1
 217 004e 0468     		ldr	r4, [r0]
 218 0050 2243     		orrs	r2, r4
 219 0052 0260     		str	r2, [r0]
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
 220              		.loc 1 63 3 is_stmt 1 view .LVU58
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
 221              		.loc 1 63 18 is_stmt 0 view .LVU59
 222 0054 C020     		movs	r0, #192
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
 223              		.loc 1 63 11 view .LVU60
 224 0056 1A6A     		ldr	r2, [r3, #32]
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
 225              		.loc 1 63 18 view .LVU61
 226 0058 8000     		lsls	r0, r0, #2
 227 005a 0240     		ands	r2, r0
  63:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Backup domain reset.*/
 228              		.loc 1 63 6 view .LVU62
 229 005c 0138     		subs	r0, r0, #1
 230 005e FF38     		subs	r0, r0, #255
 231 0060 8242     		cmp	r2, r0
 232 0062 03D0     		beq	.L8
  65:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR = 0;
 233              		.loc 1 65 5 is_stmt 1 view .LVU63
  65:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     RCC->BDCR = 0;
 234              		.loc 1 65 15 is_stmt 0 view .LVU64
 235 0064 8022     		movs	r2, #128
 236 0066 5202     		lsls	r2, r2, #9
 237 0068 1A62     		str	r2, [r3, #32]
  66:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
 238              		.loc 1 66 5 is_stmt 1 view .LVU65
  66:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
 239              		.loc 1 66 15 is_stmt 0 view .LVU66
 240 006a 1962     		str	r1, [r3, #32]
 241              	.L8:
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
 242              		.loc 1 85 3 is_stmt 1 view .LVU67
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
 243              		.loc 1 85 18 is_stmt 0 view .LVU68
 244 006c 8022     		movs	r2, #128
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
 245              		.loc 1 85 11 view .LVU69
 246 006e 196A     		ldr	r1, [r3, #32]
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
 247              		.loc 1 85 18 view .LVU70
 248 0070 1202     		lsls	r2, r2, #8
  85:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     /* Selects clock source.*/
 249              		.loc 1 85 6 view .LVU71
 250 0072 1142     		tst	r1, r2
 251 0074 07D1     		bne	.L9
  87:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 252              		.loc 1 87 5 is_stmt 1 view .LVU72
  87:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 253              		.loc 1 87 15 is_stmt 0 view .LVU73
 254 0076 8021     		movs	r1, #128
 255 0078 186A     		ldr	r0, [r3, #32]
 256 007a 8900     		lsls	r1, r1, #2
 257 007c 0143     		orrs	r1, r0
 258 007e 1962     		str	r1, [r3, #32]
  90:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
 259              		.loc 1 90 5 is_stmt 1 view .LVU74
  90:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
 260              		.loc 1 90 15 is_stmt 0 view .LVU75
 261 0080 196A     		ldr	r1, [r3, #32]
 262 0082 0A43     		orrs	r2, r1
 263 0084 1A62     		str	r2, [r3, #32]
 264              	.L9:
 265              	.LBE5:
 266              	.LBE4:
 241:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 242:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* DMA subsystems initialization.*/
 243:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_DMA_REQUIRED)
 244:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   dmaInit();
 267              		.loc 1 244 3 is_stmt 1 view .LVU76
 268 0086 FFF7FEFF 		bl	dmaInit
 269              	.LVL10:
 245:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 246:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 247:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* IRQ subsystem initialization.*/
 248:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   irqInit();
 270              		.loc 1 248 3 view .LVU77
 249:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 250:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Programmable voltage detector enable.*/
 251:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_PVD_ENABLE
 252:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   PWR->CR |= PWR_CR_PVDE | (STM32_PLS & STM32_PLS_MASK);
 253:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* STM32_PVD_ENABLE */
 254:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
 271              		.loc 1 254 1 is_stmt 0 view .LVU78
 272              		@ sp needed
 248:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 273              		.loc 1 248 3 view .LVU79
 274 008a FFF7FEFF 		bl	irqInit
 275              	.LVL11:
 276              		.loc 1 254 1 view .LVU80
 277 008e 10BD     		pop	{r4, pc}
 278              	.L11:
 279              		.align	2
 280              	.L10:
 281 0090 00100240 		.word	1073876992
 282 0094 FFFF81FF 		.word	-8257537
 283 0098 FFFFBFFF 		.word	-4194305
 284 009c 00700040 		.word	1073770496
 285              		.cfi_endproc
 286              	.LFE189:
 288              		.section	.text.stm32_clock_init,"ax",%progbits
 289              		.align	1
 290              		.global	stm32_clock_init
 291              		.syntax unified
 292              		.code	16
 293              		.thumb_func
 294              		.fpu softvfp
 296              	stm32_clock_init:
 297              	.LFB190:
 255:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 256:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** /**
 257:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @brief   STM32 clocks and PLL initialization.
 258:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    All the involved constants come from the file @p board.h.
 259:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @note    This function should be invoked just after the system reset.
 260:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  *
 261:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  * @special
 262:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****  */
 263:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** void stm32_clock_init(void) {
 298              		.loc 1 263 29 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 264:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 265:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if !STM32_NO_INIT
 266:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSI setup, it enforces the reset situation in order to handle possible
 267:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      problems with JTAG probes and re-initializations.*/
 268:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR |= RCC_CR_HSION;                  /* Make sure HSI is ON.         */
 303              		.loc 1 268 3 view .LVU82
 304              		.loc 1 268 11 is_stmt 0 view .LVU83
 305 0000 0122     		movs	r2, #1
 306 0002 254B     		ldr	r3, .L32
 307 0004 1968     		ldr	r1, [r3]
 308 0006 0A43     		orrs	r2, r1
 309 0008 1A60     		str	r2, [r3]
 269:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
 310              		.loc 1 269 3 is_stmt 1 view .LVU84
 311              		.loc 1 269 20 is_stmt 0 view .LVU85
 312 000a 0222     		movs	r2, #2
 313              	.L13:
 270:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Wait until HSI is stable.    */
 314              		.loc 1 270 5 is_stmt 1 discriminator 1 view .LVU86
 269:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
 315              		.loc 1 269 15 is_stmt 0 discriminator 1 view .LVU87
 316 000c 1968     		ldr	r1, [r3]
 269:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
 317              		.loc 1 269 9 discriminator 1 view .LVU88
 318 000e 1142     		tst	r1, r2
 319 0010 FCD0     		beq	.L13
 271:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 272:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSI is selected as new source without touching the other fields in
 273:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      CFGR. Clearing the register has to be postponed after HSI is the
 274:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      new source.*/
 275:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR &= ~RCC_CFGR_SW;                /* Reset SW, selecting HSI.     */
 320              		.loc 1 275 3 is_stmt 1 view .LVU89
 321              		.loc 1 275 13 is_stmt 0 view .LVU90
 322 0012 0321     		movs	r1, #3
 323 0014 5A68     		ldr	r2, [r3, #4]
 324 0016 8A43     		bics	r2, r1
 325 0018 5A60     		str	r2, [r3, #4]
 276:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 326              		.loc 1 276 3 is_stmt 1 view .LVU91
 327              		.loc 1 276 21 is_stmt 0 view .LVU92
 328 001a 0931     		adds	r1, r1, #9
 329              	.L14:
 277:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Wait until HSI is selected.  */
 330              		.loc 1 277 5 is_stmt 1 discriminator 1 view .LVU93
 276:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 331              		.loc 1 276 14 is_stmt 0 discriminator 1 view .LVU94
 332 001c 5A68     		ldr	r2, [r3, #4]
 276:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 333              		.loc 1 276 21 discriminator 1 view .LVU95
 334 001e 0A40     		ands	r2, r1
 276:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 335              		.loc 1 276 9 discriminator 1 view .LVU96
 336 0020 FCD1     		bne	.L14
 278:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 279:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Registers finally cleared to reset values.*/
 280:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR &= RCC_CR_HSITRIM | RCC_CR_HSION; /* CR Reset value.              */
 337              		.loc 1 280 3 is_stmt 1 view .LVU97
 338              		.loc 1 280 11 is_stmt 0 view .LVU98
 339 0022 F920     		movs	r0, #249
 340 0024 1968     		ldr	r1, [r3]
 341 0026 0140     		ands	r1, r0
 342 0028 1960     		str	r1, [r3]
 281:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR = 0;                            /* CFGR reset value.            */
 343              		.loc 1 281 3 is_stmt 1 view .LVU99
 344              		.loc 1 281 13 is_stmt 0 view .LVU100
 345 002a 5A60     		str	r2, [r3, #4]
 282:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 283:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_HSE_ENABLED
 284:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSE activation.*/
 285:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if defined(STM32_HSE_BYPASS)
 286:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSE Bypass.*/
 287:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR |= RCC_CR_HSEON | RCC_CR_HSEBYP;
 288:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #else
 289:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* No HSE Bypass.*/
 290:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR |= RCC_CR_HSEON;
 291:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 292:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
 293:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits until HSE is stable.   */
 294:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 295:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 296:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_HSI14_ENABLED
 297:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSI14 activation.*/
 298:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR2 |= RCC_CR2_HSI14ON;
 346              		.loc 1 298 3 is_stmt 1 view .LVU101
 347              		.loc 1 298 12 is_stmt 0 view .LVU102
 348 002c 596B     		ldr	r1, [r3, #52]
 349 002e 0132     		adds	r2, r2, #1
 350 0030 0A43     		orrs	r2, r1
 351 0032 5A63     		str	r2, [r3, #52]
 299:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR2 & RCC_CR2_HSI14RDY))
 352              		.loc 1 299 3 is_stmt 1 view .LVU103
 353              		.loc 1 299 21 is_stmt 0 view .LVU104
 354 0034 0222     		movs	r2, #2
 355              	.L15:
 300:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits until HSI14 is stable. */
 356              		.loc 1 300 5 is_stmt 1 discriminator 1 view .LVU105
 299:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR2 & RCC_CR2_HSI14RDY))
 357              		.loc 1 299 15 is_stmt 0 discriminator 1 view .LVU106
 358 0036 596B     		ldr	r1, [r3, #52]
 299:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR2 & RCC_CR2_HSI14RDY))
 359              		.loc 1 299 9 discriminator 1 view .LVU107
 360 0038 1142     		tst	r1, r2
 361 003a FCD0     		beq	.L15
 301:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 302:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 303:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_HSI48_ENABLED
 304:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* HSI48 activation.*/
 305:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR2 |= RCC_CR2_HSI48ON;
 306:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR2 & RCC_CR2_HSI48RDY))
 307:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits until HSI48 is stable. */
 308:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 309:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 310:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_LSI_ENABLED
 311:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* LSI activation.*/
 312:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CSR |= RCC_CSR_LSION;
 362              		.loc 1 312 3 is_stmt 1 view .LVU108
 363              		.loc 1 312 12 is_stmt 0 view .LVU109
 364 003c 0122     		movs	r2, #1
 365 003e 596A     		ldr	r1, [r3, #36]
 366 0040 0A43     		orrs	r2, r1
 367 0042 5A62     		str	r2, [r3, #36]
 313:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CSR & RCC_CSR_LSIRDY) == 0)
 368              		.loc 1 313 3 is_stmt 1 view .LVU110
 369              		.loc 1 313 20 is_stmt 0 view .LVU111
 370 0044 0222     		movs	r2, #2
 371              	.L16:
 314:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits until LSI is stable.   */
 372              		.loc 1 314 5 is_stmt 1 discriminator 1 view .LVU112
 313:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CSR & RCC_CSR_LSIRDY) == 0)
 373              		.loc 1 313 14 is_stmt 0 discriminator 1 view .LVU113
 374 0046 596A     		ldr	r1, [r3, #36]
 313:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CSR & RCC_CSR_LSIRDY) == 0)
 375              		.loc 1 313 9 discriminator 1 view .LVU114
 376 0048 1142     		tst	r1, r2
 377 004a FCD0     		beq	.L16
 315:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 316:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 317:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Clock settings.*/
 318:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* CFGR2 must be configured first since CFGR value could change CFGR2 */
 319:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR2 = STM32_PREDIV;
 378              		.loc 1 319 3 is_stmt 1 view .LVU115
 320:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR  = STM32_PLLNODIV | STM32_MCOPRE | STM32_MCOSEL | STM32_PLLMUL |
 379              		.loc 1 320 14 is_stmt 0 view .LVU116
 380 004c A021     		movs	r1, #160
 319:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR  = STM32_PLLNODIV | STM32_MCOPRE | STM32_MCOSEL | STM32_PLLMUL |
 381              		.loc 1 319 14 view .LVU117
 382 004e 0022     		movs	r2, #0
 383              		.loc 1 320 14 view .LVU118
 384 0050 8903     		lsls	r1, r1, #14
 319:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR  = STM32_PLLNODIV | STM32_MCOPRE | STM32_MCOSEL | STM32_PLLMUL |
 385              		.loc 1 319 14 view .LVU119
 386 0052 DA62     		str	r2, [r3, #44]
 387              		.loc 1 320 3 is_stmt 1 view .LVU120
 388              		.loc 1 320 14 is_stmt 0 view .LVU121
 389 0054 5960     		str	r1, [r3, #4]
 321:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****                STM32_PLLSRC   | STM32_PPRE   | STM32_HPRE |
 322:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****                ((STM32_PREDIV & STM32_PLLXTPRE_MASK) << STM32_PLLXTPRE_OFFSET);
 323:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_CECSW == STM32_CECSW_OFF
 324:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR3 = STM32_USBSW  | STM32_I2C1SW | STM32_USART1SW;
 325:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #else
 326:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR3 = STM32_USBSW  | STM32_CECSW  | STM32_I2C1SW | STM32_USART1SW;
 390              		.loc 1 326 3 is_stmt 1 view .LVU122
 391              		.loc 1 326 14 is_stmt 0 view .LVU123
 392 0056 1A63     		str	r2, [r3, #48]
 327:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 328:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 329:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if STM32_ACTIVATE_PLL
 330:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* PLL activation.*/
 331:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CR   |= RCC_CR_PLLON;
 393              		.loc 1 331 3 is_stmt 1 view .LVU124
 394              		.loc 1 331 13 is_stmt 0 view .LVU125
 395 0058 8022     		movs	r2, #128
 396 005a 1968     		ldr	r1, [r3]
 397 005c 5204     		lsls	r2, r2, #17
 398 005e 0A43     		orrs	r2, r1
 399 0060 1A60     		str	r2, [r3]
 332:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 400              		.loc 1 332 3 is_stmt 1 view .LVU126
 401              		.loc 1 332 20 is_stmt 0 view .LVU127
 402 0062 8022     		movs	r2, #128
 403 0064 9204     		lsls	r2, r2, #18
 404              	.L17:
 333:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits until PLL is stable.   */
 405              		.loc 1 333 5 is_stmt 1 discriminator 1 view .LVU128
 332:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 406              		.loc 1 332 15 is_stmt 0 discriminator 1 view .LVU129
 407 0066 1968     		ldr	r1, [r3]
 332:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 408              		.loc 1 332 9 discriminator 1 view .LVU130
 409 0068 1142     		tst	r1, r2
 410 006a FCD0     		beq	.L17
 334:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 335:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 336:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Flash setup and final clock selection.   */
 337:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   FLASH->ACR = STM32_FLASHBITS;
 411              		.loc 1 337 3 is_stmt 1 view .LVU131
 412              		.loc 1 337 14 is_stmt 0 view .LVU132
 413 006c 1121     		movs	r1, #17
 414 006e 0B4A     		ldr	r2, .L32+4
 415 0070 1160     		str	r1, [r2]
 338:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((FLASH->ACR & FLASH_ACR_LATENCY_Msk) !=
 416              		.loc 1 338 3 is_stmt 1 view .LVU133
 417              		.loc 1 338 22 is_stmt 0 view .LVU134
 418 0072 1039     		subs	r1, r1, #16
 419              	.L18:
 339:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****          (STM32_FLASHBITS & FLASH_ACR_LATENCY_Msk)) {
 340:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   }
 420              		.loc 1 340 3 is_stmt 1 discriminator 1 view .LVU135
 338:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((FLASH->ACR & FLASH_ACR_LATENCY_Msk) !=
 421              		.loc 1 338 16 is_stmt 0 discriminator 1 view .LVU136
 422 0074 1068     		ldr	r0, [r2]
 338:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((FLASH->ACR & FLASH_ACR_LATENCY_Msk) !=
 423              		.loc 1 338 9 discriminator 1 view .LVU137
 424 0076 0842     		tst	r0, r1
 425 0078 FCD0     		beq	.L18
 341:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 342:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Switching to the configured clock source if it is different from HSI.*/
 343:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #if (STM32_SW != STM32_SW_HSI)
 344:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* Switches clock source.*/
 345:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   RCC->CFGR |= STM32_SW;
 426              		.loc 1 345 3 is_stmt 1 view .LVU138
 427              		.loc 1 345 13 is_stmt 0 view .LVU139
 428 007a 0222     		movs	r2, #2
 429 007c 5968     		ldr	r1, [r3, #4]
 430 007e 0A43     		orrs	r2, r1
 346:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 431              		.loc 1 346 21 view .LVU140
 432 0080 0C21     		movs	r1, #12
 345:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 433              		.loc 1 345 13 view .LVU141
 434 0082 5A60     		str	r2, [r3, #4]
 435              		.loc 1 346 3 is_stmt 1 view .LVU142
 436              	.L19:
 347:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****     ;                                       /* Waits selection complete.    */
 437              		.loc 1 347 5 discriminator 1 view .LVU143
 346:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 438              		.loc 1 346 14 is_stmt 0 discriminator 1 view .LVU144
 439 0084 5A68     		ldr	r2, [r3, #4]
 346:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 440              		.loc 1 346 21 discriminator 1 view .LVU145
 441 0086 0A40     		ands	r2, r1
 346:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 442              		.loc 1 346 9 discriminator 1 view .LVU146
 443 0088 082A     		cmp	r2, #8
 444 008a FBD1     		bne	.L19
 348:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif
 349:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** 
 350:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   /* SYSCFG clock enabled here because it is a multi-functional unit shared
 351:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****      among multiple drivers.*/
 352:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c ****   rccEnableAPB2(RCC_APB2ENR_SYSCFGEN, true);
 445              		.loc 1 352 3 is_stmt 1 view .LVU147
 446 008c 9969     		ldr	r1, [r3, #24]
 447 008e 073A     		subs	r2, r2, #7
 448 0090 0A43     		orrs	r2, r1
 449 0092 9A61     		str	r2, [r3, #24]
 450              		.loc 1 352 3 view .LVU148
 451 0094 9B69     		ldr	r3, [r3, #24]
 452              		.loc 1 352 44 view .LVU149
 353:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** #endif /* !STM32_NO_INIT */
 354:lib/chibios/os/hal/ports/STM32/STM32F0xx/hal_lld.c **** }
 453              		.loc 1 354 1 is_stmt 0 view .LVU150
 454              		@ sp needed
 455 0096 7047     		bx	lr
 456              	.L33:
 457              		.align	2
 458              	.L32:
 459 0098 00100240 		.word	1073876992
 460 009c 00200240 		.word	1073881088
 461              		.cfi_endproc
 462              	.LFE190:
 464              		.global	SystemCoreClock
 465              		.section	.data.SystemCoreClock,"aw"
 466              		.align	2
 469              	SystemCoreClock:
 470 0000 006CDC02 		.word	48000000
 471              		.text
 472              	.Letext0:
 473              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 474              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 475              		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 476              		.file 5 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 477              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 478              		.file 7 "./lib/chibios/os/rt/include/chsystypes.h"
 479              		.file 8 "./lib/chibios/os/rt/include/chschd.h"
 480              		.file 9 "./lib/chibios/os/rt/include/chtime.h"
 481              		.file 10 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 482              		.file 11 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 483              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 484              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
 485              		.file 14 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 486              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 487              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 488              		.file 17 "./lib/chibios/os/rt/include/chsys.h"
 489              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 490              		.file 19 "./lib/chibios/os/oslib/include/chmemcore.h"
 491              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 492              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 493              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 494              		.file 23 "./lib/chibios/os/hal/include/hal_i2c.h"
 495              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 496              		.file 25 "./lib/chibios/os/hal/include/hal_pwm.h"
 497              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 498              		.file 27 "./lib/chibios/os/hal/include/hal_spi.h"
 499              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 500              		.file 29 "./lib/chibios/os/hal/include/hal_usb.h"
 501              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 502              		.file 31 "./lib/chibios/os/hal/ports/STM32/STM32F0xx/stm32_isr.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_lld.c
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:16     .text.Vector68:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:24     .text.Vector68:00000000 Vector68
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:67     .text.Vector68:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:73     .text.Vector6C:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:80     .text.Vector6C:00000000 Vector6C
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:130    .text.Vector6C:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:138    .text.hal_lld_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:145    .text.hal_lld_init:00000000 hal_lld_init
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:281    .text.hal_lld_init:00000090 $d
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:289    .text.stm32_clock_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:296    .text.stm32_clock_init:00000000 stm32_clock_init
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:459    .text.stm32_clock_init:00000098 $d
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:469    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\kyleo\AppData\Local\Temp\ccI8UGRd.s:466    .data.SystemCoreClock:00000000 $d

UNDEFINED SYMBOLS
dmaServeInterrupt
_port_irq_epilogue
_stm32_dma_streams
dmaInit
irqInit
