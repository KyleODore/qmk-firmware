   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_i2c_lld.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.i2c_lld_setup_rx_transfer,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	i2c_lld_setup_rx_transfer:
  24              	.LVL0:
  25              	.LFB187:
  26              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @file    I2Cv2/hal_i2c_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   STM32 I2C subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @addtogroup I2C
  22:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if HAL_USE_I2C || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  33:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
  34:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define DMAMODE_COMMON                                                      \
  35:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   (STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE |                      \
  36:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****    STM32_DMA_CR_MINC       | STM32_DMA_CR_DMEIE      |                      \
  37:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****    STM32_DMA_CR_TEIE       | STM32_DMA_CR_TCIE)
  38:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  39:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C1_RX_DMA_CHANNEL                                                 \
  40:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C1_RX_DMA_STREAM,                        \
  41:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C1_RX_DMA_CHN)
  42:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  43:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C1_TX_DMA_CHANNEL                                                 \
  44:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C1_TX_DMA_STREAM,                        \
  45:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C1_TX_DMA_CHN)
  46:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  47:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C2_RX_DMA_CHANNEL                                                 \
  48:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C2_RX_DMA_STREAM,                        \
  49:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C2_RX_DMA_CHN)
  50:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  51:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C2_TX_DMA_CHANNEL                                                 \
  52:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C2_TX_DMA_STREAM,                        \
  53:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C2_TX_DMA_CHN)
  54:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  55:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C3_RX_DMA_CHANNEL                                                 \
  56:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C3_RX_DMA_STREAM,                        \
  57:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C3_RX_DMA_CHN)
  58:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  59:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C3_TX_DMA_CHANNEL                                                 \
  60:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C3_TX_DMA_STREAM,                        \
  61:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C3_TX_DMA_CHN)
  62:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  63:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C4_RX_DMA_CHANNEL                                                 \
  64:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C4_RX_DMA_STREAM,                        \
  65:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C4_RX_DMA_CHN)
  66:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  67:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C4_TX_DMA_CHANNEL                                                 \
  68:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   STM32_DMA_GETCHANNEL(STM32_I2C_I2C4_TX_DMA_STREAM,                        \
  69:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                        STM32_I2C4_TX_DMA_CHN)
  70:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
  71:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  72:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
  73:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_rxbytes(i2cp) dmaStreamGetTransactionSize((i2cp)->dmarx)
  74:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_txbytes(i2cp) dmaStreamGetTransactionSize((i2cp)->dmatx)
  75:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
  76:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_rxbytes(i2cp) (i2cp)->rxbytes
  77:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define i2c_lld_get_txbytes(i2cp) (i2cp)->txbytes
  78:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
  79:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  80:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  81:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver constants.                                                         */
  82:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  83:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  84:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C_ERROR_MASK                                                      \
  85:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   ((uint32_t)(I2C_ISR_BERR | I2C_ISR_ARLO | I2C_ISR_OVR | I2C_ISR_PECERR |  \
  86:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****               I2C_ISR_TIMEOUT | I2C_ISR_ALERT))
  87:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  88:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #define I2C_INT_MASK                                                        \
  89:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   ((uint32_t)(I2C_ISR_TCR | I2C_ISR_TC | I2C_ISR_STOPF | I2C_ISR_NACKF |    \
  90:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****               I2C_ISR_ADDR | I2C_ISR_RXNE | I2C_ISR_TXIS))
  91:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  92:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  93:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver exported variables.                                                */
  94:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
  95:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  96:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C1 driver identifier.*/
  97:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1 || defined(__DOXYGEN__)
  98:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD1;
  99:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 101:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C2 driver identifier.*/
 102:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2 || defined(__DOXYGEN__)
 103:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD2;
 104:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 105:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C3 driver identifier.*/
 107:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3 || defined(__DOXYGEN__)
 108:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD3;
 109:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 110:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 111:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /** @brief I2C4 driver identifier.*/
 112:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4 || defined(__DOXYGEN__)
 113:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** I2CDriver I2CD4;
 114:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 115:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 116:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 117:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local variables and types.                                         */
 118:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 119:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 121:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver local functions.                                                   */
 122:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 124:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 125:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Slave address setup.
 126:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @note    The RW bit is set to zero internally.
 127:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 128:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 129:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
 130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 131:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 132:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_set_address(I2CDriver *i2cp, i2caddr_t addr) {
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 135:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 136:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Address alignment depends on the addressing mode selected.*/
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((i2cp->config->cr2 & I2C_CR2_ADD10) == 0U)
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 139:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr;
 141:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 142:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 143:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 144:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C RX transfer setup.
 145:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 146:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 147:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 148:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 149:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 150:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_setup_rx_transfer(I2CDriver *i2cp) {
  27              		.loc 1 150 56 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 151:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  31              		.loc 1 151 3 view .LVU1
 152:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
 153:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   size_t n;
 154:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 155:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation.*/
 156:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   n = i2c_lld_get_rxbytes(i2cp);
  32              		.loc 1 156 7 is_stmt 0 view .LVU2
  33 0000 836A     		ldr	r3, [r0, #40]
 150:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  34              		.loc 1 150 56 view .LVU3
  35 0002 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39              		.loc 1 156 7 view .LVU4
  40 0004 5B68     		ldr	r3, [r3, #4]
 151:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
  41              		.loc 1 151 16 view .LVU5
  42 0006 016B     		ldr	r1, [r0, #48]
  43              	.LVL1:
 152:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
  44              		.loc 1 152 3 is_stmt 1 view .LVU6
 153:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
  45              		.loc 1 153 3 view .LVU7
  46              		.loc 1 156 3 view .LVU8
  47              		.loc 1 156 5 is_stmt 0 view .LVU9
  48 0008 5B68     		ldr	r3, [r3, #4]
  49              	.LVL2:
 157:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
  50              		.loc 1 157 3 is_stmt 1 view .LVU10
 158:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
 159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = I2C_CR2_RELOAD;
 160:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 161:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else {
 162:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = 0U;
  51              		.loc 1 162 12 is_stmt 0 view .LVU11
  52 000a 0024     		movs	r4, #0
 157:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
  53              		.loc 1 157 6 view .LVU12
  54 000c FF2B     		cmp	r3, #255
  55 000e 02D9     		bls	.L2
 159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
  56              		.loc 1 159 12 view .LVU13
  57 0010 8024     		movs	r4, #128
 158:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
  58              		.loc 1 158 7 view .LVU14
  59 0012 FF23     		movs	r3, #255
  60              	.LVL3:
 159:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
  61              		.loc 1 159 12 view .LVU15
  62 0014 6404     		lsls	r4, r4, #17
  63              	.L2:
  64              	.LVL4:
 163:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 164:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 165:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Configures the CR2 registers with both the calculated and static
 166:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      settings.*/
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 = (dp->CR2 & ~(I2C_CR2_NBYTES | I2C_CR2_RELOAD)) | i2cp->config->cr2 |
  65              		.loc 1 167 3 is_stmt 1 view .LVU16
  66              		.loc 1 167 74 is_stmt 0 view .LVU17
  67 0016 4068     		ldr	r0, [r0, #4]
  68              	.LVL5:
 168:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  69              		.loc 1 168 33 view .LVU18
  70 0018 1B04     		lsls	r3, r3, #16
  71              	.LVL6:
  72              		.loc 1 168 28 view .LVU19
  73 001a 8068     		ldr	r0, [r0, #8]
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  74              		.loc 1 167 16 view .LVU20
  75 001c 4A68     		ldr	r2, [r1, #4]
  76              		.loc 1 168 28 view .LVU21
  77 001e 0343     		orrs	r3, r0
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  78              		.loc 1 167 22 view .LVU22
  79 0020 0448     		ldr	r0, .L4
 169:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
  80              		.loc 1 169 1 view .LVU23
  81              		@ sp needed
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  82              		.loc 1 167 22 view .LVU24
  83 0022 0240     		ands	r2, r0
 168:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  84              		.loc 1 168 28 view .LVU25
  85 0024 1343     		orrs	r3, r2
 168:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  86              		.loc 1 168 41 view .LVU26
  87 0026 8022     		movs	r2, #128
  88 0028 2343     		orrs	r3, r4
  89 002a D200     		lsls	r2, r2, #3
  90 002c 1343     		orrs	r3, r2
 167:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR2_RD_WRN | (n << 16U) | reload;
  91              		.loc 1 167 11 view .LVU27
  92 002e 4B60     		str	r3, [r1, #4]
  93              	.LVL7:
  94              		.loc 1 169 1 view .LVU28
  95 0030 10BD     		pop	{r4, pc}
  96              	.L5:
  97 0032 C046     		.align	2
  98              	.L4:
  99 0034 FFFF00FE 		.word	-33488897
 100              		.cfi_endproc
 101              	.LFE187:
 103              		.section	.text.i2c_lld_setup_tx_transfer,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.code	16
 107              		.thumb_func
 108              		.fpu softvfp
 110              	i2c_lld_setup_tx_transfer:
 111              	.LVL8:
 112              	.LFB188:
 170:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 171:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 172:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C TX transfer setup.
 173:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 174:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 175:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 176:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 177:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 178:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_setup_tx_transfer(I2CDriver *i2cp) {
 113              		.loc 1 178 56 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 179:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 117              		.loc 1 179 3 view .LVU30
 180:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
 181:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   size_t n;
 182:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 183:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation.*/
 184:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   n = i2c_lld_get_txbytes(i2cp);
 118              		.loc 1 184 7 is_stmt 0 view .LVU31
 119 0000 C36A     		ldr	r3, [r0, #44]
 178:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 120              		.loc 1 178 56 view .LVU32
 121 0002 30B5     		push	{r4, r5, lr}
 122              		.cfi_def_cfa_offset 12
 123              		.cfi_offset 4, -12
 124              		.cfi_offset 5, -8
 125              		.cfi_offset 14, -4
 126              		.loc 1 184 7 view .LVU33
 127 0004 5B68     		ldr	r3, [r3, #4]
 179:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 128              		.loc 1 179 16 view .LVU34
 129 0006 016B     		ldr	r1, [r0, #48]
 130              	.LVL9:
 180:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t reload;
 131              		.loc 1 180 3 is_stmt 1 view .LVU35
 181:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 132              		.loc 1 181 3 view .LVU36
 133              		.loc 1 184 3 view .LVU37
 134              		.loc 1 184 5 is_stmt 0 view .LVU38
 135 0008 5A68     		ldr	r2, [r3, #4]
 136              	.LVL10:
 185:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 137              		.loc 1 185 3 is_stmt 1 view .LVU39
 186:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
 187:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = I2C_CR2_RELOAD;
 188:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 189:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else {
 190:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     reload = 0U;
 138              		.loc 1 190 12 is_stmt 0 view .LVU40
 139 000a 0024     		movs	r4, #0
 185:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (n > 255U) {
 140              		.loc 1 185 6 view .LVU41
 141 000c FF2A     		cmp	r2, #255
 142 000e 02D9     		bls	.L7
 187:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 143              		.loc 1 187 12 view .LVU42
 144 0010 8024     		movs	r4, #128
 186:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     n = 255U;
 145              		.loc 1 186 7 view .LVU43
 146 0012 FF22     		movs	r2, #255
 147              	.LVL11:
 187:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 148              		.loc 1 187 12 view .LVU44
 149 0014 6404     		lsls	r4, r4, #17
 150              	.L7:
 151              	.LVL12:
 191:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 192:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 193:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Configures the CR2 registers with both the calculated and static
 194:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      settings.*/
 195:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 = (dp->CR2 & ~(I2C_CR2_NBYTES | I2C_CR2_RELOAD)) | i2cp->config->cr2 |
 152              		.loc 1 195 3 is_stmt 1 view .LVU45
 153              		.loc 1 195 74 is_stmt 0 view .LVU46
 154 0016 4068     		ldr	r0, [r0, #4]
 155              	.LVL13:
 156              		.loc 1 195 16 view .LVU47
 157 0018 4B68     		ldr	r3, [r1, #4]
 158              		.loc 1 195 22 view .LVU48
 159 001a 044D     		ldr	r5, .L9
 160              		.loc 1 195 60 view .LVU49
 161 001c 8068     		ldr	r0, [r0, #8]
 162              		.loc 1 195 22 view .LVU50
 163 001e 2B40     		ands	r3, r5
 164              		.loc 1 195 60 view .LVU51
 165 0020 0343     		orrs	r3, r0
 196:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             (n << 16U) | reload;
 166              		.loc 1 196 24 view .LVU52
 167 0022 2343     		orrs	r3, r4
 168              		.loc 1 196 16 view .LVU53
 169 0024 1204     		lsls	r2, r2, #16
 170              	.LVL14:
 171              		.loc 1 196 24 view .LVU54
 172 0026 1343     		orrs	r3, r2
 195:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             (n << 16U) | reload;
 173              		.loc 1 195 11 view .LVU55
 174 0028 4B60     		str	r3, [r1, #4]
 197:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 175              		.loc 1 197 1 view .LVU56
 176              		@ sp needed
 177              	.LVL15:
 178              		.loc 1 197 1 view .LVU57
 179 002a 30BD     		pop	{r4, r5, pc}
 180              	.L10:
 181              		.align	2
 182              	.L9:
 183 002c FFFF00FE 		.word	-33488897
 184              		.cfi_endproc
 185              	.LFE188:
 187              		.section	.text.Vector9C,"ax",%progbits
 188              		.align	1
 189              		.global	Vector9C
 190              		.syntax unified
 191              		.code	16
 192              		.thumb_func
 193              		.fpu softvfp
 195              	Vector9C:
 196              	.LFB192:
 198:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 199:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 200:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Aborts an I2C transaction.
 201:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 202:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 203:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 204:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 205:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 206:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_abort_operation(I2CDriver *i2cp) {
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 208:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (dp->CR1 & I2C_CR1_PE) {
 210:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 211:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~I2C_CR1_PE;
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     while (dp->CR1 & I2C_CR1_PE)
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 215:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 216:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 217:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 218:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Stops the associated DMA streams.*/
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmatx);
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 221:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 222:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 &= ~(I2C_CR1_TXIE | I2C_CR1_RXIE);
 223:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 224:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 225:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 226:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 227:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C shared ISR code.
 228:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 229:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 230:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] isr       content of the ISR register to be decoded
 231:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 232:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 233:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 234:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_serve_interrupt(I2CDriver *i2cp, uint32_t isr) {
 235:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 236:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 237:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Special case of a received NACK, the transfer is aborted.*/
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_NACKF) != 0U) {
 239:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 240:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the associated DMA streams.*/
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmatx);
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 243:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 244:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 245:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Error flag.*/
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ACK_FAILURE;
 247:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 248:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Transaction finished sending the STOP.*/
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 250:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 251:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Make sure no more interrupts.*/
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~(I2C_CR1_TCIE | I2C_CR1_TXIE | I2C_CR1_RXIE);
 253:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 254:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Errors are signaled to the upper layer.*/
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 256:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 257:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     return;
 258:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 259:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 260:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == FALSE
 261:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Handling of data transfer if the DMA mode is disabled.*/
 262:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   {
 263:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     uint32_t cr1 = dp->CR1;
 264:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 265:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 266:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Transmission phase.*/
 267:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (((cr1 &I2C_CR1_TXIE) != 0U) && ((isr & I2C_ISR_TXIS) != 0U)) {
 268:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->TXDR = (uint32_t)*i2cp->txptr;
 269:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txptr++;
 270:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txbytes--;
 271:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         if (i2cp->txbytes == 0U) {
 272:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****           dp->CR1 &= ~I2C_CR1_TXIE;
 273:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         }
 274:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 275:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 276:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 277:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Receive phase.*/
 278:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (((cr1 & I2C_CR1_RXIE) != 0U) && ((isr & I2C_ISR_RXNE) != 0U)) {
 279:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         *i2cp->rxptr = (uint8_t)dp->RXDR;
 280:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxptr++;
 281:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxbytes--;
 282:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         if (i2cp->rxbytes == 0U) {
 283:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****           dp->CR1 &= ~I2C_CR1_RXIE;
 284:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         }
 285:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 286:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 287:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 288:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 289:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 290:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Partial transfer handling, restarting the transfer and returning.*/
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_TCR) != 0U) {
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 294:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 295:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 296:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_rx_transfer(i2cp);
 297:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 298:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     return;
 299:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 300:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 301:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* The following condition is true if a transfer phase has been completed.*/
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if ((isr & I2C_ISR_TC) != 0U) {
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 304:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 305:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 306:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 307:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Disabling TX DMA channel.*/
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dmaStreamDisable(i2cp->dmatx);
 309:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 310:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 311:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Starting receive phase if necessary.*/
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       if (i2c_lld_get_rxbytes(i2cp) > 0U) {
 313:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 314:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2c_lld_setup_rx_transfer(i2cp);
 315:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 316:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 317:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Enabling RX DMA.*/
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dmaStreamEnable(i2cp->dmarx);
 319:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 320:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* RX interrupt enabled.*/
 321:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->CR1 |= I2C_CR1_RXIE;
 322:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 323:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 324:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Starts the read operation.*/
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         dp->CR2 |= I2C_CR2_START;
 326:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 327:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* State change.*/
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->state = I2C_ACTIVE_RX;
 329:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 330:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Note, returning because the transaction is not over yet.*/
 331:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         return;
 332:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 333:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 334:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     else {
 335:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the receive phase.*/
 336:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 337:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* Disabling RX DMA channel.*/
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dmaStreamDisable(i2cp->dmarx);
 339:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 340:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 341:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 342:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Transaction finished sending the STOP.*/
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 344:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 345:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Make sure no more 'Transfer Complete' interrupts.*/
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 &= ~I2C_CR1_TCIE;
 347:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 348:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Normal transaction end.*/
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 350:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 351:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 352:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 353:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 354:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C error handler.
 355:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 356:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 357:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] isr       content of the ISR register to be decoded
 358:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 359:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 360:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 361:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** static void i2c_lld_serve_error_interrupt(I2CDriver *i2cp, uint32_t isr) {
 362:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 363:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 364:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clears DMA interrupt flags just to be safe.*/
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmatx);
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 367:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 368:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Disabling RX and TX interrupts.*/
 369:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->i2c->CR1 &= ~(I2C_CR1_TXIE | I2C_CR1_RXIE);
 370:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 371:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_BERR)
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 374:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_ARLO)
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 377:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_OVR)
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 380:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ISR_TIMEOUT)
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 383:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 384:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If some error has been identified then sends wakes the waiting thread.*/
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->errors != I2C_NO_ERROR)
 386:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 387:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 388:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 389:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 390:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver interrupt handlers.                                                */
 391:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 392:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 393:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1 || defined(__DOXYGEN__)
 394:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 395:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 396:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C1 event interrupt handler.
 397:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 398:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 399:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 400:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_GLOBAL_HANDLER) {
 197              		.loc 1 400 45 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 401:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 201              		.loc 1 401 3 view .LVU59
 402:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 404:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 405:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 406:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr;
 407:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 408:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 202              		.loc 1 408 11 is_stmt 0 view .LVU60
 203 0000 FC22     		movs	r2, #252
 400:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 204              		.loc 1 400 45 view .LVU61
 205 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 206              		.cfi_def_cfa_offset 24
 207              		.cfi_offset 3, -24
 208              		.cfi_offset 4, -20
 209              		.cfi_offset 5, -16
 210              		.cfi_offset 6, -12
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 401:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 213              		.loc 1 401 23 view .LVU62
 214 0004 594C     		ldr	r4, .L45
 215              		.loc 1 408 11 view .LVU63
 216 0006 9201     		lsls	r2, r2, #6
 401:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 217              		.loc 1 401 23 view .LVU64
 218 0008 256B     		ldr	r5, [r4, #48]
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 219              		.loc 1 403 3 view .LVU65
 220 000a 7646     		mov	r6, lr
 401:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 221              		.loc 1 401 12 view .LVU66
 222 000c AB69     		ldr	r3, [r5, #24]
 223              	.LVL16:
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 224              		.loc 1 403 3 is_stmt 1 view .LVU67
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 225              		.loc 1 403 3 view .LVU68
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 226              		.loc 1 403 3 view .LVU69
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 227              		.loc 1 403 3 view .LVU70
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 228              		.loc 1 403 3 view .LVU71
 403:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 229              		.loc 1 403 22 view .LVU72
 406:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 230              		.loc 1 406 3 view .LVU73
 406:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 231              		.loc 1 406 18 is_stmt 0 view .LVU74
 232 000e EB61     		str	r3, [r5, #28]
 233              		.loc 1 408 3 is_stmt 1 view .LVU75
 234              		.loc 1 408 6 is_stmt 0 view .LVU76
 235 0010 1342     		tst	r3, r2
 236 0012 3BD0     		beq	.L12
 409:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD1, isr);
 237              		.loc 1 409 5 is_stmt 1 view .LVU77
 238              	.LVL17:
 239              	.LBB289:
 240              	.LBI289:
 361:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 241              		.loc 1 361 13 view .LVU78
 242              	.LBB290:
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 243              		.loc 1 365 3 view .LVU79
 244 0014 0F25     		movs	r5, #15
 245 0016 E26A     		ldr	r2, [r4, #44]
 246 0018 5068     		ldr	r0, [r2, #4]
 247 001a 0168     		ldr	r1, [r0]
 248 001c A943     		bics	r1, r5
 249 001e 0160     		str	r1, [r0]
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 250              		.loc 1 365 3 view .LVU80
 251 0020 507B     		ldrb	r0, [r2, #13]
 252 0022 1168     		ldr	r1, [r2]
 253 0024 0E22     		movs	r2, #14
 254 0026 1700     		movs	r7, r2
 255 0028 8740     		lsls	r7, r7, r0
 256 002a 4F60     		str	r7, [r1, #4]
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 257              		.loc 1 365 3 view .LVU81
 365:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 258              		.loc 1 365 32 view .LVU82
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 259              		.loc 1 366 3 view .LVU83
 260 002c A16A     		ldr	r1, [r4, #40]
 261 002e 4F68     		ldr	r7, [r1, #4]
 262 0030 3868     		ldr	r0, [r7]
 263 0032 A843     		bics	r0, r5
 264 0034 3860     		str	r0, [r7]
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 265              		.loc 1 366 3 view .LVU84
 266 0036 0868     		ldr	r0, [r1]
 267 0038 497B     		ldrb	r1, [r1, #13]
 268 003a 8A40     		lsls	r2, r2, r1
 269 003c 4260     		str	r2, [r0, #4]
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 270              		.loc 1 366 3 view .LVU85
 366:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 271              		.loc 1 366 32 view .LVU86
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 272              		.loc 1 372 3 view .LVU87
 372:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 273              		.loc 1 372 6 is_stmt 0 view .LVU88
 274 003e DA05     		lsls	r2, r3, #23
 275 0040 03D5     		bpl	.L13
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 276              		.loc 1 373 5 is_stmt 1 view .LVU89
 373:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 277              		.loc 1 373 18 is_stmt 0 view .LVU90
 278 0042 0122     		movs	r2, #1
 279 0044 A168     		ldr	r1, [r4, #8]
 280 0046 0A43     		orrs	r2, r1
 281 0048 A260     		str	r2, [r4, #8]
 282              	.L13:
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 283              		.loc 1 375 3 is_stmt 1 view .LVU91
 375:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 284              		.loc 1 375 6 is_stmt 0 view .LVU92
 285 004a 9A05     		lsls	r2, r3, #22
 286 004c 03D5     		bpl	.L14
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 287              		.loc 1 376 5 is_stmt 1 view .LVU93
 376:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 288              		.loc 1 376 18 is_stmt 0 view .LVU94
 289 004e 0222     		movs	r2, #2
 290 0050 A168     		ldr	r1, [r4, #8]
 291 0052 0A43     		orrs	r2, r1
 292 0054 A260     		str	r2, [r4, #8]
 293              	.L14:
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 294              		.loc 1 378 3 is_stmt 1 view .LVU95
 378:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_OVERRUN;
 295              		.loc 1 378 6 is_stmt 0 view .LVU96
 296 0056 5A05     		lsls	r2, r3, #21
 297 0058 03D5     		bpl	.L15
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 298              		.loc 1 379 5 is_stmt 1 view .LVU97
 379:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 299              		.loc 1 379 18 is_stmt 0 view .LVU98
 300 005a 0822     		movs	r2, #8
 301 005c A168     		ldr	r1, [r4, #8]
 302 005e 0A43     		orrs	r2, r1
 303 0060 A260     		str	r2, [r4, #8]
 304              	.L15:
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 305              		.loc 1 381 3 is_stmt 1 view .LVU99
 306 0062 A268     		ldr	r2, [r4, #8]
 381:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->errors |= I2C_TIMEOUT;
 307              		.loc 1 381 6 is_stmt 0 view .LVU100
 308 0064 DB04     		lsls	r3, r3, #19
 309 0066 0BD5     		bpl	.L16
 310              	.LVL18:
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 311              		.loc 1 382 5 is_stmt 1 view .LVU101
 382:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 312              		.loc 1 382 18 is_stmt 0 view .LVU102
 313 0068 2023     		movs	r3, #32
 314 006a 1343     		orrs	r3, r2
 315 006c A360     		str	r3, [r4, #8]
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 316              		.loc 1 385 3 is_stmt 1 view .LVU103
 317              	.LVL19:
 318              	.L44:
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 319              		.loc 1 385 3 is_stmt 0 view .LVU104
 320              	.LBE290:
 321              	.LBE289:
 322              	.LBB292:
 323              	.LBB293:
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 324              		.loc 1 255 5 is_stmt 1 view .LVU105
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 325              		.loc 1 255 5 view .LVU106
 326              	.LBB294:
 327              	.LBI294:
 328              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 329              		.loc 2 531 20 view .LVU107
 330              	.LBE294:
 331              	.LBE293:
 332              	.LBE292:
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 333              		.loc 2 533 3 view .LVU108
 334              	.LBB363:
 335              	.LBB348:
 336              	.LBB306:
 337              	.LBB295:
 338              	.LBI295:
 339              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 340              		.loc 3 393 20 view .LVU109
 341              	.LBE295:
 342              	.LBE306:
 343              	.LBE348:
 344              	.LBE363:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 345              		.loc 3 395 3 view .LVU110
 346              	.LBB364:
 347              	.LBB349:
 348              	.LBB307:
 349              	.LBB303:
 350              	.LBB296:
 351              	.LBI296:
 352              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock_from_isr(void) {
 353              		.loc 4 406 20 view .LVU111
 354              	.LBE296:
 355              	.LBE303:
 356              	.LBE307:
 357              	.LBE349:
 358              	.LBE364:
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_lock();
 359              		.loc 4 408 3 view .LVU112
 360              	.LBB365:
 361              	.LBB350:
 362              	.LBB308:
 363              	.LBB304:
 364              	.LBB301:
 365              	.LBB297:
 366              	.LBI297:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 367              		.loc 4 387 20 view .LVU113
 368              	.LBE297:
 369              	.LBE301:
 370              	.LBE304:
 371              	.LBE308:
 372              	.LBE350:
 373              	.LBE365:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 374              		.loc 4 389 3 view .LVU114
 375              	.LBB366:
 376              	.LBB351:
 377              	.LBB309:
 378              	.LBB305:
 379              	.LBB302:
 380              	.LBB300:
 381              	.LBB298:
 382              	.LBI298:
 383              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 384              		.loc 5 140 27 view .LVU115
 385              	.LBB299:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 386              		.loc 5 142 3 view .LVU116
 387              		.syntax divided
 388              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 389 006e 72B6     		cpsid i
 390              	@ 0 "" 2
 391              		.thumb
 392              		.syntax unified
 393              	.LBE299:
 394              	.LBE298:
 395              	.LBE300:
 396              	.LBE302:
 397              	.LBE305:
 398              	.LBE309:
 399              	.LBE351:
 400              	.LBE366:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 401              		.loc 3 396 34 view .LVU117
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 402              		.loc 3 397 29 view .LVU118
 403              	.LBB367:
 404              	.LBB352:
 255:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 405              		.loc 1 255 5 view .LVU119
 406              	.LVL20:
 407              	.LBB310:
 408              	.LBI310:
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 409              		.loc 2 773 20 view .LVU120
 410              	.LBB311:
 774:./lib/chibios/os/hal/osal/rt/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 411              		.loc 2 775 3 view .LVU121
 412 0070 0221     		movs	r1, #2
 413 0072 2000     		movs	r0, r4
 414 0074 4942     		rsbs	r1, r1, #0
 415 0076 1C30     		adds	r0, r0, #28
 416              	.LVL21:
 417              	.L43:
 418              		.loc 2 775 3 is_stmt 0 view .LVU122
 419              	.LBE311:
 420              	.LBE310:
 421              	.LBB312:
 422              	.LBB313:
 423 0078 FFF7FEFF 		bl	chThdResumeI
 424              	.LVL22:
 425              	.LBE313:
 426              	.LBE312:
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 427              		.loc 1 349 5 is_stmt 1 view .LVU123
 428              	.LBB315:
 429              	.LBI315:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 430              		.loc 2 542 20 view .LVU124
 431              	.LBE315:
 432              	.LBE352:
 433              	.LBE367:
 544:./lib/chibios/os/hal/osal/rt/osal.h **** }
 434              		.loc 2 544 3 view .LVU125
 435              	.LBB368:
 436              	.LBB353:
 437              	.LBB327:
 438              	.LBB316:
 439              	.LBI316:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 440              		.loc 3 413 20 view .LVU126
 441              	.LBE316:
 442              	.LBE327:
 443              	.LBE353:
 444              	.LBE368:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 445              		.loc 3 415 31 view .LVU127
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 446              		.loc 3 416 33 view .LVU128
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 447              		.loc 3 417 3 view .LVU129
 448              	.LBB369:
 449              	.LBB354:
 450              	.LBB328:
 451              	.LBB324:
 452              	.LBB317:
 453              	.LBI317:
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock_from_isr(void) {
 454              		.loc 4 416 20 view .LVU130
 455              	.LBE317:
 456              	.LBE324:
 457              	.LBE328:
 458              	.LBE354:
 459              	.LBE369:
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_unlock();
 460              		.loc 4 418 3 view .LVU131
 461              	.LBB370:
 462              	.LBB355:
 463              	.LBB329:
 464              	.LBB325:
 465              	.LBB322:
 466              	.LBB318:
 467              	.LBI318:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 468              		.loc 4 396 20 view .LVU132
 469              	.LBE318:
 470              	.LBE322:
 471              	.LBE325:
 472              	.LBE329:
 473              	.LBE355:
 474              	.LBE370:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 475              		.loc 4 398 3 view .LVU133
 476              	.LBB371:
 477              	.LBB356:
 478              	.LBB330:
 479              	.LBB326:
 480              	.LBB323:
 481              	.LBB321:
 482              	.LBB319:
 483              	.LBI319:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 484              		.loc 5 129 27 view .LVU134
 485              	.LBB320:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 486              		.loc 5 131 3 view .LVU135
 487              		.syntax divided
 488              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 489 007c 62B6     		cpsie i
 490              	@ 0 "" 2
 491              		.thumb
 492              		.syntax unified
 493 007e 01E0     		b	.L18
 494              	.LVL23:
 495              	.L16:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 496              		.loc 5 131 3 is_stmt 0 view .LVU136
 497              	.LBE320:
 498              	.LBE319:
 499              	.LBE321:
 500              	.LBE323:
 501              	.LBE326:
 502              	.LBE330:
 503              	.LBE356:
 504              	.LBE371:
 505              	.LBB372:
 506              	.LBB291:
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 507              		.loc 1 385 3 is_stmt 1 view .LVU137
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 508              		.loc 1 385 6 is_stmt 0 view .LVU138
 509 0080 002A     		cmp	r2, #0
 510 0082 F4D1     		bne	.L44
 511              	.LVL24:
 512              	.L18:
 385:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 513              		.loc 1 385 6 view .LVU139
 514              	.LBE291:
 515              	.LBE372:
 410:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 411:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD1, isr);
 412:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 413:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 516              		.loc 1 413 3 is_stmt 1 view .LVU140
 517              		.loc 1 413 3 view .LVU141
 518              		.loc 1 413 3 view .LVU142
 519              		.loc 1 413 3 view .LVU143
 520              		.loc 1 413 3 view .LVU144
 521 0084 3000     		movs	r0, r6
 522 0086 FFF7FEFF 		bl	_port_irq_epilogue
 523              	.LVL25:
 414:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 524              		.loc 1 414 1 is_stmt 0 view .LVU145
 525              		@ sp needed
 526              	.LVL26:
 527              		.loc 1 414 1 view .LVU146
 528 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 529              	.LVL27:
 530              	.L12:
 410:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 531              		.loc 1 410 8 is_stmt 1 view .LVU147
 410:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 532              		.loc 1 410 16 is_stmt 0 view .LVU148
 533 008c FE22     		movs	r2, #254
 410:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 534              		.loc 1 410 11 view .LVU149
 535 008e 1342     		tst	r3, r2
 536 0090 F8D0     		beq	.L18
 411:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 537              		.loc 1 411 5 is_stmt 1 view .LVU150
 538              	.LVL28:
 539              	.LBB373:
 540              	.LBI292:
 234:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 541              		.loc 1 234 13 view .LVU151
 542              	.LBB357:
 235:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 543              		.loc 1 235 3 view .LVU152
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 544              		.loc 1 238 3 view .LVU153
 238:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 545              		.loc 1 238 6 is_stmt 0 view .LVU154
 546 0092 DA06     		lsls	r2, r3, #27
 547 0094 22D5     		bpl	.L20
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 548              		.loc 1 241 5 is_stmt 1 view .LVU155
 549 0096 0F20     		movs	r0, #15
 550 0098 E36A     		ldr	r3, [r4, #44]
 551              	.LVL29:
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 552              		.loc 1 241 5 is_stmt 0 view .LVU156
 553 009a 5968     		ldr	r1, [r3, #4]
 554 009c 0A68     		ldr	r2, [r1]
 555 009e 8243     		bics	r2, r0
 556 00a0 0A60     		str	r2, [r1]
 557              	.LVL30:
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 558              		.loc 1 241 5 is_stmt 1 view .LVU157
 559 00a2 597B     		ldrb	r1, [r3, #13]
 560 00a4 1A68     		ldr	r2, [r3]
 561 00a6 0E23     		movs	r3, #14
 562 00a8 1F00     		movs	r7, r3
 563 00aa 8F40     		lsls	r7, r7, r1
 564 00ac 5760     		str	r7, [r2, #4]
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 565              		.loc 1 241 5 view .LVU158
 241:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamDisable(i2cp->dmarx);
 566              		.loc 1 241 34 view .LVU159
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 567              		.loc 1 242 5 view .LVU160
 568 00ae A26A     		ldr	r2, [r4, #40]
 569 00b0 5768     		ldr	r7, [r2, #4]
 570 00b2 3968     		ldr	r1, [r7]
 571 00b4 8143     		bics	r1, r0
 572 00b6 3960     		str	r1, [r7]
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 573              		.loc 1 242 5 view .LVU161
 574 00b8 1168     		ldr	r1, [r2]
 575 00ba 527B     		ldrb	r2, [r2, #13]
 576 00bc 9340     		lsls	r3, r3, r2
 577 00be 4B60     		str	r3, [r1, #4]
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 578              		.loc 1 242 5 view .LVU162
 242:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 579              		.loc 1 242 34 view .LVU163
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 580              		.loc 1 246 5 view .LVU164
 246:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 581              		.loc 1 246 18 is_stmt 0 view .LVU165
 582 00c0 0423     		movs	r3, #4
 583 00c2 A268     		ldr	r2, [r4, #8]
 584 00c4 1343     		orrs	r3, r2
 585 00c6 A360     		str	r3, [r4, #8]
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 586              		.loc 1 249 5 is_stmt 1 view .LVU166
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 587              		.loc 1 249 13 is_stmt 0 view .LVU167
 588 00c8 8023     		movs	r3, #128
 589 00ca 6A68     		ldr	r2, [r5, #4]
 590 00cc DB01     		lsls	r3, r3, #7
 591 00ce 1343     		orrs	r3, r2
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 592              		.loc 1 252 13 view .LVU168
 593 00d0 4622     		movs	r2, #70
 249:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 594              		.loc 1 249 13 view .LVU169
 595 00d2 6B60     		str	r3, [r5, #4]
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 596              		.loc 1 252 5 is_stmt 1 view .LVU170
 252:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 597              		.loc 1 252 13 is_stmt 0 view .LVU171
 598 00d4 2B68     		ldr	r3, [r5]
 599 00d6 9343     		bics	r3, r2
 600 00d8 2B60     		str	r3, [r5]
 601 00da C8E7     		b	.L44
 602              	.LVL31:
 603              	.L20:
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 604              		.loc 1 291 3 is_stmt 1 view .LVU172
 291:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 605              		.loc 1 291 6 is_stmt 0 view .LVU173
 606 00dc 1A06     		lsls	r2, r3, #24
 607 00de 09D5     		bpl	.L21
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 608              		.loc 1 292 5 is_stmt 1 view .LVU174
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 609              		.loc 1 292 8 is_stmt 0 view .LVU175
 610 00e0 2378     		ldrb	r3, [r4]
 611              	.LVL32:
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 612              		.loc 1 293 7 view .LVU176
 613 00e2 2000     		movs	r0, r4
 292:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       i2c_lld_setup_tx_transfer(i2cp);
 614              		.loc 1 292 8 view .LVU177
 615 00e4 032B     		cmp	r3, #3
 616 00e6 02D1     		bne	.L22
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 617              		.loc 1 293 7 is_stmt 1 view .LVU178
 618 00e8 FFF7FEFF 		bl	i2c_lld_setup_tx_transfer
 619              	.LVL33:
 293:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 620              		.loc 1 293 7 is_stmt 0 view .LVU179
 621 00ec CAE7     		b	.L18
 622              	.LVL34:
 623              	.L22:
 296:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 624              		.loc 1 296 7 is_stmt 1 view .LVU180
 625 00ee FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 626              	.LVL35:
 296:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 627              		.loc 1 296 7 is_stmt 0 view .LVU181
 628 00f2 C7E7     		b	.L18
 629              	.LVL36:
 630              	.L21:
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 631              		.loc 1 302 3 is_stmt 1 view .LVU182
 302:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (i2cp->state == I2C_ACTIVE_TX) {
 632              		.loc 1 302 6 is_stmt 0 view .LVU183
 633 00f4 5B06     		lsls	r3, r3, #25
 634 00f6 C5D5     		bpl	.L18
 635              	.LVL37:
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 636              		.loc 1 303 5 is_stmt 1 view .LVU184
 637 00f8 A36A     		ldr	r3, [r4, #40]
 303:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       /* End of the transmit phase.*/
 638              		.loc 1 303 8 is_stmt 0 view .LVU185
 639 00fa 2178     		ldrb	r1, [r4]
 640 00fc 5A68     		ldr	r2, [r3, #4]
 641 00fe 0F20     		movs	r0, #15
 642 0100 0329     		cmp	r1, #3
 643 0102 1DD1     		bne	.L23
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 644              		.loc 1 308 7 is_stmt 1 view .LVU186
 645 0104 E36A     		ldr	r3, [r4, #44]
 646 0106 5F68     		ldr	r7, [r3, #4]
 647 0108 3968     		ldr	r1, [r7]
 648 010a 8143     		bics	r1, r0
 649 010c 3960     		str	r1, [r7]
 650              	.LVL38:
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 651              		.loc 1 308 7 view .LVU187
 652 010e 587B     		ldrb	r0, [r3, #13]
 653 0110 1968     		ldr	r1, [r3]
 654 0112 0E23     		movs	r3, #14
 655 0114 8340     		lsls	r3, r3, r0
 656 0116 4B60     		str	r3, [r1, #4]
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 657              		.loc 1 308 7 view .LVU188
 308:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 658              		.loc 1 308 36 view .LVU189
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 659              		.loc 1 312 7 view .LVU190
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 660              		.loc 1 312 11 is_stmt 0 view .LVU191
 661 0118 5368     		ldr	r3, [r2, #4]
 312:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         /* Setting up the peripheral.*/
 662              		.loc 1 312 10 view .LVU192
 663 011a 002B     		cmp	r3, #0
 664 011c 18D0     		beq	.L24
 314:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 665              		.loc 1 314 9 is_stmt 1 view .LVU193
 666 011e 2000     		movs	r0, r4
 667 0120 FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 668              	.LVL39:
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 669              		.loc 1 318 9 view .LVU194
 670 0124 A36A     		ldr	r3, [r4, #40]
 671 0126 5A68     		ldr	r2, [r3, #4]
 672 0128 0123     		movs	r3, #1
 673 012a 1168     		ldr	r1, [r2]
 674 012c 0B43     		orrs	r3, r1
 675 012e 1360     		str	r3, [r2]
 318:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 676              		.loc 1 318 37 view .LVU195
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 677              		.loc 1 325 9 view .LVU196
 325:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 678              		.loc 1 325 17 is_stmt 0 view .LVU197
 679 0130 8023     		movs	r3, #128
 680 0132 6A68     		ldr	r2, [r5, #4]
 681 0134 9B01     		lsls	r3, r3, #6
 682 0136 1343     		orrs	r3, r2
 683 0138 6B60     		str	r3, [r5, #4]
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 684              		.loc 1 328 9 is_stmt 1 view .LVU198
 328:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 685              		.loc 1 328 21 is_stmt 0 view .LVU199
 686 013a 0423     		movs	r3, #4
 687 013c 2370     		strb	r3, [r4]
 331:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 688              		.loc 1 331 9 is_stmt 1 view .LVU200
 689 013e A1E7     		b	.L18
 690              	.LVL40:
 691              	.L23:
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 692              		.loc 1 338 7 view .LVU201
 693 0140 1168     		ldr	r1, [r2]
 694 0142 8143     		bics	r1, r0
 695 0144 1160     		str	r1, [r2]
 696              	.LVL41:
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 697              		.loc 1 338 7 view .LVU202
 698 0146 597B     		ldrb	r1, [r3, #13]
 699 0148 1A68     		ldr	r2, [r3]
 700 014a 0E23     		movs	r3, #14
 701 014c 8B40     		lsls	r3, r3, r1
 702 014e 5360     		str	r3, [r2, #4]
 703              	.L24:
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 704              		.loc 1 338 7 view .LVU203
 338:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 705              		.loc 1 338 36 view .LVU204
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 706              		.loc 1 343 5 view .LVU205
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 707              		.loc 1 343 13 is_stmt 0 view .LVU206
 708 0150 8023     		movs	r3, #128
 709 0152 6A68     		ldr	r2, [r5, #4]
 710 0154 DB01     		lsls	r3, r3, #7
 711 0156 1343     		orrs	r3, r2
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 712              		.loc 1 346 13 view .LVU207
 713 0158 4022     		movs	r2, #64
 343:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 714              		.loc 1 343 13 view .LVU208
 715 015a 6B60     		str	r3, [r5, #4]
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 716              		.loc 1 346 5 is_stmt 1 view .LVU209
 346:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 717              		.loc 1 346 13 is_stmt 0 view .LVU210
 718 015c 2B68     		ldr	r3, [r5]
 719 015e 9343     		bics	r3, r2
 720 0160 2B60     		str	r3, [r5]
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 721              		.loc 1 349 5 is_stmt 1 view .LVU211
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 722              		.loc 1 349 5 view .LVU212
 723              	.LBB331:
 724              	.LBI331:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 725              		.loc 2 531 20 view .LVU213
 726              	.LBE331:
 727              	.LBE357:
 728              	.LBE373:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 729              		.loc 2 533 3 view .LVU214
 730              	.LBB374:
 731              	.LBB358:
 732              	.LBB343:
 733              	.LBB332:
 734              	.LBI332:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 735              		.loc 3 393 20 view .LVU215
 736              	.LBE332:
 737              	.LBE343:
 738              	.LBE358:
 739              	.LBE374:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 740              		.loc 3 395 3 view .LVU216
 741              	.LBB375:
 742              	.LBB359:
 743              	.LBB344:
 744              	.LBB340:
 745              	.LBB333:
 746              	.LBI333:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 747              		.loc 4 406 20 view .LVU217
 748              	.LBE333:
 749              	.LBE340:
 750              	.LBE344:
 751              	.LBE359:
 752              	.LBE375:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 753              		.loc 4 408 3 view .LVU218
 754              	.LBB376:
 755              	.LBB360:
 756              	.LBB345:
 757              	.LBB341:
 758              	.LBB338:
 759              	.LBB334:
 760              	.LBI334:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 761              		.loc 4 387 20 view .LVU219
 762              	.LBE334:
 763              	.LBE338:
 764              	.LBE341:
 765              	.LBE345:
 766              	.LBE360:
 767              	.LBE376:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 768              		.loc 4 389 3 view .LVU220
 769              	.LBB377:
 770              	.LBB361:
 771              	.LBB346:
 772              	.LBB342:
 773              	.LBB339:
 774              	.LBB337:
 775              	.LBB335:
 776              	.LBI335:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 777              		.loc 5 140 27 view .LVU221
 778              	.LBB336:
 779              		.loc 5 142 3 view .LVU222
 780              		.syntax divided
 781              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 782 0162 72B6     		cpsid i
 783              	@ 0 "" 2
 784              		.thumb
 785              		.syntax unified
 786              	.LBE336:
 787              	.LBE335:
 788              	.LBE337:
 789              	.LBE339:
 790              	.LBE342:
 791              	.LBE346:
 792              	.LBE361:
 793              	.LBE377:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 794              		.loc 3 396 34 view .LVU223
 397:./lib/chibios/os/rt/include/chsys.h **** }
 795              		.loc 3 397 29 view .LVU224
 796              	.LBB378:
 797              	.LBB362:
 349:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 798              		.loc 1 349 5 view .LVU225
 799              	.LVL42:
 800              	.LBB347:
 801              	.LBI312:
 773:./lib/chibios/os/hal/osal/rt/osal.h **** 
 802              		.loc 2 773 20 view .LVU226
 803              	.LBB314:
 804              		.loc 2 775 3 view .LVU227
 805 0164 2000     		movs	r0, r4
 806 0166 0021     		movs	r1, #0
 807 0168 1C30     		adds	r0, r0, #28
 808 016a 85E7     		b	.L43
 809              	.L46:
 810              		.align	2
 811              	.L45:
 812 016c 00000000 		.word	.LANCHOR0
 813              	.LBE314:
 814              	.LBE347:
 815              	.LBE362:
 816              	.LBE378:
 817              		.cfi_endproc
 818              	.LFE192:
 820              		.section	.text.i2c_lld_init,"ax",%progbits
 821              		.align	1
 822              		.global	i2c_lld_init
 823              		.syntax unified
 824              		.code	16
 825              		.thumb_func
 826              		.fpu softvfp
 828              	i2c_lld_init:
 829              	.LFB193:
 415:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 416:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_HANDLER) && defined(STM32_I2C1_ERROR_HANDLER)
 417:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_EVENT_HANDLER) {
 418:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 419:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 420:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 421:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 422:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 423:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr & I2C_INT_MASK;
 424:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 425:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD1, isr);
 426:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 427:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 428:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 429:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 430:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C1_ERROR_HANDLER) {
 431:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD1.i2c->ISR;
 432:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 433:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 434:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 435:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 436:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c->ICR = isr & I2C_ERROR_MASK;
 437:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 438:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD1, isr);
 439:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 440:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 441:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 442:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 443:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 444:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt handlers not defined"
 445:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 446:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 447:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2 || defined(__DOXYGEN__)
 449:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 450:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 451:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C2 event interrupt handler.
 452:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 453:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 454:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 455:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_GLOBAL_HANDLER) {
 456:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 457:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 458:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 459:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 460:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 461:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr;
 462:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 463:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 464:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD2, isr);
 465:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 466:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD2, isr);
 467:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 468:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 469:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 470:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 471:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_HANDLER) && defined(STM32_I2C2_ERROR_HANDLER)
 472:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_EVENT_HANDLER) {
 473:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 474:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 475:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 476:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 477:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 478:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr & I2C_INT_MASK;
 479:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 480:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD2, isr);
 481:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 482:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 483:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 484:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 485:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C2_ERROR_HANDLER) {
 486:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD2.i2c->ISR;
 487:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 488:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 489:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 490:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 491:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c->ICR = isr & I2C_ERROR_MASK;
 492:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 493:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD2, isr);
 494:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 495:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 496:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 497:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 498:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 499:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt handlers not defined"
 500:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 501:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 502:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 503:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3 || defined(__DOXYGEN__)
 504:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 505:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 506:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C3 event interrupt handler.
 507:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 508:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 509:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 510:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_GLOBAL_HANDLER) {
 511:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 512:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 513:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 514:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 515:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 516:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr;
 517:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 518:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 519:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD3, isr);
 520:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 521:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD3, isr);
 522:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 523:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 524:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 525:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 526:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_HANDLER) && defined(STM32_I2C3_ERROR_HANDLER)
 527:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_EVENT_HANDLER) {
 528:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 529:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 530:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 531:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 532:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 533:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr & I2C_INT_MASK;
 534:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 535:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD3, isr);
 536:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 537:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 538:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 539:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 540:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C3_ERROR_HANDLER) {
 541:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD3.i2c->ISR;
 542:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 543:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 544:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 545:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 546:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c->ICR = isr & I2C_ERROR_MASK;
 547:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 548:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD3, isr);
 549:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 550:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 551:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 552:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 553:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 554:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt handlers not defined"
 555:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 556:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 557:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 558:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4 || defined(__DOXYGEN__)
 559:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_HANDLER) || defined(__DOXYGEN__)
 560:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 561:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   I2C4 event interrupt handler.
 562:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 563:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 564:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 565:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_GLOBAL_HANDLER) {
 566:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 567:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 568:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 569:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 570:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 571:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr;
 572:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 573:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (isr & I2C_ERROR_MASK)
 574:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_error_interrupt(&I2CD4, isr);
 575:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else if (isr & I2C_INT_MASK)
 576:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_serve_interrupt(&I2CD4, isr);
 577:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 578:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 579:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 580:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 581:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_HANDLER) && defined(STM32_I2C4_ERROR_HANDLER)
 582:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_EVENT_HANDLER) {
 583:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 584:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 585:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 586:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 587:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 588:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr & I2C_INT_MASK;
 589:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 590:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_interrupt(&I2CD4, isr);
 591:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 592:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 593:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 594:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 595:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(STM32_I2C4_ERROR_HANDLER) {
 596:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   uint32_t isr = I2CD4.i2c->ISR;
 597:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 598:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
 599:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 600:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Clearing IRQ bits.*/
 601:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c->ICR = isr & I2C_ERROR_MASK;
 602:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 603:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_serve_error_interrupt(&I2CD4, isr);
 604:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 605:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 606:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 607:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 608:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 609:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt handlers not defined"
 610:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 611:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 612:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 613:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 614:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /* Driver exported functions.                                                */
 615:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /*===========================================================================*/
 616:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 617:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 618:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Low level I2C driver initialization.
 619:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 620:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 621:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 622:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_init(void) {
 830              		.loc 1 622 25 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 623:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 624:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 625:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD1);
 834              		.loc 1 625 3 view .LVU229
 622:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 835              		.loc 1 622 25 is_stmt 0 view .LVU230
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840              		.loc 1 625 3 view .LVU231
 841 0002 054C     		ldr	r4, .L48
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.i2c    = I2C1;
 628:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 629:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmarx  = NULL;
 630:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmatx  = NULL;
 631:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 632:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 633:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 634:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 635:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD2);
 636:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.thread = NULL;
 637:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.i2c    = I2C2;
 638:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 639:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.dmarx  = NULL;
 640:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD2.dmatx  = NULL;
 641:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 642:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 643:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 644:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 645:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD3);
 646:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.thread = NULL;
 647:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.i2c    = I2C3;
 648:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 649:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.dmarx  = NULL;
 650:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD3.dmatx  = NULL;
 651:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 652:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 653:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 654:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 655:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cObjectInit(&I2CD4);
 656:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.thread = NULL;
 657:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.i2c    = I2C4;
 658:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 659:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.dmarx  = NULL;
 660:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD4.dmatx  = NULL;
 661:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 662:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 663:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 842              		.loc 1 663 1 view .LVU232
 843              		@ sp needed
 625:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 844              		.loc 1 625 3 view .LVU233
 845 0004 2000     		movs	r0, r4
 846 0006 FFF7FEFF 		bl	i2cObjectInit
 847              	.LVL43:
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 848              		.loc 1 626 3 is_stmt 1 view .LVU234
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 849              		.loc 1 626 16 is_stmt 0 view .LVU235
 850 000a 0023     		movs	r3, #0
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 851              		.loc 1 627 16 view .LVU236
 852 000c 034A     		ldr	r2, .L48+4
 626:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 853              		.loc 1 626 16 view .LVU237
 854 000e E361     		str	r3, [r4, #28]
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 855              		.loc 1 627 3 is_stmt 1 view .LVU238
 627:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 856              		.loc 1 627 16 is_stmt 0 view .LVU239
 857 0010 2263     		str	r2, [r4, #48]
 629:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmatx  = NULL;
 858              		.loc 1 629 3 is_stmt 1 view .LVU240
 629:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2CD1.dmatx  = NULL;
 859              		.loc 1 629 16 is_stmt 0 view .LVU241
 860 0012 A362     		str	r3, [r4, #40]
 630:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 861              		.loc 1 630 3 is_stmt 1 view .LVU242
 630:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 862              		.loc 1 630 16 is_stmt 0 view .LVU243
 863 0014 E362     		str	r3, [r4, #44]
 864              		.loc 1 663 1 view .LVU244
 865 0016 10BD     		pop	{r4, pc}
 866              	.L49:
 867              		.align	2
 868              	.L48:
 869 0018 00000000 		.word	.LANCHOR0
 870 001c 00540040 		.word	1073763328
 871              		.cfi_endproc
 872              	.LFE193:
 874              		.section	.text.i2c_lld_start,"ax",%progbits
 875              		.align	1
 876              		.global	i2c_lld_start
 877              		.syntax unified
 878              		.code	16
 879              		.thumb_func
 880              		.fpu softvfp
 882              	i2c_lld_start:
 883              	.LVL44:
 884              	.LFB194:
 664:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 665:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 666:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Configures and activates the I2C peripheral.
 667:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 668:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 669:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 670:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 671:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_start(I2CDriver *i2cp) {
 885              		.loc 1 672 37 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 889              		.loc 1 673 3 view .LVU246
 674:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 675:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Make sure I2C peripheral is disabled */
 676:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 &= ~I2C_CR1_PE;
 890              		.loc 1 676 11 is_stmt 0 view .LVU247
 891 0000 0122     		movs	r2, #1
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 892              		.loc 1 672 37 view .LVU248
 893 0002 70B5     		push	{r4, r5, r6, lr}
 894              		.cfi_def_cfa_offset 16
 895              		.cfi_offset 4, -16
 896              		.cfi_offset 5, -12
 897              		.cfi_offset 6, -8
 898              		.cfi_offset 14, -4
 673:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 899              		.loc 1 673 16 view .LVU249
 900 0004 056B     		ldr	r5, [r0, #48]
 901              	.LVL45:
 902              		.loc 1 676 3 is_stmt 1 view .LVU250
 672:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 903              		.loc 1 672 37 is_stmt 0 view .LVU251
 904 0006 0400     		movs	r4, r0
 905              		.loc 1 676 11 view .LVU252
 906 0008 2B68     		ldr	r3, [r5]
 907 000a 9343     		bics	r3, r2
 908 000c 2B60     		str	r3, [r5]
 677:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 678:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If in stopped state then enables the I2C and DMA clocks.*/
 679:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->state == I2C_STOP) {
 909              		.loc 1 679 3 is_stmt 1 view .LVU253
 910              		.loc 1 679 6 is_stmt 0 view .LVU254
 911 000e 0378     		ldrb	r3, [r0]
 912 0010 9342     		cmp	r3, r2
 913 0012 2FD1     		bne	.L52
 680:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 681:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 682:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Common DMA modes.*/
 683:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->txdmamode = DMAMODE_COMMON | STM32_DMA_CR_DIR_M2P;
 914              		.loc 1 683 5 is_stmt 1 view .LVU255
 915              		.loc 1 683 21 is_stmt 0 view .LVU256
 916 0014 9A23     		movs	r3, #154
 917 0016 4362     		str	r3, [r0, #36]
 684:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->rxdmamode = DMAMODE_COMMON | STM32_DMA_CR_DIR_P2M;
 918              		.loc 1 684 5 is_stmt 1 view .LVU257
 919              		.loc 1 684 21 is_stmt 0 view .LVU258
 920 0018 103B     		subs	r3, r3, #16
 921 001a 0362     		str	r3, [r0, #32]
 685:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 686:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 687:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 688:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD1 == i2cp) {
 922              		.loc 1 688 5 is_stmt 1 view .LVU259
 923              		.loc 1 688 8 is_stmt 0 view .LVU260
 924 001c 204B     		ldr	r3, .L54
 925 001e 9842     		cmp	r0, r3
 926 0020 28D1     		bne	.L52
 689:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 690:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C1();
 927              		.loc 1 690 7 is_stmt 1 view .LVU261
 928 0022 8022     		movs	r2, #128
 929 0024 1F4B     		ldr	r3, .L54+4
 930 0026 9203     		lsls	r2, r2, #14
 931 0028 1969     		ldr	r1, [r3, #16]
 932 002a 1F48     		ldr	r0, .L54+8
 933              	.LVL46:
 934              		.loc 1 690 7 is_stmt 0 view .LVU262
 935 002c 1143     		orrs	r1, r2
 936 002e 1961     		str	r1, [r3, #16]
 937              		.loc 1 690 7 is_stmt 1 view .LVU263
 938 0030 1969     		ldr	r1, [r3, #16]
 939 0032 0140     		ands	r1, r0
 940 0034 1961     		str	r1, [r3, #16]
 941              		.loc 1 690 7 view .LVU264
 942 0036 1969     		ldr	r1, [r3, #16]
 943              		.loc 1 690 21 view .LVU265
 691:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C1(true);
 944              		.loc 1 691 7 view .LVU266
 945 0038 D969     		ldr	r1, [r3, #28]
 692:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 693:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 694:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C1_RX_DMA_STREAM,
 946              		.loc 1 694 23 is_stmt 0 view .LVU267
 947 003a 0620     		movs	r0, #6
 691:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C1(true);
 948              		.loc 1 691 7 view .LVU268
 949 003c 0A43     		orrs	r2, r1
 950 003e DA61     		str	r2, [r3, #28]
 691:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C1(true);
 951              		.loc 1 691 7 is_stmt 1 view .LVU269
 952 0040 DB69     		ldr	r3, [r3, #28]
 691:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C1(true);
 953              		.loc 1 691 26 view .LVU270
 954              		.loc 1 694 9 view .LVU271
 955              		.loc 1 694 23 is_stmt 0 view .LVU272
 956 0042 0022     		movs	r2, #0
 957 0044 2300     		movs	r3, r4
 958 0046 0321     		movs	r1, #3
 959 0048 FFF7FEFF 		bl	dmaStreamAllocI
 960              	.LVL47:
 695:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 696:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 697:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 699:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 961              		.loc 1 699 23 view .LVU273
 962 004c 2300     		movs	r3, r4
 694:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 963              		.loc 1 694 21 view .LVU274
 964 004e A062     		str	r0, [r4, #40]
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 965              		.loc 1 698 9 is_stmt 1 view .LVU275
 698:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C1_TX_DMA_STREAM,
 966              		.loc 1 698 9 view .LVU276
 967              		.loc 1 699 9 view .LVU277
 968              		.loc 1 699 23 is_stmt 0 view .LVU278
 969 0050 0022     		movs	r2, #0
 970 0052 0321     		movs	r1, #3
 971 0054 0520     		movs	r0, #5
 972 0056 FFF7FEFF 		bl	dmaStreamAllocI
 973              	.LVL48:
 700:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 701:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 702:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 704:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 705:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C1_RX_DMA_CHANNEL) |
 974              		.loc 1 705 25 view .LVU279
 975 005a 8023     		movs	r3, #128
 976 005c 226A     		ldr	r2, [r4, #32]
 977 005e 5B01     		lsls	r3, r3, #5
 978 0060 1A43     		orrs	r2, r3
 979 0062 2262     		str	r2, [r4, #32]
 706:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 707:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C1_TX_DMA_CHANNEL) |
 980              		.loc 1 707 25 view .LVU280
 981 0064 626A     		ldr	r2, [r4, #36]
 699:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C1_IRQ_PRIORITY,
 982              		.loc 1 699 21 view .LVU281
 983 0066 E062     		str	r0, [r4, #44]
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 984              		.loc 1 703 9 is_stmt 1 view .LVU282
 703:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 985              		.loc 1 703 9 view .LVU283
 705:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 986              		.loc 1 705 9 view .LVU284
 987              		.loc 1 707 9 view .LVU285
 988              		.loc 1 707 25 is_stmt 0 view .LVU286
 989 0068 1343     		orrs	r3, r2
 708:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 709:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 710:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_DMA == TRUE */
 711:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 712:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 713:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_GLOBAL_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 990              		.loc 1 713 7 view .LVU287
 991 006a 0321     		movs	r1, #3
 992 006c 1720     		movs	r0, #23
 707:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C1_DMA_PRIORITY);
 993              		.loc 1 707 25 view .LVU288
 994 006e 6362     		str	r3, [r4, #36]
 995              		.loc 1 713 7 is_stmt 1 view .LVU289
 996 0070 FFF7FEFF 		bl	nvicEnableVector
 997              	.LVL49:
 998              	.L52:
 714:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_NUMBER) && defined(STM32_I2C1_ERROR_NUMBER)
 715:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_EVENT_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 716:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C1_ERROR_NUMBER, STM32_I2C_I2C1_IRQ_PRIORITY);
 717:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 718:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt numbers not defined"
 719:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 720:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 721:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C1 */
 722:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 723:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 724:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD2 == i2cp) {
 725:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 726:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C2();
 727:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C2(true);
 728:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 729:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 730:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C2_RX_DMA_STREAM,
 731:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C2_IRQ_PRIORITY,
 732:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 733:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 734:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 735:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C2_TX_DMA_STREAM,
 736:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C2_IRQ_PRIORITY,
 737:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 738:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 739:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 740:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 741:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C2_RX_DMA_CHANNEL) |
 742:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C2_DMA_PRIORITY);
 743:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C2_TX_DMA_CHANNEL) |
 744:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C2_DMA_PRIORITY);
 745:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 746:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /*STM32_I2C_USE_DMA == TRUE */
 747:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 748:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 749:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_GLOBAL_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 750:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_NUMBER) && defined(STM32_I2C2_ERROR_NUMBER)
 751:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_EVENT_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 752:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C2_ERROR_NUMBER, STM32_I2C_I2C2_IRQ_PRIORITY);
 753:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 754:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt numbers not defined"
 755:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 756:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 757:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C2 */
 758:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 759:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 760:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD3 == i2cp) {
 761:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 762:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C3();
 763:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C3(true);
 764:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 765:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 766:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C3_RX_DMA_STREAM,
 767:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C3_IRQ_PRIORITY,
 768:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 769:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 770:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 771:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C3_TX_DMA_STREAM,
 772:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C3_IRQ_PRIORITY,
 773:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 774:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 775:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 776:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 777:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C3_RX_DMA_CHANNEL) |
 778:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C3_DMA_PRIORITY);
 779:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C3_TX_DMA_CHANNEL) |
 780:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C3_DMA_PRIORITY);
 781:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 782:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /*STM32_I2C_USE_DMA == TRUE */
 783:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 784:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 785:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_GLOBAL_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 786:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_NUMBER) && defined(STM32_I2C3_ERROR_NUMBER)
 787:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_EVENT_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 788:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C3_ERROR_NUMBER, STM32_I2C_I2C3_IRQ_PRIORITY);
 789:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 790:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt numbers not defined"
 791:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 792:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 793:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C3 */
 794:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 795:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 796:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD4 == i2cp) {
 797:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 798:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccResetI2C4();
 799:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccEnableI2C4(true);
 800:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 801:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       {
 802:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmarx = dmaStreamAllocI(STM32_I2C_I2C4_RX_DMA_STREAM,
 803:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C4_IRQ_PRIORITY,
 804:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 805:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 806:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmarx != NULL, "unable to allocate stream");
 807:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->dmatx = dmaStreamAllocI(STM32_I2C_I2C4_TX_DMA_STREAM,
 808:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       STM32_I2C_I2C4_IRQ_PRIORITY,
 809:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       NULL,
 810:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       (void *)i2cp);
 811:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         osalDbgAssert(i2cp->dmatx != NULL, "unable to allocate stream");
 812:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 813:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->rxdmamode |= STM32_DMA_CR_CHSEL(I2C4_RX_DMA_CHANNEL) |
 814:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C4_DMA_PRIORITY);
 815:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****         i2cp->txdmamode |= STM32_DMA_CR_CHSEL(I2C4_TX_DMA_CHANNEL) |
 816:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                            STM32_DMA_CR_PL(STM32_I2C_I2C4_DMA_PRIORITY);
 817:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       }
 818:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /*STM32_I2C_USE_DMA == TRUE */
 819:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 820:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 821:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_GLOBAL_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 822:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_NUMBER) && defined(STM32_I2C4_ERROR_NUMBER)
 823:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_EVENT_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 824:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicEnableVector(STM32_I2C4_ERROR_NUMBER, STM32_I2C_I2C4_IRQ_PRIORITY);
 825:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 826:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt numbers not defined"
 827:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 828:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 829:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif /* STM32_I2C_USE_I2C4 */
 830:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 831:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 832:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 833:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* I2C registers pointed by the DMA.*/
 834:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmarx, &dp->RXDR);
 999              		.loc 1 834 3 view .LVU290
 1000 0074 2A00     		movs	r2, r5
 1001 0076 A36A     		ldr	r3, [r4, #40]
 1002 0078 2432     		adds	r2, r2, #36
 1003 007a 5B68     		ldr	r3, [r3, #4]
 835:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 836:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 837:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 838:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Reset i2c peripheral, the TCIE bit will be handled separately.*/
 839:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 = i2cp->config->cr1 |
 840:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 841:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR1_TXDMAEN | I2C_CR1_RXDMAEN | /* Enable only if using DMA */
 842:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 843:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****             I2C_CR1_ERRIE | I2C_CR1_NACKIE;
 844:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 845:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setup I2C parameters.*/
 846:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->TIMINGR = i2cp->config->timingr;
 847:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 848:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Ready to go.*/
 849:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_PE;
 850:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1004              		.loc 1 850 1 is_stmt 0 view .LVU291
 1005              		@ sp needed
 834:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 1006              		.loc 1 834 3 view .LVU292
 1007 007c 9A60     		str	r2, [r3, #8]
 834:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 1008              		.loc 1 834 49 is_stmt 1 view .LVU293
 835:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 1009              		.loc 1 835 3 view .LVU294
 1010 007e E36A     		ldr	r3, [r4, #44]
 1011 0080 0432     		adds	r2, r2, #4
 1012 0082 5B68     		ldr	r3, [r3, #4]
 1013 0084 9A60     		str	r2, [r3, #8]
 835:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetPeripheral(i2cp->dmatx, &dp->TXDR);
 1014              		.loc 1 835 49 view .LVU295
 839:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 1015              		.loc 1 839 3 view .LVU296
 839:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 1016              		.loc 1 839 17 is_stmt 0 view .LVU297
 1017 0086 6268     		ldr	r2, [r4, #4]
 843:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1018              		.loc 1 843 27 view .LVU298
 1019 0088 084B     		ldr	r3, .L54+12
 1020 008a 5168     		ldr	r1, [r2, #4]
 1021 008c 0B43     		orrs	r3, r1
 839:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 1022              		.loc 1 839 11 view .LVU299
 1023 008e 2B60     		str	r3, [r5]
 846:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1024              		.loc 1 846 3 is_stmt 1 view .LVU300
 846:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1025              		.loc 1 846 29 is_stmt 0 view .LVU301
 1026 0090 1368     		ldr	r3, [r2]
 846:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1027              		.loc 1 846 15 view .LVU302
 1028 0092 2B61     		str	r3, [r5, #16]
 849:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1029              		.loc 1 849 3 is_stmt 1 view .LVU303
 849:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1030              		.loc 1 849 11 is_stmt 0 view .LVU304
 1031 0094 0123     		movs	r3, #1
 1032 0096 2A68     		ldr	r2, [r5]
 1033 0098 1343     		orrs	r3, r2
 1034 009a 2B60     		str	r3, [r5]
 1035              	.LVL50:
 1036              	.LVL51:
 1037              		.loc 1 850 1 view .LVU305
 1038 009c 70BD     		pop	{r4, r5, r6, pc}
 1039              	.L55:
 1040 009e C046     		.align	2
 1041              	.L54:
 1042 00a0 00000000 		.word	.LANCHOR0
 1043 00a4 00100240 		.word	1073876992
 1044 00a8 FFFFDFFF 		.word	-2097153
 1045 00ac 90C00000 		.word	49296
 1046              		.cfi_endproc
 1047              	.LFE194:
 1049              		.section	.text.i2c_lld_stop,"ax",%progbits
 1050              		.align	1
 1051              		.global	i2c_lld_stop
 1052              		.syntax unified
 1053              		.code	16
 1054              		.thumb_func
 1055              		.fpu softvfp
 1057              	i2c_lld_stop:
 1058              	.LVL52:
 1059              	.LFB195:
 851:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 852:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 853:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Deactivates the I2C peripheral.
 854:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 855:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 856:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 857:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 858:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 859:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** void i2c_lld_stop(I2CDriver *i2cp) {
 1060              		.loc 1 859 36 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 860:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 861:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* If not in stopped state then disables the I2C clock.*/
 862:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (i2cp->state != I2C_STOP) {
 1064              		.loc 1 862 3 view .LVU307
 1065              		.loc 1 862 6 is_stmt 0 view .LVU308
 1066 0000 0378     		ldrb	r3, [r0]
 859:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1067              		.loc 1 859 36 view .LVU309
 1068 0002 70B5     		push	{r4, r5, r6, lr}
 1069              		.cfi_def_cfa_offset 16
 1070              		.cfi_offset 4, -16
 1071              		.cfi_offset 5, -12
 1072              		.cfi_offset 6, -8
 1073              		.cfi_offset 14, -4
 859:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1074              		.loc 1 859 36 view .LVU310
 1075 0004 0400     		movs	r4, r0
 1076              		.loc 1 862 6 view .LVU311
 1077 0006 012B     		cmp	r3, #1
 1078 0008 36D0     		beq	.L56
 863:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 864:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* I2C disable.*/
 865:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2c_lld_abort_operation(i2cp);
 1079              		.loc 1 865 5 is_stmt 1 view .LVU312
 1080              	.LVL53:
 1081              	.LBB381:
 1082              	.LBI381:
 206:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1083              		.loc 1 206 13 view .LVU313
 1084              	.LBB382:
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1085              		.loc 1 207 3 view .LVU314
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1086              		.loc 1 209 15 is_stmt 0 view .LVU315
 1087 000a 0123     		movs	r3, #1
 207:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1088              		.loc 1 207 16 view .LVU316
 1089 000c 026B     		ldr	r2, [r0, #48]
 1090              	.LVL54:
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1091              		.loc 1 209 3 is_stmt 1 view .LVU317
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1092              		.loc 1 209 9 is_stmt 0 view .LVU318
 1093 000e 1168     		ldr	r1, [r2]
 209:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* Stops the I2C peripheral.*/
 1094              		.loc 1 209 6 view .LVU319
 1095 0010 1942     		tst	r1, r3
 1096 0012 08D0     		beq	.L59
 1097              	.L61:
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 1098              		.loc 1 213 7 is_stmt 1 view .LVU320
 213:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR1 |= I2C_CR1_PE;
 1099              		.loc 1 213 15 is_stmt 0 view .LVU321
 1100 0014 1168     		ldr	r1, [r2]
 1101 0016 9943     		bics	r1, r3
 1102 0018 1160     		str	r1, [r2]
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 1103              		.loc 1 212 14 view .LVU322
 1104 001a 1168     		ldr	r1, [r2]
 212:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       dp->CR1 &= ~I2C_CR1_PE;
 1105              		.loc 1 212 11 view .LVU323
 1106 001c 1942     		tst	r1, r3
 1107 001e F9D1     		bne	.L61
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 1108              		.loc 1 214 5 is_stmt 1 view .LVU324
 214:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 1109              		.loc 1 214 13 is_stmt 0 view .LVU325
 1110 0020 1168     		ldr	r1, [r2]
 1111 0022 0B43     		orrs	r3, r1
 1112 0024 1360     		str	r3, [r2]
 1113              	.L59:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1114              		.loc 1 219 3 is_stmt 1 view .LVU326
 1115 0026 0F26     		movs	r6, #15
 1116 0028 E06A     		ldr	r0, [r4, #44]
 1117              	.LVL55:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1118              		.loc 1 219 3 is_stmt 0 view .LVU327
 1119 002a 4268     		ldr	r2, [r0, #4]
 1120              	.LVL56:
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1121              		.loc 1 219 3 view .LVU328
 1122 002c 1368     		ldr	r3, [r2]
 1123 002e B343     		bics	r3, r6
 1124 0030 1360     		str	r3, [r2]
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1125              		.loc 1 219 3 is_stmt 1 view .LVU329
 1126 0032 0E23     		movs	r3, #14
 1127 0034 1D00     		movs	r5, r3
 1128 0036 417B     		ldrb	r1, [r0, #13]
 1129 0038 0268     		ldr	r2, [r0]
 1130 003a 8D40     		lsls	r5, r5, r1
 1131 003c 5560     		str	r5, [r2, #4]
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1132              		.loc 1 219 3 view .LVU330
 219:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamDisable(i2cp->dmarx);
 1133              		.loc 1 219 32 view .LVU331
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1134              		.loc 1 220 3 view .LVU332
 1135 003e A26A     		ldr	r2, [r4, #40]
 1136 0040 5568     		ldr	r5, [r2, #4]
 1137 0042 2968     		ldr	r1, [r5]
 1138 0044 B143     		bics	r1, r6
 1139 0046 2960     		str	r1, [r5]
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1140              		.loc 1 220 3 view .LVU333
 1141 0048 1168     		ldr	r1, [r2]
 1142 004a 527B     		ldrb	r2, [r2, #13]
 1143 004c 9340     		lsls	r3, r3, r2
 1144 004e 4B60     		str	r3, [r1, #4]
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1145              		.loc 1 220 3 view .LVU334
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1146              		.loc 1 220 32 view .LVU335
 1147              	.LVL57:
 220:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1148              		.loc 1 220 32 is_stmt 0 view .LVU336
 1149              	.LBE382:
 1150              	.LBE381:
 866:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 867:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamFreeI(i2cp->dmatx);
 1151              		.loc 1 867 5 is_stmt 1 view .LVU337
 1152 0050 FFF7FEFF 		bl	dmaStreamFreeI
 1153              	.LVL58:
 868:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dmaStreamFreeI(i2cp->dmarx);
 1154              		.loc 1 868 5 view .LVU338
 1155 0054 A06A     		ldr	r0, [r4, #40]
 1156 0056 FFF7FEFF 		bl	dmaStreamFreeI
 1157              	.LVL59:
 869:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->dmatx = NULL;
 1158              		.loc 1 869 5 view .LVU339
 1159              		.loc 1 869 17 is_stmt 0 view .LVU340
 1160 005a 0023     		movs	r3, #0
 1161 005c E362     		str	r3, [r4, #44]
 870:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     i2cp->dmarx = NULL;
 1162              		.loc 1 870 5 is_stmt 1 view .LVU341
 1163              		.loc 1 870 17 is_stmt 0 view .LVU342
 1164 005e A362     		str	r3, [r4, #40]
 871:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 872:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 873:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C1
 874:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD1 == i2cp) {
 1165              		.loc 1 874 5 is_stmt 1 view .LVU343
 1166              		.loc 1 874 8 is_stmt 0 view .LVU344
 1167 0060 064B     		ldr	r3, .L66
 1168 0062 9C42     		cmp	r4, r3
 1169 0064 08D1     		bne	.L56
 875:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C1_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 876:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_GLOBAL_NUMBER);
 1170              		.loc 1 876 7 is_stmt 1 view .LVU345
 1171 0066 1720     		movs	r0, #23
 1172 0068 FFF7FEFF 		bl	nvicDisableVector
 1173              	.LVL60:
 877:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C1_EVENT_NUMBER) && defined(STM32_I2C1_ERROR_NUMBER)
 878:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_EVENT_NUMBER);
 879:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C1_ERROR_NUMBER);
 880:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 881:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C1 interrupt numbers not defined"
 882:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 883:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 884:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C1();
 1174              		.loc 1 884 7 view .LVU346
 1175 006c 044B     		ldr	r3, .L66+4
 1176 006e 0549     		ldr	r1, .L66+8
 1177 0070 DA69     		ldr	r2, [r3, #28]
 1178 0072 0A40     		ands	r2, r1
 1179 0074 DA61     		str	r2, [r3, #28]
 1180              		.loc 1 884 7 view .LVU347
 1181 0076 DB69     		ldr	r3, [r3, #28]
 1182              		.loc 1 884 23 view .LVU348
 1183              	.L56:
 885:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 886:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 887:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 888:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C2
 889:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD2 == i2cp) {
 890:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C2_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 891:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_GLOBAL_NUMBER);
 892:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C2_EVENT_NUMBER) && defined(STM32_I2C2_ERROR_NUMBER)
 893:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_EVENT_NUMBER);
 894:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C2_ERROR_NUMBER);
 895:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 896:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C2 interrupt numbers not defined"
 897:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 898:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 899:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C2();
 900:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 901:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 902:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 903:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C3
 904:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD3 == i2cp) {
 905:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C3_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 906:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_GLOBAL_NUMBER);
 907:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C3_EVENT_NUMBER) && defined(STM32_I2C3_ERROR_NUMBER)
 908:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_EVENT_NUMBER);
 909:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C3_ERROR_NUMBER);
 910:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 911:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C3 interrupt numbers not defined"
 912:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 913:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 914:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C3();
 915:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 916:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 917:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 918:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_I2C4
 919:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (&I2CD4 == i2cp) {
 920:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if defined(STM32_I2C4_GLOBAL_NUMBER) || defined(__DOXYGEN__)
 921:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_GLOBAL_NUMBER);
 922:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #elif defined(STM32_I2C4_EVENT_NUMBER) && defined(STM32_I2C4_ERROR_NUMBER)
 923:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_EVENT_NUMBER);
 924:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       nvicDisableVector(STM32_I2C4_ERROR_NUMBER);
 925:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 926:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #error "I2C4 interrupt numbers not defined"
 927:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 928:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 929:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       rccDisableI2C4();
 930:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 931:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 932:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
 933:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1184              		.loc 1 933 1 is_stmt 0 view .LVU349
 1185              		@ sp needed
 1186              	.LVL61:
 1187              		.loc 1 933 1 view .LVU350
 1188 0078 70BD     		pop	{r4, r5, r6, pc}
 1189              	.L67:
 1190 007a C046     		.align	2
 1191              	.L66:
 1192 007c 00000000 		.word	.LANCHOR0
 1193 0080 00100240 		.word	1073876992
 1194 0084 FFFFDFFF 		.word	-2097153
 1195              		.cfi_endproc
 1196              	.LFE195:
 1198              		.section	.text.i2c_lld_master_receive_timeout,"ax",%progbits
 1199              		.align	1
 1200              		.global	i2c_lld_master_receive_timeout
 1201              		.syntax unified
 1202              		.code	16
 1203              		.thumb_func
 1204              		.fpu softvfp
 1206              	i2c_lld_master_receive_timeout:
 1207              	.LVL62:
 1208              	.LFB196:
 934:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 935:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
 936:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Receives data via the I2C bus as master.
 937:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 938:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 939:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
 940:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[out] rxbuf    pointer to the receive buffer
 941:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] rxbytes   number of bytes to be received
 942:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 943:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      the following special values are allowed:
 944:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      - @a TIME_INFINITE no timeout.
 945:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      .
 946:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @return              The operation status.
 947:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 948:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 949:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 950:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 951:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 952:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 953:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
 954:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
 955:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
 956:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** msg_t i2c_lld_master_receive_timeout(I2CDriver *i2cp, i2caddr_t addr,
 957:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                      uint8_t *rxbuf, size_t rxbytes,
 958:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                      sysinterval_t timeout) {
 1209              		.loc 1 958 61 is_stmt 1 view -0
 1210              		.cfi_startproc
 1211              		@ args = 4, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 959:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1213              		.loc 1 959 3 view .LVU352
 960:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1214              		.loc 1 960 3 view .LVU353
 958:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1215              		.loc 1 958 61 is_stmt 0 view .LVU354
 1216 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1217              		.cfi_def_cfa_offset 24
 1218              		.cfi_offset 3, -24
 1219              		.cfi_offset 4, -20
 1220              		.cfi_offset 5, -16
 1221              		.cfi_offset 6, -12
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 958:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1224              		.loc 1 958 61 view .LVU355
 1225 0002 0400     		movs	r4, r0
 1226              		.loc 1 960 16 view .LVU356
 1227 0004 056B     		ldr	r5, [r0, #48]
 1228              	.LVL63:
 961:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1229              		.loc 1 961 3 is_stmt 1 view .LVU357
 962:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 963:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Resetting error flags for this transfer.*/
 964:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1230              		.loc 1 964 3 view .LVU358
 1231              		.loc 1 964 16 is_stmt 0 view .LVU359
 1232 0006 0020     		movs	r0, #0
 1233              	.LVL64:
 1234              		.loc 1 964 16 view .LVU360
 1235 0008 A060     		str	r0, [r4, #8]
 965:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 966:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Releases the lock from high level driver.*/
 967:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   osalSysUnlock();
 1236              		.loc 1 967 3 is_stmt 1 view .LVU361
 1237              	.LBB417:
 1238              	.LBI417:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1239              		.loc 2 520 20 view .LVU362
 1240              	.LBE417:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1241              		.loc 2 522 3 view .LVU363
 1242              	.LBB426:
 1243              	.LBB418:
 1244              	.LBI418:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1245              		.loc 3 365 20 view .LVU364
 1246              	.LBB419:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1247              		.loc 3 367 22 view .LVU365
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1248              		.loc 3 368 33 view .LVU366
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1249              		.loc 3 374 3 view .LVU367
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1250              		.loc 3 374 3 view .LVU368
 378:./lib/chibios/os/rt/include/chsys.h **** }
 1251              		.loc 3 378 3 view .LVU369
 1252              	.LBB420:
 1253              	.LBI420:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1254              		.loc 4 396 20 view .LVU370
 1255              	.LBE420:
 1256              	.LBE419:
 1257              	.LBE418:
 1258              	.LBE426:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1259              		.loc 4 398 3 view .LVU371
 1260              	.LBB427:
 1261              	.LBB425:
 1262              	.LBB424:
 1263              	.LBB423:
 1264              	.LBB421:
 1265              	.LBI421:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1266              		.loc 5 129 27 view .LVU372
 1267              	.LBB422:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1268              		.loc 5 131 3 view .LVU373
 1269              		.syntax divided
 1270              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1271 000a 62B6     		cpsie i
 1272              	@ 0 "" 2
 1273              		.thumb
 1274              		.syntax unified
 1275              	.LBE422:
 1276              	.LBE421:
 1277              	.LBE423:
 1278              	.LBE424:
 1279              	.LBE425:
 1280              	.LBE427:
 968:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 969:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
 970:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* RX DMA setup.*/
 971:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmarx, i2cp->rxdmamode);
 1281              		.loc 1 971 3 view .LVU374
 1282 000c A06A     		ldr	r0, [r4, #40]
 1283 000e 266A     		ldr	r6, [r4, #32]
 1284 0010 4068     		ldr	r0, [r0, #4]
 972:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 973:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 974:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 975:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxptr   = rxbuf;
 976:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 977:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
 978:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 979:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Calculating the time window for the timeout on the busy bus condition.*/
 980:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   start = osalOsGetSystemTimeX();
 981:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
 982:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 983:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits until BUSY flag is reset or, alternatively, for a timeout
 984:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      condition.*/
 985:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   while (true) {
 986:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
 987:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 988:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the bus is not busy then the operation can continue, note, the
 989:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        loop is exited in the locked state.*/
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if ((dp->ISR & I2C_ISR_BUSY) == 0)
 991:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 992:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 993:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the system time went outside the allowed window then a timeout
 994:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        condition is returned.*/
 995:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (!osalTimeIsInRangeX(osalOsGetSystemTimeX(), start, end)) {
 1285              		.loc 1 995 8 is_stmt 0 view .LVU375
 1286 0012 F427     		movs	r7, #244
 971:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1287              		.loc 1 971 3 view .LVU376
 1288 0014 0660     		str	r6, [r0]
 971:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1289              		.loc 1 971 49 is_stmt 1 view .LVU377
 972:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1290              		.loc 1 972 3 view .LVU378
 1291 0016 C260     		str	r2, [r0, #12]
 972:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1292              		.loc 1 972 42 view .LVU379
 973:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1293              		.loc 1 973 3 view .LVU380
 1294              	.LBB428:
 1295              	.LBB429:
 1296              	.LBB430:
 1297              	.LBB431:
 1298              	.LBB432:
 1299              		.file 6 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h"
   1:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*
   2:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   4:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   8:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  10:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     limitations under the License.
  15:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** */
  16:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  17:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  18:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @file    TIMv1/hal_st_lld.h
  19:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   ST Driver subsystem low level driver header.
  20:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @details This header is designed to be include-able without having to
  21:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          include other files from the HAL.
  22:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
  23:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @addtogroup ST
  24:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  25:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  26:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  27:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifndef HAL_ST_LLD_H
  28:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define HAL_ST_LLD_H
  29:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  30:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "mcuconf.h"
  31:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_registry.h"
  32:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_tim.h"
  33:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  34:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver constants.                                                         */
  36:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  38:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  39:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver pre-compile time settings.                                         */
  40:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  41:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  42:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  43:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @name    Configuration options
  44:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  45:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  46:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  47:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   SysTick timer IRQ priority.
  48:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  49:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_IRQ_PRIORITY) || defined(__DOXYGEN__)
  50:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_IRQ_PRIORITY               8
  51:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  52:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  53:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  54:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   TIMx unit (by number) to be used for free running operations.
  55:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    You must select a 32 bits timer if a 32 bits @p systick_t type
  56:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          is required.
  57:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    Timers 2, 3, 4 and 5 are supported.
  58:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  59:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_USE_TIMER) || defined(__DOXYGEN__)
  60:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_USE_TIMER                  2
  61:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  62:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /** @} */
  63:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  64:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  65:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Derived constants and error checks.                                       */
  66:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  67:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  68:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM2)
  69:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM2                      FALSE
  70:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  71:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  72:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM3)
  73:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM3                      FALSE
  74:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  75:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  76:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM4)
  77:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM4                      FALSE
  78:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  79:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  80:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM5)
  81:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM5                      FALSE
  82:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  83:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  84:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM21)
  85:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM21                     FALSE
  86:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  87:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  88:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM22)
  89:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM22                     FALSE
  90:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  91:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  92:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if STM32_ST_USE_TIMER == 2
  93:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM2
  94:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  95:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 3
  96:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM3
  97:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  98:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 4
  99:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM4
 100:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 101:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 5
 102:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM5
 103:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 104:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 21
 105:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM21
 106:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 107:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 22
 108:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM22
 109:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 110:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #else
 111:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "STM32_ST_USE_TIMER specifies an unsupported timer"
 112:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 113:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 114:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver data structures and types.                                         */
 116:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 117:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 118:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 119:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver macros.                                                            */
 120:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 121:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 122:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 123:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* External declarations.                                                    */
 124:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 125:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 126:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 127:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** extern "C" {
 128:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 129:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   void st_lld_init(void);
 130:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 131:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** }
 132:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 133:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 134:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 135:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver inline functions.                                                  */
 136:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 137:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 138:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
 139:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the time counter value.
 140:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 141:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @return              The counter value.
 142:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 143:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 144:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_counter(void) {
 146:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 147:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   return (systime_t)STM32_ST_TIM->CNT;
 1300              		.loc 6 147 10 is_stmt 0 view .LVU381
 1301 0018 8022     		movs	r2, #128
 1302              	.LVL65:
 1303              		.loc 6 147 10 view .LVU382
 1304              	.LBE432:
 1305              	.LBE431:
 1306              	.LBE430:
 1307              	.LBE429:
 1308              	.LBE428:
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1309              		.loc 1 990 18 view .LVU383
 1310 001a 8026     		movs	r6, #128
 973:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1311              		.loc 1 973 3 view .LVU384
 1312 001c 4360     		str	r3, [r0, #4]
 1313              	.LVL66:
 973:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1314              		.loc 1 973 52 is_stmt 1 view .LVU385
 980:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
 1315              		.loc 1 980 3 view .LVU386
 1316              	.LBB440:
 1317              	.LBI428:
 634:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1318              		.loc 2 634 25 view .LVU387
 1319              	.LBE440:
 636:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1320              		.loc 2 636 3 view .LVU388
 1321              	.LBB441:
 1322              	.LBB437:
 1323              	.LBI429:
 1324              		.file 7 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  79:./lib/chibios/os/rt/include/chvt.h **** }
  80:./lib/chibios/os/rt/include/chvt.h **** #endif
  81:./lib/chibios/os/rt/include/chvt.h **** 
  82:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  83:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  84:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chvt.h **** 
  86:./lib/chibios/os/rt/include/chvt.h **** /**
  87:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  88:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  89:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  90:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  91:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  92:./lib/chibios/os/rt/include/chvt.h ****  *
  93:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  94:./lib/chibios/os/rt/include/chvt.h ****  *
  95:./lib/chibios/os/rt/include/chvt.h ****  * @init
  96:./lib/chibios/os/rt/include/chvt.h ****  */
  97:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  98:./lib/chibios/os/rt/include/chvt.h **** 
  99:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 100:./lib/chibios/os/rt/include/chvt.h **** }
 101:./lib/chibios/os/rt/include/chvt.h **** 
 102:./lib/chibios/os/rt/include/chvt.h **** /**
 103:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 104:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 105:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 106:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 108:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 109:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 110:./lib/chibios/os/rt/include/chvt.h ****  *
 111:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 112:./lib/chibios/os/rt/include/chvt.h ****  *
 113:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 114:./lib/chibios/os/rt/include/chvt.h ****  */
 115:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 1325              		.loc 7 115 25 view .LVU389
 1326              	.LBE437:
 1327              	.LBE441:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 117:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 118:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 119:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 120:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 1328              		.loc 7 120 3 view .LVU390
 1329              	.LBB442:
 1330              	.LBB438:
 1331              	.LBB435:
 1332              	.LBI430:
 1333              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @file    chcore_timer.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   System timer header file.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @addtogroup ARMCMx_TIMER
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #define CHCORE_TIMER_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* This is the only header in the HAL designed to be include-able alone.*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #include "hal_st.h"
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Derived constants and error checks.                                       */
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module data structures and types.                                         */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module macros.                                                            */
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* External declarations.                                                    */
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module inline functions.                                                  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Starts the alarm.
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *          this call.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStartAlarm(time);
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStopAlarm();
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Sets the alarm time.
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stSetAlarm(time);
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Returns the system time.
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @return              The system time.
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 1334              		.loc 8 105 25 view .LVU391
 1335              	.LBE435:
 1336              	.LBE438:
 1337              	.LBE442:
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   return stGetCounter();
 1338              		.loc 8 107 3 view .LVU392
 1339              	.LBB443:
 1340              	.LBB439:
 1341              	.LBB436:
 1342              	.LBB434:
 1343              	.LBI431:
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 1344              		.loc 6 145 25 view .LVU393
 1345              	.LBB433:
 1346              		.loc 6 147 3 view .LVU394
 1347              		.loc 6 147 10 is_stmt 0 view .LVU395
 1348 001e D205     		lsls	r2, r2, #23
 1349 0020 506A     		ldr	r0, [r2, #36]
 1350              	.LVL67:
 1351              		.loc 6 147 10 view .LVU396
 1352              	.LBE433:
 1353              	.LBE434:
 1354              	.LBE436:
 1355              	.LBE439:
 1356              	.LBE443:
 981:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1357              		.loc 1 981 3 is_stmt 1 view .LVU397
 651:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1358              		.loc 2 651 3 view .LVU398
 1359              		.file 9 "./lib/chibios/os/rt/include/chtime.h"
   1:./lib/chibios/os/rt/include/chtime.h **** /*
   2:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chtime.h **** 
   4:./lib/chibios/os/rt/include/chtime.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chtime.h **** 
   6:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chtime.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chtime.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chtime.h **** 
  11:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chtime.h **** 
  16:./lib/chibios/os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chtime.h **** */
  19:./lib/chibios/os/rt/include/chtime.h **** 
  20:./lib/chibios/os/rt/include/chtime.h **** /**
  21:./lib/chibios/os/rt/include/chtime.h ****  * @file    chtime.h
  22:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:./lib/chibios/os/rt/include/chtime.h ****  *
  24:./lib/chibios/os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:./lib/chibios/os/rt/include/chtime.h ****  * @details This module is responsible for handling of system time and time
  26:./lib/chibios/os/rt/include/chtime.h ****  *          intervals.
  27:./lib/chibios/os/rt/include/chtime.h ****  * @{
  28:./lib/chibios/os/rt/include/chtime.h ****  */
  29:./lib/chibios/os/rt/include/chtime.h **** 
  30:./lib/chibios/os/rt/include/chtime.h **** #ifndef CHTIME_H
  31:./lib/chibios/os/rt/include/chtime.h **** #define CHTIME_H
  32:./lib/chibios/os/rt/include/chtime.h **** 
  33:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chtime.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chtime.h **** 
  37:./lib/chibios/os/rt/include/chtime.h **** /**
  38:./lib/chibios/os/rt/include/chtime.h ****  * @name    Special time constants
  39:./lib/chibios/os/rt/include/chtime.h ****  * @{
  40:./lib/chibios/os/rt/include/chtime.h ****  */
  41:./lib/chibios/os/rt/include/chtime.h **** /**
  42:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  43:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  44:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  45:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  46:./lib/chibios/os/rt/include/chtime.h ****  */
  47:./lib/chibios/os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  48:./lib/chibios/os/rt/include/chtime.h **** 
  49:./lib/chibios/os/rt/include/chtime.h **** /**
  50:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  51:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  52:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  53:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  54:./lib/chibios/os/rt/include/chtime.h ****  */
  55:./lib/chibios/os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  56:./lib/chibios/os/rt/include/chtime.h **** 
  57:./lib/chibios/os/rt/include/chtime.h **** /**
  58:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  59:./lib/chibios/os/rt/include/chtime.h ****  */
  60:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  61:./lib/chibios/os/rt/include/chtime.h **** 
  62:./lib/chibios/os/rt/include/chtime.h **** /**
  63:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  64:./lib/chibios/os/rt/include/chtime.h ****  */
  65:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  66:./lib/chibios/os/rt/include/chtime.h **** /** @} */
  67:./lib/chibios/os/rt/include/chtime.h **** 
  68:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  69:./lib/chibios/os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  70:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  71:./lib/chibios/os/rt/include/chtime.h **** 
  72:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  73:./lib/chibios/os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
  74:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  75:./lib/chibios/os/rt/include/chtime.h **** 
  76:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
  77:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
  78:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
  79:./lib/chibios/os/rt/include/chtime.h **** #endif
  80:./lib/chibios/os/rt/include/chtime.h **** 
  81:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
  82:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
  83:./lib/chibios/os/rt/include/chtime.h **** #endif
  84:./lib/chibios/os/rt/include/chtime.h **** 
  85:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
  86:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
  87:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
  88:./lib/chibios/os/rt/include/chtime.h **** #endif
  89:./lib/chibios/os/rt/include/chtime.h **** 
  90:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
  91:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
  92:./lib/chibios/os/rt/include/chtime.h **** #endif
  93:./lib/chibios/os/rt/include/chtime.h **** 
  94:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
  95:./lib/chibios/os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
  96:./lib/chibios/os/rt/include/chtime.h **** #endif
  97:./lib/chibios/os/rt/include/chtime.h **** 
  98:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  99:./lib/chibios/os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 100:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 101:./lib/chibios/os/rt/include/chtime.h **** 
 102:./lib/chibios/os/rt/include/chtime.h **** /**
 103:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of system time.
 104:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 105:./lib/chibios/os/rt/include/chtime.h ****  */
 106:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 107:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t systime_t;
 108:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 109:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t systime_t;
 110:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 111:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t systime_t;
 112:./lib/chibios/os/rt/include/chtime.h **** #endif
 113:./lib/chibios/os/rt/include/chtime.h **** 
 114:./lib/chibios/os/rt/include/chtime.h **** /**
 115:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time interval.
 116:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 117:./lib/chibios/os/rt/include/chtime.h ****  */
 118:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 119:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 120:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 121:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 122:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 123:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 124:./lib/chibios/os/rt/include/chtime.h **** #endif
 125:./lib/chibios/os/rt/include/chtime.h **** 
 126:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 127:./lib/chibios/os/rt/include/chtime.h **** /**
 128:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of seconds.
 129:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 130:./lib/chibios/os/rt/include/chtime.h ****  */
 131:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 132:./lib/chibios/os/rt/include/chtime.h **** 
 133:./lib/chibios/os/rt/include/chtime.h **** /**
 134:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 135:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 136:./lib/chibios/os/rt/include/chtime.h ****  */
 137:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 138:./lib/chibios/os/rt/include/chtime.h **** 
 139:./lib/chibios/os/rt/include/chtime.h **** /**
 140:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 141:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 142:./lib/chibios/os/rt/include/chtime.h ****  */
 143:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 144:./lib/chibios/os/rt/include/chtime.h **** 
 145:./lib/chibios/os/rt/include/chtime.h **** /**
 146:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 147:./lib/chibios/os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 148:./lib/chibios/os/rt/include/chtime.h ****  *          only used internally for conversions.
 149:./lib/chibios/os/rt/include/chtime.h ****  */
 150:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 151:./lib/chibios/os/rt/include/chtime.h **** 
 152:./lib/chibios/os/rt/include/chtime.h **** #else
 153:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 154:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 155:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 156:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 157:./lib/chibios/os/rt/include/chtime.h **** #endif
 158:./lib/chibios/os/rt/include/chtime.h **** 
 159:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 160:./lib/chibios/os/rt/include/chtime.h **** /* Module macros.                                                            */
 161:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 162:./lib/chibios/os/rt/include/chtime.h **** 
 163:./lib/chibios/os/rt/include/chtime.h **** /**
 164:./lib/chibios/os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 165:./lib/chibios/os/rt/include/chtime.h ****  * @{
 166:./lib/chibios/os/rt/include/chtime.h ****  */
 167:./lib/chibios/os/rt/include/chtime.h **** /**
 168:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 169:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 170:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 171:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 172:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 173:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 174:./lib/chibios/os/rt/include/chtime.h ****  *
 175:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 176:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 177:./lib/chibios/os/rt/include/chtime.h ****  *
 178:./lib/chibios/os/rt/include/chtime.h ****  * @api
 179:./lib/chibios/os/rt/include/chtime.h ****  */
 180:./lib/chibios/os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 181:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 182:./lib/chibios/os/rt/include/chtime.h **** 
 183:./lib/chibios/os/rt/include/chtime.h **** /**
 184:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 185:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 186:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 187:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 188:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 189:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 190:./lib/chibios/os/rt/include/chtime.h ****  *
 191:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 192:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 193:./lib/chibios/os/rt/include/chtime.h ****  *
 194:./lib/chibios/os/rt/include/chtime.h ****  * @api
 195:./lib/chibios/os/rt/include/chtime.h ****  */
 196:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 197:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 198:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 199:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 200:./lib/chibios/os/rt/include/chtime.h **** 
 201:./lib/chibios/os/rt/include/chtime.h **** /**
 202:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 203:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 204:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 205:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chtime.h ****  *
 209:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 210:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 211:./lib/chibios/os/rt/include/chtime.h ****  *
 212:./lib/chibios/os/rt/include/chtime.h ****  * @api
 213:./lib/chibios/os/rt/include/chtime.h ****  */
 214:./lib/chibios/os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 215:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 216:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 217:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 218:./lib/chibios/os/rt/include/chtime.h **** 
 219:./lib/chibios/os/rt/include/chtime.h **** /**
 220:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 221:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 222:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 223:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 224:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 225:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 226:./lib/chibios/os/rt/include/chtime.h ****  *
 227:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 228:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 229:./lib/chibios/os/rt/include/chtime.h ****  *
 230:./lib/chibios/os/rt/include/chtime.h ****  * @api
 231:./lib/chibios/os/rt/include/chtime.h ****  */
 232:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 233:./lib/chibios/os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 234:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 235:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 236:./lib/chibios/os/rt/include/chtime.h **** 
 237:./lib/chibios/os/rt/include/chtime.h **** /**
 238:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 239:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 240:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 241:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 242:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 243:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 244:./lib/chibios/os/rt/include/chtime.h ****  *
 245:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 246:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 247:./lib/chibios/os/rt/include/chtime.h ****  *
 248:./lib/chibios/os/rt/include/chtime.h ****  * @api
 249:./lib/chibios/os/rt/include/chtime.h ****  */
 250:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 251:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 252:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 253:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 254:./lib/chibios/os/rt/include/chtime.h **** 
 255:./lib/chibios/os/rt/include/chtime.h **** /**
 256:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 257:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 258:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 259:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 260:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 261:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 262:./lib/chibios/os/rt/include/chtime.h ****  *
 263:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 264:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 265:./lib/chibios/os/rt/include/chtime.h ****  *
 266:./lib/chibios/os/rt/include/chtime.h ****  * @api
 267:./lib/chibios/os/rt/include/chtime.h ****  */
 268:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 269:./lib/chibios/os/rt/include/chtime.h ****     (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +      \
 270:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /    \
 271:./lib/chibios/os/rt/include/chtime.h ****                    (time_conv_t)CH_CFG_ST_FREQUENCY)
 272:./lib/chibios/os/rt/include/chtime.h **** /** @} */
 273:./lib/chibios/os/rt/include/chtime.h **** 
 274:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chtime.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chtime.h **** 
 278:./lib/chibios/os/rt/include/chtime.h **** /*
 279:./lib/chibios/os/rt/include/chtime.h ****  * Virtual Timers APIs.
 280:./lib/chibios/os/rt/include/chtime.h ****  */
 281:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 282:./lib/chibios/os/rt/include/chtime.h **** extern "C" {
 283:./lib/chibios/os/rt/include/chtime.h **** #endif
 284:./lib/chibios/os/rt/include/chtime.h **** 
 285:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 286:./lib/chibios/os/rt/include/chtime.h **** }
 287:./lib/chibios/os/rt/include/chtime.h **** #endif
 288:./lib/chibios/os/rt/include/chtime.h **** 
 289:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 290:./lib/chibios/os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 291:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 292:./lib/chibios/os/rt/include/chtime.h **** 
 293:./lib/chibios/os/rt/include/chtime.h **** /**
 294:./lib/chibios/os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 295:./lib/chibios/os/rt/include/chtime.h ****  * @{
 296:./lib/chibios/os/rt/include/chtime.h ****  */
 297:./lib/chibios/os/rt/include/chtime.h **** /**
 298:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 299:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 300:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 301:./lib/chibios/os/rt/include/chtime.h ****  *
 302:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 303:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 304:./lib/chibios/os/rt/include/chtime.h ****  *
 305:./lib/chibios/os/rt/include/chtime.h ****  * @special
 306:./lib/chibios/os/rt/include/chtime.h ****  */
 307:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 308:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 309:./lib/chibios/os/rt/include/chtime.h **** 
 310:./lib/chibios/os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 311:./lib/chibios/os/rt/include/chtime.h **** 
 312:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 313:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 314:./lib/chibios/os/rt/include/chtime.h **** 
 315:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 316:./lib/chibios/os/rt/include/chtime.h **** }
 317:./lib/chibios/os/rt/include/chtime.h **** 
 318:./lib/chibios/os/rt/include/chtime.h **** /**
 319:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 320:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 321:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 322:./lib/chibios/os/rt/include/chtime.h ****  *
 323:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 324:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 325:./lib/chibios/os/rt/include/chtime.h ****  *
 326:./lib/chibios/os/rt/include/chtime.h ****  * @special
 327:./lib/chibios/os/rt/include/chtime.h ****  */
 328:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 329:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 330:./lib/chibios/os/rt/include/chtime.h **** 
 331:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 332:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 333:./lib/chibios/os/rt/include/chtime.h **** 
 334:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 335:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 336:./lib/chibios/os/rt/include/chtime.h **** 
 337:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 338:./lib/chibios/os/rt/include/chtime.h **** }
 339:./lib/chibios/os/rt/include/chtime.h **** 
 340:./lib/chibios/os/rt/include/chtime.h **** /**
 341:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 342:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 343:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 344:./lib/chibios/os/rt/include/chtime.h ****  *
 345:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 346:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 347:./lib/chibios/os/rt/include/chtime.h ****  *
 348:./lib/chibios/os/rt/include/chtime.h ****  * @special
 349:./lib/chibios/os/rt/include/chtime.h ****  */
 350:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 351:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 352:./lib/chibios/os/rt/include/chtime.h **** 
 353:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 354:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 355:./lib/chibios/os/rt/include/chtime.h **** 
 356:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 357:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 358:./lib/chibios/os/rt/include/chtime.h **** 
 359:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 360:./lib/chibios/os/rt/include/chtime.h **** }
 361:./lib/chibios/os/rt/include/chtime.h **** 
 362:./lib/chibios/os/rt/include/chtime.h **** /**
 363:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 364:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 365:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 366:./lib/chibios/os/rt/include/chtime.h ****  *
 367:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 368:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 369:./lib/chibios/os/rt/include/chtime.h ****  *
 370:./lib/chibios/os/rt/include/chtime.h ****  * @special
 371:./lib/chibios/os/rt/include/chtime.h ****  */
 372:./lib/chibios/os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 373:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t secs;
 374:./lib/chibios/os/rt/include/chtime.h **** 
 375:./lib/chibios/os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 376:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 377:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 378:./lib/chibios/os/rt/include/chtime.h **** 
 379:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 380:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 381:./lib/chibios/os/rt/include/chtime.h **** 
 382:./lib/chibios/os/rt/include/chtime.h ****   return (time_secs_t)secs;
 383:./lib/chibios/os/rt/include/chtime.h **** }
 384:./lib/chibios/os/rt/include/chtime.h **** 
 385:./lib/chibios/os/rt/include/chtime.h **** /**
 386:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 387:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 388:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 389:./lib/chibios/os/rt/include/chtime.h ****  *
 390:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 391:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 392:./lib/chibios/os/rt/include/chtime.h ****  *
 393:./lib/chibios/os/rt/include/chtime.h ****  * @special
 394:./lib/chibios/os/rt/include/chtime.h ****  */
 395:./lib/chibios/os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 396:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t msecs;
 397:./lib/chibios/os/rt/include/chtime.h **** 
 398:./lib/chibios/os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 399:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 400:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 401:./lib/chibios/os/rt/include/chtime.h **** 
 402:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 403:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 404:./lib/chibios/os/rt/include/chtime.h **** 
 405:./lib/chibios/os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 406:./lib/chibios/os/rt/include/chtime.h **** }
 407:./lib/chibios/os/rt/include/chtime.h **** 
 408:./lib/chibios/os/rt/include/chtime.h **** /**
 409:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 410:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 411:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 412:./lib/chibios/os/rt/include/chtime.h ****  *
 413:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/rt/include/chtime.h ****  *
 416:./lib/chibios/os/rt/include/chtime.h ****  * @special
 417:./lib/chibios/os/rt/include/chtime.h ****  */
 418:./lib/chibios/os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 419:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t usecs;
 420:./lib/chibios/os/rt/include/chtime.h **** 
 421:./lib/chibios/os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 422:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 423:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 424:./lib/chibios/os/rt/include/chtime.h **** 
 425:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 426:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 427:./lib/chibios/os/rt/include/chtime.h **** 
 428:./lib/chibios/os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 429:./lib/chibios/os/rt/include/chtime.h **** }
 430:./lib/chibios/os/rt/include/chtime.h **** 
 431:./lib/chibios/os/rt/include/chtime.h **** /**
 432:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 433:./lib/chibios/os/rt/include/chtime.h ****  *
 434:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] systime   base system time
 435:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 436:./lib/chibios/os/rt/include/chtime.h ****  * @return              The new system time.
 437:./lib/chibios/os/rt/include/chtime.h ****  *
 438:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 439:./lib/chibios/os/rt/include/chtime.h ****  */
 440:./lib/chibios/os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 441:./lib/chibios/os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 442:./lib/chibios/os/rt/include/chtime.h **** 
 443:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 444:./lib/chibios/os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)TIME_MAX_SYSTIME);
 445:./lib/chibios/os/rt/include/chtime.h **** #endif
 446:./lib/chibios/os/rt/include/chtime.h **** 
 447:./lib/chibios/os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 1360              		.loc 9 447 3 view .LVU399
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1361              		.loc 1 990 18 is_stmt 0 view .LVU400
 1362 0022 3602     		lsls	r6, r6, #8
 1363              		.loc 1 995 8 view .LVU401
 1364 0024 FF37     		adds	r7, r7, #255
 1365              	.LVL68:
 1366              	.L71:
 985:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
 1367              		.loc 1 985 3 is_stmt 1 view .LVU402
 986:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1368              		.loc 1 986 5 view .LVU403
 1369              	.LBB444:
 1370              	.LBI444:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1371              		.loc 2 509 20 view .LVU404
 1372              	.LBE444:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1373              		.loc 2 511 3 view .LVU405
 1374              	.LBB452:
 1375              	.LBB445:
 1376              	.LBI445:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1377              		.loc 3 353 20 view .LVU406
 1378              	.LBE445:
 1379              	.LBE452:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1380              		.loc 3 355 3 view .LVU407
 1381              	.LBB453:
 1382              	.LBB450:
 1383              	.LBB446:
 1384              	.LBI446:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1385              		.loc 4 387 20 view .LVU408
 1386              	.LBE446:
 1387              	.LBE450:
 1388              	.LBE453:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1389              		.loc 4 389 3 view .LVU409
 1390              	.LBB454:
 1391              	.LBB451:
 1392              	.LBB449:
 1393              	.LBB447:
 1394              	.LBI447:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1395              		.loc 5 140 27 view .LVU410
 1396              	.LBB448:
 1397              		.loc 5 142 3 view .LVU411
 1398              		.syntax divided
 1399              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1400 0026 72B6     		cpsid i
 1401              	@ 0 "" 2
 1402              		.thumb
 1403              		.syntax unified
 1404              	.LBE448:
 1405              	.LBE447:
 1406              	.LBE449:
 1407              	.LBE451:
 1408              	.LBE454:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1409              		.loc 3 356 34 view .LVU412
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1410              		.loc 3 357 20 view .LVU413
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1411              		.loc 1 990 5 view .LVU414
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1412              		.loc 1 990 12 is_stmt 0 view .LVU415
 1413 0028 AB69     		ldr	r3, [r5, #24]
 990:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1414              		.loc 1 990 8 view .LVU416
 1415 002a 3342     		tst	r3, r6
 1416 002c 05D0     		beq	.L69
 1417              		.loc 1 995 5 is_stmt 1 view .LVU417
 1418              	.LBB455:
 1419              	.LBI455:
 634:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1420              		.loc 2 634 25 view .LVU418
 1421              	.LBE455:
 636:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1422              		.loc 2 636 3 view .LVU419
 1423              	.LBB463:
 1424              	.LBB456:
 1425              	.LBI456:
 115:./lib/chibios/os/rt/include/chvt.h **** 
 1426              		.loc 7 115 25 view .LVU420
 1427              	.LBE456:
 1428              	.LBE463:
 1429              		.loc 7 120 3 view .LVU421
 1430              	.LBB464:
 1431              	.LBB461:
 1432              	.LBB457:
 1433              	.LBI457:
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1434              		.loc 8 105 25 view .LVU422
 1435              	.LBE457:
 1436              	.LBE461:
 1437              	.LBE464:
 1438              		.loc 8 107 3 view .LVU423
 1439              	.LBB465:
 1440              	.LBB462:
 1441              	.LBB460:
 1442              	.LBB458:
 1443              	.LBI458:
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 1444              		.loc 6 145 25 view .LVU424
 1445              	.LBB459:
 1446              		.loc 6 147 3 view .LVU425
 1447              		.loc 6 147 10 is_stmt 0 view .LVU426
 1448 002e 536A     		ldr	r3, [r2, #36]
 1449              	.LVL69:
 1450              		.loc 6 147 10 view .LVU427
 1451              	.LBE459:
 1452              	.LBE458:
 1453              	.LBE460:
 1454              	.LBE462:
 1455              	.LBE465:
 1456              	.LBB466:
 1457              	.LBI466:
 682:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 1458              		.loc 2 682 20 is_stmt 1 view .LVU428
 1459              	.LBE466:
 686:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1460              		.loc 2 686 3 view .LVU429
 1461              	.LBB469:
 1462              	.LBB467:
 1463              	.LBI467:
 448:./lib/chibios/os/rt/include/chtime.h **** }
 449:./lib/chibios/os/rt/include/chtime.h **** 
 450:./lib/chibios/os/rt/include/chtime.h **** /**
 451:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 452:./lib/chibios/os/rt/include/chtime.h ****  *
 453:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     first system time
 454:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       second system time
 455:./lib/chibios/os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 456:./lib/chibios/os/rt/include/chtime.h ****  *
 457:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 458:./lib/chibios/os/rt/include/chtime.h ****  */
 459:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 460:./lib/chibios/os/rt/include/chtime.h **** 
 461:./lib/chibios/os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 462:./lib/chibios/os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 463:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 464:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 465:./lib/chibios/os/rt/include/chtime.h **** }
 466:./lib/chibios/os/rt/include/chtime.h **** 
 467:./lib/chibios/os/rt/include/chtime.h **** /**
 468:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Checks if the specified time is within the specified time range.
 469:./lib/chibios/os/rt/include/chtime.h ****  * @note    When start==end then the function returns always true because the
 470:./lib/chibios/os/rt/include/chtime.h ****  *          whole time range is specified.
 471:./lib/chibios/os/rt/include/chtime.h ****  *
 472:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] time      the time to be verified
 473:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     the start of the time window (inclusive)
 474:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       the end of the time window (non inclusive)
 475:./lib/chibios/os/rt/include/chtime.h ****  * @retval true         current time within the specified time window.
 476:./lib/chibios/os/rt/include/chtime.h ****  * @retval false        current time not within the specified time window.
 477:./lib/chibios/os/rt/include/chtime.h ****  *
 478:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 479:./lib/chibios/os/rt/include/chtime.h ****  */
 480:./lib/chibios/os/rt/include/chtime.h **** static inline bool chTimeIsInRangeX(systime_t time,
 1464              		.loc 9 480 20 view .LVU430
 1465              	.LBB468:
 481:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 482:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t end) {
 483:./lib/chibios/os/rt/include/chtime.h **** 
 484:./lib/chibios/os/rt/include/chtime.h ****   return (bool)((systime_t)((systime_t)time - (systime_t)start) <
 1466              		.loc 9 484 3 view .LVU431
 1467              		.loc 9 484 17 is_stmt 0 view .LVU432
 1468 0030 1B1A     		subs	r3, r3, r0
 1469              	.LBE468:
 1470              	.LBE467:
 1471              	.LBE469:
 1472              		.loc 1 995 8 view .LVU433
 1473 0032 BB42     		cmp	r3, r7
 1474 0034 27D8     		bhi	.L74
 996:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       return MSG_TIMEOUT;
 997:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 998:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 999:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysUnlock();
 1475              		.loc 1 999 5 is_stmt 1 view .LVU434
 1476              	.LBB470:
 1477              	.LBI470:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1478              		.loc 2 520 20 view .LVU435
 1479              	.LBE470:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1480              		.loc 2 522 3 view .LVU436
 1481              	.LBB479:
 1482              	.LBB471:
 1483              	.LBI471:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1484              		.loc 3 365 20 view .LVU437
 1485              	.LBB472:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1486              		.loc 3 367 22 view .LVU438
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1487              		.loc 3 368 33 view .LVU439
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1488              		.loc 3 374 3 view .LVU440
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1489              		.loc 3 374 3 view .LVU441
 378:./lib/chibios/os/rt/include/chsys.h **** }
 1490              		.loc 3 378 3 view .LVU442
 1491              	.LBB473:
 1492              	.LBI473:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1493              		.loc 4 396 20 view .LVU443
 1494              	.LBE473:
 1495              	.LBE472:
 1496              	.LBE471:
 1497              	.LBE479:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1498              		.loc 4 398 3 view .LVU444
 1499              	.LBB480:
 1500              	.LBB478:
 1501              	.LBB477:
 1502              	.LBB476:
 1503              	.LBB474:
 1504              	.LBI474:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1505              		.loc 5 129 27 view .LVU445
 1506              	.LBB475:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1507              		.loc 5 131 3 view .LVU446
 1508              		.syntax divided
 1509              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1510 0036 62B6     		cpsie i
 1511              	@ 0 "" 2
 1512              		.thumb
 1513              		.syntax unified
 1514 0038 F5E7     		b	.L71
 1515              	.L69:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1516              		.loc 5 131 3 is_stmt 0 view .LVU447
 1517              	.LBE475:
 1518              	.LBE474:
 1519              	.LBE476:
 1520              	.LBE477:
 1521              	.LBE478:
 1522              	.LBE480:
1000:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1001:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1002:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the slave address.*/
1003:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_set_address(i2cp, addr);
 1523              		.loc 1 1003 3 is_stmt 1 view .LVU448
 1524              	.LVL70:
 1525              	.LBB481:
 1526              	.LBI481:
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1527              		.loc 1 133 13 view .LVU449
 1528              	.LBB482:
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1529              		.loc 1 134 3 view .LVU450
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1530              		.loc 1 137 20 is_stmt 0 view .LVU451
 1531 003a 6268     		ldr	r2, [r4, #4]
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1532              		.loc 1 134 16 view .LVU452
 1533 003c 236B     		ldr	r3, [r4, #48]
 1534              	.LVL71:
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1535              		.loc 1 137 3 is_stmt 1 view .LVU453
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1536              		.loc 1 137 26 is_stmt 0 view .LVU454
 1537 003e 9268     		ldr	r2, [r2, #8]
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1538              		.loc 1 137 6 view .LVU455
 1539 0040 1205     		lsls	r2, r2, #20
 1540 0042 00D4     		bmi	.L72
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1541              		.loc 1 138 5 is_stmt 1 view .LVU456
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1542              		.loc 1 138 30 is_stmt 0 view .LVU457
 1543 0044 4900     		lsls	r1, r1, #1
 1544              	.LVL72:
 1545              	.L72:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1546              		.loc 1 140 5 is_stmt 1 view .LVU458
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1547              		.loc 1 140 13 is_stmt 0 view .LVU459
 1548 0046 5960     		str	r1, [r3, #4]
 1549              	.LVL73:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1550              		.loc 1 140 13 view .LVU460
 1551              	.LBE482:
 1552              	.LBE481:
1004:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1005:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the peripheral.*/
1006:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_setup_rx_transfer(i2cp);
 1553              		.loc 1 1006 3 is_stmt 1 view .LVU461
 1554 0048 2000     		movs	r0, r4
 1555              	.LVL74:
 1556              		.loc 1 1006 3 is_stmt 0 view .LVU462
 1557 004a FFF7FEFF 		bl	i2c_lld_setup_rx_transfer
 1558              	.LVL75:
1007:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1008:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1009:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Enabling RX DMA.*/
1010:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamEnable(i2cp->dmarx);
 1559              		.loc 1 1010 3 is_stmt 1 view .LVU463
 1560 004e A36A     		ldr	r3, [r4, #40]
1011:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1012:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete interrupt enabled.*/
1013:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE;
1014:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1015:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1016:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete and RX interrupts enabled.*/
1017:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE | I2C_CR1_RXIE;
1018:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1019:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1020:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Starts the operation.*/
1021:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 |= I2C_CR2_START;
1022:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1023:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits for the operation completion or a timeout.*/
1024:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg = osalThreadSuspendTimeoutS(&i2cp->thread, timeout);
 1561              		.loc 1 1024 9 is_stmt 0 view .LVU464
 1562 0050 2000     		movs	r0, r4
1010:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1563              		.loc 1 1010 3 view .LVU465
 1564 0052 5A68     		ldr	r2, [r3, #4]
 1565 0054 0123     		movs	r3, #1
 1566 0056 1168     		ldr	r1, [r2]
 1567              		.loc 1 1024 9 view .LVU466
 1568 0058 1C30     		adds	r0, r0, #28
1010:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1569              		.loc 1 1010 3 view .LVU467
 1570 005a 0B43     		orrs	r3, r1
 1571 005c 1360     		str	r3, [r2]
1010:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1572              		.loc 1 1010 31 is_stmt 1 view .LVU468
1013:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1573              		.loc 1 1013 3 view .LVU469
1013:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1574              		.loc 1 1013 11 is_stmt 0 view .LVU470
 1575 005e 4023     		movs	r3, #64
 1576 0060 2A68     		ldr	r2, [r5]
 1577              	.LBB483:
 1578              	.LBB484:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1579              		.loc 2 760 10 view .LVU471
 1580 0062 0699     		ldr	r1, [sp, #24]
 1581              	.LBE484:
 1582              	.LBE483:
1013:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1583              		.loc 1 1013 11 view .LVU472
 1584 0064 1343     		orrs	r3, r2
 1585 0066 2B60     		str	r3, [r5]
1021:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1586              		.loc 1 1021 3 is_stmt 1 view .LVU473
1021:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1587              		.loc 1 1021 11 is_stmt 0 view .LVU474
 1588 0068 8023     		movs	r3, #128
 1589 006a 6A68     		ldr	r2, [r5, #4]
 1590 006c 9B01     		lsls	r3, r3, #6
 1591 006e 1343     		orrs	r3, r2
 1592 0070 6B60     		str	r3, [r5, #4]
 1593              		.loc 1 1024 3 is_stmt 1 view .LVU475
 1594              	.LVL76:
 1595              	.LBB486:
 1596              	.LBI483:
 757:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 1597              		.loc 2 757 21 view .LVU476
 1598              	.LBB485:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1599              		.loc 2 760 3 view .LVU477
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1600              		.loc 2 760 10 is_stmt 0 view .LVU478
 1601 0072 FFF7FEFF 		bl	chThdSuspendTimeoutS
 1602              	.LVL77:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1603              		.loc 2 760 10 view .LVU479
 1604              	.LBE485:
 1605              	.LBE486:
1025:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1026:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* In case of a software timeout a STOP is sent as an extreme attempt
1027:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      to release the bus.*/
1028:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (msg == MSG_TIMEOUT) {
 1606              		.loc 1 1028 3 is_stmt 1 view .LVU480
 1607              		.loc 1 1028 6 is_stmt 0 view .LVU481
 1608 0076 431C     		adds	r3, r0, #1
 1609 0078 04D1     		bne	.L68
1029:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 1610              		.loc 1 1029 5 is_stmt 1 view .LVU482
 1611              		.loc 1 1029 13 is_stmt 0 view .LVU483
 1612 007a 8023     		movs	r3, #128
 1613 007c 6A68     		ldr	r2, [r5, #4]
 1614 007e DB01     		lsls	r3, r3, #7
 1615 0080 1343     		orrs	r3, r2
 1616 0082 6B60     		str	r3, [r5, #4]
 1617              	.LVL78:
 1618              	.L68:
1030:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1031:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1032:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   return msg;
1033:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1619              		.loc 1 1033 1 view .LVU484
 1620              		@ sp needed
 1621              	.LVL79:
 1622              	.LVL80:
 1623              		.loc 1 1033 1 view .LVU485
 1624 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1625              	.LVL81:
 1626              	.L74:
 996:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 1627              		.loc 1 996 14 view .LVU486
 1628 0086 0120     		movs	r0, #1
 1629              	.LVL82:
 996:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 1630              		.loc 1 996 14 view .LVU487
 1631 0088 4042     		rsbs	r0, r0, #0
 1632 008a FBE7     		b	.L68
 1633              		.cfi_endproc
 1634              	.LFE196:
 1636              		.section	.text.i2c_lld_master_transmit_timeout,"ax",%progbits
 1637              		.align	1
 1638              		.global	i2c_lld_master_transmit_timeout
 1639              		.syntax unified
 1640              		.code	16
 1641              		.thumb_func
 1642              		.fpu softvfp
 1644              	i2c_lld_master_transmit_timeout:
 1645              	.LVL83:
 1646              	.LFB197:
1034:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1035:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** /**
1036:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @brief   Transmits data via the I2C bus as master.
1037:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
1038:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
1039:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] addr      slave device address
1040:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] txbuf     pointer to the transmit buffer
1041:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] txbytes   number of bytes to be transmitted
1042:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[out] rxbuf    pointer to the receive buffer
1043:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] rxbytes   number of bytes to be received
1044:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
1045:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      the following special values are allowed:
1046:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      - @a TIME_INFINITE no timeout.
1047:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      .
1048:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @return              The operation status.
1049:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
1050:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
1051:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
1052:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
1053:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
1054:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
1055:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  *
1056:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  * @notapi
1057:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****  */
1058:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** msg_t i2c_lld_master_transmit_timeout(I2CDriver *i2cp, i2caddr_t addr,
1059:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
1060:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
1061:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****                                       sysinterval_t timeout) {
 1647              		.loc 1 1061 62 is_stmt 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 12, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
1062:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1651              		.loc 1 1062 3 view .LVU489
1063:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1652              		.loc 1 1063 3 view .LVU490
1061:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1653              		.loc 1 1061 62 is_stmt 0 view .LVU491
 1654 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1655              		.cfi_def_cfa_offset 24
 1656              		.cfi_offset 3, -24
 1657              		.cfi_offset 4, -20
 1658              		.cfi_offset 5, -16
 1659              		.cfi_offset 6, -12
 1660              		.cfi_offset 7, -8
 1661              		.cfi_offset 14, -4
1061:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg_t msg;
 1662              		.loc 1 1061 62 view .LVU492
 1663 0002 0400     		movs	r4, r0
 1664              		.loc 1 1063 16 view .LVU493
 1665 0004 056B     		ldr	r5, [r0, #48]
 1666              	.LVL84:
1064:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   systime_t start, end;
 1667              		.loc 1 1064 3 is_stmt 1 view .LVU494
1065:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1066:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Resetting error flags for this transfer.*/
1067:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1668              		.loc 1 1067 3 view .LVU495
 1669              		.loc 1 1067 16 is_stmt 0 view .LVU496
 1670 0006 0020     		movs	r0, #0
 1671              	.LVL85:
 1672              		.loc 1 1067 16 view .LVU497
 1673 0008 A060     		str	r0, [r4, #8]
1068:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1069:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Releases the lock from high level driver.*/
1070:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   osalSysUnlock();
 1674              		.loc 1 1070 3 is_stmt 1 view .LVU498
 1675              	.LBB521:
 1676              	.LBI521:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1677              		.loc 2 520 20 view .LVU499
 1678              	.LBE521:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1679              		.loc 2 522 3 view .LVU500
 1680              	.LBB530:
 1681              	.LBB522:
 1682              	.LBI522:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1683              		.loc 3 365 20 view .LVU501
 1684              	.LBB523:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1685              		.loc 3 367 22 view .LVU502
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1686              		.loc 3 368 33 view .LVU503
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1687              		.loc 3 374 3 view .LVU504
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1688              		.loc 3 374 3 view .LVU505
 378:./lib/chibios/os/rt/include/chsys.h **** }
 1689              		.loc 3 378 3 view .LVU506
 1690              	.LBB524:
 1691              	.LBI524:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1692              		.loc 4 396 20 view .LVU507
 1693              	.LBE524:
 1694              	.LBE523:
 1695              	.LBE522:
 1696              	.LBE530:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1697              		.loc 4 398 3 view .LVU508
 1698              	.LBB531:
 1699              	.LBB529:
 1700              	.LBB528:
 1701              	.LBB527:
 1702              	.LBB525:
 1703              	.LBI525:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1704              		.loc 5 129 27 view .LVU509
 1705              	.LBB526:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1706              		.loc 5 131 3 view .LVU510
 1707              		.syntax divided
 1708              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1709 000a 62B6     		cpsie i
 1710              	@ 0 "" 2
 1711              		.thumb
 1712              		.syntax unified
 1713              	.LBE526:
 1714              	.LBE525:
 1715              	.LBE527:
 1716              	.LBE528:
 1717              	.LBE529:
 1718              	.LBE531:
1071:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1072:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1073:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* TX DMA setup.*/
1074:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmatx, i2cp->txdmamode);
 1719              		.loc 1 1074 3 view .LVU511
 1720 000c E06A     		ldr	r0, [r4, #44]
 1721 000e 666A     		ldr	r6, [r4, #36]
 1722 0010 4068     		ldr	r0, [r0, #4]
1075:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
1076:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmatx, txbytes);
1077:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1078:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* RX DMA setup, note, rxbytes can be zero but we write the value anyway.*/
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMode(i2cp->dmarx, i2cp->rxdmamode);
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
1081:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
1082:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1083:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->txptr   = txbuf;
1084:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->txbytes = txbytes;
1085:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxptr   = rxbuf;
1086:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
1087:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1088:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1089:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Calculating the time window for the timeout on the busy bus condition.*/
1090:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   start = osalOsGetSystemTimeX();
1091:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
1092:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1093:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits until BUSY flag is reset or, alternatively, for a timeout
1094:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      condition.*/
1095:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   while (true) {
1096:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
1097:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1098:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the bus is not busy then the operation can continue, note, the
1099:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        loop is exited in the locked state.*/
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if ((dp->ISR & I2C_ISR_BUSY) == 0)
1101:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
1102:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1103:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     /* If the system time went outside the allowed window then a timeout
1104:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****        condition is returned.*/
1105:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     if (!osalTimeIsInRangeX(osalOsGetSystemTimeX(), start, end)) {
 1723              		.loc 1 1105 8 is_stmt 0 view .LVU512
 1724 0012 F427     		movs	r7, #244
1074:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
 1725              		.loc 1 1074 3 view .LVU513
 1726 0014 0660     		str	r6, [r0]
1074:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
 1727              		.loc 1 1074 49 is_stmt 1 view .LVU514
1075:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
 1728              		.loc 1 1075 3 view .LVU515
 1729 0016 C260     		str	r2, [r0, #12]
1075:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmatx, txbuf);
 1730              		.loc 1 1075 42 view .LVU516
1076:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1731              		.loc 1 1076 3 view .LVU517
 1732 0018 4360     		str	r3, [r0, #4]
1076:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1733              		.loc 1 1076 52 view .LVU518
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1734              		.loc 1 1079 3 view .LVU519
 1735 001a A36A     		ldr	r3, [r4, #40]
 1736              	.LVL86:
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1737              		.loc 1 1079 3 is_stmt 0 view .LVU520
 1738 001c 226A     		ldr	r2, [r4, #32]
 1739              	.LVL87:
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1740              		.loc 1 1079 3 view .LVU521
 1741 001e 5B68     		ldr	r3, [r3, #4]
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1742              		.loc 1 1100 18 view .LVU522
 1743 0020 8026     		movs	r6, #128
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1744              		.loc 1 1079 3 view .LVU523
 1745 0022 1A60     		str	r2, [r3]
 1746              	.LVL88:
1079:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetMemory0(i2cp->dmarx, rxbuf);
 1747              		.loc 1 1079 49 is_stmt 1 view .LVU524
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 1748              		.loc 1 1080 3 view .LVU525
 1749 0024 069A     		ldr	r2, [sp, #24]
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1750              		.loc 1 1100 18 is_stmt 0 view .LVU526
 1751 0026 3602     		lsls	r6, r6, #8
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 1752              		.loc 1 1080 3 view .LVU527
 1753 0028 DA60     		str	r2, [r3, #12]
1080:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamSetTransactionSize(i2cp->dmarx, rxbytes);
 1754              		.loc 1 1080 42 is_stmt 1 view .LVU528
1081:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1755              		.loc 1 1081 3 view .LVU529
 1756 002a 079A     		ldr	r2, [sp, #28]
 1757              		.loc 1 1105 8 is_stmt 0 view .LVU530
 1758 002c FF37     		adds	r7, r7, #255
1081:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1759              		.loc 1 1081 3 view .LVU531
 1760 002e 5A60     		str	r2, [r3, #4]
1081:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 1761              		.loc 1 1081 52 is_stmt 1 view .LVU532
1090:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   end = osalTimeAddX(start, OSAL_MS2I(STM32_I2C_BUSY_TIMEOUT));
 1762              		.loc 1 1090 3 view .LVU533
 1763              	.LBB532:
 1764              	.LBI532:
 634:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1765              		.loc 2 634 25 view .LVU534
 1766              	.LBE532:
 636:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1767              		.loc 2 636 3 view .LVU535
 1768              	.LBB540:
 1769              	.LBB533:
 1770              	.LBI533:
 115:./lib/chibios/os/rt/include/chvt.h **** 
 1771              		.loc 7 115 25 view .LVU536
 1772              	.LBE533:
 1773              	.LBE540:
 1774              		.loc 7 120 3 view .LVU537
 1775              	.LBB541:
 1776              	.LBB538:
 1777              	.LBB534:
 1778              	.LBI534:
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1779              		.loc 8 105 25 view .LVU538
 1780              	.LBE534:
 1781              	.LBE538:
 1782              	.LBE541:
 1783              		.loc 8 107 3 view .LVU539
 1784              	.LBB542:
 1785              	.LBB539:
 1786              	.LBB537:
 1787              	.LBB535:
 1788              	.LBI535:
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 1789              		.loc 6 145 25 view .LVU540
 1790              	.LBB536:
 1791              		.loc 6 147 3 view .LVU541
 1792              		.loc 6 147 10 is_stmt 0 view .LVU542
 1793 0030 8022     		movs	r2, #128
 1794 0032 D205     		lsls	r2, r2, #23
 1795 0034 506A     		ldr	r0, [r2, #36]
 1796              	.LVL89:
 1797              		.loc 6 147 10 view .LVU543
 1798              	.LBE536:
 1799              	.LBE535:
 1800              	.LBE537:
 1801              	.LBE539:
 1802              	.LBE542:
1091:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1803              		.loc 1 1091 3 is_stmt 1 view .LVU544
 651:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1804              		.loc 2 651 3 view .LVU545
 447:./lib/chibios/os/rt/include/chtime.h **** }
 1805              		.loc 9 447 3 view .LVU546
 1806              	.L78:
1095:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysLock();
 1807              		.loc 1 1095 3 view .LVU547
1096:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1808              		.loc 1 1096 5 view .LVU548
 1809              	.LBB543:
 1810              	.LBI543:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1811              		.loc 2 509 20 view .LVU549
 1812              	.LBE543:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1813              		.loc 2 511 3 view .LVU550
 1814              	.LBB551:
 1815              	.LBB544:
 1816              	.LBI544:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1817              		.loc 3 353 20 view .LVU551
 1818              	.LBE544:
 1819              	.LBE551:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1820              		.loc 3 355 3 view .LVU552
 1821              	.LBB552:
 1822              	.LBB549:
 1823              	.LBB545:
 1824              	.LBI545:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1825              		.loc 4 387 20 view .LVU553
 1826              	.LBE545:
 1827              	.LBE549:
 1828              	.LBE552:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1829              		.loc 4 389 3 view .LVU554
 1830              	.LBB553:
 1831              	.LBB550:
 1832              	.LBB548:
 1833              	.LBB546:
 1834              	.LBI546:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1835              		.loc 5 140 27 view .LVU555
 1836              	.LBB547:
 1837              		.loc 5 142 3 view .LVU556
 1838              		.syntax divided
 1839              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1840 0036 72B6     		cpsid i
 1841              	@ 0 "" 2
 1842              		.thumb
 1843              		.syntax unified
 1844              	.LBE547:
 1845              	.LBE546:
 1846              	.LBE548:
 1847              	.LBE550:
 1848              	.LBE553:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1849              		.loc 3 356 34 view .LVU557
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1850              		.loc 3 357 20 view .LVU558
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1851              		.loc 1 1100 5 view .LVU559
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1852              		.loc 1 1100 12 is_stmt 0 view .LVU560
 1853 0038 AB69     		ldr	r3, [r5, #24]
1100:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       break;
 1854              		.loc 1 1100 8 view .LVU561
 1855 003a 3342     		tst	r3, r6
 1856 003c 05D0     		beq	.L76
 1857              		.loc 1 1105 5 is_stmt 1 view .LVU562
 1858              	.LBB554:
 1859              	.LBI554:
 634:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1860              		.loc 2 634 25 view .LVU563
 1861              	.LBE554:
 636:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1862              		.loc 2 636 3 view .LVU564
 1863              	.LBB562:
 1864              	.LBB555:
 1865              	.LBI555:
 115:./lib/chibios/os/rt/include/chvt.h **** 
 1866              		.loc 7 115 25 view .LVU565
 1867              	.LBE555:
 1868              	.LBE562:
 1869              		.loc 7 120 3 view .LVU566
 1870              	.LBB563:
 1871              	.LBB560:
 1872              	.LBB556:
 1873              	.LBI556:
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1874              		.loc 8 105 25 view .LVU567
 1875              	.LBE556:
 1876              	.LBE560:
 1877              	.LBE563:
 1878              		.loc 8 107 3 view .LVU568
 1879              	.LBB564:
 1880              	.LBB561:
 1881              	.LBB559:
 1882              	.LBB557:
 1883              	.LBI557:
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 1884              		.loc 6 145 25 view .LVU569
 1885              	.LBB558:
 1886              		.loc 6 147 3 view .LVU570
 1887              		.loc 6 147 10 is_stmt 0 view .LVU571
 1888 003e 536A     		ldr	r3, [r2, #36]
 1889              	.LVL90:
 1890              		.loc 6 147 10 view .LVU572
 1891              	.LBE558:
 1892              	.LBE557:
 1893              	.LBE559:
 1894              	.LBE561:
 1895              	.LBE564:
 1896              	.LBB565:
 1897              	.LBI565:
 682:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 1898              		.loc 2 682 20 is_stmt 1 view .LVU573
 1899              	.LBE565:
 686:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1900              		.loc 2 686 3 view .LVU574
 1901              	.LBB568:
 1902              	.LBB566:
 1903              	.LBI566:
 480:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 1904              		.loc 9 480 20 view .LVU575
 1905              	.LBB567:
 1906              		.loc 9 484 3 view .LVU576
 1907              		.loc 9 484 17 is_stmt 0 view .LVU577
 1908 0040 1B1A     		subs	r3, r3, r0
 1909              	.LBE567:
 1910              	.LBE566:
 1911              	.LBE568:
 1912              		.loc 1 1105 8 view .LVU578
 1913 0042 BB42     		cmp	r3, r7
 1914 0044 27D8     		bhi	.L81
1106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****       return MSG_TIMEOUT;
1107:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
1108:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1109:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     osalSysUnlock();
 1915              		.loc 1 1109 5 is_stmt 1 view .LVU579
 1916              	.LBB569:
 1917              	.LBI569:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1918              		.loc 2 520 20 view .LVU580
 1919              	.LBE569:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1920              		.loc 2 522 3 view .LVU581
 1921              	.LBB578:
 1922              	.LBB570:
 1923              	.LBI570:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1924              		.loc 3 365 20 view .LVU582
 1925              	.LBB571:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1926              		.loc 3 367 22 view .LVU583
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1927              		.loc 3 368 33 view .LVU584
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1928              		.loc 3 374 3 view .LVU585
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1929              		.loc 3 374 3 view .LVU586
 378:./lib/chibios/os/rt/include/chsys.h **** }
 1930              		.loc 3 378 3 view .LVU587
 1931              	.LBB572:
 1932              	.LBI572:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1933              		.loc 4 396 20 view .LVU588
 1934              	.LBE572:
 1935              	.LBE571:
 1936              	.LBE570:
 1937              	.LBE578:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1938              		.loc 4 398 3 view .LVU589
 1939              	.LBB579:
 1940              	.LBB577:
 1941              	.LBB576:
 1942              	.LBB575:
 1943              	.LBB573:
 1944              	.LBI573:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1945              		.loc 5 129 27 view .LVU590
 1946              	.LBB574:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1947              		.loc 5 131 3 view .LVU591
 1948              		.syntax divided
 1949              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1950 0046 62B6     		cpsie i
 1951              	@ 0 "" 2
 1952              		.thumb
 1953              		.syntax unified
 1954 0048 F5E7     		b	.L78
 1955              	.L76:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1956              		.loc 5 131 3 is_stmt 0 view .LVU592
 1957              	.LBE574:
 1958              	.LBE573:
 1959              	.LBE575:
 1960              	.LBE576:
 1961              	.LBE577:
 1962              	.LBE579:
1110:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1111:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1112:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Setting up the slave address.*/
1113:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_set_address(i2cp, addr);
 1963              		.loc 1 1113 3 is_stmt 1 view .LVU593
 1964              	.LVL91:
 1965              	.LBB580:
 1966              	.LBI580:
 133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   I2C_TypeDef *dp = i2cp->i2c;
 1967              		.loc 1 133 13 view .LVU594
 1968              	.LBB581:
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1969              		.loc 1 134 3 view .LVU595
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1970              		.loc 1 137 20 is_stmt 0 view .LVU596
 1971 004a 6268     		ldr	r2, [r4, #4]
 134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 1972              		.loc 1 134 16 view .LVU597
 1973 004c 236B     		ldr	r3, [r4, #48]
 1974              	.LVL92:
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1975              		.loc 1 137 3 is_stmt 1 view .LVU598
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1976              		.loc 1 137 26 is_stmt 0 view .LVU599
 1977 004e 9268     		ldr	r2, [r2, #8]
 137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 = (uint32_t)addr << 1U;
 1978              		.loc 1 137 6 view .LVU600
 1979 0050 1205     		lsls	r2, r2, #20
 1980 0052 00D4     		bmi	.L79
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1981              		.loc 1 138 5 is_stmt 1 view .LVU601
 138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   else
 1982              		.loc 1 138 30 is_stmt 0 view .LVU602
 1983 0054 4900     		lsls	r1, r1, #1
 1984              	.LVL93:
 1985              	.L79:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1986              		.loc 1 140 5 is_stmt 1 view .LVU603
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1987              		.loc 1 140 13 is_stmt 0 view .LVU604
 1988 0056 5960     		str	r1, [r3, #4]
 1989              	.LVL94:
 140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 1990              		.loc 1 140 13 view .LVU605
 1991              	.LBE581:
 1992              	.LBE580:
1114:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1115:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Preparing the transfer.*/
1116:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   i2c_lld_setup_tx_transfer(i2cp);
 1993              		.loc 1 1116 3 is_stmt 1 view .LVU606
 1994 0058 2000     		movs	r0, r4
 1995              	.LVL95:
 1996              		.loc 1 1116 3 is_stmt 0 view .LVU607
 1997 005a FFF7FEFF 		bl	i2c_lld_setup_tx_transfer
 1998              	.LVL96:
1117:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1118:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #if STM32_I2C_USE_DMA == TRUE
1119:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Enabling TX DMA.*/
1120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dmaStreamEnable(i2cp->dmatx);
 1999              		.loc 1 1120 3 is_stmt 1 view .LVU608
 2000 005e E36A     		ldr	r3, [r4, #44]
1121:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1122:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete interrupt enabled.*/
1123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE;
1124:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
1125:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Transfer complete and TX interrupts enabled.*/
1126:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR1 |= I2C_CR1_TCIE | I2C_CR1_TXIE;
1127:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #endif
1128:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1129:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Starts the operation.*/
1130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   dp->CR2 |= I2C_CR2_START;
1131:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1132:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* Waits for the operation completion or a timeout.*/
1133:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   msg = osalThreadSuspendTimeoutS(&i2cp->thread, timeout);
 2001              		.loc 1 1133 9 is_stmt 0 view .LVU609
 2002 0060 2000     		movs	r0, r4
1120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 2003              		.loc 1 1120 3 view .LVU610
 2004 0062 5A68     		ldr	r2, [r3, #4]
 2005 0064 0123     		movs	r3, #1
 2006 0066 1168     		ldr	r1, [r2]
 2007              		.loc 1 1133 9 view .LVU611
 2008 0068 1C30     		adds	r0, r0, #28
1120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 2009              		.loc 1 1120 3 view .LVU612
 2010 006a 0B43     		orrs	r3, r1
 2011 006c 1360     		str	r3, [r2]
1120:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 2012              		.loc 1 1120 31 is_stmt 1 view .LVU613
1123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 2013              		.loc 1 1123 3 view .LVU614
1123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 2014              		.loc 1 1123 11 is_stmt 0 view .LVU615
 2015 006e 4023     		movs	r3, #64
 2016 0070 2A68     		ldr	r2, [r5]
 2017              	.LBB582:
 2018              	.LBB583:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2019              		.loc 2 760 10 view .LVU616
 2020 0072 0899     		ldr	r1, [sp, #32]
 2021              	.LBE583:
 2022              	.LBE582:
1123:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** #else
 2023              		.loc 1 1123 11 view .LVU617
 2024 0074 1343     		orrs	r3, r2
 2025 0076 2B60     		str	r3, [r5]
1130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 2026              		.loc 1 1130 3 is_stmt 1 view .LVU618
1130:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
 2027              		.loc 1 1130 11 is_stmt 0 view .LVU619
 2028 0078 8023     		movs	r3, #128
 2029 007a 6A68     		ldr	r2, [r5, #4]
 2030 007c 9B01     		lsls	r3, r3, #6
 2031 007e 1343     		orrs	r3, r2
 2032 0080 6B60     		str	r3, [r5, #4]
 2033              		.loc 1 1133 3 is_stmt 1 view .LVU620
 2034              	.LVL97:
 2035              	.LBB585:
 2036              	.LBI582:
 757:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 2037              		.loc 2 757 21 view .LVU621
 2038              	.LBB584:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2039              		.loc 2 760 3 view .LVU622
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2040              		.loc 2 760 10 is_stmt 0 view .LVU623
 2041 0082 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2042              	.LVL98:
 760:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2043              		.loc 2 760 10 view .LVU624
 2044              	.LBE584:
 2045              	.LBE585:
1134:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1135:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   /* In case of a software timeout a STOP is sent as an extreme attempt
1136:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****      to release the bus.*/
1137:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   if (msg == MSG_TIMEOUT) {
 2046              		.loc 1 1137 3 is_stmt 1 view .LVU625
 2047              		.loc 1 1137 6 is_stmt 0 view .LVU626
 2048 0086 431C     		adds	r3, r0, #1
 2049 0088 04D1     		bne	.L75
1138:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     dp->CR2 |= I2C_CR2_STOP;
 2050              		.loc 1 1138 5 is_stmt 1 view .LVU627
 2051              		.loc 1 1138 13 is_stmt 0 view .LVU628
 2052 008a 8023     		movs	r3, #128
 2053 008c 6A68     		ldr	r2, [r5, #4]
 2054 008e DB01     		lsls	r3, r3, #7
 2055 0090 1343     		orrs	r3, r2
 2056 0092 6B60     		str	r3, [r5, #4]
 2057              	.LVL99:
 2058              	.L75:
1139:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   }
1140:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** 
1141:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****   return msg;
1142:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c **** }
 2059              		.loc 1 1142 1 view .LVU629
 2060              		@ sp needed
 2061              	.LVL100:
 2062              	.LVL101:
 2063              		.loc 1 1142 1 view .LVU630
 2064 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2065              	.LVL102:
 2066              	.L81:
1106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 2067              		.loc 1 1106 14 view .LVU631
 2068 0096 0120     		movs	r0, #1
 2069              	.LVL103:
1106:lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.c ****     }
 2070              		.loc 1 1106 14 view .LVU632
 2071 0098 4042     		rsbs	r0, r0, #0
 2072 009a FBE7     		b	.L75
 2073              		.cfi_endproc
 2074              	.LFE197:
 2076              		.global	I2CD1
 2077              		.section	.bss.I2CD1,"aw",%nobits
 2078              		.align	2
 2079              		.set	.LANCHOR0,. + 0
 2082              	I2CD1:
 2083 0000 00000000 		.space	52
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2084              		.text
 2085              	.Letext0:
 2086              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\i
 2087              		.file 11 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\
 2088              		.file 12 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_std
 2089              		.file 13 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 2090              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2091              		.file 15 "./lib/chibios/os/rt/include/chsystypes.h"
 2092              		.file 16 "./lib/chibios/os/rt/include/chschd.h"
 2093              		.file 17 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 2094              		.file 18 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 2095              		.file 19 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2096              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2097              		.file 21 "./lib/chibios/os/rt/include/chsem.h"
 2098              		.file 22 "./lib/chibios/os/rt/include/chmtx.h"
 2099              		.file 23 "./lib/chibios/os/rt/include/chregistry.h"
 2100              		.file 24 "./lib/chibios/os/oslib/include/chmemcore.h"
 2101              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2102              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 2103              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2104              		.file 28 "./lib/chibios/os/hal/include/hal_i2c.h"
 2105              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2106              		.file 30 "./lib/chibios/os/hal/include/hal_pwm.h"
 2107              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2108              		.file 32 "./lib/chibios/os/hal/include/hal_spi.h"
 2109              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 2110              		.file 34 "./lib/chibios/os/hal/include/hal_usb.h"
 2111              		.file 35 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2112              		.file 36 "./lib/chibios/os/rt/include/chthreads.h"
 2113              		.file 37 "./lib/chibios/os/hal/ports/common/ARMCMx/nvic.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_i2c_lld.c
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:16     .text.i2c_lld_setup_rx_transfer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:23     .text.i2c_lld_setup_rx_transfer:00000000 i2c_lld_setup_rx_transfer
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:99     .text.i2c_lld_setup_rx_transfer:00000034 $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:104    .text.i2c_lld_setup_tx_transfer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:110    .text.i2c_lld_setup_tx_transfer:00000000 i2c_lld_setup_tx_transfer
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:183    .text.i2c_lld_setup_tx_transfer:0000002c $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:188    .text.Vector9C:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:195    .text.Vector9C:00000000 Vector9C
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:812    .text.Vector9C:0000016c $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:821    .text.i2c_lld_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:828    .text.i2c_lld_init:00000000 i2c_lld_init
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:869    .text.i2c_lld_init:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:875    .text.i2c_lld_start:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:882    .text.i2c_lld_start:00000000 i2c_lld_start
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1042   .text.i2c_lld_start:000000a0 $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1050   .text.i2c_lld_stop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1057   .text.i2c_lld_stop:00000000 i2c_lld_stop
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1192   .text.i2c_lld_stop:0000007c $d
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1199   .text.i2c_lld_master_receive_timeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1206   .text.i2c_lld_master_receive_timeout:00000000 i2c_lld_master_receive_timeout
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1637   .text.i2c_lld_master_transmit_timeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:1644   .text.i2c_lld_master_transmit_timeout:00000000 i2c_lld_master_transmit_timeout
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:2082   .bss.I2CD1:00000000 I2CD1
C:\Users\kyleo\AppData\Local\Temp\cc7jwojL.s:2078   .bss.I2CD1:00000000 $d

UNDEFINED SYMBOLS
chThdResumeI
_port_irq_epilogue
i2cObjectInit
dmaStreamAllocI
nvicEnableVector
dmaStreamFreeI
nvicDisableVector
chThdSuspendTimeoutS
