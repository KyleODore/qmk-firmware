   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_buffers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.ibqObjectInit,"ax",%progbits
  16              		.align	1
  17              		.global	ibqObjectInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	ibqObjectInit:
  25              	.LVL0:
  26              	.LFB186:
  27              		.file 1 "lib/chibios/os/hal/src/hal_buffers.c"
   1:lib/chibios/os/hal/src/hal_buffers.c **** /*
   2:lib/chibios/os/hal/src/hal_buffers.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_buffers.c **** 
   4:lib/chibios/os/hal/src/hal_buffers.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_buffers.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_buffers.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_buffers.c **** 
   8:lib/chibios/os/hal/src/hal_buffers.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_buffers.c **** 
  10:lib/chibios/os/hal/src/hal_buffers.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_buffers.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_buffers.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_buffers.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_buffers.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_buffers.c **** */
  16:lib/chibios/os/hal/src/hal_buffers.c **** 
  17:lib/chibios/os/hal/src/hal_buffers.c **** /**
  18:lib/chibios/os/hal/src/hal_buffers.c ****  * @file    hal_buffers.c
  19:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   I/O Buffers code.
  20:lib/chibios/os/hal/src/hal_buffers.c ****  *
  21:lib/chibios/os/hal/src/hal_buffers.c ****  * @addtogroup HAL_BUFFERS
  22:lib/chibios/os/hal/src/hal_buffers.c ****  * @details Buffers Queues are used when there is the need to exchange
  23:lib/chibios/os/hal/src/hal_buffers.c ****  *          fixed-length data buffers between ISRs and threads.
  24:lib/chibios/os/hal/src/hal_buffers.c ****  *          On the ISR side data can be exchanged only using buffers,
  25:lib/chibios/os/hal/src/hal_buffers.c ****  *          on the thread side data can be exchanged both using buffers and/or
  26:lib/chibios/os/hal/src/hal_buffers.c ****  *          using an emulation of regular byte queues.
  27:lib/chibios/os/hal/src/hal_buffers.c ****  *          There are several kind of buffers queues:<br>
  28:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  29:lib/chibios/os/hal/src/hal_buffers.c ****  *            ISR side and the reader is the thread side.
  30:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  31:lib/chibios/os/hal/src/hal_buffers.c ****  *            thread side and the reader is the ISR side.
  32:lib/chibios/os/hal/src/hal_buffers.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  33:lib/chibios/os/hal/src/hal_buffers.c ****  *            are implemented by pairing an input queue and an output queue
  34:lib/chibios/os/hal/src/hal_buffers.c ****  *            together.
  35:lib/chibios/os/hal/src/hal_buffers.c ****  *          .
  36:lib/chibios/os/hal/src/hal_buffers.c ****  * @{
  37:lib/chibios/os/hal/src/hal_buffers.c ****  */
  38:lib/chibios/os/hal/src/hal_buffers.c **** 
  39:lib/chibios/os/hal/src/hal_buffers.c **** #include <string.h>
  40:lib/chibios/os/hal/src/hal_buffers.c **** 
  41:lib/chibios/os/hal/src/hal_buffers.c **** #include "hal.h"
  42:lib/chibios/os/hal/src/hal_buffers.c **** 
  43:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  44:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local definitions.                                                 */
  45:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  46:lib/chibios/os/hal/src/hal_buffers.c **** 
  47:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver exported variables.                                                */
  49:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  50:lib/chibios/os/hal/src/hal_buffers.c **** 
  51:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  52:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local variables and types.                                         */
  53:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  54:lib/chibios/os/hal/src/hal_buffers.c **** 
  55:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  56:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver local functions.                                                   */
  57:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  58:lib/chibios/os/hal/src/hal_buffers.c **** 
  59:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  60:lib/chibios/os/hal/src/hal_buffers.c **** /* Driver exported functions.                                                */
  61:lib/chibios/os/hal/src/hal_buffers.c **** /*===========================================================================*/
  62:lib/chibios/os/hal/src/hal_buffers.c **** 
  63:lib/chibios/os/hal/src/hal_buffers.c **** /**
  64:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Initializes an input buffers queue object.
  65:lib/chibios/os/hal/src/hal_buffers.c ****  *
  66:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] ibqp     pointer to the @p input_buffers_queue_t object
  67:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
  68:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
  69:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
  70:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
  71:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] infy      callback called when a buffer is returned to the queue
  72:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
  73:lib/chibios/os/hal/src/hal_buffers.c ****  *
  74:lib/chibios/os/hal/src/hal_buffers.c ****  * @init
  75:lib/chibios/os/hal/src/hal_buffers.c ****  */
  76:lib/chibios/os/hal/src/hal_buffers.c **** void ibqObjectInit(input_buffers_queue_t *ibqp, bool suspended, uint8_t *bp,
  77:lib/chibios/os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t infy, void *link) {
  28              		.loc 1 77 72 view -0
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  78:lib/chibios/os/hal/src/hal_buffers.c **** 
  79:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((ibqp != NULL) && (bp != NULL) && (size >= 2U));
  32              		.loc 1 79 3 view .LVU1
  33              		.loc 1 79 3 view .LVU2
  80:lib/chibios/os/hal/src/hal_buffers.c **** 
  81:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&ibqp->waiting);
  34              		.loc 1 81 3 view .LVU3
  35              	.LBB222:
  36              	.LBI222:
  37              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:./lib/chibios/os/hal/osal/rt/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 776:./lib/chibios/os/hal/osal/rt/osal.h **** }
 777:./lib/chibios/os/hal/osal/rt/osal.h **** 
 778:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 779:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 782:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 783:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 785:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 786:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 787:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 788:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:./lib/chibios/os/hal/osal/rt/osal.h **** 
 790:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 791:./lib/chibios/os/hal/osal/rt/osal.h **** }
 792:./lib/chibios/os/hal/osal/rt/osal.h **** 
 793:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 794:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 795:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 796:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 798:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 799:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 800:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
  38              		.loc 2 800 20 view .LVU4
  39              	.LBE222:
 801:./lib/chibios/os/hal/osal/rt/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
  40              		.loc 2 802 3 view .LVU5
  41              	.LBB230:
  42              	.LBB223:
  43              	.LBI223:
  44              		.file 3 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  */
  91:./lib/chibios/os/rt/include/chthreads.h **** /**
  92:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  94:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  95:./lib/chibios/os/rt/include/chthreads.h ****  *
  96:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  97:./lib/chibios/os/rt/include/chthreads.h ****  */
  98:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {(thread_t *)&name, (thread_t *)&name}
  99:./lib/chibios/os/rt/include/chthreads.h **** 
 100:./lib/chibios/os/rt/include/chthreads.h **** /**
 101:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 103:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 104:./lib/chibios/os/rt/include/chthreads.h ****  *
 105:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 106:./lib/chibios/os/rt/include/chthreads.h ****  */
 107:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DECL(name)                                           \
 108:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 109:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 110:./lib/chibios/os/rt/include/chthreads.h **** 
 111:./lib/chibios/os/rt/include/chthreads.h **** /**
 112:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 113:./lib/chibios/os/rt/include/chthreads.h ****  */
 114:./lib/chibios/os/rt/include/chthreads.h **** /**
 115:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 116:./lib/chibios/os/rt/include/chthreads.h ****  *
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 118:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 119:./lib/chibios/os/rt/include/chthreads.h ****  *
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 121:./lib/chibios/os/rt/include/chthreads.h ****  */
 122:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 123:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 124:./lib/chibios/os/rt/include/chthreads.h **** 
 125:./lib/chibios/os/rt/include/chthreads.h **** /**
 126:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 127:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 128:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 129:./lib/chibios/os/rt/include/chthreads.h ****  *
 130:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 131:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 132:./lib/chibios/os/rt/include/chthreads.h ****  *
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 134:./lib/chibios/os/rt/include/chthreads.h ****  */
 135:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 136:./lib/chibios/os/rt/include/chthreads.h **** 
 137:./lib/chibios/os/rt/include/chthreads.h **** /**
 138:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 139:./lib/chibios/os/rt/include/chthreads.h ****  *
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 141:./lib/chibios/os/rt/include/chthreads.h ****  */
 142:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 143:./lib/chibios/os/rt/include/chthreads.h **** 
 144:./lib/chibios/os/rt/include/chthreads.h **** /**
 145:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 146:./lib/chibios/os/rt/include/chthreads.h ****  *
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 148:./lib/chibios/os/rt/include/chthreads.h ****  */
 149:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 150:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 151:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 152:./lib/chibios/os/rt/include/chthreads.h **** 
 153:./lib/chibios/os/rt/include/chthreads.h **** /**
 154:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 155:./lib/chibios/os/rt/include/chthreads.h ****  */
 156:./lib/chibios/os/rt/include/chthreads.h **** /**
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 158:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 159:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 160:./lib/chibios/os/rt/include/chthreads.h ****  */
 161:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 162:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 163:./lib/chibios/os/rt/include/chthreads.h **** 
 164:./lib/chibios/os/rt/include/chthreads.h **** /**
 165:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 166:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 167:./lib/chibios/os/rt/include/chthreads.h ****  */
 168:./lib/chibios/os/rt/include/chthreads.h **** /**
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 170:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 171:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 175:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 176:./lib/chibios/os/rt/include/chthreads.h ****  *
 177:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 178:./lib/chibios/os/rt/include/chthreads.h ****  *
 179:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 180:./lib/chibios/os/rt/include/chthreads.h ****  */
 181:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 182:./lib/chibios/os/rt/include/chthreads.h **** 
 183:./lib/chibios/os/rt/include/chthreads.h **** /**
 184:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 185:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 186:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 187:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 188:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 191:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 192:./lib/chibios/os/rt/include/chthreads.h ****  *
 193:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 194:./lib/chibios/os/rt/include/chthreads.h ****  *
 195:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 196:./lib/chibios/os/rt/include/chthreads.h ****  */
 197:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 198:./lib/chibios/os/rt/include/chthreads.h **** 
 199:./lib/chibios/os/rt/include/chthreads.h **** /**
 200:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 201:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 202:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 203:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 204:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chthreads.h ****  *
 209:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 210:./lib/chibios/os/rt/include/chthreads.h ****  *
 211:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 212:./lib/chibios/os/rt/include/chthreads.h ****  */
 213:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 214:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 215:./lib/chibios/os/rt/include/chthreads.h **** 
 216:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 217:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 218:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 219:./lib/chibios/os/rt/include/chthreads.h **** 
 220:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 221:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 222:./lib/chibios/os/rt/include/chthreads.h **** #endif
 223:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 224:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 225:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 226:./lib/chibios/os/rt/include/chthreads.h **** #endif
 227:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 228:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 229:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 232:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 234:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 235:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 236:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #endif
 238:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 240:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 241:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 242:./lib/chibios/os/rt/include/chthreads.h **** #endif
 243:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 244:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 246:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 248:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 249:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 250:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 255:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 257:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 258:./lib/chibios/os/rt/include/chthreads.h **** }
 259:./lib/chibios/os/rt/include/chthreads.h **** #endif
 260:./lib/chibios/os/rt/include/chthreads.h **** 
 261:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 262:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 263:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 264:./lib/chibios/os/rt/include/chthreads.h **** 
 265:./lib/chibios/os/rt/include/chthreads.h ****  /**
 266:./lib/chibios/os/rt/include/chthreads.h ****   * @brief   Returns a pointer to the current @p thread_t.
 267:./lib/chibios/os/rt/include/chthreads.h ****   *
 268:./lib/chibios/os/rt/include/chthreads.h ****   * @return             A pointer to the current thread.
 269:./lib/chibios/os/rt/include/chthreads.h ****   *
 270:./lib/chibios/os/rt/include/chthreads.h ****   * @xclass
 271:./lib/chibios/os/rt/include/chthreads.h ****   */
 272:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 273:./lib/chibios/os/rt/include/chthreads.h **** 
 274:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 275:./lib/chibios/os/rt/include/chthreads.h **** }
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h **** /**
 278:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 279:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 280:./lib/chibios/os/rt/include/chthreads.h ****  *
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  *
 283:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 284:./lib/chibios/os/rt/include/chthreads.h ****  */
 285:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 286:./lib/chibios/os/rt/include/chthreads.h **** 
 287:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->prio;
 288:./lib/chibios/os/rt/include/chthreads.h **** }
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h **** /**
 291:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 292:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 293:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 294:./lib/chibios/os/rt/include/chthreads.h ****  *
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 296:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 299:./lib/chibios/os/rt/include/chthreads.h ****  */
 300:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 301:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 302:./lib/chibios/os/rt/include/chthreads.h **** 
 303:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 304:./lib/chibios/os/rt/include/chthreads.h **** }
 305:./lib/chibios/os/rt/include/chthreads.h **** #endif
 306:./lib/chibios/os/rt/include/chthreads.h **** 
 307:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 308:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 309:./lib/chibios/os/rt/include/chthreads.h **** /**
 310:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 311:./lib/chibios/os/rt/include/chthreads.h ****  *
 312:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 316:./lib/chibios/os/rt/include/chthreads.h ****  */
 317:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 318:./lib/chibios/os/rt/include/chthreads.h **** 
 319:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 320:./lib/chibios/os/rt/include/chthreads.h **** }
 321:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 322:./lib/chibios/os/rt/include/chthreads.h **** 
 323:./lib/chibios/os/rt/include/chthreads.h **** /**
 324:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 325:./lib/chibios/os/rt/include/chthreads.h ****  *
 326:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 328:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 329:./lib/chibios/os/rt/include/chthreads.h ****  *
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 331:./lib/chibios/os/rt/include/chthreads.h ****  */
 332:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 333:./lib/chibios/os/rt/include/chthreads.h **** 
 334:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 335:./lib/chibios/os/rt/include/chthreads.h **** }
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h **** /**
 338:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 339:./lib/chibios/os/rt/include/chthreads.h ****  *
 340:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 344:./lib/chibios/os/rt/include/chthreads.h ****  */
 345:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 346:./lib/chibios/os/rt/include/chthreads.h **** 
 347:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 348:./lib/chibios/os/rt/include/chthreads.h **** }
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h **** /**
 351:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 352:./lib/chibios/os/rt/include/chthreads.h ****  *
 353:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 355:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 356:./lib/chibios/os/rt/include/chthreads.h ****  *
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 358:./lib/chibios/os/rt/include/chthreads.h ****  */
 359:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 360:./lib/chibios/os/rt/include/chthreads.h **** 
 361:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 362:./lib/chibios/os/rt/include/chthreads.h **** 
 363:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 364:./lib/chibios/os/rt/include/chthreads.h **** }
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h **** /**
 367:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 368:./lib/chibios/os/rt/include/chthreads.h ****  *
 369:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 370:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 371:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 372:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 375:./lib/chibios/os/rt/include/chthreads.h ****  *
 376:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 377:./lib/chibios/os/rt/include/chthreads.h ****  */
 378:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 379:./lib/chibios/os/rt/include/chthreads.h **** 
 380:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 381:./lib/chibios/os/rt/include/chthreads.h **** 
 382:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 383:./lib/chibios/os/rt/include/chthreads.h **** }
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h **** /**
 386:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 387:./lib/chibios/os/rt/include/chthreads.h ****  *
 388:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 389:./lib/chibios/os/rt/include/chthreads.h ****  *
 390:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 391:./lib/chibios/os/rt/include/chthreads.h ****  */
 392:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
  45              		.loc 3 392 20 view .LVU6
  46              	.LBE223:
  47              	.LBE230:
 393:./lib/chibios/os/rt/include/chthreads.h **** 
 394:./lib/chibios/os/rt/include/chthreads.h ****   queue_init(tqp);
  48              		.loc 3 394 3 view .LVU7
  49              	.LBB231:
  50              	.LBB228:
  51              	.LBB224:
  52              	.LBI224:
  53              		.file 4 "./lib/chibios/os/rt/include/chschd.h"
   1:./lib/chibios/os/rt/include/chschd.h **** /*
   2:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chschd.h **** 
   4:./lib/chibios/os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chschd.h **** 
   6:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chschd.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chschd.h **** 
  11:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chschd.h **** 
  16:./lib/chibios/os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chschd.h **** */
  19:./lib/chibios/os/rt/include/chschd.h **** 
  20:./lib/chibios/os/rt/include/chschd.h **** /**
  21:./lib/chibios/os/rt/include/chschd.h ****  * @file    chschd.h
  22:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:./lib/chibios/os/rt/include/chschd.h ****  *
  24:./lib/chibios/os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:./lib/chibios/os/rt/include/chschd.h ****  * @{
  26:./lib/chibios/os/rt/include/chschd.h ****  */
  27:./lib/chibios/os/rt/include/chschd.h **** 
  28:./lib/chibios/os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:./lib/chibios/os/rt/include/chschd.h **** #define CHSCHD_H
  30:./lib/chibios/os/rt/include/chschd.h **** 
  31:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chschd.h **** 
  35:./lib/chibios/os/rt/include/chschd.h **** /**
  36:./lib/chibios/os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:./lib/chibios/os/rt/include/chschd.h ****  * @{
  38:./lib/chibios/os/rt/include/chschd.h ****  */
  39:./lib/chibios/os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:./lib/chibios/os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  42:./lib/chibios/os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  44:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  45:./lib/chibios/os/rt/include/chschd.h **** 
  46:./lib/chibios/os/rt/include/chschd.h **** /**
  47:./lib/chibios/os/rt/include/chschd.h ****  * @name    Priority constants
  48:./lib/chibios/os/rt/include/chschd.h ****  * @{
  49:./lib/chibios/os/rt/include/chschd.h ****  */
  50:./lib/chibios/os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:./lib/chibios/os/rt/include/chschd.h ****                                                  priority.                  */
  52:./lib/chibios/os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:./lib/chibios/os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:./lib/chibios/os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:./lib/chibios/os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  57:./lib/chibios/os/rt/include/chschd.h **** 
  58:./lib/chibios/os/rt/include/chschd.h **** /**
  59:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread states
  60:./lib/chibios/os/rt/include/chschd.h ****  * @{
  61:./lib/chibios/os/rt/include/chschd.h ****  */
  62:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:./lib/chibios/os/rt/include/chschd.h ****                                                   ready list.               */
  64:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On a queue.        */
  68:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:./lib/chibios/os/rt/include/chschd.h ****                                                   in queue.                 */
  77:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:./lib/chibios/os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:./lib/chibios/os/rt/include/chschd.h ****                                                   message.                  */
  81:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:./lib/chibios/os/rt/include/chschd.h **** 
  83:./lib/chibios/os/rt/include/chschd.h **** /**
  84:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:./lib/chibios/os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:./lib/chibios/os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:./lib/chibios/os/rt/include/chschd.h ****  */
  88:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:./lib/chibios/os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:./lib/chibios/os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:./lib/chibios/os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  93:./lib/chibios/os/rt/include/chschd.h **** 
  94:./lib/chibios/os/rt/include/chschd.h **** /**
  95:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:./lib/chibios/os/rt/include/chschd.h ****  * @{
  97:./lib/chibios/os/rt/include/chschd.h ****  */
  98:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:./lib/chibios/os/rt/include/chschd.h ****                                                  mask.                      */
 100:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:./lib/chibios/os/rt/include/chschd.h ****                                                  flag.                      */
 107:./lib/chibios/os/rt/include/chschd.h **** /** @} */
 108:./lib/chibios/os/rt/include/chschd.h **** 
 109:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 110:./lib/chibios/os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 112:./lib/chibios/os/rt/include/chschd.h **** 
 113:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 114:./lib/chibios/os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chschd.h **** 
 117:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 120:./lib/chibios/os/rt/include/chschd.h **** 
 121:./lib/chibios/os/rt/include/chschd.h **** /**
 122:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:./lib/chibios/os/rt/include/chschd.h ****  */
 124:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_list {
 125:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:./lib/chibios/os/rt/include/chschd.h **** };
 127:./lib/chibios/os/rt/include/chschd.h **** 
 128:./lib/chibios/os/rt/include/chschd.h **** /**
 129:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:./lib/chibios/os/rt/include/chschd.h ****  */
 131:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_queue {
 132:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:./lib/chibios/os/rt/include/chschd.h **** };
 135:./lib/chibios/os/rt/include/chschd.h **** 
 136:./lib/chibios/os/rt/include/chschd.h **** /**
 137:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:./lib/chibios/os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:./lib/chibios/os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:./lib/chibios/os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:./lib/chibios/os/rt/include/chschd.h ****  */
 142:./lib/chibios/os/rt/include/chschd.h **** struct ch_thread {
 143:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:./lib/chibios/os/rt/include/chschd.h **** #endif
 150:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:./lib/chibios/os/rt/include/chschd.h ****   /**
 153:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:./lib/chibios/os/rt/include/chschd.h ****    */
 155:./lib/chibios/os/rt/include/chschd.h ****   const char            *name;
 156:./lib/chibios/os/rt/include/chschd.h **** #endif
 157:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:./lib/chibios/os/rt/include/chschd.h ****   /**
 160:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:./lib/chibios/os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:./lib/chibios/os/rt/include/chschd.h ****    *          dynamic threading.
 163:./lib/chibios/os/rt/include/chschd.h ****    */
 164:./lib/chibios/os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:./lib/chibios/os/rt/include/chschd.h **** #endif
 166:./lib/chibios/os/rt/include/chschd.h ****   /**
 167:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:./lib/chibios/os/rt/include/chschd.h ****    */
 169:./lib/chibios/os/rt/include/chschd.h ****   tstate_t              state;
 170:./lib/chibios/os/rt/include/chschd.h ****   /**
 171:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:./lib/chibios/os/rt/include/chschd.h ****    */
 173:./lib/chibios/os/rt/include/chschd.h ****   tmode_t               flags;
 174:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:./lib/chibios/os/rt/include/chschd.h ****   /**
 176:./lib/chibios/os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:./lib/chibios/os/rt/include/chschd.h ****    */
 178:./lib/chibios/os/rt/include/chschd.h ****   trefs_t               refs;
 179:./lib/chibios/os/rt/include/chschd.h **** #endif
 180:./lib/chibios/os/rt/include/chschd.h ****   /**
 181:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:./lib/chibios/os/rt/include/chschd.h ****    */
 183:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:./lib/chibios/os/rt/include/chschd.h ****   tslices_t             ticks;
 185:./lib/chibios/os/rt/include/chschd.h **** #endif
 186:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:./lib/chibios/os/rt/include/chschd.h ****   /**
 188:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:./lib/chibios/os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:./lib/chibios/os/rt/include/chschd.h ****    */
 191:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    time;
 192:./lib/chibios/os/rt/include/chschd.h **** #endif
 193:./lib/chibios/os/rt/include/chschd.h ****   /**
 194:./lib/chibios/os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:./lib/chibios/os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:./lib/chibios/os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:./lib/chibios/os/rt/include/chschd.h ****    */
 198:./lib/chibios/os/rt/include/chschd.h ****   union {
 199:./lib/chibios/os/rt/include/chschd.h ****     /**
 200:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:./lib/chibios/os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:./lib/chibios/os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:./lib/chibios/os/rt/include/chschd.h ****      */
 205:./lib/chibios/os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:./lib/chibios/os/rt/include/chschd.h ****     /**
 207:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:./lib/chibios/os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:./lib/chibios/os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:./lib/chibios/os/rt/include/chschd.h ****      *          this thread.
 211:./lib/chibios/os/rt/include/chschd.h ****      */
 212:./lib/chibios/os/rt/include/chschd.h ****     msg_t               exitcode;
 213:./lib/chibios/os/rt/include/chschd.h ****     /**
 214:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:./lib/chibios/os/rt/include/chschd.h ****      *          states.
 218:./lib/chibios/os/rt/include/chschd.h ****      */
 219:./lib/chibios/os/rt/include/chschd.h ****     void                *wtobjp;
 220:./lib/chibios/os/rt/include/chschd.h ****     /**
 221:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 225:./lib/chibios/os/rt/include/chschd.h ****      */
 226:./lib/chibios/os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:./lib/chibios/os/rt/include/chschd.h ****     /**
 229:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:./lib/chibios/os/rt/include/chschd.h ****      */
 231:./lib/chibios/os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:./lib/chibios/os/rt/include/chschd.h **** #endif
 233:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:./lib/chibios/os/rt/include/chschd.h ****     /**
 235:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 239:./lib/chibios/os/rt/include/chschd.h ****      */
 240:./lib/chibios/os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:./lib/chibios/os/rt/include/chschd.h **** #endif
 242:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:./lib/chibios/os/rt/include/chschd.h ****     /**
 244:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 248:./lib/chibios/os/rt/include/chschd.h ****      */
 249:./lib/chibios/os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:./lib/chibios/os/rt/include/chschd.h **** #endif
 251:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:./lib/chibios/os/rt/include/chschd.h ****     /**
 253:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:./lib/chibios/os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:./lib/chibios/os/rt/include/chschd.h ****      */
 257:./lib/chibios/os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:./lib/chibios/os/rt/include/chschd.h **** #endif
 259:./lib/chibios/os/rt/include/chschd.h ****   }                     u;
 260:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:./lib/chibios/os/rt/include/chschd.h ****   /**
 262:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:./lib/chibios/os/rt/include/chschd.h ****    */
 264:./lib/chibios/os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:./lib/chibios/os/rt/include/chschd.h **** #endif
 266:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:./lib/chibios/os/rt/include/chschd.h ****   /**
 268:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:./lib/chibios/os/rt/include/chschd.h ****    */
 270:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:./lib/chibios/os/rt/include/chschd.h **** #endif
 272:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:./lib/chibios/os/rt/include/chschd.h ****   /**
 274:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:./lib/chibios/os/rt/include/chschd.h ****    */
 276:./lib/chibios/os/rt/include/chschd.h ****   eventmask_t           epending;
 277:./lib/chibios/os/rt/include/chschd.h **** #endif
 278:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chschd.h ****   /**
 280:./lib/chibios/os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:./lib/chibios/os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:./lib/chibios/os/rt/include/chschd.h ****    */
 283:./lib/chibios/os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:./lib/chibios/os/rt/include/chschd.h ****   /**
 285:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:./lib/chibios/os/rt/include/chschd.h ****    */
 287:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               realprio;
 288:./lib/chibios/os/rt/include/chschd.h **** #endif
 289:./lib/chibios/os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:./lib/chibios/os/rt/include/chschd.h ****   /**
 292:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:./lib/chibios/os/rt/include/chschd.h ****    */
 294:./lib/chibios/os/rt/include/chschd.h ****   void                  *mpool;
 295:./lib/chibios/os/rt/include/chschd.h **** #endif
 296:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:./lib/chibios/os/rt/include/chschd.h ****   /**
 298:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:./lib/chibios/os/rt/include/chschd.h ****    */
 300:./lib/chibios/os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:./lib/chibios/os/rt/include/chschd.h **** #endif
 302:./lib/chibios/os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:./lib/chibios/os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:./lib/chibios/os/rt/include/chschd.h **** #endif
 306:./lib/chibios/os/rt/include/chschd.h **** };
 307:./lib/chibios/os/rt/include/chschd.h **** 
 308:./lib/chibios/os/rt/include/chschd.h **** /**
 309:./lib/chibios/os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:./lib/chibios/os/rt/include/chschd.h ****  *
 311:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:./lib/chibios/os/rt/include/chschd.h ****  */
 313:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:./lib/chibios/os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:./lib/chibios/os/rt/include/chschd.h ****                                                 pointer.                    */
 319:./lib/chibios/os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:./lib/chibios/os/rt/include/chschd.h ****                                                 parameter.                  */
 321:./lib/chibios/os/rt/include/chschd.h **** };
 322:./lib/chibios/os/rt/include/chschd.h **** 
 323:./lib/chibios/os/rt/include/chschd.h **** /**
 324:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:./lib/chibios/os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:./lib/chibios/os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:./lib/chibios/os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:./lib/chibios/os/rt/include/chschd.h ****  */
 329:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 332:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 334:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:./lib/chibios/os/rt/include/chschd.h **** #endif
 338:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:./lib/chibios/os/rt/include/chschd.h ****   /**
 340:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:./lib/chibios/os/rt/include/chschd.h ****    */
 342:./lib/chibios/os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:./lib/chibios/os/rt/include/chschd.h ****                                                 tick event.                 */
 344:./lib/chibios/os/rt/include/chschd.h **** #endif
 345:./lib/chibios/os/rt/include/chschd.h **** };
 346:./lib/chibios/os/rt/include/chschd.h **** 
 347:./lib/chibios/os/rt/include/chschd.h **** /**
 348:./lib/chibios/os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:./lib/chibios/os/rt/include/chschd.h ****  */
 350:./lib/chibios/os/rt/include/chschd.h **** struct ch_ready_list {
 351:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:./lib/chibios/os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:./lib/chibios/os/rt/include/chschd.h ****                                                 offsets.                    */
 356:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:./lib/chibios/os/rt/include/chschd.h **** #endif
 360:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:./lib/chibios/os/rt/include/chschd.h ****                                                 thread.                     */
 363:./lib/chibios/os/rt/include/chschd.h **** };
 364:./lib/chibios/os/rt/include/chschd.h **** 
 365:./lib/chibios/os/rt/include/chschd.h **** /**
 366:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:./lib/chibios/os/rt/include/chschd.h ****  */
 368:./lib/chibios/os/rt/include/chschd.h **** struct ch_system_debug {
 369:./lib/chibios/os/rt/include/chschd.h ****   /**
 370:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:./lib/chibios/os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:./lib/chibios/os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:./lib/chibios/os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:./lib/chibios/os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:./lib/chibios/os/rt/include/chschd.h ****    */
 376:./lib/chibios/os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:./lib/chibios/os/rt/include/chschd.h ****   /**
 379:./lib/chibios/os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:./lib/chibios/os/rt/include/chschd.h ****    */
 381:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:./lib/chibios/os/rt/include/chschd.h ****   /**
 383:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:./lib/chibios/os/rt/include/chschd.h ****    */
 385:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:./lib/chibios/os/rt/include/chschd.h **** #endif
 387:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:./lib/chibios/os/rt/include/chschd.h ****   /**
 389:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:./lib/chibios/os/rt/include/chschd.h ****    */
 391:./lib/chibios/os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:./lib/chibios/os/rt/include/chschd.h **** #endif
 393:./lib/chibios/os/rt/include/chschd.h **** };
 394:./lib/chibios/os/rt/include/chschd.h **** 
 395:./lib/chibios/os/rt/include/chschd.h **** /**
 396:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System data structure.
 397:./lib/chibios/os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:./lib/chibios/os/rt/include/chschd.h ****  *          stacks.
 399:./lib/chibios/os/rt/include/chschd.h ****  */
 400:./lib/chibios/os/rt/include/chschd.h **** struct ch_system {
 401:./lib/chibios/os/rt/include/chschd.h ****   /**
 402:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:./lib/chibios/os/rt/include/chschd.h ****    */
 404:./lib/chibios/os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:./lib/chibios/os/rt/include/chschd.h ****   /**
 406:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:./lib/chibios/os/rt/include/chschd.h ****    */
 408:./lib/chibios/os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:./lib/chibios/os/rt/include/chschd.h ****   /**
 410:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System debug.
 411:./lib/chibios/os/rt/include/chschd.h ****    */
 412:./lib/chibios/os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:./lib/chibios/os/rt/include/chschd.h ****   /**
 414:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:./lib/chibios/os/rt/include/chschd.h ****    */
 416:./lib/chibios/os/rt/include/chschd.h ****   thread_t              mainthread;
 417:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:./lib/chibios/os/rt/include/chschd.h ****   /**
 419:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:./lib/chibios/os/rt/include/chschd.h ****    */
 421:./lib/chibios/os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:./lib/chibios/os/rt/include/chschd.h **** #endif
 423:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:./lib/chibios/os/rt/include/chschd.h ****   /**
 425:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:./lib/chibios/os/rt/include/chschd.h ****    */
 427:./lib/chibios/os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:./lib/chibios/os/rt/include/chschd.h **** #endif
 429:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:./lib/chibios/os/rt/include/chschd.h **** };
 431:./lib/chibios/os/rt/include/chschd.h **** 
 432:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 433:./lib/chibios/os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 435:./lib/chibios/os/rt/include/chschd.h **** 
 436:./lib/chibios/os/rt/include/chschd.h **** /**
 437:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:./lib/chibios/os/rt/include/chschd.h ****  *
 439:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 440:./lib/chibios/os/rt/include/chschd.h ****  */
 441:./lib/chibios/os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:./lib/chibios/os/rt/include/chschd.h **** 
 443:./lib/chibios/os/rt/include/chschd.h **** /**
 444:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:./lib/chibios/os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:./lib/chibios/os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:./lib/chibios/os/rt/include/chschd.h ****  */
 448:./lib/chibios/os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:./lib/chibios/os/rt/include/chschd.h **** 
 450:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 451:./lib/chibios/os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 453:./lib/chibios/os/rt/include/chschd.h **** 
 454:./lib/chibios/os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:./lib/chibios/os/rt/include/chschd.h **** extern ch_system_t ch;
 456:./lib/chibios/os/rt/include/chschd.h **** #endif
 457:./lib/chibios/os/rt/include/chschd.h **** 
 458:./lib/chibios/os/rt/include/chschd.h **** /*
 459:./lib/chibios/os/rt/include/chschd.h ****  * Scheduler APIs.
 460:./lib/chibios/os/rt/include/chschd.h ****  */
 461:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 462:./lib/chibios/os/rt/include/chschd.h **** extern "C" {
 463:./lib/chibios/os/rt/include/chschd.h **** #endif
 464:./lib/chibios/os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:./lib/chibios/os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:./lib/chibios/os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:./lib/chibios/os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:./lib/chibios/os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:./lib/chibios/os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:./lib/chibios/os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:./lib/chibios/os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:./lib/chibios/os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:./lib/chibios/os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 485:./lib/chibios/os/rt/include/chschd.h **** }
 486:./lib/chibios/os/rt/include/chschd.h **** #endif
 487:./lib/chibios/os/rt/include/chschd.h **** 
 488:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 489:./lib/chibios/os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 491:./lib/chibios/os/rt/include/chschd.h **** 
 492:./lib/chibios/os/rt/include/chschd.h **** /**
 493:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:./lib/chibios/os/rt/include/chschd.h ****  *
 495:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:./lib/chibios/os/rt/include/chschd.h ****  *
 497:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 498:./lib/chibios/os/rt/include/chschd.h ****  */
 499:./lib/chibios/os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
 500:./lib/chibios/os/rt/include/chschd.h **** 
 501:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
 502:./lib/chibios/os/rt/include/chschd.h **** }
 503:./lib/chibios/os/rt/include/chschd.h **** 
 504:./lib/chibios/os/rt/include/chschd.h **** /**
 505:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:./lib/chibios/os/rt/include/chschd.h ****  *
 507:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 509:./lib/chibios/os/rt/include/chschd.h ****  *
 510:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 511:./lib/chibios/os/rt/include/chschd.h ****  */
 512:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:./lib/chibios/os/rt/include/chschd.h **** 
 514:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:./lib/chibios/os/rt/include/chschd.h **** }
 516:./lib/chibios/os/rt/include/chschd.h **** 
 517:./lib/chibios/os/rt/include/chschd.h **** /**
 518:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:./lib/chibios/os/rt/include/chschd.h ****  *
 520:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 522:./lib/chibios/os/rt/include/chschd.h ****  *
 523:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 524:./lib/chibios/os/rt/include/chschd.h ****  */
 525:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:./lib/chibios/os/rt/include/chschd.h **** 
 527:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:./lib/chibios/os/rt/include/chschd.h **** }
 529:./lib/chibios/os/rt/include/chschd.h **** 
 530:./lib/chibios/os/rt/include/chschd.h **** /**
 531:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:./lib/chibios/os/rt/include/chschd.h ****  *
 533:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:./lib/chibios/os/rt/include/chschd.h ****  *
 535:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 536:./lib/chibios/os/rt/include/chschd.h ****  */
 537:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
  54              		.loc 4 537 20 view .LVU8
  55              	.LBB225:
 538:./lib/chibios/os/rt/include/chschd.h **** 
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
  56              		.loc 4 539 3 view .LVU9
  57              	.LBE225:
  58              	.LBE224:
  59              	.LBE228:
  60              	.LBE231:
  77:lib/chibios/os/hal/src/hal_buffers.c **** 
  61              		.loc 1 77 72 is_stmt 0 view .LVU10
  62 0000 30B5     		push	{r4, r5, lr}
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  77:lib/chibios/os/hal/src/hal_buffers.c **** 
  67              		.loc 1 77 72 view .LVU11
  68 0002 039D     		ldr	r5, [sp, #12]
  82:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->suspended = suspended;
  69              		.loc 1 82 19 view .LVU12
  70 0004 0172     		strb	r1, [r0, #8]
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
  84:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
  85:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
  71              		.loc 1 86 52 view .LVU13
  72 0006 2C00     		movs	r4, r5
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
  73              		.loc 1 83 19 view .LVU14
  74 0008 0021     		movs	r1, #0
  75              	.LVL1:
  76              		.loc 1 86 33 view .LVU15
  77 000a 0433     		adds	r3, r3, #4
  78              	.LVL2:
  79              		.loc 1 86 52 view .LVU16
  80 000c 5C43     		muls	r4, r3
  87:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
  81              		.loc 1 87 19 view .LVU17
  82 000e C361     		str	r3, [r0, #28]
  88:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bn        = n;
  89:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->buffers   = bp;
  90:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
  91:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
  92:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
  83              		.loc 1 92 19 view .LVU18
  84 0010 049B     		ldr	r3, [sp, #16]
  85              	.LVL3:
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
  86              		.loc 1 86 24 view .LVU19
  87 0012 1419     		adds	r4, r2, r4
  88              		.loc 1 92 19 view .LVU20
  89 0014 0363     		str	r3, [r0, #48]
  93:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->link      = link;
  90              		.loc 1 93 19 view .LVU21
  91 0016 059B     		ldr	r3, [sp, #20]
  88:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bn        = n;
  92              		.loc 1 88 19 view .LVU22
  93 0018 0562     		str	r5, [r0, #32]
  94              	.LBB232:
  95              	.LBB229:
  96              	.LBB227:
  97              	.LBB226:
  98              		.loc 4 539 13 view .LVU23
  99 001a 0060     		str	r0, [r0]
 540:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 100              		.loc 4 540 3 is_stmt 1 view .LVU24
 101              		.loc 4 540 13 is_stmt 0 view .LVU25
 102 001c 4060     		str	r0, [r0, #4]
 103              	.LVL4:
 104              		.loc 4 540 13 view .LVU26
 105              	.LBE226:
 106              	.LBE227:
 107              	.LBE229:
 108              	.LBE232:
  82:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
 109              		.loc 1 82 3 is_stmt 1 view .LVU27
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
 110              		.loc 1 83 3 view .LVU28
  83:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
 111              		.loc 1 83 19 is_stmt 0 view .LVU29
 112 001e C160     		str	r1, [r0, #12]
  84:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
 113              		.loc 1 84 3 is_stmt 1 view .LVU30
  84:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
 114              		.loc 1 84 19 is_stmt 0 view .LVU31
 115 0020 4261     		str	r2, [r0, #20]
  85:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
 116              		.loc 1 85 3 is_stmt 1 view .LVU32
  85:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
 117              		.loc 1 85 19 is_stmt 0 view .LVU33
 118 0022 0261     		str	r2, [r0, #16]
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
 119              		.loc 1 86 3 is_stmt 1 view .LVU34
  86:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
 120              		.loc 1 86 19 is_stmt 0 view .LVU35
 121 0024 8461     		str	r4, [r0, #24]
  87:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bn        = n;
 122              		.loc 1 87 3 is_stmt 1 view .LVU36
  88:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->buffers   = bp;
 123              		.loc 1 88 3 view .LVU37
  89:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 124              		.loc 1 89 3 view .LVU38
  89:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 125              		.loc 1 89 19 is_stmt 0 view .LVU39
 126 0026 4262     		str	r2, [r0, #36]
  90:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 127              		.loc 1 90 3 is_stmt 1 view .LVU40
  90:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 128              		.loc 1 90 19 is_stmt 0 view .LVU41
 129 0028 8162     		str	r1, [r0, #40]
  91:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
 130              		.loc 1 91 3 is_stmt 1 view .LVU42
  91:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
 131              		.loc 1 91 19 is_stmt 0 view .LVU43
 132 002a C162     		str	r1, [r0, #44]
  92:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->link      = link;
 133              		.loc 1 92 3 is_stmt 1 view .LVU44
 134              		.loc 1 93 3 view .LVU45
 135              		.loc 1 93 19 is_stmt 0 view .LVU46
 136 002c 4363     		str	r3, [r0, #52]
  94:lib/chibios/os/hal/src/hal_buffers.c **** }
 137              		.loc 1 94 1 view .LVU47
 138              		@ sp needed
 139 002e 30BD     		pop	{r4, r5, pc}
 140              		.cfi_endproc
 141              	.LFE186:
 143              		.section	.text.ibqResetI,"ax",%progbits
 144              		.align	1
 145              		.global	ibqResetI
 146              		.syntax unified
 147              		.code	16
 148              		.thumb_func
 149              		.fpu softvfp
 151              	ibqResetI:
 152              	.LVL5:
 153              	.LFB187:
  95:lib/chibios/os/hal/src/hal_buffers.c **** 
  96:lib/chibios/os/hal/src/hal_buffers.c **** /**
  97:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Resets an input buffers queue.
  98:lib/chibios/os/hal/src/hal_buffers.c ****  * @details All the data in the input buffers queue is erased and lost, any
  99:lib/chibios/os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 100:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 101:lib/chibios/os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 102:lib/chibios/os/hal/src/hal_buffers.c ****  *
 103:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 104:lib/chibios/os/hal/src/hal_buffers.c ****  *
 105:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 106:lib/chibios/os/hal/src/hal_buffers.c ****  */
 107:lib/chibios/os/hal/src/hal_buffers.c **** void ibqResetI(input_buffers_queue_t *ibqp) {
 154              		.loc 1 107 45 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 108:lib/chibios/os/hal/src/hal_buffers.c **** 
 109:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 158              		.loc 1 109 23 view .LVU49
 110:lib/chibios/os/hal/src/hal_buffers.c **** 
 111:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
 159              		.loc 1 111 3 view .LVU50
 160              		.loc 1 111 19 is_stmt 0 view .LVU51
 161 0000 0023     		movs	r3, #0
 162              	.LBB233:
 163              	.LBB234:
 803:./lib/chibios/os/hal/osal/rt/osal.h **** }
 804:./lib/chibios/os/hal/osal/rt/osal.h **** 
 805:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 806:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 807:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:./lib/chibios/os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 809:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 810:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 813:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 815:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 818:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 819:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 823:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specification.
 825:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 826:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 827:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 828:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 830:./lib/chibios/os/hal/osal/rt/osal.h **** 
 831:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:./lib/chibios/os/hal/osal/rt/osal.h **** }
 833:./lib/chibios/os/hal/osal/rt/osal.h **** 
 834:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 835:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 837:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 839:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 840:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 841:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 842:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:./lib/chibios/os/hal/osal/rt/osal.h **** 
 844:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:./lib/chibios/os/hal/osal/rt/osal.h **** }
 846:./lib/chibios/os/hal/osal/rt/osal.h **** 
 847:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 848:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 852:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 853:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 854:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 855:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 856:./lib/chibios/os/hal/osal/rt/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 164              		.loc 2 857 3 view .LVU52
 165 0002 0221     		movs	r1, #2
 166              	.LBE234:
 167              	.LBE233:
 107:lib/chibios/os/hal/src/hal_buffers.c **** 
 168              		.loc 1 107 45 view .LVU53
 169 0004 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 112:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 173              		.loc 1 112 25 view .LVU54
 174 0006 426A     		ldr	r2, [r0, #36]
 111:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 175              		.loc 1 111 19 view .LVU55
 176 0008 C360     		str	r3, [r0, #12]
 177              		.loc 1 112 3 is_stmt 1 view .LVU56
 178              		.loc 1 112 19 is_stmt 0 view .LVU57
 179 000a 4261     		str	r2, [r0, #20]
 113:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = ibqp->buffers;
 180              		.loc 1 113 3 is_stmt 1 view .LVU58
 181              		.loc 1 113 19 is_stmt 0 view .LVU59
 182 000c 0261     		str	r2, [r0, #16]
 114:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 183              		.loc 1 114 3 is_stmt 1 view .LVU60
 184              		.loc 1 114 19 is_stmt 0 view .LVU61
 185 000e 8362     		str	r3, [r0, #40]
 115:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 186              		.loc 1 115 3 is_stmt 1 view .LVU62
 187              		.loc 1 115 19 is_stmt 0 view .LVU63
 188 0010 C362     		str	r3, [r0, #44]
 116:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&ibqp->waiting, MSG_RESET);
 189              		.loc 1 116 3 is_stmt 1 view .LVU64
 190              	.LVL6:
 191              	.LBB236:
 192              	.LBI233:
 855:./lib/chibios/os/hal/osal/rt/osal.h **** 
 193              		.loc 2 855 20 view .LVU65
 194              	.LBB235:
 195              		.loc 2 857 3 view .LVU66
 196 0012 4942     		rsbs	r1, r1, #0
 197 0014 FFF7FEFF 		bl	chThdDequeueAllI
 198              	.LVL7:
 199              		.loc 2 857 3 is_stmt 0 view .LVU67
 200              	.LBE235:
 201              	.LBE236:
 117:lib/chibios/os/hal/src/hal_buffers.c **** }
 202              		.loc 1 117 1 view .LVU68
 203              		@ sp needed
 204 0018 10BD     		pop	{r4, pc}
 205              		.cfi_endproc
 206              	.LFE187:
 208              		.section	.text.ibqGetEmptyBufferI,"ax",%progbits
 209              		.align	1
 210              		.global	ibqGetEmptyBufferI
 211              		.syntax unified
 212              		.code	16
 213              		.thumb_func
 214              		.fpu softvfp
 216              	ibqGetEmptyBufferI:
 217              	.LVL8:
 218              	.LFB188:
 118:lib/chibios/os/hal/src/hal_buffers.c **** 
 119:lib/chibios/os/hal/src/hal_buffers.c **** /**
 120:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 121:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 122:lib/chibios/os/hal/src/hal_buffers.c ****  *
 123:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 124:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A pointer to the next buffer to be filled.
 125:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is full.
 126:lib/chibios/os/hal/src/hal_buffers.c ****  *
 127:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 128:lib/chibios/os/hal/src/hal_buffers.c ****  */
 129:lib/chibios/os/hal/src/hal_buffers.c **** uint8_t *ibqGetEmptyBufferI(input_buffers_queue_t *ibqp) {
 219              		.loc 1 129 58 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 130:lib/chibios/os/hal/src/hal_buffers.c **** 
 131:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 224              		.loc 1 131 23 view .LVU70
 132:lib/chibios/os/hal/src/hal_buffers.c **** 
 133:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqIsFullI(ibqp)) {
 225              		.loc 1 133 3 view .LVU71
 226              		.loc 1 133 7 is_stmt 0 view .LVU72
 227 0000 0369     		ldr	r3, [r0, #16]
 228 0002 4269     		ldr	r2, [r0, #20]
 229 0004 9342     		cmp	r3, r2
 230 0006 03D1     		bne	.L4
 231              		.loc 1 133 7 discriminator 1 view .LVU73
 232 0008 C268     		ldr	r2, [r0, #12]
 134:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 233              		.loc 1 134 12 discriminator 1 view .LVU74
 234 000a 0020     		movs	r0, #0
 235              	.LVL9:
 133:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 236              		.loc 1 133 7 discriminator 1 view .LVU75
 237 000c 8242     		cmp	r2, r0
 238 000e 00D1     		bne	.L3
 239              	.L4:
 135:lib/chibios/os/hal/src/hal_buffers.c ****   }
 136:lib/chibios/os/hal/src/hal_buffers.c **** 
 137:lib/chibios/os/hal/src/hal_buffers.c ****   return ibqp->bwrptr + sizeof (size_t);
 240              		.loc 1 137 3 is_stmt 1 view .LVU76
 241              		.loc 1 137 23 is_stmt 0 view .LVU77
 242 0010 181D     		adds	r0, r3, #4
 243              	.L3:
 138:lib/chibios/os/hal/src/hal_buffers.c **** }
 244              		.loc 1 138 1 view .LVU78
 245              		@ sp needed
 246 0012 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE188:
 250              		.section	.text.ibqPostFullBufferI,"ax",%progbits
 251              		.align	1
 252              		.global	ibqPostFullBufferI
 253              		.syntax unified
 254              		.code	16
 255              		.thumb_func
 256              		.fpu softvfp
 258              	ibqPostFullBufferI:
 259              	.LVL10:
 260              	.LFB189:
 139:lib/chibios/os/hal/src/hal_buffers.c **** 
 140:lib/chibios/os/hal/src/hal_buffers.c **** /**
 141:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 142:lib/chibios/os/hal/src/hal_buffers.c ****  *
 143:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 144:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 145:lib/chibios/os/hal/src/hal_buffers.c ****  *
 146:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 147:lib/chibios/os/hal/src/hal_buffers.c ****  */
 148:lib/chibios/os/hal/src/hal_buffers.c **** void ibqPostFullBufferI(input_buffers_queue_t *ibqp, size_t size) {
 261              		.loc 1 148 67 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 149:lib/chibios/os/hal/src/hal_buffers.c **** 
 150:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 265              		.loc 1 150 23 view .LVU80
 151:lib/chibios/os/hal/src/hal_buffers.c **** 
 152:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (ibqp->bsize - sizeof (size_t))));
 266              		.loc 1 152 3 view .LVU81
 267              		.loc 1 152 3 view .LVU82
 153:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsFullI(ibqp), "buffers queue full");
 268              		.loc 1 153 3 view .LVU83
 269              		.loc 1 153 3 view .LVU84
 154:lib/chibios/os/hal/src/hal_buffers.c **** 
 155:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 156:lib/chibios/os/hal/src/hal_buffers.c ****   *((size_t *)ibqp->bwrptr) = size;
 270              		.loc 1 156 3 view .LVU85
 271              		.loc 1 156 19 is_stmt 0 view .LVU86
 272 0000 0369     		ldr	r3, [r0, #16]
 148:lib/chibios/os/hal/src/hal_buffers.c **** 
 273              		.loc 1 148 67 view .LVU87
 274 0002 10B5     		push	{r4, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
 278              		.loc 1 156 29 view .LVU88
 279 0004 1960     		str	r1, [r3]
 157:lib/chibios/os/hal/src/hal_buffers.c **** 
 158:lib/chibios/os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 159:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter++;
 280              		.loc 1 159 3 is_stmt 1 view .LVU89
 281              		.loc 1 159 7 is_stmt 0 view .LVU90
 282 0006 C268     		ldr	r2, [r0, #12]
 283              		.loc 1 159 17 view .LVU91
 284 0008 0132     		adds	r2, r2, #1
 285 000a C260     		str	r2, [r0, #12]
 160:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr += ibqp->bsize;
 286              		.loc 1 160 3 is_stmt 1 view .LVU92
 287              		.loc 1 160 16 is_stmt 0 view .LVU93
 288 000c C269     		ldr	r2, [r0, #28]
 289 000e 9B18     		adds	r3, r3, r2
 161:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->bwrptr >= ibqp->btop) {
 290              		.loc 1 161 6 view .LVU94
 291 0010 8269     		ldr	r2, [r0, #24]
 160:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bwrptr += ibqp->bsize;
 292              		.loc 1 160 16 view .LVU95
 293 0012 0361     		str	r3, [r0, #16]
 294              		.loc 1 161 3 is_stmt 1 view .LVU96
 295              		.loc 1 161 6 is_stmt 0 view .LVU97
 296 0014 9342     		cmp	r3, r2
 297 0016 01D3     		bcc	.L8
 162:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->bwrptr = ibqp->buffers;
 298              		.loc 1 162 5 is_stmt 1 view .LVU98
 299              		.loc 1 162 18 is_stmt 0 view .LVU99
 300 0018 436A     		ldr	r3, [r0, #36]
 301 001a 0361     		str	r3, [r0, #16]
 302              	.L8:
 163:lib/chibios/os/hal/src/hal_buffers.c ****   }
 164:lib/chibios/os/hal/src/hal_buffers.c **** 
 165:lib/chibios/os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 166:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&ibqp->waiting, MSG_OK);
 303              		.loc 1 166 3 is_stmt 1 view .LVU100
 304              	.LVL11:
 305              	.LBB237:
 306              	.LBI237:
 842:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307              		.loc 2 842 20 view .LVU101
 308              	.LBB238:
 844:./lib/chibios/os/hal/osal/rt/osal.h **** }
 309              		.loc 2 844 3 view .LVU102
 310 001c 0021     		movs	r1, #0
 311              	.LVL12:
 844:./lib/chibios/os/hal/osal/rt/osal.h **** }
 312              		.loc 2 844 3 is_stmt 0 view .LVU103
 313 001e FFF7FEFF 		bl	chThdDequeueNextI
 314              	.LVL13:
 844:./lib/chibios/os/hal/osal/rt/osal.h **** }
 315              		.loc 2 844 3 view .LVU104
 316              	.LBE238:
 317              	.LBE237:
 167:lib/chibios/os/hal/src/hal_buffers.c **** }
 318              		.loc 1 167 1 view .LVU105
 319              		@ sp needed
 320 0022 10BD     		pop	{r4, pc}
 321              		.cfi_endproc
 322              	.LFE189:
 324              		.section	.text.ibqGetFullBufferTimeoutS,"ax",%progbits
 325              		.align	1
 326              		.global	ibqGetFullBufferTimeoutS
 327              		.syntax unified
 328              		.code	16
 329              		.thumb_func
 330              		.fpu softvfp
 332              	ibqGetFullBufferTimeoutS:
 333              	.LVL14:
 334              	.LFB191:
 168:lib/chibios/os/hal/src/hal_buffers.c **** 
 169:lib/chibios/os/hal/src/hal_buffers.c **** /**
 170:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 171:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 172:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 173:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 174:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 175:lib/chibios/os/hal/src/hal_buffers.c ****  *
 176:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 177:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 178:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 179:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 180:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 181:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 182:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 183:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 184:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 185:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 186:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 187:lib/chibios/os/hal/src/hal_buffers.c ****  *
 188:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 189:lib/chibios/os/hal/src/hal_buffers.c ****  */
 190:lib/chibios/os/hal/src/hal_buffers.c **** msg_t ibqGetFullBufferTimeout(input_buffers_queue_t *ibqp,
 191:lib/chibios/os/hal/src/hal_buffers.c ****                               sysinterval_t timeout) {
 192:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 193:lib/chibios/os/hal/src/hal_buffers.c **** 
 194:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 195:lib/chibios/os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 196:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 197:lib/chibios/os/hal/src/hal_buffers.c **** 
 198:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 199:lib/chibios/os/hal/src/hal_buffers.c **** }
 200:lib/chibios/os/hal/src/hal_buffers.c **** 
 201:lib/chibios/os/hal/src/hal_buffers.c ****   /**
 202:lib/chibios/os/hal/src/hal_buffers.c ****    * @brief   Gets the next filled buffer from the queue.
 203:lib/chibios/os/hal/src/hal_buffers.c ****    * @note    The function always acquires the same buffer if called repeatedly.
 204:lib/chibios/os/hal/src/hal_buffers.c ****    * @post    After calling the function the fields @p ptr and @p top are set
 205:lib/chibios/os/hal/src/hal_buffers.c ****    *          at beginning and end of the buffer data or @p NULL if the queue
 206:lib/chibios/os/hal/src/hal_buffers.c ****    *          is empty.
 207:lib/chibios/os/hal/src/hal_buffers.c ****    *
 208:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 209:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] timeout   the number of ticks before the operation timeouts,
 210:lib/chibios/os/hal/src/hal_buffers.c ****    *                      the following special values are allowed:
 211:lib/chibios/os/hal/src/hal_buffers.c ****    *                      - @a TIME_IMMEDIATE immediate timeout.
 212:lib/chibios/os/hal/src/hal_buffers.c ****    *                      - @a TIME_INFINITE no timeout.
 213:lib/chibios/os/hal/src/hal_buffers.c ****    *                      .
 214:lib/chibios/os/hal/src/hal_buffers.c ****    * @return              The operation status.
 215:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_OK       if a buffer has been acquired.
 216:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_TIMEOUT  if the specified time expired.
 217:lib/chibios/os/hal/src/hal_buffers.c ****    * @retval MSG_RESET    if the queue has been reset or has been put in
 218:lib/chibios/os/hal/src/hal_buffers.c ****    *                      suspended state.
 219:lib/chibios/os/hal/src/hal_buffers.c ****    *
 220:lib/chibios/os/hal/src/hal_buffers.c ****    * @sclass
 221:lib/chibios/os/hal/src/hal_buffers.c ****    */
 222:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t ibqGetFullBufferTimeoutS(input_buffers_queue_t *ibqp,
 223:lib/chibios/os/hal/src/hal_buffers.c ****                                  sysinterval_t timeout) {
 335              		.loc 1 223 57 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		.loc 1 223 57 is_stmt 0 view .LVU107
 340 0000 70B5     		push	{r4, r5, r6, lr}
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 4, -16
 343              		.cfi_offset 5, -12
 344              		.cfi_offset 6, -8
 345              		.cfi_offset 14, -4
 346 0002 0400     		movs	r4, r0
 347 0004 0D00     		movs	r5, r1
 224:lib/chibios/os/hal/src/hal_buffers.c **** 
 225:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 348              		.loc 1 225 23 is_stmt 1 view .LVU108
 226:lib/chibios/os/hal/src/hal_buffers.c **** 
 227:lib/chibios/os/hal/src/hal_buffers.c ****   while (ibqIsEmptyI(ibqp)) {
 349              		.loc 1 227 3 view .LVU109
 350              	.LVL15:
 351              	.L10:
 352              		.loc 1 227 10 is_stmt 0 view .LVU110
 353 0006 E368     		ldr	r3, [r4, #12]
 354              		.loc 1 227 9 view .LVU111
 355 0008 002B     		cmp	r3, #0
 356 000a 07D0     		beq	.L12
 357              	.LVL16:
 358              	.LBB247:
 359              	.LBI247:
 222:lib/chibios/os/hal/src/hal_buffers.c ****                                  sysinterval_t timeout) {
 360              		.loc 1 222 9 is_stmt 1 view .LVU112
 361              	.LBB248:
 228:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->suspended) {
 229:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 230:lib/chibios/os/hal/src/hal_buffers.c ****     }
 231:lib/chibios/os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&ibqp->waiting, timeout);
 232:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 233:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 234:lib/chibios/os/hal/src/hal_buffers.c ****     }
 235:lib/chibios/os/hal/src/hal_buffers.c ****   }
 236:lib/chibios/os/hal/src/hal_buffers.c **** 
 237:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "still empty");
 362              		.loc 1 237 3 view .LVU113
 363              		.loc 1 237 3 view .LVU114
 238:lib/chibios/os/hal/src/hal_buffers.c **** 
 239:lib/chibios/os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 240:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr = ibqp->brdptr + sizeof (size_t);
 364              		.loc 1 240 3 view .LVU115
 365              		.loc 1 240 19 is_stmt 0 view .LVU116
 366 000c 6269     		ldr	r2, [r4, #20]
 241:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 367              		.loc 1 241 13 view .LVU117
 368 000e 0020     		movs	r0, #0
 240:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 369              		.loc 1 240 28 view .LVU118
 370 0010 131D     		adds	r3, r2, #4
 371              		.loc 1 241 25 view .LVU119
 372 0012 1268     		ldr	r2, [r2]
 240:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 373              		.loc 1 240 13 view .LVU120
 374 0014 A362     		str	r3, [r4, #40]
 375              		.loc 1 241 3 is_stmt 1 view .LVU121
 376              		.loc 1 241 25 is_stmt 0 view .LVU122
 377 0016 9B18     		adds	r3, r3, r2
 378              		.loc 1 241 13 view .LVU123
 379 0018 E362     		str	r3, [r4, #44]
 242:lib/chibios/os/hal/src/hal_buffers.c **** 
 243:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 380              		.loc 1 243 3 is_stmt 1 view .LVU124
 381              	.LVL17:
 382              		.loc 1 243 3 is_stmt 0 view .LVU125
 383 001a 08E0     		b	.L9
 384              	.L12:
 385              		.loc 1 243 3 view .LVU126
 386              	.LBE248:
 387              	.LBE247:
 388              	.LBB249:
 228:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 389              		.loc 1 228 5 is_stmt 1 view .LVU127
 228:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 390              		.loc 1 228 8 is_stmt 0 view .LVU128
 391 001c 237A     		ldrb	r3, [r4, #8]
 392 001e 002B     		cmp	r3, #0
 393 0020 06D1     		bne	.L13
 231:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 394              		.loc 1 231 5 is_stmt 1 view .LVU129
 395              	.LVL18:
 396              	.LBB250:
 397              	.LBI250:
 828:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 398              		.loc 2 828 21 view .LVU130
 399              	.LBB251:
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 400              		.loc 2 831 3 view .LVU131
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 401              		.loc 2 831 10 is_stmt 0 view .LVU132
 402 0022 2900     		movs	r1, r5
 403 0024 2000     		movs	r0, r4
 404 0026 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 405              	.LVL19:
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 406              		.loc 2 831 10 view .LVU133
 407              	.LBE251:
 408              	.LBE250:
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 409              		.loc 1 232 5 is_stmt 1 view .LVU134
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 410              		.loc 1 232 8 is_stmt 0 view .LVU135
 411 002a 0028     		cmp	r0, #0
 412 002c EBDA     		bge	.L10
 413              	.LVL20:
 414              	.L9:
 232:lib/chibios/os/hal/src/hal_buffers.c ****        return msg;
 415              		.loc 1 232 8 view .LVU136
 416              	.LBE249:
 244:lib/chibios/os/hal/src/hal_buffers.c **** }
 417              		.loc 1 244 1 view .LVU137
 418              		@ sp needed
 419              	.LVL21:
 420              	.LVL22:
 421              		.loc 1 244 1 view .LVU138
 422 002e 70BD     		pop	{r4, r5, r6, pc}
 423              	.LVL23:
 424              	.L13:
 425              	.LBB252:
 229:lib/chibios/os/hal/src/hal_buffers.c ****     }
 426              		.loc 1 229 14 view .LVU139
 427 0030 0220     		movs	r0, #2
 428 0032 4042     		rsbs	r0, r0, #0
 429 0034 FBE7     		b	.L9
 430              	.LBE252:
 431              		.cfi_endproc
 432              	.LFE191:
 434              		.section	.text.ibqGetFullBufferTimeout,"ax",%progbits
 435              		.align	1
 436              		.global	ibqGetFullBufferTimeout
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 440              		.fpu softvfp
 442              	ibqGetFullBufferTimeout:
 443              	.LVL24:
 444              	.LFB190:
 191:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 445              		.loc 1 191 54 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 192:lib/chibios/os/hal/src/hal_buffers.c **** 
 449              		.loc 1 192 3 view .LVU141
 194:lib/chibios/os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 450              		.loc 1 194 3 view .LVU142
 451              	.LBB253:
 452              	.LBI253:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 453              		.loc 2 509 20 view .LVU143
 454              	.LBE253:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 455              		.loc 2 511 3 view .LVU144
 456              	.LBB265:
 457              	.LBB254:
 458              	.LBI254:
 459              		.file 5 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 460              		.loc 5 353 20 view .LVU145
 461              	.LBE254:
 462              	.LBE265:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 463              		.loc 5 355 3 view .LVU146
 464              	.LBB266:
 465              	.LBB262:
 466              	.LBB255:
 467              	.LBI255:
 468              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 469              		.loc 6 387 20 view .LVU147
 470              	.LBE255:
 471              	.LBE262:
 472              	.LBE266:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 473              		.loc 6 389 3 view .LVU148
 474              	.LBB267:
 475              	.LBB263:
 476              	.LBB260:
 477              	.LBB256:
 478              	.LBI256:
 479              		.file 7 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 480              		.loc 7 140 27 view .LVU149
 481              	.LBB257:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 482              		.loc 7 142 3 view .LVU150
 483              	.LBE257:
 484              	.LBE256:
 485              	.LBE260:
 486              	.LBE263:
 487              	.LBE267:
 191:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 488              		.loc 1 191 54 is_stmt 0 view .LVU151
 489 0000 10B5     		push	{r4, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 493              	.LBB268:
 494              	.LBB264:
 495              	.LBB261:
 496              	.LBB259:
 497              	.LBB258:
 498              		.loc 7 142 3 view .LVU152
 499              		.syntax divided
 500              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 501 0002 72B6     		cpsid i
 502              	@ 0 "" 2
 503              		.thumb
 504              		.syntax unified
 505              	.LBE258:
 506              	.LBE259:
 507              	.LBE261:
 508              	.LBE264:
 509              	.LBE268:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 510              		.loc 5 356 34 is_stmt 1 view .LVU153
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 511              		.loc 5 357 20 view .LVU154
 195:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 512              		.loc 1 195 3 view .LVU155
 195:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 513              		.loc 1 195 9 is_stmt 0 view .LVU156
 514 0004 FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 515              	.LVL25:
 196:lib/chibios/os/hal/src/hal_buffers.c **** 
 516              		.loc 1 196 3 is_stmt 1 view .LVU157
 517              	.LBB269:
 518              	.LBI269:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 519              		.loc 2 520 20 view .LVU158
 520              	.LBE269:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 521              		.loc 2 522 3 view .LVU159
 522              	.LBB278:
 523              	.LBB270:
 524              	.LBI270:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 525              		.loc 5 365 20 view .LVU160
 526              	.LBB271:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 527              		.loc 5 367 22 view .LVU161
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 528              		.loc 5 368 33 view .LVU162
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 529              		.loc 5 374 3 view .LVU163
 530              		.loc 5 374 3 view .LVU164
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 531              		.loc 5 378 3 view .LVU165
 532              	.LBB272:
 533              	.LBI272:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 534              		.loc 6 396 20 view .LVU166
 535              	.LBE272:
 536              	.LBE271:
 537              	.LBE270:
 538              	.LBE278:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 539              		.loc 6 398 3 view .LVU167
 540              	.LBB279:
 541              	.LBB277:
 542              	.LBB276:
 543              	.LBB275:
 544              	.LBB273:
 545              	.LBI273:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 546              		.loc 7 129 27 view .LVU168
 547              	.LBB274:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 548              		.loc 7 131 3 view .LVU169
 549              		.syntax divided
 550              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 551 0008 62B6     		cpsie i
 552              	@ 0 "" 2
 553              		.thumb
 554              		.syntax unified
 555              	.LBE274:
 556              	.LBE273:
 557              	.LBE275:
 558              	.LBE276:
 559              	.LBE277:
 560              	.LBE279:
 198:lib/chibios/os/hal/src/hal_buffers.c **** }
 561              		.loc 1 198 3 view .LVU170
 199:lib/chibios/os/hal/src/hal_buffers.c **** 
 562              		.loc 1 199 1 is_stmt 0 view .LVU171
 563              		@ sp needed
 564 000a 10BD     		pop	{r4, pc}
 565              		.cfi_endproc
 566              	.LFE190:
 568              		.section	.text.ibqReleaseEmptyBufferS,"ax",%progbits
 569              		.align	1
 570              		.global	ibqReleaseEmptyBufferS
 571              		.syntax unified
 572              		.code	16
 573              		.thumb_func
 574              		.fpu softvfp
 576              	ibqReleaseEmptyBufferS:
 577              	.LVL26:
 578              	.LFB193:
 245:lib/chibios/os/hal/src/hal_buffers.c **** 
 246:lib/chibios/os/hal/src/hal_buffers.c **** /**
 247:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Releases the buffer back in the queue.
 248:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 249:lib/chibios/os/hal/src/hal_buffers.c ****  *
 250:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 251:lib/chibios/os/hal/src/hal_buffers.c ****  *
 252:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 253:lib/chibios/os/hal/src/hal_buffers.c ****  */
 254:lib/chibios/os/hal/src/hal_buffers.c **** void ibqReleaseEmptyBuffer(input_buffers_queue_t *ibqp) {
 255:lib/chibios/os/hal/src/hal_buffers.c **** 
 256:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 257:lib/chibios/os/hal/src/hal_buffers.c ****   ibqReleaseEmptyBufferS(ibqp);
 258:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 259:lib/chibios/os/hal/src/hal_buffers.c **** }
 260:lib/chibios/os/hal/src/hal_buffers.c **** 
 261:lib/chibios/os/hal/src/hal_buffers.c ****   /**
 262:lib/chibios/os/hal/src/hal_buffers.c ****    * @brief   Releases the buffer back in the queue.
 263:lib/chibios/os/hal/src/hal_buffers.c ****    * @note    The object callback is called after releasing the buffer.
 264:lib/chibios/os/hal/src/hal_buffers.c ****    *
 265:lib/chibios/os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 266:lib/chibios/os/hal/src/hal_buffers.c ****    *
 267:lib/chibios/os/hal/src/hal_buffers.c ****    * @sclass
 268:lib/chibios/os/hal/src/hal_buffers.c ****    */
 269:lib/chibios/os/hal/src/hal_buffers.c ****   void ibqReleaseEmptyBufferS(input_buffers_queue_t *ibqp) {
 579              		.loc 1 269 60 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 270:lib/chibios/os/hal/src/hal_buffers.c **** 
 271:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 583              		.loc 1 271 23 view .LVU173
 272:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 584              		.loc 1 272 3 view .LVU174
 585              		.loc 1 272 3 view .LVU175
 273:lib/chibios/os/hal/src/hal_buffers.c **** 
 274:lib/chibios/os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 275:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->bcounter--;
 586              		.loc 1 275 3 view .LVU176
 587              		.loc 1 275 7 is_stmt 0 view .LVU177
 588 0000 C368     		ldr	r3, [r0, #12]
 276:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 589              		.loc 1 276 16 view .LVU178
 590 0002 C269     		ldr	r2, [r0, #28]
 275:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 591              		.loc 1 275 17 view .LVU179
 592 0004 013B     		subs	r3, r3, #1
 593 0006 C360     		str	r3, [r0, #12]
 594              		.loc 1 276 3 is_stmt 1 view .LVU180
 595              		.loc 1 276 16 is_stmt 0 view .LVU181
 596 0008 4369     		ldr	r3, [r0, #20]
 269:lib/chibios/os/hal/src/hal_buffers.c **** 
 597              		.loc 1 269 60 view .LVU182
 598 000a 10B5     		push	{r4, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
 602              		.loc 1 276 16 view .LVU183
 603 000c 9B18     		adds	r3, r3, r2
 277:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 604              		.loc 1 277 6 view .LVU184
 605 000e 8269     		ldr	r2, [r0, #24]
 276:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 606              		.loc 1 276 16 view .LVU185
 607 0010 4361     		str	r3, [r0, #20]
 608              		.loc 1 277 3 is_stmt 1 view .LVU186
 609              		.loc 1 277 6 is_stmt 0 view .LVU187
 610 0012 9342     		cmp	r3, r2
 611 0014 01D3     		bcc	.L16
 278:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 612              		.loc 1 278 5 is_stmt 1 view .LVU188
 613              		.loc 1 278 18 is_stmt 0 view .LVU189
 614 0016 436A     		ldr	r3, [r0, #36]
 615 0018 4361     		str	r3, [r0, #20]
 616              	.L16:
 279:lib/chibios/os/hal/src/hal_buffers.c ****   }
 280:lib/chibios/os/hal/src/hal_buffers.c **** 
 281:lib/chibios/os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 282:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr = NULL;
 617              		.loc 1 282 3 is_stmt 1 view .LVU190
 618              		.loc 1 282 13 is_stmt 0 view .LVU191
 619 001a 0023     		movs	r3, #0
 620 001c 8362     		str	r3, [r0, #40]
 283:lib/chibios/os/hal/src/hal_buffers.c **** 
 284:lib/chibios/os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 285:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->notify != NULL) {
 621              		.loc 1 285 3 is_stmt 1 view .LVU192
 622              		.loc 1 285 11 is_stmt 0 view .LVU193
 623 001e 036B     		ldr	r3, [r0, #48]
 624              		.loc 1 285 6 view .LVU194
 625 0020 002B     		cmp	r3, #0
 626 0022 00D0     		beq	.L15
 286:lib/chibios/os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 627              		.loc 1 286 5 is_stmt 1 view .LVU195
 628 0024 9847     		blx	r3
 629              	.LVL27:
 630              	.L15:
 287:lib/chibios/os/hal/src/hal_buffers.c ****   }
 288:lib/chibios/os/hal/src/hal_buffers.c **** }
 631              		.loc 1 288 1 is_stmt 0 view .LVU196
 632              		@ sp needed
 633 0026 10BD     		pop	{r4, pc}
 634              		.cfi_endproc
 635              	.LFE193:
 637              		.section	.text.ibqReleaseEmptyBuffer,"ax",%progbits
 638              		.align	1
 639              		.global	ibqReleaseEmptyBuffer
 640              		.syntax unified
 641              		.code	16
 642              		.thumb_func
 643              		.fpu softvfp
 645              	ibqReleaseEmptyBuffer:
 646              	.LVL28:
 647              	.LFB192:
 254:lib/chibios/os/hal/src/hal_buffers.c **** 
 648              		.loc 1 254 57 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 256:lib/chibios/os/hal/src/hal_buffers.c ****   ibqReleaseEmptyBufferS(ibqp);
 652              		.loc 1 256 3 view .LVU198
 653              	.LBB280:
 654              	.LBI280:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 655              		.loc 2 509 20 view .LVU199
 656              	.LBE280:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 657              		.loc 2 511 3 view .LVU200
 658              	.LBB292:
 659              	.LBB281:
 660              	.LBI281:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 661              		.loc 5 353 20 view .LVU201
 662              	.LBE281:
 663              	.LBE292:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 664              		.loc 5 355 3 view .LVU202
 665              	.LBB293:
 666              	.LBB289:
 667              	.LBB282:
 668              	.LBI282:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 669              		.loc 6 387 20 view .LVU203
 670              	.LBE282:
 671              	.LBE289:
 672              	.LBE293:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 673              		.loc 6 389 3 view .LVU204
 674              	.LBB294:
 675              	.LBB290:
 676              	.LBB287:
 677              	.LBB283:
 678              	.LBI283:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 679              		.loc 7 140 27 view .LVU205
 680              	.LBB284:
 681              		.loc 7 142 3 view .LVU206
 682              	.LBE284:
 683              	.LBE283:
 684              	.LBE287:
 685              	.LBE290:
 686              	.LBE294:
 254:lib/chibios/os/hal/src/hal_buffers.c **** 
 687              		.loc 1 254 57 is_stmt 0 view .LVU207
 688 0000 10B5     		push	{r4, lr}
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 4, -8
 691              		.cfi_offset 14, -4
 692              	.LBB295:
 693              	.LBB291:
 694              	.LBB288:
 695              	.LBB286:
 696              	.LBB285:
 697              		.loc 7 142 3 view .LVU208
 698              		.syntax divided
 699              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 700 0002 72B6     		cpsid i
 701              	@ 0 "" 2
 702              		.thumb
 703              		.syntax unified
 704              	.LBE285:
 705              	.LBE286:
 706              	.LBE288:
 707              	.LBE291:
 708              	.LBE295:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 709              		.loc 5 356 34 is_stmt 1 view .LVU209
 357:./lib/chibios/os/rt/include/chsys.h **** }
 710              		.loc 5 357 20 view .LVU210
 257:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 711              		.loc 1 257 3 view .LVU211
 712 0004 FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 713              	.LVL29:
 258:lib/chibios/os/hal/src/hal_buffers.c **** }
 714              		.loc 1 258 3 view .LVU212
 715              	.LBB296:
 716              	.LBI296:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 717              		.loc 2 520 20 view .LVU213
 718              	.LBE296:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 719              		.loc 2 522 3 view .LVU214
 720              	.LBB305:
 721              	.LBB297:
 722              	.LBI297:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 723              		.loc 5 365 20 view .LVU215
 724              	.LBB298:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 725              		.loc 5 367 22 view .LVU216
 368:./lib/chibios/os/rt/include/chsys.h **** 
 726              		.loc 5 368 33 view .LVU217
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 727              		.loc 5 374 3 view .LVU218
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 728              		.loc 5 374 3 view .LVU219
 729              		.loc 5 378 3 view .LVU220
 730              	.LBB299:
 731              	.LBI299:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 732              		.loc 6 396 20 view .LVU221
 733              	.LBE299:
 734              	.LBE298:
 735              	.LBE297:
 736              	.LBE305:
 737              		.loc 6 398 3 view .LVU222
 738              	.LBB306:
 739              	.LBB304:
 740              	.LBB303:
 741              	.LBB302:
 742              	.LBB300:
 743              	.LBI300:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 744              		.loc 7 129 27 view .LVU223
 745              	.LBB301:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 746              		.loc 7 131 3 view .LVU224
 747              		.syntax divided
 748              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 749 0008 62B6     		cpsie i
 750              	@ 0 "" 2
 751              		.thumb
 752              		.syntax unified
 753              	.LBE301:
 754              	.LBE300:
 755              	.LBE302:
 756              	.LBE303:
 757              	.LBE304:
 758              	.LBE306:
 259:lib/chibios/os/hal/src/hal_buffers.c **** 
 759              		.loc 1 259 1 is_stmt 0 view .LVU225
 760              		@ sp needed
 761 000a 10BD     		pop	{r4, pc}
 762              		.cfi_endproc
 763              	.LFE192:
 765              		.section	.text.ibqGetTimeout,"ax",%progbits
 766              		.align	1
 767              		.global	ibqGetTimeout
 768              		.syntax unified
 769              		.code	16
 770              		.thumb_func
 771              		.fpu softvfp
 773              	ibqGetTimeout:
 774              	.LVL30:
 775              	.LFB194:
 289:lib/chibios/os/hal/src/hal_buffers.c **** 
 290:lib/chibios/os/hal/src/hal_buffers.c **** /**
 291:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 292:lib/chibios/os/hal/src/hal_buffers.c ****  * @details This function reads a byte value from an input queue. If
 293:lib/chibios/os/hal/src/hal_buffers.c ****  *          the queue is empty then the calling thread is suspended until a
 294:lib/chibios/os/hal/src/hal_buffers.c ****  *          new buffer arrives in the queue or a timeout occurs.
 295:lib/chibios/os/hal/src/hal_buffers.c ****  *
 296:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 297:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 298:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 299:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 300:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 301:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 302:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 303:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 304:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 305:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 306:lib/chibios/os/hal/src/hal_buffers.c ****  *
 307:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 308:lib/chibios/os/hal/src/hal_buffers.c ****  */
 309:lib/chibios/os/hal/src/hal_buffers.c **** msg_t ibqGetTimeout(input_buffers_queue_t *ibqp, sysinterval_t timeout) {
 776              		.loc 1 309 73 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 310:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 780              		.loc 1 310 3 view .LVU227
 311:lib/chibios/os/hal/src/hal_buffers.c **** 
 312:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 781              		.loc 1 312 3 view .LVU228
 782              	.LBB307:
 783              	.LBI307:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 784              		.loc 2 509 20 view .LVU229
 785              	.LBE307:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 786              		.loc 2 511 3 view .LVU230
 787              	.LBB319:
 788              	.LBB308:
 789              	.LBI308:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 790              		.loc 5 353 20 view .LVU231
 791              	.LBE308:
 792              	.LBE319:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 793              		.loc 5 355 3 view .LVU232
 794              	.LBB320:
 795              	.LBB316:
 796              	.LBB309:
 797              	.LBI309:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 798              		.loc 6 387 20 view .LVU233
 799              	.LBE309:
 800              	.LBE316:
 801              	.LBE320:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 802              		.loc 6 389 3 view .LVU234
 803              	.LBB321:
 804              	.LBB317:
 805              	.LBB314:
 806              	.LBB310:
 807              	.LBI310:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 808              		.loc 7 140 27 view .LVU235
 809              	.LBB311:
 810              		.loc 7 142 3 view .LVU236
 811              	.LBE311:
 812              	.LBE310:
 813              	.LBE314:
 814              	.LBE317:
 815              	.LBE321:
 309:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 816              		.loc 1 309 73 is_stmt 0 view .LVU237
 817 0000 70B5     		push	{r4, r5, r6, lr}
 818              		.cfi_def_cfa_offset 16
 819              		.cfi_offset 4, -16
 820              		.cfi_offset 5, -12
 821              		.cfi_offset 6, -8
 822              		.cfi_offset 14, -4
 309:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 823              		.loc 1 309 73 view .LVU238
 824 0002 0400     		movs	r4, r0
 825              	.LBB322:
 826              	.LBB318:
 827              	.LBB315:
 828              	.LBB313:
 829              	.LBB312:
 830              		.loc 7 142 3 view .LVU239
 831              		.syntax divided
 832              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 833 0004 72B6     		cpsid i
 834              	@ 0 "" 2
 835              		.thumb
 836              		.syntax unified
 837              	.LBE312:
 838              	.LBE313:
 839              	.LBE315:
 840              	.LBE318:
 841              	.LBE322:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 842              		.loc 5 356 34 is_stmt 1 view .LVU240
 357:./lib/chibios/os/rt/include/chsys.h **** }
 843              		.loc 5 357 20 view .LVU241
 313:lib/chibios/os/hal/src/hal_buffers.c **** 
 314:lib/chibios/os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 315:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->ptr == NULL) {
 844              		.loc 1 315 3 view .LVU242
 845              		.loc 1 315 6 is_stmt 0 view .LVU243
 846 0006 836A     		ldr	r3, [r0, #40]
 847 0008 002B     		cmp	r3, #0
 848 000a 06D1     		bne	.L23
 316:lib/chibios/os/hal/src/hal_buffers.c ****     msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 849              		.loc 1 316 5 is_stmt 1 view .LVU244
 850              		.loc 1 316 11 is_stmt 0 view .LVU245
 851 000c FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 852              	.LVL31:
 853              		.loc 1 316 11 view .LVU246
 854 0010 051E     		subs	r5, r0, #0
 855              	.LVL32:
 317:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 856              		.loc 1 317 5 is_stmt 1 view .LVU247
 857              		.loc 1 317 8 is_stmt 0 view .LVU248
 858 0012 02D0     		beq	.L23
 859              	.LVL33:
 860              	.L25:
 318:lib/chibios/os/hal/src/hal_buffers.c ****       osalSysUnlock();
 319:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 320:lib/chibios/os/hal/src/hal_buffers.c ****     }
 321:lib/chibios/os/hal/src/hal_buffers.c ****   }
 322:lib/chibios/os/hal/src/hal_buffers.c **** 
 323:lib/chibios/os/hal/src/hal_buffers.c ****   /* Next byte from the buffer.*/
 324:lib/chibios/os/hal/src/hal_buffers.c ****   msg = (msg_t)*ibqp->ptr;
 325:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 326:lib/chibios/os/hal/src/hal_buffers.c **** 
 327:lib/chibios/os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully read then it is returned as
 328:lib/chibios/os/hal/src/hal_buffers.c ****      empty in the queue.*/
 329:lib/chibios/os/hal/src/hal_buffers.c ****   if (ibqp->ptr >= ibqp->top) {
 330:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 331:lib/chibios/os/hal/src/hal_buffers.c ****   }
 332:lib/chibios/os/hal/src/hal_buffers.c **** 
 333:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 861              		.loc 1 333 3 is_stmt 1 view .LVU249
 862              	.LBB323:
 863              	.LBI323:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 864              		.loc 2 520 20 view .LVU250
 865              	.LBE323:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 866              		.loc 2 522 3 view .LVU251
 867              	.LBB332:
 868              	.LBB324:
 869              	.LBI324:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 870              		.loc 5 365 20 view .LVU252
 871              	.LBB325:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 872              		.loc 5 367 22 view .LVU253
 368:./lib/chibios/os/rt/include/chsys.h **** 
 873              		.loc 5 368 33 view .LVU254
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 874              		.loc 5 374 3 view .LVU255
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 875              		.loc 5 374 3 view .LVU256
 876              		.loc 5 378 3 view .LVU257
 877              	.LBB326:
 878              	.LBI326:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 879              		.loc 6 396 20 view .LVU258
 880              	.LBE326:
 881              	.LBE325:
 882              	.LBE324:
 883              	.LBE332:
 884              		.loc 6 398 3 view .LVU259
 885              	.LBB333:
 886              	.LBB331:
 887              	.LBB330:
 888              	.LBB329:
 889              	.LBB327:
 890              	.LBI327:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 891              		.loc 7 129 27 view .LVU260
 892              	.LBB328:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 893              		.loc 7 131 3 view .LVU261
 894              		.syntax divided
 895              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 896 0014 62B6     		cpsie i
 897              	@ 0 "" 2
 898              		.thumb
 899              		.syntax unified
 900              	.LBE328:
 901              	.LBE327:
 902              	.LBE329:
 903              	.LBE330:
 904              	.LBE331:
 905              	.LBE333:
 334:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 906              		.loc 1 334 3 view .LVU262
 335:lib/chibios/os/hal/src/hal_buffers.c **** }
 907              		.loc 1 335 1 is_stmt 0 view .LVU263
 908 0016 2800     		movs	r0, r5
 909              		@ sp needed
 910              	.LVL34:
 911              	.LVL35:
 912              		.loc 1 335 1 view .LVU264
 913 0018 70BD     		pop	{r4, r5, r6, pc}
 914              	.LVL36:
 915              	.L23:
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 916              		.loc 1 324 3 is_stmt 1 view .LVU265
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 917              		.loc 1 324 21 is_stmt 0 view .LVU266
 918 001a A36A     		ldr	r3, [r4, #40]
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 919              		.loc 1 329 6 view .LVU267
 920 001c E26A     		ldr	r2, [r4, #44]
 324:lib/chibios/os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 921              		.loc 1 324 7 view .LVU268
 922 001e 1D78     		ldrb	r5, [r3]
 923              	.LVL37:
 325:lib/chibios/os/hal/src/hal_buffers.c **** 
 924              		.loc 1 325 3 is_stmt 1 view .LVU269
 325:lib/chibios/os/hal/src/hal_buffers.c **** 
 925              		.loc 1 325 12 is_stmt 0 view .LVU270
 926 0020 0133     		adds	r3, r3, #1
 927 0022 A362     		str	r3, [r4, #40]
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 928              		.loc 1 329 3 is_stmt 1 view .LVU271
 329:lib/chibios/os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 929              		.loc 1 329 6 is_stmt 0 view .LVU272
 930 0024 9342     		cmp	r3, r2
 931 0026 F5D3     		bcc	.L25
 330:lib/chibios/os/hal/src/hal_buffers.c ****   }
 932              		.loc 1 330 5 is_stmt 1 view .LVU273
 933 0028 2000     		movs	r0, r4
 934 002a FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 935              	.LVL38:
 936 002e F1E7     		b	.L25
 937              		.cfi_endproc
 938              	.LFE194:
 940              		.section	.text.ibqReadTimeout,"ax",%progbits
 941              		.align	1
 942              		.global	ibqReadTimeout
 943              		.syntax unified
 944              		.code	16
 945              		.thumb_func
 946              		.fpu softvfp
 948              	ibqReadTimeout:
 949              	.LVL39:
 950              	.LFB195:
 336:lib/chibios/os/hal/src/hal_buffers.c **** 
 337:lib/chibios/os/hal/src/hal_buffers.c **** /**
 338:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 339:lib/chibios/os/hal/src/hal_buffers.c ****  * @details The function reads data from an input queue into a buffer.
 340:lib/chibios/os/hal/src/hal_buffers.c ****  *          The operation completes when the specified amount of data has been
 341:lib/chibios/os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 342:lib/chibios/os/hal/src/hal_buffers.c ****  *          been reset.
 343:lib/chibios/os/hal/src/hal_buffers.c ****  *
 344:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 345:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] bp       pointer to the data buffer
 346:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 347:lib/chibios/os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 348:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 349:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 350:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 351:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 352:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 353:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 354:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 355:lib/chibios/os/hal/src/hal_buffers.c ****  *
 356:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 357:lib/chibios/os/hal/src/hal_buffers.c ****  */
 358:lib/chibios/os/hal/src/hal_buffers.c **** size_t ibqReadTimeout(input_buffers_queue_t *ibqp, uint8_t *bp,
 359:lib/chibios/os/hal/src/hal_buffers.c ****                       size_t n, sysinterval_t timeout) {
 951              		.loc 1 359 56 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 360:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 955              		.loc 1 360 3 view .LVU275
 361:lib/chibios/os/hal/src/hal_buffers.c **** 
 362:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 956              		.loc 1 362 3 view .LVU276
 957              		.loc 1 362 3 view .LVU277
 363:lib/chibios/os/hal/src/hal_buffers.c **** 
 364:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 958              		.loc 1 364 3 view .LVU278
 959              	.LBB334:
 960              	.LBI334:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 961              		.loc 2 509 20 view .LVU279
 962              	.LBE334:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 963              		.loc 2 511 3 view .LVU280
 964              	.LBB346:
 965              	.LBB335:
 966              	.LBI335:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 967              		.loc 5 353 20 view .LVU281
 968              	.LBE335:
 969              	.LBE346:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 970              		.loc 5 355 3 view .LVU282
 971              	.LBB347:
 972              	.LBB343:
 973              	.LBB336:
 974              	.LBI336:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 975              		.loc 6 387 20 view .LVU283
 976              	.LBE336:
 977              	.LBE343:
 978              	.LBE347:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 979              		.loc 6 389 3 view .LVU284
 980              	.LBB348:
 981              	.LBB344:
 982              	.LBB341:
 983              	.LBB337:
 984              	.LBI337:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 985              		.loc 7 140 27 view .LVU285
 986              	.LBB338:
 987              		.loc 7 142 3 view .LVU286
 988              	.LBE338:
 989              	.LBE337:
 990              	.LBE341:
 991              	.LBE344:
 992              	.LBE348:
 359:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 993              		.loc 1 359 56 is_stmt 0 view .LVU287
 994 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 995              		.cfi_def_cfa_offset 32
 996              		.cfi_offset 0, -32
 997              		.cfi_offset 1, -28
 998              		.cfi_offset 2, -24
 999              		.cfi_offset 4, -20
 1000              		.cfi_offset 5, -16
 1001              		.cfi_offset 6, -12
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 359:lib/chibios/os/hal/src/hal_buffers.c ****   size_t r = 0;
 1004              		.loc 1 359 56 view .LVU288
 1005 0002 0400     		movs	r4, r0
 1006 0004 0F00     		movs	r7, r1
 1007 0006 0092     		str	r2, [sp]
 1008 0008 0193     		str	r3, [sp, #4]
 1009              	.LBB349:
 1010              	.LBB345:
 1011              	.LBB342:
 1012              	.LBB340:
 1013              	.LBB339:
 1014              		.loc 7 142 3 view .LVU289
 1015              		.syntax divided
 1016              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1017 000a 72B6     		cpsid i
 1018              	@ 0 "" 2
 1019              		.thumb
 1020              		.syntax unified
 1021              	.LBE339:
 1022              	.LBE340:
 1023              	.LBE342:
 1024              	.LBE345:
 1025              	.LBE349:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1026              		.loc 5 356 34 is_stmt 1 view .LVU290
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1027              		.loc 5 357 20 view .LVU291
 360:lib/chibios/os/hal/src/hal_buffers.c **** 
 1028              		.loc 1 360 10 is_stmt 0 view .LVU292
 1029 000c 0025     		movs	r5, #0
 1030              	.LVL40:
 1031              	.L36:
 365:lib/chibios/os/hal/src/hal_buffers.c **** 
 366:lib/chibios/os/hal/src/hal_buffers.c ****   while (true) {
 1032              		.loc 1 366 3 is_stmt 1 view .LVU293
 1033              	.LBB350:
 367:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size;
 1034              		.loc 1 367 5 view .LVU294
 368:lib/chibios/os/hal/src/hal_buffers.c **** 
 369:lib/chibios/os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 370:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->ptr == NULL) {
 1035              		.loc 1 370 5 view .LVU295
 1036              		.loc 1 370 8 is_stmt 0 view .LVU296
 1037 000e A36A     		ldr	r3, [r4, #40]
 1038 0010 002B     		cmp	r3, #0
 1039 0012 08D1     		bne	.L30
 1040              	.LBB351:
 371:lib/chibios/os/hal/src/hal_buffers.c ****       msg_t msg;
 1041              		.loc 1 371 7 is_stmt 1 view .LVU297
 372:lib/chibios/os/hal/src/hal_buffers.c **** 
 373:lib/chibios/os/hal/src/hal_buffers.c ****       /* Getting a data buffer using the specified timeout.*/
 374:lib/chibios/os/hal/src/hal_buffers.c ****       msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 1042              		.loc 1 374 7 view .LVU298
 1043              		.loc 1 374 13 is_stmt 0 view .LVU299
 1044 0014 0199     		ldr	r1, [sp, #4]
 1045 0016 2000     		movs	r0, r4
 1046 0018 FFF7FEFF 		bl	ibqGetFullBufferTimeoutS
 1047              	.LVL41:
 375:lib/chibios/os/hal/src/hal_buffers.c **** 
 376:lib/chibios/os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 377:lib/chibios/os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 1048              		.loc 1 377 7 is_stmt 1 view .LVU300
 1049              		.loc 1 377 10 is_stmt 0 view .LVU301
 1050 001c 0028     		cmp	r0, #0
 1051 001e 02D0     		beq	.L30
 378:lib/chibios/os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1052              		.loc 1 378 9 is_stmt 1 view .LVU302
 1053              	.LBB352:
 1054              	.LBI352:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1055              		.loc 2 520 20 view .LVU303
 1056              	.LBE352:
 1057              	.LBE351:
 1058              	.LBE350:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1059              		.loc 2 522 3 view .LVU304
 1060              	.LBB387:
 1061              	.LBB363:
 1062              	.LBB361:
 1063              	.LBB353:
 1064              	.LBI353:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1065              		.loc 5 365 20 view .LVU305
 1066              	.LBB354:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1067              		.loc 5 367 22 view .LVU306
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1068              		.loc 5 368 33 view .LVU307
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1069              		.loc 5 374 3 view .LVU308
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1070              		.loc 5 374 3 view .LVU309
 1071              		.loc 5 378 3 view .LVU310
 1072              	.LBB355:
 1073              	.LBI355:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1074              		.loc 6 396 20 view .LVU311
 1075              	.LBE355:
 1076              	.LBE354:
 1077              	.LBE353:
 1078              	.LBE361:
 1079              	.LBE363:
 1080              	.LBE387:
 1081              		.loc 6 398 3 view .LVU312
 1082              	.LBB388:
 1083              	.LBB364:
 1084              	.LBB362:
 1085              	.LBB360:
 1086              	.LBB359:
 1087              	.LBB358:
 1088              	.LBB356:
 1089              	.LBI356:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1090              		.loc 7 129 27 view .LVU313
 1091              	.LBB357:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1092              		.loc 7 131 3 view .LVU314
 1093              		.syntax divided
 1094              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1095 0020 62B6     		cpsie i
 1096              	@ 0 "" 2
 1097              		.thumb
 1098              		.syntax unified
 1099              	.LBE357:
 1100              	.LBE356:
 1101              	.LBE358:
 1102              	.LBE359:
 1103              	.LBE360:
 1104              	.LBE362:
 379:lib/chibios/os/hal/src/hal_buffers.c ****         return r;
 1105              		.loc 1 379 9 view .LVU315
 1106              	.LVL42:
 1107              	.L29:
 1108              		.loc 1 379 9 is_stmt 0 view .LVU316
 1109              	.LBE364:
 1110              	.LBE388:
 380:lib/chibios/os/hal/src/hal_buffers.c ****       }
 381:lib/chibios/os/hal/src/hal_buffers.c ****     }
 382:lib/chibios/os/hal/src/hal_buffers.c **** 
 383:lib/chibios/os/hal/src/hal_buffers.c ****     /* Size of the data chunk present in the current buffer.*/
 384:lib/chibios/os/hal/src/hal_buffers.c ****     size = (size_t)ibqp->top - (size_t)ibqp->ptr;
 385:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 386:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 387:lib/chibios/os/hal/src/hal_buffers.c ****     }
 388:lib/chibios/os/hal/src/hal_buffers.c **** 
 389:lib/chibios/os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 390:lib/chibios/os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 391:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (size_t)BUFFERS_CHUNKS_SIZE) {
 392:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 393:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, BUFFERS_CHUNKS_SIZE);
 394:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 395:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 396:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 397:lib/chibios/os/hal/src/hal_buffers.c ****     }
 398:lib/chibios/os/hal/src/hal_buffers.c ****     else {
 399:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, size);
 400:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 401:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 402:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 403:lib/chibios/os/hal/src/hal_buffers.c ****     }
 404:lib/chibios/os/hal/src/hal_buffers.c **** 
 405:lib/chibios/os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 406:lib/chibios/os/hal/src/hal_buffers.c ****     if (ibqp->ptr >= ibqp->top) {
 407:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 408:lib/chibios/os/hal/src/hal_buffers.c ****     }
 409:lib/chibios/os/hal/src/hal_buffers.c **** 
 410:lib/chibios/os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 411:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysUnlock();
 412:lib/chibios/os/hal/src/hal_buffers.c ****     if (r >= n) {
 413:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 414:lib/chibios/os/hal/src/hal_buffers.c ****     }
 415:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysLock();
 416:lib/chibios/os/hal/src/hal_buffers.c ****   }
 417:lib/chibios/os/hal/src/hal_buffers.c **** }
 1111              		.loc 1 417 1 view .LVU317
 1112 0022 2800     		movs	r0, r5
 1113              		@ sp needed
 1114              	.LVL43:
 1115              	.LVL44:
 1116              	.LVL45:
 1117              		.loc 1 417 1 view .LVU318
 1118 0024 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1119              	.LVL46:
 1120              	.L30:
 1121              	.LBB389:
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1122              		.loc 1 384 5 is_stmt 1 view .LVU319
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1123              		.loc 1 384 44 is_stmt 0 view .LVU320
 1124 0026 A16A     		ldr	r1, [r4, #40]
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1125              		.loc 1 384 10 view .LVU321
 1126 0028 E36A     		ldr	r3, [r4, #44]
 385:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 1127              		.loc 1 385 19 view .LVU322
 1128 002a 009A     		ldr	r2, [sp]
 384:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1129              		.loc 1 384 10 view .LVU323
 1130 002c 5B1A     		subs	r3, r3, r1
 1131              	.LVL47:
 385:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 1132              		.loc 1 385 5 is_stmt 1 view .LVU324
 385:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - r;
 1133              		.loc 1 385 19 is_stmt 0 view .LVU325
 1134 002e 561B     		subs	r6, r2, r5
 1135 0030 9E42     		cmp	r6, r3
 1136 0032 00D9     		bls	.L32
 1137 0034 1E00     		movs	r6, r3
 1138              	.L32:
 1139              	.LVL48:
 391:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1140              		.loc 1 391 5 is_stmt 1 view .LVU326
 391:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1141              		.loc 1 391 8 is_stmt 0 view .LVU327
 1142 0036 402E     		cmp	r6, #64
 1143 0038 15D9     		bls	.L33
 393:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 1144              		.loc 1 393 7 is_stmt 1 view .LVU328
 1145 003a 3800     		movs	r0, r7
 1146 003c 4022     		movs	r2, #64
 1147 003e FFF7FEFF 		bl	memcpy
 1148              	.LVL49:
 394:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 1149              		.loc 1 394 7 view .LVU329
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1150              		.loc 1 395 17 is_stmt 0 view .LVU330
 1151 0042 A36A     		ldr	r3, [r4, #40]
 394:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 1152              		.loc 1 394 17 view .LVU331
 1153 0044 4037     		adds	r7, r7, #64
 1154              	.LVL50:
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1155              		.loc 1 395 7 is_stmt 1 view .LVU332
 395:lib/chibios/os/hal/src/hal_buffers.c ****       r         += (size_t)BUFFERS_CHUNKS_SIZE;
 1156              		.loc 1 395 17 is_stmt 0 view .LVU333
 1157 0046 4033     		adds	r3, r3, #64
 1158 0048 A362     		str	r3, [r4, #40]
 396:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1159              		.loc 1 396 7 is_stmt 1 view .LVU334
 396:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1160              		.loc 1 396 17 is_stmt 0 view .LVU335
 1161 004a 4035     		adds	r5, r5, #64
 1162              	.LVL51:
 1163              	.L34:
 406:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1164              		.loc 1 406 5 is_stmt 1 view .LVU336
 406:lib/chibios/os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1165              		.loc 1 406 8 is_stmt 0 view .LVU337
 1166 004c A36A     		ldr	r3, [r4, #40]
 1167 004e E26A     		ldr	r2, [r4, #44]
 1168 0050 9342     		cmp	r3, r2
 1169 0052 02D3     		bcc	.L35
 407:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1170              		.loc 1 407 7 is_stmt 1 view .LVU338
 1171 0054 2000     		movs	r0, r4
 1172 0056 FFF7FEFF 		bl	ibqReleaseEmptyBufferS
 1173              	.LVL52:
 1174              	.L35:
 411:lib/chibios/os/hal/src/hal_buffers.c ****     if (r >= n) {
 1175              		.loc 1 411 5 view .LVU339
 1176              	.LBB365:
 1177              	.LBI365:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1178              		.loc 2 520 20 view .LVU340
 1179              	.LBE365:
 1180              	.LBE389:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1181              		.loc 2 522 3 view .LVU341
 1182              	.LBB390:
 1183              	.LBB374:
 1184              	.LBB366:
 1185              	.LBI366:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1186              		.loc 5 365 20 view .LVU342
 1187              	.LBB367:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1188              		.loc 5 367 22 view .LVU343
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1189              		.loc 5 368 33 view .LVU344
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1190              		.loc 5 374 3 view .LVU345
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1191              		.loc 5 374 3 view .LVU346
 1192              		.loc 5 378 3 view .LVU347
 1193              	.LBB368:
 1194              	.LBI368:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1195              		.loc 6 396 20 view .LVU348
 1196              	.LBE368:
 1197              	.LBE367:
 1198              	.LBE366:
 1199              	.LBE374:
 1200              	.LBE390:
 1201              		.loc 6 398 3 view .LVU349
 1202              	.LBB391:
 1203              	.LBB375:
 1204              	.LBB373:
 1205              	.LBB372:
 1206              	.LBB371:
 1207              	.LBB369:
 1208              	.LBI369:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1209              		.loc 7 129 27 view .LVU350
 1210              	.LBB370:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1211              		.loc 7 131 3 view .LVU351
 1212              		.syntax divided
 1213              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1214 005a 62B6     		cpsie i
 1215              	@ 0 "" 2
 1216              		.thumb
 1217              		.syntax unified
 1218              	.LBE370:
 1219              	.LBE369:
 1220              	.LBE371:
 1221              	.LBE372:
 1222              	.LBE373:
 1223              	.LBE375:
 412:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 1224              		.loc 1 412 5 view .LVU352
 412:lib/chibios/os/hal/src/hal_buffers.c ****       return r;
 1225              		.loc 1 412 8 is_stmt 0 view .LVU353
 1226 005c 009B     		ldr	r3, [sp]
 1227 005e 9D42     		cmp	r5, r3
 1228 0060 DFD2     		bcs	.L29
 415:lib/chibios/os/hal/src/hal_buffers.c ****   }
 1229              		.loc 1 415 5 is_stmt 1 view .LVU354
 1230              	.LBB376:
 1231              	.LBI376:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1232              		.loc 2 509 20 view .LVU355
 1233              	.LBE376:
 1234              	.LBE391:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1235              		.loc 2 511 3 view .LVU356
 1236              	.LBB392:
 1237              	.LBB384:
 1238              	.LBB377:
 1239              	.LBI377:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1240              		.loc 5 353 20 view .LVU357
 1241              	.LBE377:
 1242              	.LBE384:
 1243              	.LBE392:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1244              		.loc 5 355 3 view .LVU358
 1245              	.LBB393:
 1246              	.LBB385:
 1247              	.LBB382:
 1248              	.LBB378:
 1249              	.LBI378:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1250              		.loc 6 387 20 view .LVU359
 1251              	.LBE378:
 1252              	.LBE382:
 1253              	.LBE385:
 1254              	.LBE393:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1255              		.loc 6 389 3 view .LVU360
 1256              	.LBB394:
 1257              	.LBB386:
 1258              	.LBB383:
 1259              	.LBB381:
 1260              	.LBB379:
 1261              	.LBI379:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1262              		.loc 7 140 27 view .LVU361
 1263              	.LBB380:
 1264              		.loc 7 142 3 view .LVU362
 1265              		.syntax divided
 1266              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1267 0062 72B6     		cpsid i
 1268              	@ 0 "" 2
 1269              		.thumb
 1270              		.syntax unified
 1271              	.LBE380:
 1272              	.LBE379:
 1273              	.LBE381:
 1274              	.LBE383:
 1275              	.LBE386:
 1276              	.LBE394:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1277              		.loc 5 356 34 view .LVU363
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1278              		.loc 5 357 20 view .LVU364
 1279 0064 D3E7     		b	.L36
 1280              	.L33:
 1281              	.LBB395:
 399:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 1282              		.loc 1 399 7 view .LVU365
 1283 0066 3800     		movs	r0, r7
 1284 0068 3200     		movs	r2, r6
 1285 006a FFF7FEFF 		bl	memcpy
 1286              	.LVL53:
 400:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1287              		.loc 1 400 7 view .LVU366
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1288              		.loc 1 401 17 is_stmt 0 view .LVU367
 1289 006e A36A     		ldr	r3, [r4, #40]
 400:lib/chibios/os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1290              		.loc 1 400 17 view .LVU368
 1291 0070 BF19     		adds	r7, r7, r6
 1292              	.LVL54:
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1293              		.loc 1 401 7 is_stmt 1 view .LVU369
 401:lib/chibios/os/hal/src/hal_buffers.c ****       r         += size;
 1294              		.loc 1 401 17 is_stmt 0 view .LVU370
 1295 0072 9B19     		adds	r3, r3, r6
 1296 0074 A362     		str	r3, [r4, #40]
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1297              		.loc 1 402 7 is_stmt 1 view .LVU371
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1298              		.loc 1 402 17 is_stmt 0 view .LVU372
 1299 0076 AD19     		adds	r5, r5, r6
 1300              	.LVL55:
 402:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1301              		.loc 1 402 17 view .LVU373
 1302 0078 E8E7     		b	.L34
 1303              	.LBE395:
 1304              		.cfi_endproc
 1305              	.LFE195:
 1307              		.section	.text.obqObjectInit,"ax",%progbits
 1308              		.align	1
 1309              		.global	obqObjectInit
 1310              		.syntax unified
 1311              		.code	16
 1312              		.thumb_func
 1313              		.fpu softvfp
 1315              	obqObjectInit:
 1316              	.LVL56:
 1317              	.LFB196:
 418:lib/chibios/os/hal/src/hal_buffers.c **** 
 419:lib/chibios/os/hal/src/hal_buffers.c **** /**
 420:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Initializes an output buffers queue object.
 421:lib/chibios/os/hal/src/hal_buffers.c ****  *
 422:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] obqp     pointer to the @p output_buffers_queue_t object
 423:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
 424:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
 425:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
 426:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
 427:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] onfy      callback called when a buffer is posted in the queue
 428:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
 429:lib/chibios/os/hal/src/hal_buffers.c ****  *
 430:lib/chibios/os/hal/src/hal_buffers.c ****  * @init
 431:lib/chibios/os/hal/src/hal_buffers.c ****  */
 432:lib/chibios/os/hal/src/hal_buffers.c **** void obqObjectInit(output_buffers_queue_t *obqp, bool suspended, uint8_t *bp,
 433:lib/chibios/os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t onfy, void *link) {
 1318              		.loc 1 433 72 is_stmt 1 view -0
 1319              		.cfi_startproc
 1320              		@ args = 12, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 434:lib/chibios/os/hal/src/hal_buffers.c **** 
 435:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((obqp != NULL) && (bp != NULL) && (size >= 2U));
 1322              		.loc 1 435 3 view .LVU375
 1323              		.loc 1 435 3 view .LVU376
 436:lib/chibios/os/hal/src/hal_buffers.c **** 
 437:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&obqp->waiting);
 1324              		.loc 1 437 3 view .LVU377
 1325              	.LBB396:
 1326              	.LBI396:
 800:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1327              		.loc 2 800 20 view .LVU378
 1328              	.LBE396:
 802:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1329              		.loc 2 802 3 view .LVU379
 1330              	.LBB404:
 1331              	.LBB397:
 1332              	.LBI397:
 392:./lib/chibios/os/rt/include/chthreads.h **** 
 1333              		.loc 3 392 20 view .LVU380
 1334              	.LBE397:
 1335              	.LBE404:
 1336              		.loc 3 394 3 view .LVU381
 1337              	.LBB405:
 1338              	.LBB402:
 1339              	.LBB398:
 1340              	.LBI398:
 537:./lib/chibios/os/rt/include/chschd.h **** 
 1341              		.loc 4 537 20 view .LVU382
 1342              	.LBB399:
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1343              		.loc 4 539 3 view .LVU383
 1344              	.LBE399:
 1345              	.LBE398:
 1346              	.LBE402:
 1347              	.LBE405:
 433:lib/chibios/os/hal/src/hal_buffers.c **** 
 1348              		.loc 1 433 72 is_stmt 0 view .LVU384
 1349 0000 10B5     		push	{r4, lr}
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 4, -8
 1352              		.cfi_offset 14, -4
 433:lib/chibios/os/hal/src/hal_buffers.c **** 
 1353              		.loc 1 433 72 view .LVU385
 1354 0002 029C     		ldr	r4, [sp, #8]
 438:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->suspended = suspended;
 1355              		.loc 1 438 19 view .LVU386
 1356 0004 0172     		strb	r1, [r0, #8]
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = n;
 440:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 441:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1357              		.loc 1 442 52 view .LVU387
 1358 0006 2100     		movs	r1, r4
 1359              	.LVL57:
 1360              		.loc 1 442 33 view .LVU388
 1361 0008 0433     		adds	r3, r3, #4
 1362              	.LVL58:
 1363              		.loc 1 442 52 view .LVU389
 1364 000a 5943     		muls	r1, r3
 443:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1365              		.loc 1 443 19 view .LVU390
 1366 000c C361     		str	r3, [r0, #28]
 444:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bn        = n;
 445:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 446:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1367              		.loc 1 446 19 view .LVU391
 1368 000e 0023     		movs	r3, #0
 1369              	.LVL59:
 1370              		.loc 1 446 19 view .LVU392
 1371 0010 8362     		str	r3, [r0, #40]
 447:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1372              		.loc 1 447 19 view .LVU393
 1373 0012 C362     		str	r3, [r0, #44]
 448:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->notify    = onfy;
 1374              		.loc 1 448 19 view .LVU394
 1375 0014 039B     		ldr	r3, [sp, #12]
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1376              		.loc 1 442 24 view .LVU395
 1377 0016 5118     		adds	r1, r2, r1
 1378              		.loc 1 448 19 view .LVU396
 1379 0018 0363     		str	r3, [r0, #48]
 449:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->link      = link;
 1380              		.loc 1 449 19 view .LVU397
 1381 001a 049B     		ldr	r3, [sp, #16]
 1382              	.LBB406:
 1383              	.LBB403:
 1384              	.LBB401:
 1385              	.LBB400:
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1386              		.loc 4 539 13 view .LVU398
 1387 001c 0060     		str	r0, [r0]
 1388              		.loc 4 540 3 is_stmt 1 view .LVU399
 1389              		.loc 4 540 13 is_stmt 0 view .LVU400
 1390 001e 4060     		str	r0, [r0, #4]
 1391              	.LVL60:
 1392              		.loc 4 540 13 view .LVU401
 1393              	.LBE400:
 1394              	.LBE401:
 1395              	.LBE403:
 1396              	.LBE406:
 438:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = n;
 1397              		.loc 1 438 3 is_stmt 1 view .LVU402
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 1398              		.loc 1 439 3 view .LVU403
 439:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 1399              		.loc 1 439 19 is_stmt 0 view .LVU404
 1400 0020 C460     		str	r4, [r0, #12]
 440:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 1401              		.loc 1 440 3 is_stmt 1 view .LVU405
 440:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 1402              		.loc 1 440 19 is_stmt 0 view .LVU406
 1403 0022 4261     		str	r2, [r0, #20]
 441:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1404              		.loc 1 441 3 is_stmt 1 view .LVU407
 441:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1405              		.loc 1 441 19 is_stmt 0 view .LVU408
 1406 0024 0261     		str	r2, [r0, #16]
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1407              		.loc 1 442 3 is_stmt 1 view .LVU409
 442:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1408              		.loc 1 442 19 is_stmt 0 view .LVU410
 1409 0026 8161     		str	r1, [r0, #24]
 443:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bn        = n;
 1410              		.loc 1 443 3 is_stmt 1 view .LVU411
 444:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 1411              		.loc 1 444 3 view .LVU412
 444:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 1412              		.loc 1 444 19 is_stmt 0 view .LVU413
 1413 0028 0462     		str	r4, [r0, #32]
 445:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1414              		.loc 1 445 3 is_stmt 1 view .LVU414
 445:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1415              		.loc 1 445 19 is_stmt 0 view .LVU415
 1416 002a 4262     		str	r2, [r0, #36]
 446:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1417              		.loc 1 446 3 is_stmt 1 view .LVU416
 447:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->notify    = onfy;
 1418              		.loc 1 447 3 view .LVU417
 448:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->link      = link;
 1419              		.loc 1 448 3 view .LVU418
 1420              		.loc 1 449 3 view .LVU419
 1421              		.loc 1 449 19 is_stmt 0 view .LVU420
 1422 002c 4363     		str	r3, [r0, #52]
 450:lib/chibios/os/hal/src/hal_buffers.c **** }
 1423              		.loc 1 450 1 view .LVU421
 1424              		@ sp needed
 1425 002e 10BD     		pop	{r4, pc}
 1426              		.cfi_endproc
 1427              	.LFE196:
 1429              		.section	.text.obqResetI,"ax",%progbits
 1430              		.align	1
 1431              		.global	obqResetI
 1432              		.syntax unified
 1433              		.code	16
 1434              		.thumb_func
 1435              		.fpu softvfp
 1437              	obqResetI:
 1438              	.LVL61:
 1439              	.LFB197:
 451:lib/chibios/os/hal/src/hal_buffers.c **** 
 452:lib/chibios/os/hal/src/hal_buffers.c **** /**
 453:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Resets an output buffers queue.
 454:lib/chibios/os/hal/src/hal_buffers.c ****  * @details All the data in the output buffers queue is erased and lost, any
 455:lib/chibios/os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 456:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 457:lib/chibios/os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 458:lib/chibios/os/hal/src/hal_buffers.c ****  *
 459:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 460:lib/chibios/os/hal/src/hal_buffers.c ****  *
 461:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 462:lib/chibios/os/hal/src/hal_buffers.c ****  */
 463:lib/chibios/os/hal/src/hal_buffers.c **** void obqResetI(output_buffers_queue_t *obqp) {
 1440              		.loc 1 463 46 is_stmt 1 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 464:lib/chibios/os/hal/src/hal_buffers.c **** 
 465:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1444              		.loc 1 465 23 view .LVU423
 466:lib/chibios/os/hal/src/hal_buffers.c **** 
 467:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter  = bqSizeX(obqp);
 1445              		.loc 1 467 3 view .LVU424
 1446              		.loc 1 467 19 is_stmt 0 view .LVU425
 1447 0000 036A     		ldr	r3, [r0, #32]
 1448              	.LBB407:
 1449              	.LBB408:
 1450              		.loc 2 857 3 view .LVU426
 1451 0002 0221     		movs	r1, #2
 1452              	.LBE408:
 1453              	.LBE407:
 1454              		.loc 1 467 19 view .LVU427
 1455 0004 C360     		str	r3, [r0, #12]
 468:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr    = obqp->buffers;
 1456              		.loc 1 468 3 is_stmt 1 view .LVU428
 1457              		.loc 1 468 25 is_stmt 0 view .LVU429
 1458 0006 436A     		ldr	r3, [r0, #36]
 463:lib/chibios/os/hal/src/hal_buffers.c **** 
 1459              		.loc 1 463 46 view .LVU430
 1460 0008 10B5     		push	{r4, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 4, -8
 1463              		.cfi_offset 14, -4
 1464              		.loc 1 468 19 view .LVU431
 1465 000a 4361     		str	r3, [r0, #20]
 469:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr    = obqp->buffers;
 1466              		.loc 1 469 3 is_stmt 1 view .LVU432
 1467              		.loc 1 469 19 is_stmt 0 view .LVU433
 1468 000c 0361     		str	r3, [r0, #16]
 470:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1469              		.loc 1 470 3 is_stmt 1 view .LVU434
 1470              		.loc 1 470 19 is_stmt 0 view .LVU435
 1471 000e 0023     		movs	r3, #0
 1472              	.LBB411:
 1473              	.LBB409:
 1474              		.loc 2 857 3 view .LVU436
 1475 0010 4942     		rsbs	r1, r1, #0
 1476              	.LBE409:
 1477              	.LBE411:
 1478              		.loc 1 470 19 view .LVU437
 1479 0012 8362     		str	r3, [r0, #40]
 471:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1480              		.loc 1 471 3 is_stmt 1 view .LVU438
 1481              		.loc 1 471 19 is_stmt 0 view .LVU439
 1482 0014 C362     		str	r3, [r0, #44]
 472:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&obqp->waiting, MSG_RESET);
 1483              		.loc 1 472 3 is_stmt 1 view .LVU440
 1484              	.LVL62:
 1485              	.LBB412:
 1486              	.LBI407:
 855:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1487              		.loc 2 855 20 view .LVU441
 1488              	.LBB410:
 1489              		.loc 2 857 3 view .LVU442
 1490 0016 FFF7FEFF 		bl	chThdDequeueAllI
 1491              	.LVL63:
 1492              		.loc 2 857 3 is_stmt 0 view .LVU443
 1493              	.LBE410:
 1494              	.LBE412:
 473:lib/chibios/os/hal/src/hal_buffers.c **** }
 1495              		.loc 1 473 1 view .LVU444
 1496              		@ sp needed
 1497 001a 10BD     		pop	{r4, pc}
 1498              		.cfi_endproc
 1499              	.LFE197:
 1501              		.section	.text.obqGetFullBufferI,"ax",%progbits
 1502              		.align	1
 1503              		.global	obqGetFullBufferI
 1504              		.syntax unified
 1505              		.code	16
 1506              		.thumb_func
 1507              		.fpu softvfp
 1509              	obqGetFullBufferI:
 1510              	.LVL64:
 1511              	.LFB198:
 474:lib/chibios/os/hal/src/hal_buffers.c **** 
 475:lib/chibios/os/hal/src/hal_buffers.c **** /**
 476:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 477:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 478:lib/chibios/os/hal/src/hal_buffers.c ****  *
 479:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 480:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[out] sizep    pointer to the filled buffer size
 481:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A pointer to the filled buffer.
 482:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is empty.
 483:lib/chibios/os/hal/src/hal_buffers.c ****  *
 484:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 485:lib/chibios/os/hal/src/hal_buffers.c ****  */
 486:lib/chibios/os/hal/src/hal_buffers.c **** uint8_t *obqGetFullBufferI(output_buffers_queue_t *obqp,
 487:lib/chibios/os/hal/src/hal_buffers.c ****                            size_t *sizep) {
 1512              		.loc 1 487 43 is_stmt 1 view -0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 488:lib/chibios/os/hal/src/hal_buffers.c **** 
 489:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1517              		.loc 1 489 23 view .LVU446
 490:lib/chibios/os/hal/src/hal_buffers.c **** 
 491:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp)) {
 1518              		.loc 1 491 3 view .LVU447
 1519              		.loc 1 491 7 is_stmt 0 view .LVU448
 1520 0000 4369     		ldr	r3, [r0, #20]
 1521 0002 0269     		ldr	r2, [r0, #16]
 1522 0004 9A42     		cmp	r2, r3
 1523 0006 03D1     		bne	.L43
 1524              		.loc 1 491 7 discriminator 1 view .LVU449
 1525 0008 C268     		ldr	r2, [r0, #12]
 492:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 1526              		.loc 1 492 12 discriminator 1 view .LVU450
 1527 000a 0020     		movs	r0, #0
 1528              	.LVL65:
 491:lib/chibios/os/hal/src/hal_buffers.c ****     return NULL;
 1529              		.loc 1 491 7 discriminator 1 view .LVU451
 1530 000c 8242     		cmp	r2, r0
 1531 000e 02D1     		bne	.L42
 1532              	.L43:
 493:lib/chibios/os/hal/src/hal_buffers.c ****   }
 494:lib/chibios/os/hal/src/hal_buffers.c **** 
 495:lib/chibios/os/hal/src/hal_buffers.c ****   /* Buffer size.*/
 496:lib/chibios/os/hal/src/hal_buffers.c ****   *sizep = *((size_t *)obqp->brdptr);
 1533              		.loc 1 496 3 is_stmt 1 view .LVU452
 1534              		.loc 1 496 12 is_stmt 0 view .LVU453
 1535 0010 1800     		movs	r0, r3
 1536 0012 08C8     		ldmia	r0!, {r3}
 1537              		.loc 1 496 10 view .LVU454
 1538 0014 0B60     		str	r3, [r1]
 497:lib/chibios/os/hal/src/hal_buffers.c **** 
 498:lib/chibios/os/hal/src/hal_buffers.c ****   return obqp->brdptr + sizeof (size_t);
 1539              		.loc 1 498 3 is_stmt 1 view .LVU455
 1540              	.L42:
 499:lib/chibios/os/hal/src/hal_buffers.c **** }
 1541              		.loc 1 499 1 is_stmt 0 view .LVU456
 1542              		@ sp needed
 1543 0016 7047     		bx	lr
 1544              		.cfi_endproc
 1545              	.LFE198:
 1547              		.section	.text.obqReleaseEmptyBufferI,"ax",%progbits
 1548              		.align	1
 1549              		.global	obqReleaseEmptyBufferI
 1550              		.syntax unified
 1551              		.code	16
 1552              		.thumb_func
 1553              		.fpu softvfp
 1555              	obqReleaseEmptyBufferI:
 1556              	.LVL66:
 1557              	.LFB199:
 500:lib/chibios/os/hal/src/hal_buffers.c **** 
 501:lib/chibios/os/hal/src/hal_buffers.c **** /**
 502:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Releases the next filled buffer back in the queue.
 503:lib/chibios/os/hal/src/hal_buffers.c ****  *
 504:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 505:lib/chibios/os/hal/src/hal_buffers.c ****  *
 506:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 507:lib/chibios/os/hal/src/hal_buffers.c ****  */
 508:lib/chibios/os/hal/src/hal_buffers.c **** void obqReleaseEmptyBufferI(output_buffers_queue_t *obqp) {
 1558              		.loc 1 508 59 is_stmt 1 view -0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 509:lib/chibios/os/hal/src/hal_buffers.c **** 
 510:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1562              		.loc 1 510 23 view .LVU458
 511:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsEmptyI(obqp), "buffers queue empty");
 1563              		.loc 1 511 3 view .LVU459
 1564              		.loc 1 511 3 view .LVU460
 512:lib/chibios/os/hal/src/hal_buffers.c **** 
 513:lib/chibios/os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 514:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter++;
 1565              		.loc 1 514 3 view .LVU461
 1566              		.loc 1 514 7 is_stmt 0 view .LVU462
 1567 0000 C368     		ldr	r3, [r0, #12]
 515:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1568              		.loc 1 515 16 view .LVU463
 1569 0002 C269     		ldr	r2, [r0, #28]
 514:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1570              		.loc 1 514 17 view .LVU464
 1571 0004 0133     		adds	r3, r3, #1
 1572 0006 C360     		str	r3, [r0, #12]
 1573              		.loc 1 515 3 is_stmt 1 view .LVU465
 1574              		.loc 1 515 16 is_stmt 0 view .LVU466
 1575 0008 4369     		ldr	r3, [r0, #20]
 508:lib/chibios/os/hal/src/hal_buffers.c **** 
 1576              		.loc 1 508 59 view .LVU467
 1577 000a 10B5     		push	{r4, lr}
 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 4, -8
 1580              		.cfi_offset 14, -4
 1581              		.loc 1 515 16 view .LVU468
 1582 000c 9B18     		adds	r3, r3, r2
 516:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->brdptr >= obqp->btop) {
 1583              		.loc 1 516 6 view .LVU469
 1584 000e 8269     		ldr	r2, [r0, #24]
 515:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->brdptr >= obqp->btop) {
 1585              		.loc 1 515 16 view .LVU470
 1586 0010 4361     		str	r3, [r0, #20]
 1587              		.loc 1 516 3 is_stmt 1 view .LVU471
 1588              		.loc 1 516 6 is_stmt 0 view .LVU472
 1589 0012 9342     		cmp	r3, r2
 1590 0014 01D3     		bcc	.L47
 517:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->brdptr = obqp->buffers;
 1591              		.loc 1 517 5 is_stmt 1 view .LVU473
 1592              		.loc 1 517 18 is_stmt 0 view .LVU474
 1593 0016 436A     		ldr	r3, [r0, #36]
 1594 0018 4361     		str	r3, [r0, #20]
 1595              	.L47:
 518:lib/chibios/os/hal/src/hal_buffers.c ****   }
 519:lib/chibios/os/hal/src/hal_buffers.c **** 
 520:lib/chibios/os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 521:lib/chibios/os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&obqp->waiting, MSG_OK);
 1596              		.loc 1 521 3 is_stmt 1 view .LVU475
 1597              	.LVL67:
 1598              	.LBB413:
 1599              	.LBI413:
 842:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1600              		.loc 2 842 20 view .LVU476
 1601              	.LBB414:
 844:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1602              		.loc 2 844 3 view .LVU477
 1603 001a 0021     		movs	r1, #0
 1604 001c FFF7FEFF 		bl	chThdDequeueNextI
 1605              	.LVL68:
 844:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1606              		.loc 2 844 3 is_stmt 0 view .LVU478
 1607              	.LBE414:
 1608              	.LBE413:
 522:lib/chibios/os/hal/src/hal_buffers.c **** }
 1609              		.loc 1 522 1 view .LVU479
 1610              		@ sp needed
 1611 0020 10BD     		pop	{r4, pc}
 1612              		.cfi_endproc
 1613              	.LFE199:
 1615              		.section	.text.obqGetEmptyBufferTimeoutS,"ax",%progbits
 1616              		.align	1
 1617              		.global	obqGetEmptyBufferTimeoutS
 1618              		.syntax unified
 1619              		.code	16
 1620              		.thumb_func
 1621              		.fpu softvfp
 1623              	obqGetEmptyBufferTimeoutS:
 1624              	.LVL69:
 1625              	.LFB201:
 523:lib/chibios/os/hal/src/hal_buffers.c **** 
 524:lib/chibios/os/hal/src/hal_buffers.c **** /**
 525:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 526:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 527:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 528:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 529:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 530:lib/chibios/os/hal/src/hal_buffers.c ****  *
 531:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 532:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 533:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 534:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 535:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 536:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 537:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 538:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 539:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 540:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 541:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 542:lib/chibios/os/hal/src/hal_buffers.c ****  *
 543:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 544:lib/chibios/os/hal/src/hal_buffers.c ****  */
 545:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeout(output_buffers_queue_t *obqp,
 546:lib/chibios/os/hal/src/hal_buffers.c ****                                sysinterval_t timeout) {
 547:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 548:lib/chibios/os/hal/src/hal_buffers.c **** 
 549:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 550:lib/chibios/os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 551:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 552:lib/chibios/os/hal/src/hal_buffers.c **** 
 553:lib/chibios/os/hal/src/hal_buffers.c ****   return msg;
 554:lib/chibios/os/hal/src/hal_buffers.c **** }
 555:lib/chibios/os/hal/src/hal_buffers.c **** 
 556:lib/chibios/os/hal/src/hal_buffers.c **** /**
 557:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 558:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 559:lib/chibios/os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 560:lib/chibios/os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 561:lib/chibios/os/hal/src/hal_buffers.c ****  *          is empty.
 562:lib/chibios/os/hal/src/hal_buffers.c ****  *
 563:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 564:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 565:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 566:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 567:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 568:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 569:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 570:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 571:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 572:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 573:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 574:lib/chibios/os/hal/src/hal_buffers.c ****  *
 575:lib/chibios/os/hal/src/hal_buffers.c ****  * @sclass
 576:lib/chibios/os/hal/src/hal_buffers.c ****  */
 577:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeoutS(output_buffers_queue_t *obqp,
 578:lib/chibios/os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 1626              		.loc 1 578 56 is_stmt 1 view -0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              		.loc 1 578 56 is_stmt 0 view .LVU481
 1631 0000 70B5     		push	{r4, r5, r6, lr}
 1632              		.cfi_def_cfa_offset 16
 1633              		.cfi_offset 4, -16
 1634              		.cfi_offset 5, -12
 1635              		.cfi_offset 6, -8
 1636              		.cfi_offset 14, -4
 1637 0002 0400     		movs	r4, r0
 1638 0004 0D00     		movs	r5, r1
 579:lib/chibios/os/hal/src/hal_buffers.c **** 
 580:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 1639              		.loc 1 580 23 is_stmt 1 view .LVU482
 581:lib/chibios/os/hal/src/hal_buffers.c **** 
 582:lib/chibios/os/hal/src/hal_buffers.c ****   while (obqIsFullI(obqp)) {
 1640              		.loc 1 582 3 view .LVU483
 1641              	.LVL70:
 1642              	.L49:
 1643              		.loc 1 582 10 is_stmt 0 view .LVU484
 1644 0006 E368     		ldr	r3, [r4, #12]
 1645              		.loc 1 582 9 view .LVU485
 1646 0008 002B     		cmp	r3, #0
 1647 000a 07D0     		beq	.L51
 1648              	.LVL71:
 1649              	.LBB423:
 1650              	.LBI423:
 577:lib/chibios/os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 1651              		.loc 1 577 7 is_stmt 1 view .LVU486
 1652              	.LBB424:
 583:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->suspended) {
 584:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 585:lib/chibios/os/hal/src/hal_buffers.c ****     }
 586:lib/chibios/os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&obqp->waiting, timeout);
 587:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 588:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 589:lib/chibios/os/hal/src/hal_buffers.c ****     }
 590:lib/chibios/os/hal/src/hal_buffers.c ****   }
 591:lib/chibios/os/hal/src/hal_buffers.c **** 
 592:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "still full");
 1653              		.loc 1 592 3 view .LVU487
 1654              		.loc 1 592 3 view .LVU488
 593:lib/chibios/os/hal/src/hal_buffers.c **** 
 594:lib/chibios/os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 595:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr = obqp->bwrptr + sizeof (size_t);
 1655              		.loc 1 595 3 view .LVU489
 1656              		.loc 1 595 19 is_stmt 0 view .LVU490
 1657 000c 2369     		ldr	r3, [r4, #16]
 596:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1658              		.loc 1 596 13 view .LVU491
 1659 000e 0020     		movs	r0, #0
 595:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1660              		.loc 1 595 28 view .LVU492
 1661 0010 1A1D     		adds	r2, r3, #4
 595:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 1662              		.loc 1 595 13 view .LVU493
 1663 0012 A262     		str	r2, [r4, #40]
 1664              		.loc 1 596 3 is_stmt 1 view .LVU494
 1665              		.loc 1 596 28 is_stmt 0 view .LVU495
 1666 0014 E269     		ldr	r2, [r4, #28]
 1667 0016 9B18     		adds	r3, r3, r2
 1668              		.loc 1 596 13 view .LVU496
 1669 0018 E362     		str	r3, [r4, #44]
 597:lib/chibios/os/hal/src/hal_buffers.c **** 
 598:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 1670              		.loc 1 598 3 is_stmt 1 view .LVU497
 1671              	.LVL72:
 1672              		.loc 1 598 3 is_stmt 0 view .LVU498
 1673 001a 08E0     		b	.L48
 1674              	.L51:
 1675              		.loc 1 598 3 view .LVU499
 1676              	.LBE424:
 1677              	.LBE423:
 1678              	.LBB425:
 583:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 1679              		.loc 1 583 5 is_stmt 1 view .LVU500
 583:lib/chibios/os/hal/src/hal_buffers.c ****       return MSG_RESET;
 1680              		.loc 1 583 8 is_stmt 0 view .LVU501
 1681 001c 237A     		ldrb	r3, [r4, #8]
 1682 001e 002B     		cmp	r3, #0
 1683 0020 06D1     		bne	.L52
 586:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 1684              		.loc 1 586 5 is_stmt 1 view .LVU502
 1685              	.LVL73:
 1686              	.LBB426:
 1687              	.LBI426:
 828:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 1688              		.loc 2 828 21 view .LVU503
 1689              	.LBB427:
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1690              		.loc 2 831 3 view .LVU504
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1691              		.loc 2 831 10 is_stmt 0 view .LVU505
 1692 0022 2900     		movs	r1, r5
 1693 0024 2000     		movs	r0, r4
 1694 0026 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1695              	.LVL74:
 831:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1696              		.loc 2 831 10 view .LVU506
 1697              	.LBE427:
 1698              	.LBE426:
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1699              		.loc 1 587 5 is_stmt 1 view .LVU507
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1700              		.loc 1 587 8 is_stmt 0 view .LVU508
 1701 002a 0028     		cmp	r0, #0
 1702 002c EBDA     		bge	.L49
 1703              	.LVL75:
 1704              	.L48:
 587:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 1705              		.loc 1 587 8 view .LVU509
 1706              	.LBE425:
 599:lib/chibios/os/hal/src/hal_buffers.c **** }
 1707              		.loc 1 599 1 view .LVU510
 1708              		@ sp needed
 1709              	.LVL76:
 1710              	.LVL77:
 1711              		.loc 1 599 1 view .LVU511
 1712 002e 70BD     		pop	{r4, r5, r6, pc}
 1713              	.LVL78:
 1714              	.L52:
 1715              	.LBB428:
 584:lib/chibios/os/hal/src/hal_buffers.c ****     }
 1716              		.loc 1 584 14 view .LVU512
 1717 0030 0220     		movs	r0, #2
 1718 0032 4042     		rsbs	r0, r0, #0
 1719 0034 FBE7     		b	.L48
 1720              	.LBE428:
 1721              		.cfi_endproc
 1722              	.LFE201:
 1724              		.section	.text.obqGetEmptyBufferTimeout,"ax",%progbits
 1725              		.align	1
 1726              		.global	obqGetEmptyBufferTimeout
 1727              		.syntax unified
 1728              		.code	16
 1729              		.thumb_func
 1730              		.fpu softvfp
 1732              	obqGetEmptyBufferTimeout:
 1733              	.LVL79:
 1734              	.LFB200:
 546:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1735              		.loc 1 546 55 is_stmt 1 view -0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 547:lib/chibios/os/hal/src/hal_buffers.c **** 
 1739              		.loc 1 547 3 view .LVU514
 549:lib/chibios/os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 1740              		.loc 1 549 3 view .LVU515
 1741              	.LBB429:
 1742              	.LBI429:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1743              		.loc 2 509 20 view .LVU516
 1744              	.LBE429:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1745              		.loc 2 511 3 view .LVU517
 1746              	.LBB441:
 1747              	.LBB430:
 1748              	.LBI430:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1749              		.loc 5 353 20 view .LVU518
 1750              	.LBE430:
 1751              	.LBE441:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1752              		.loc 5 355 3 view .LVU519
 1753              	.LBB442:
 1754              	.LBB438:
 1755              	.LBB431:
 1756              	.LBI431:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1757              		.loc 6 387 20 view .LVU520
 1758              	.LBE431:
 1759              	.LBE438:
 1760              	.LBE442:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1761              		.loc 6 389 3 view .LVU521
 1762              	.LBB443:
 1763              	.LBB439:
 1764              	.LBB436:
 1765              	.LBB432:
 1766              	.LBI432:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1767              		.loc 7 140 27 view .LVU522
 1768              	.LBB433:
 1769              		.loc 7 142 3 view .LVU523
 1770              	.LBE433:
 1771              	.LBE432:
 1772              	.LBE436:
 1773              	.LBE439:
 1774              	.LBE443:
 546:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 1775              		.loc 1 546 55 is_stmt 0 view .LVU524
 1776 0000 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780              	.LBB444:
 1781              	.LBB440:
 1782              	.LBB437:
 1783              	.LBB435:
 1784              	.LBB434:
 1785              		.loc 7 142 3 view .LVU525
 1786              		.syntax divided
 1787              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1788 0002 72B6     		cpsid i
 1789              	@ 0 "" 2
 1790              		.thumb
 1791              		.syntax unified
 1792              	.LBE434:
 1793              	.LBE435:
 1794              	.LBE437:
 1795              	.LBE440:
 1796              	.LBE444:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1797              		.loc 5 356 34 is_stmt 1 view .LVU526
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1798              		.loc 5 357 20 view .LVU527
 550:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 1799              		.loc 1 550 3 view .LVU528
 550:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 1800              		.loc 1 550 9 is_stmt 0 view .LVU529
 1801 0004 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 1802              	.LVL80:
 551:lib/chibios/os/hal/src/hal_buffers.c **** 
 1803              		.loc 1 551 3 is_stmt 1 view .LVU530
 1804              	.LBB445:
 1805              	.LBI445:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1806              		.loc 2 520 20 view .LVU531
 1807              	.LBE445:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1808              		.loc 2 522 3 view .LVU532
 1809              	.LBB454:
 1810              	.LBB446:
 1811              	.LBI446:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1812              		.loc 5 365 20 view .LVU533
 1813              	.LBB447:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1814              		.loc 5 367 22 view .LVU534
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1815              		.loc 5 368 33 view .LVU535
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1816              		.loc 5 374 3 view .LVU536
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1817              		.loc 5 374 3 view .LVU537
 1818              		.loc 5 378 3 view .LVU538
 1819              	.LBB448:
 1820              	.LBI448:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1821              		.loc 6 396 20 view .LVU539
 1822              	.LBE448:
 1823              	.LBE447:
 1824              	.LBE446:
 1825              	.LBE454:
 1826              		.loc 6 398 3 view .LVU540
 1827              	.LBB455:
 1828              	.LBB453:
 1829              	.LBB452:
 1830              	.LBB451:
 1831              	.LBB449:
 1832              	.LBI449:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1833              		.loc 7 129 27 view .LVU541
 1834              	.LBB450:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1835              		.loc 7 131 3 view .LVU542
 1836              		.syntax divided
 1837              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1838 0008 62B6     		cpsie i
 1839              	@ 0 "" 2
 1840              		.thumb
 1841              		.syntax unified
 1842              	.LBE450:
 1843              	.LBE449:
 1844              	.LBE451:
 1845              	.LBE452:
 1846              	.LBE453:
 1847              	.LBE455:
 553:lib/chibios/os/hal/src/hal_buffers.c **** }
 1848              		.loc 1 553 3 view .LVU543
 554:lib/chibios/os/hal/src/hal_buffers.c **** 
 1849              		.loc 1 554 1 is_stmt 0 view .LVU544
 1850              		@ sp needed
 1851 000a 10BD     		pop	{r4, pc}
 1852              		.cfi_endproc
 1853              	.LFE200:
 1855              		.section	.text.obqPostFullBufferS,"ax",%progbits
 1856              		.align	1
 1857              		.global	obqPostFullBufferS
 1858              		.syntax unified
 1859              		.code	16
 1860              		.thumb_func
 1861              		.fpu softvfp
 1863              	obqPostFullBufferS:
 1864              	.LVL81:
 1865              	.LFB203:
 600:lib/chibios/os/hal/src/hal_buffers.c **** 
 601:lib/chibios/os/hal/src/hal_buffers.c **** /**
 602:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 603:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 604:lib/chibios/os/hal/src/hal_buffers.c ****  *
 605:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 606:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 607:lib/chibios/os/hal/src/hal_buffers.c ****  *
 608:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 609:lib/chibios/os/hal/src/hal_buffers.c ****  */
 610:lib/chibios/os/hal/src/hal_buffers.c **** void obqPostFullBuffer(output_buffers_queue_t *obqp, size_t size) {
 611:lib/chibios/os/hal/src/hal_buffers.c **** 
 612:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 613:lib/chibios/os/hal/src/hal_buffers.c ****   obqPostFullBufferS(obqp, size);
 614:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 615:lib/chibios/os/hal/src/hal_buffers.c **** }
 616:lib/chibios/os/hal/src/hal_buffers.c **** 
 617:lib/chibios/os/hal/src/hal_buffers.c **** /**
 618:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 619:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 620:lib/chibios/os/hal/src/hal_buffers.c ****  *
 621:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 622:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 623:lib/chibios/os/hal/src/hal_buffers.c ****  *
 624:lib/chibios/os/hal/src/hal_buffers.c ****  * @sclass
 625:lib/chibios/os/hal/src/hal_buffers.c ****  */
 626:lib/chibios/os/hal/src/hal_buffers.c **** void obqPostFullBufferS(output_buffers_queue_t *obqp, size_t size) {
 1866              		.loc 1 626 68 is_stmt 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 627:lib/chibios/os/hal/src/hal_buffers.c **** 
 628:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 1870              		.loc 1 628 23 view .LVU546
 629:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 1871              		.loc 1 629 3 view .LVU547
 1872              		.loc 1 629 3 view .LVU548
 630:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 1873              		.loc 1 630 3 view .LVU549
 1874              		.loc 1 630 3 view .LVU550
 631:lib/chibios/os/hal/src/hal_buffers.c **** 
 632:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 633:lib/chibios/os/hal/src/hal_buffers.c ****   *((size_t *)obqp->bwrptr) = size;
 1875              		.loc 1 633 3 view .LVU551
 1876              		.loc 1 633 19 is_stmt 0 view .LVU552
 1877 0000 0369     		ldr	r3, [r0, #16]
 626:lib/chibios/os/hal/src/hal_buffers.c **** 
 1878              		.loc 1 626 68 view .LVU553
 1879 0002 10B5     		push	{r4, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 4, -8
 1882              		.cfi_offset 14, -4
 1883              		.loc 1 633 29 view .LVU554
 1884 0004 1960     		str	r1, [r3]
 634:lib/chibios/os/hal/src/hal_buffers.c **** 
 635:lib/chibios/os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 636:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bcounter--;
 1885              		.loc 1 636 3 is_stmt 1 view .LVU555
 1886              		.loc 1 636 7 is_stmt 0 view .LVU556
 1887 0006 C268     		ldr	r2, [r0, #12]
 1888              		.loc 1 636 17 view .LVU557
 1889 0008 013A     		subs	r2, r2, #1
 1890 000a C260     		str	r2, [r0, #12]
 637:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 1891              		.loc 1 637 3 is_stmt 1 view .LVU558
 1892              		.loc 1 637 16 is_stmt 0 view .LVU559
 1893 000c C269     		ldr	r2, [r0, #28]
 1894 000e 9B18     		adds	r3, r3, r2
 638:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 1895              		.loc 1 638 6 view .LVU560
 1896 0010 8269     		ldr	r2, [r0, #24]
 637:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 1897              		.loc 1 637 16 view .LVU561
 1898 0012 0361     		str	r3, [r0, #16]
 1899              		.loc 1 638 3 is_stmt 1 view .LVU562
 1900              		.loc 1 638 6 is_stmt 0 view .LVU563
 1901 0014 9342     		cmp	r3, r2
 1902 0016 01D3     		bcc	.L55
 639:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 1903              		.loc 1 639 5 is_stmt 1 view .LVU564
 1904              		.loc 1 639 18 is_stmt 0 view .LVU565
 1905 0018 436A     		ldr	r3, [r0, #36]
 1906 001a 0361     		str	r3, [r0, #16]
 1907              	.L55:
 640:lib/chibios/os/hal/src/hal_buffers.c ****   }
 641:lib/chibios/os/hal/src/hal_buffers.c **** 
 642:lib/chibios/os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 643:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr = NULL;
 1908              		.loc 1 643 3 is_stmt 1 view .LVU566
 1909              		.loc 1 643 13 is_stmt 0 view .LVU567
 1910 001c 0023     		movs	r3, #0
 1911 001e 8362     		str	r3, [r0, #40]
 644:lib/chibios/os/hal/src/hal_buffers.c **** 
 645:lib/chibios/os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 646:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->notify != NULL) {
 1912              		.loc 1 646 3 is_stmt 1 view .LVU568
 1913              		.loc 1 646 11 is_stmt 0 view .LVU569
 1914 0020 036B     		ldr	r3, [r0, #48]
 1915              		.loc 1 646 6 view .LVU570
 1916 0022 002B     		cmp	r3, #0
 1917 0024 00D0     		beq	.L54
 647:lib/chibios/os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 1918              		.loc 1 647 5 is_stmt 1 view .LVU571
 1919 0026 9847     		blx	r3
 1920              	.LVL82:
 1921              	.L54:
 648:lib/chibios/os/hal/src/hal_buffers.c ****   }
 649:lib/chibios/os/hal/src/hal_buffers.c **** }
 1922              		.loc 1 649 1 is_stmt 0 view .LVU572
 1923              		@ sp needed
 1924 0028 10BD     		pop	{r4, pc}
 1925              		.cfi_endproc
 1926              	.LFE203:
 1928              		.section	.text.obqPostFullBuffer,"ax",%progbits
 1929              		.align	1
 1930              		.global	obqPostFullBuffer
 1931              		.syntax unified
 1932              		.code	16
 1933              		.thumb_func
 1934              		.fpu softvfp
 1936              	obqPostFullBuffer:
 1937              	.LVL83:
 1938              	.LFB202:
 610:lib/chibios/os/hal/src/hal_buffers.c **** 
 1939              		.loc 1 610 67 is_stmt 1 view -0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 612:lib/chibios/os/hal/src/hal_buffers.c ****   obqPostFullBufferS(obqp, size);
 1943              		.loc 1 612 3 view .LVU574
 1944              	.LBB456:
 1945              	.LBI456:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1946              		.loc 2 509 20 view .LVU575
 1947              	.LBE456:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1948              		.loc 2 511 3 view .LVU576
 1949              	.LBB468:
 1950              	.LBB457:
 1951              	.LBI457:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1952              		.loc 5 353 20 view .LVU577
 1953              	.LBE457:
 1954              	.LBE468:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1955              		.loc 5 355 3 view .LVU578
 1956              	.LBB469:
 1957              	.LBB465:
 1958              	.LBB458:
 1959              	.LBI458:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1960              		.loc 6 387 20 view .LVU579
 1961              	.LBE458:
 1962              	.LBE465:
 1963              	.LBE469:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1964              		.loc 6 389 3 view .LVU580
 1965              	.LBB470:
 1966              	.LBB466:
 1967              	.LBB463:
 1968              	.LBB459:
 1969              	.LBI459:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1970              		.loc 7 140 27 view .LVU581
 1971              	.LBB460:
 1972              		.loc 7 142 3 view .LVU582
 1973              	.LBE460:
 1974              	.LBE459:
 1975              	.LBE463:
 1976              	.LBE466:
 1977              	.LBE470:
 610:lib/chibios/os/hal/src/hal_buffers.c **** 
 1978              		.loc 1 610 67 is_stmt 0 view .LVU583
 1979 0000 10B5     		push	{r4, lr}
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 4, -8
 1982              		.cfi_offset 14, -4
 1983              	.LBB471:
 1984              	.LBB467:
 1985              	.LBB464:
 1986              	.LBB462:
 1987              	.LBB461:
 1988              		.loc 7 142 3 view .LVU584
 1989              		.syntax divided
 1990              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1991 0002 72B6     		cpsid i
 1992              	@ 0 "" 2
 1993              		.thumb
 1994              		.syntax unified
 1995              	.LBE461:
 1996              	.LBE462:
 1997              	.LBE464:
 1998              	.LBE467:
 1999              	.LBE471:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2000              		.loc 5 356 34 is_stmt 1 view .LVU585
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2001              		.loc 5 357 20 view .LVU586
 613:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2002              		.loc 1 613 3 view .LVU587
 2003 0004 FFF7FEFF 		bl	obqPostFullBufferS
 2004              	.LVL84:
 614:lib/chibios/os/hal/src/hal_buffers.c **** }
 2005              		.loc 1 614 3 view .LVU588
 2006              	.LBB472:
 2007              	.LBI472:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2008              		.loc 2 520 20 view .LVU589
 2009              	.LBE472:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2010              		.loc 2 522 3 view .LVU590
 2011              	.LBB481:
 2012              	.LBB473:
 2013              	.LBI473:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2014              		.loc 5 365 20 view .LVU591
 2015              	.LBB474:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2016              		.loc 5 367 22 view .LVU592
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2017              		.loc 5 368 33 view .LVU593
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2018              		.loc 5 374 3 view .LVU594
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2019              		.loc 5 374 3 view .LVU595
 2020              		.loc 5 378 3 view .LVU596
 2021              	.LBB475:
 2022              	.LBI475:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2023              		.loc 6 396 20 view .LVU597
 2024              	.LBE475:
 2025              	.LBE474:
 2026              	.LBE473:
 2027              	.LBE481:
 2028              		.loc 6 398 3 view .LVU598
 2029              	.LBB482:
 2030              	.LBB480:
 2031              	.LBB479:
 2032              	.LBB478:
 2033              	.LBB476:
 2034              	.LBI476:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2035              		.loc 7 129 27 view .LVU599
 2036              	.LBB477:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2037              		.loc 7 131 3 view .LVU600
 2038              		.syntax divided
 2039              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2040 0008 62B6     		cpsie i
 2041              	@ 0 "" 2
 2042              		.thumb
 2043              		.syntax unified
 2044              	.LBE477:
 2045              	.LBE476:
 2046              	.LBE478:
 2047              	.LBE479:
 2048              	.LBE480:
 2049              	.LBE482:
 615:lib/chibios/os/hal/src/hal_buffers.c **** 
 2050              		.loc 1 615 1 is_stmt 0 view .LVU601
 2051              		@ sp needed
 2052 000a 10BD     		pop	{r4, pc}
 2053              		.cfi_endproc
 2054              	.LFE202:
 2056              		.section	.text.obqPutTimeout,"ax",%progbits
 2057              		.align	1
 2058              		.global	obqPutTimeout
 2059              		.syntax unified
 2060              		.code	16
 2061              		.thumb_func
 2062              		.fpu softvfp
 2064              	obqPutTimeout:
 2065              	.LVL85:
 2066              	.LFB204:
 650:lib/chibios/os/hal/src/hal_buffers.c **** 
 651:lib/chibios/os/hal/src/hal_buffers.c **** /**
 652:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 653:lib/chibios/os/hal/src/hal_buffers.c ****  * @details This function writes a byte value to an output queue. If
 654:lib/chibios/os/hal/src/hal_buffers.c ****  *          the queue is full then the calling thread is suspended until a
 655:lib/chibios/os/hal/src/hal_buffers.c ****  *          new buffer is freed in the queue or a timeout occurs.
 656:lib/chibios/os/hal/src/hal_buffers.c ****  *
 657:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 658:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] b         byte value to be transferred
 659:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 660:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 661:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 662:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 663:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 664:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 665:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 666:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 667:lib/chibios/os/hal/src/hal_buffers.c ****  *                      suspended state.
 668:lib/chibios/os/hal/src/hal_buffers.c ****  *
 669:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 670:lib/chibios/os/hal/src/hal_buffers.c ****  */
 671:lib/chibios/os/hal/src/hal_buffers.c **** msg_t obqPutTimeout(output_buffers_queue_t *obqp, uint8_t b,
 672:lib/chibios/os/hal/src/hal_buffers.c ****                     sysinterval_t timeout) {
 2067              		.loc 1 672 44 is_stmt 1 view -0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 0
 2070              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 2071              		.loc 1 673 3 view .LVU603
 674:lib/chibios/os/hal/src/hal_buffers.c **** 
 675:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 2072              		.loc 1 675 3 view .LVU604
 2073              	.LBB483:
 2074              	.LBI483:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2075              		.loc 2 509 20 view .LVU605
 2076              	.LBE483:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2077              		.loc 2 511 3 view .LVU606
 2078              	.LBB495:
 2079              	.LBB484:
 2080              	.LBI484:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2081              		.loc 5 353 20 view .LVU607
 2082              	.LBE484:
 2083              	.LBE495:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2084              		.loc 5 355 3 view .LVU608
 2085              	.LBB496:
 2086              	.LBB492:
 2087              	.LBB485:
 2088              	.LBI485:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2089              		.loc 6 387 20 view .LVU609
 2090              	.LBE485:
 2091              	.LBE492:
 2092              	.LBE496:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2093              		.loc 6 389 3 view .LVU610
 2094              	.LBB497:
 2095              	.LBB493:
 2096              	.LBB490:
 2097              	.LBB486:
 2098              	.LBI486:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2099              		.loc 7 140 27 view .LVU611
 2100              	.LBB487:
 2101              		.loc 7 142 3 view .LVU612
 2102              	.LBE487:
 2103              	.LBE486:
 2104              	.LBE490:
 2105              	.LBE493:
 2106              	.LBE497:
 672:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 2107              		.loc 1 672 44 is_stmt 0 view .LVU613
 2108 0000 70B5     		push	{r4, r5, r6, lr}
 2109              		.cfi_def_cfa_offset 16
 2110              		.cfi_offset 4, -16
 2111              		.cfi_offset 5, -12
 2112              		.cfi_offset 6, -8
 2113              		.cfi_offset 14, -4
 672:lib/chibios/os/hal/src/hal_buffers.c ****   msg_t msg;
 2114              		.loc 1 672 44 view .LVU614
 2115 0002 0400     		movs	r4, r0
 2116 0004 0D00     		movs	r5, r1
 2117              	.LBB498:
 2118              	.LBB494:
 2119              	.LBB491:
 2120              	.LBB489:
 2121              	.LBB488:
 2122              		.loc 7 142 3 view .LVU615
 2123              		.syntax divided
 2124              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2125 0006 72B6     		cpsid i
 2126              	@ 0 "" 2
 2127              		.thumb
 2128              		.syntax unified
 2129              	.LBE488:
 2130              	.LBE489:
 2131              	.LBE491:
 2132              	.LBE494:
 2133              	.LBE498:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2134              		.loc 5 356 34 is_stmt 1 view .LVU616
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2135              		.loc 5 357 20 view .LVU617
 676:lib/chibios/os/hal/src/hal_buffers.c **** 
 677:lib/chibios/os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 678:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr == NULL) {
 2136              		.loc 1 678 3 view .LVU618
 2137              		.loc 1 678 6 is_stmt 0 view .LVU619
 2138 0008 836A     		ldr	r3, [r0, #40]
 2139 000a 002B     		cmp	r3, #0
 2140 000c 06D1     		bne	.L62
 679:lib/chibios/os/hal/src/hal_buffers.c ****     msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 2141              		.loc 1 679 5 is_stmt 1 view .LVU620
 2142              		.loc 1 679 11 is_stmt 0 view .LVU621
 2143 000e 1100     		movs	r1, r2
 2144              	.LVL86:
 2145              		.loc 1 679 11 view .LVU622
 2146 0010 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 2147              	.LVL87:
 680:lib/chibios/os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 2148              		.loc 1 680 5 is_stmt 1 view .LVU623
 2149              		.loc 1 680 8 is_stmt 0 view .LVU624
 2150 0014 0028     		cmp	r0, #0
 2151 0016 01D0     		beq	.L62
 681:lib/chibios/os/hal/src/hal_buffers.c ****       osalSysUnlock();
 2152              		.loc 1 681 7 is_stmt 1 view .LVU625
 2153              	.LBB499:
 2154              	.LBI499:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2155              		.loc 2 520 20 view .LVU626
 2156              	.LBE499:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2157              		.loc 2 522 3 view .LVU627
 2158              	.LBB508:
 2159              	.LBB500:
 2160              	.LBI500:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2161              		.loc 5 365 20 view .LVU628
 2162              	.LBB501:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2163              		.loc 5 367 22 view .LVU629
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2164              		.loc 5 368 33 view .LVU630
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2165              		.loc 5 374 3 view .LVU631
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2166              		.loc 5 374 3 view .LVU632
 2167              		.loc 5 378 3 view .LVU633
 2168              	.LBB502:
 2169              	.LBI502:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2170              		.loc 6 396 20 view .LVU634
 2171              	.LBE502:
 2172              	.LBE501:
 2173              	.LBE500:
 2174              	.LBE508:
 2175              		.loc 6 398 3 view .LVU635
 2176              	.LBB509:
 2177              	.LBB507:
 2178              	.LBB506:
 2179              	.LBB505:
 2180              	.LBB503:
 2181              	.LBI503:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2182              		.loc 7 129 27 view .LVU636
 2183              	.LBB504:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2184              		.loc 7 131 3 view .LVU637
 2185              		.syntax divided
 2186              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2187 0018 62B6     		cpsie i
 2188              	@ 0 "" 2
 2189              		.thumb
 2190              		.syntax unified
 2191              	.LBE504:
 2192              	.LBE503:
 2193              	.LBE505:
 2194              	.LBE506:
 2195              	.LBE507:
 2196              	.LBE509:
 682:lib/chibios/os/hal/src/hal_buffers.c ****       return msg;
 2197              		.loc 1 682 7 view .LVU638
 2198              	.LVL88:
 2199              	.L61:
 683:lib/chibios/os/hal/src/hal_buffers.c ****     }
 684:lib/chibios/os/hal/src/hal_buffers.c ****   }
 685:lib/chibios/os/hal/src/hal_buffers.c **** 
 686:lib/chibios/os/hal/src/hal_buffers.c ****   /* Writing the byte to the buffer.*/
 687:lib/chibios/os/hal/src/hal_buffers.c ****   *obqp->ptr = b;
 688:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 689:lib/chibios/os/hal/src/hal_buffers.c **** 
 690:lib/chibios/os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully written then it is posted as
 691:lib/chibios/os/hal/src/hal_buffers.c ****      full in the queue.*/
 692:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr >= obqp->top) {
 693:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 694:lib/chibios/os/hal/src/hal_buffers.c ****   }
 695:lib/chibios/os/hal/src/hal_buffers.c **** 
 696:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 697:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 698:lib/chibios/os/hal/src/hal_buffers.c **** }
 2200              		.loc 1 698 1 is_stmt 0 view .LVU639
 2201              		@ sp needed
 2202              	.LVL89:
 2203              		.loc 1 698 1 view .LVU640
 2204 001a 70BD     		pop	{r4, r5, r6, pc}
 2205              	.LVL90:
 2206              	.L62:
 687:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 2207              		.loc 1 687 3 is_stmt 1 view .LVU641
 687:lib/chibios/os/hal/src/hal_buffers.c ****   obqp->ptr++;
 2208              		.loc 1 687 14 is_stmt 0 view .LVU642
 2209 001c A36A     		ldr	r3, [r4, #40]
 2210 001e 1D70     		strb	r5, [r3]
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 2211              		.loc 1 688 3 is_stmt 1 view .LVU643
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 2212              		.loc 1 688 12 is_stmt 0 view .LVU644
 2213 0020 A36A     		ldr	r3, [r4, #40]
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2214              		.loc 1 692 6 view .LVU645
 2215 0022 E26A     		ldr	r2, [r4, #44]
 688:lib/chibios/os/hal/src/hal_buffers.c **** 
 2216              		.loc 1 688 12 view .LVU646
 2217 0024 0133     		adds	r3, r3, #1
 2218 0026 A362     		str	r3, [r4, #40]
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2219              		.loc 1 692 3 is_stmt 1 view .LVU647
 692:lib/chibios/os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2220              		.loc 1 692 6 is_stmt 0 view .LVU648
 2221 0028 9342     		cmp	r3, r2
 2222 002a 04D3     		bcc	.L64
 693:lib/chibios/os/hal/src/hal_buffers.c ****   }
 2223              		.loc 1 693 5 is_stmt 1 view .LVU649
 2224 002c E369     		ldr	r3, [r4, #28]
 2225 002e 2000     		movs	r0, r4
 2226 0030 191F     		subs	r1, r3, #4
 2227 0032 FFF7FEFF 		bl	obqPostFullBufferS
 2228              	.LVL91:
 2229              	.L64:
 696:lib/chibios/os/hal/src/hal_buffers.c ****   return MSG_OK;
 2230              		.loc 1 696 3 view .LVU650
 2231              	.LBB510:
 2232              	.LBI510:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2233              		.loc 2 520 20 view .LVU651
 2234              	.LBE510:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2235              		.loc 2 522 3 view .LVU652
 2236              	.LBB519:
 2237              	.LBB511:
 2238              	.LBI511:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2239              		.loc 5 365 20 view .LVU653
 2240              	.LBB512:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2241              		.loc 5 367 22 view .LVU654
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2242              		.loc 5 368 33 view .LVU655
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2243              		.loc 5 374 3 view .LVU656
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2244              		.loc 5 374 3 view .LVU657
 2245              		.loc 5 378 3 view .LVU658
 2246              	.LBB513:
 2247              	.LBI513:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2248              		.loc 6 396 20 view .LVU659
 2249              	.LBE513:
 2250              	.LBE512:
 2251              	.LBE511:
 2252              	.LBE519:
 2253              		.loc 6 398 3 view .LVU660
 2254              	.LBB520:
 2255              	.LBB518:
 2256              	.LBB517:
 2257              	.LBB516:
 2258              	.LBB514:
 2259              	.LBI514:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2260              		.loc 7 129 27 view .LVU661
 2261              	.LBB515:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2262              		.loc 7 131 3 view .LVU662
 2263              		.syntax divided
 2264              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2265 0036 62B6     		cpsie i
 2266              	@ 0 "" 2
 2267              		.thumb
 2268              		.syntax unified
 2269              	.LBE515:
 2270              	.LBE514:
 2271              	.LBE516:
 2272              	.LBE517:
 2273              	.LBE518:
 2274              	.LBE520:
 697:lib/chibios/os/hal/src/hal_buffers.c **** }
 2275              		.loc 1 697 3 view .LVU663
 697:lib/chibios/os/hal/src/hal_buffers.c **** }
 2276              		.loc 1 697 10 is_stmt 0 view .LVU664
 2277 0038 0020     		movs	r0, #0
 2278 003a EEE7     		b	.L61
 2279              		.cfi_endproc
 2280              	.LFE204:
 2282              		.section	.text.obqWriteTimeout,"ax",%progbits
 2283              		.align	1
 2284              		.global	obqWriteTimeout
 2285              		.syntax unified
 2286              		.code	16
 2287              		.thumb_func
 2288              		.fpu softvfp
 2290              	obqWriteTimeout:
 2291              	.LVL92:
 2292              	.LFB205:
 699:lib/chibios/os/hal/src/hal_buffers.c **** 
 700:lib/chibios/os/hal/src/hal_buffers.c **** /**
 701:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 702:lib/chibios/os/hal/src/hal_buffers.c ****  * @details The function writes data from a buffer to an output queue. The
 703:lib/chibios/os/hal/src/hal_buffers.c ****  *          operation completes when the specified amount of data has been
 704:lib/chibios/os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 705:lib/chibios/os/hal/src/hal_buffers.c ****  *          been reset.
 706:lib/chibios/os/hal/src/hal_buffers.c ****  *
 707:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 708:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to the data buffer
 709:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 710:lib/chibios/os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 711:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 712:lib/chibios/os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 713:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 714:lib/chibios/os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 715:lib/chibios/os/hal/src/hal_buffers.c ****  *                      .
 716:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 717:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 718:lib/chibios/os/hal/src/hal_buffers.c ****  *
 719:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 720:lib/chibios/os/hal/src/hal_buffers.c ****  */
 721:lib/chibios/os/hal/src/hal_buffers.c **** size_t obqWriteTimeout(output_buffers_queue_t *obqp, const uint8_t *bp,
 722:lib/chibios/os/hal/src/hal_buffers.c ****                        size_t n, sysinterval_t timeout) {
 2293              		.loc 1 722 57 is_stmt 1 view -0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 8
 2296              		@ frame_needed = 0, uses_anonymous_args = 0
 723:lib/chibios/os/hal/src/hal_buffers.c ****   size_t w = 0;
 2297              		.loc 1 723 3 view .LVU666
 724:lib/chibios/os/hal/src/hal_buffers.c **** 
 725:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 2298              		.loc 1 725 3 view .LVU667
 2299              		.loc 1 725 3 view .LVU668
 726:lib/chibios/os/hal/src/hal_buffers.c **** 
 727:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 2300              		.loc 1 727 3 view .LVU669
 2301              	.LBB521:
 2302              	.LBI521:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2303              		.loc 2 509 20 view .LVU670
 2304              	.LBE521:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2305              		.loc 2 511 3 view .LVU671
 2306              	.LBB533:
 2307              	.LBB522:
 2308              	.LBI522:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2309              		.loc 5 353 20 view .LVU672
 2310              	.LBE522:
 2311              	.LBE533:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2312              		.loc 5 355 3 view .LVU673
 2313              	.LBB534:
 2314              	.LBB530:
 2315              	.LBB523:
 2316              	.LBI523:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2317              		.loc 6 387 20 view .LVU674
 2318              	.LBE523:
 2319              	.LBE530:
 2320              	.LBE534:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2321              		.loc 6 389 3 view .LVU675
 2322              	.LBB535:
 2323              	.LBB531:
 2324              	.LBB528:
 2325              	.LBB524:
 2326              	.LBI524:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2327              		.loc 7 140 27 view .LVU676
 2328              	.LBB525:
 2329              		.loc 7 142 3 view .LVU677
 2330              	.LBE525:
 2331              	.LBE524:
 2332              	.LBE528:
 2333              	.LBE531:
 2334              	.LBE535:
 722:lib/chibios/os/hal/src/hal_buffers.c ****   size_t w = 0;
 2335              		.loc 1 722 57 is_stmt 0 view .LVU678
 2336 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2337              		.cfi_def_cfa_offset 32
 2338              		.cfi_offset 0, -32
 2339              		.cfi_offset 1, -28
 2340              		.cfi_offset 2, -24
 2341              		.cfi_offset 4, -20
 2342              		.cfi_offset 5, -16
 2343              		.cfi_offset 6, -12
 2344              		.cfi_offset 7, -8
 2345              		.cfi_offset 14, -4
 722:lib/chibios/os/hal/src/hal_buffers.c ****   size_t w = 0;
 2346              		.loc 1 722 57 view .LVU679
 2347 0002 0400     		movs	r4, r0
 2348 0004 0F00     		movs	r7, r1
 2349 0006 0092     		str	r2, [sp]
 2350 0008 0193     		str	r3, [sp, #4]
 2351              	.LBB536:
 2352              	.LBB532:
 2353              	.LBB529:
 2354              	.LBB527:
 2355              	.LBB526:
 2356              		.loc 7 142 3 view .LVU680
 2357              		.syntax divided
 2358              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2359 000a 72B6     		cpsid i
 2360              	@ 0 "" 2
 2361              		.thumb
 2362              		.syntax unified
 2363              	.LBE526:
 2364              	.LBE527:
 2365              	.LBE529:
 2366              	.LBE532:
 2367              	.LBE536:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2368              		.loc 5 356 34 is_stmt 1 view .LVU681
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2369              		.loc 5 357 20 view .LVU682
 723:lib/chibios/os/hal/src/hal_buffers.c **** 
 2370              		.loc 1 723 10 is_stmt 0 view .LVU683
 2371 000c 0025     		movs	r5, #0
 2372              	.LVL93:
 2373              	.L75:
 728:lib/chibios/os/hal/src/hal_buffers.c **** 
 729:lib/chibios/os/hal/src/hal_buffers.c ****   while (true) {
 2374              		.loc 1 729 3 is_stmt 1 view .LVU684
 2375              	.LBB537:
 730:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size;
 2376              		.loc 1 730 5 view .LVU685
 731:lib/chibios/os/hal/src/hal_buffers.c **** 
 732:lib/chibios/os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 733:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->ptr == NULL) {
 2377              		.loc 1 733 5 view .LVU686
 2378              		.loc 1 733 8 is_stmt 0 view .LVU687
 2379 000e A36A     		ldr	r3, [r4, #40]
 2380 0010 002B     		cmp	r3, #0
 2381 0012 08D1     		bne	.L69
 2382              	.LBB538:
 734:lib/chibios/os/hal/src/hal_buffers.c ****       msg_t msg;
 2383              		.loc 1 734 7 is_stmt 1 view .LVU688
 735:lib/chibios/os/hal/src/hal_buffers.c **** 
 736:lib/chibios/os/hal/src/hal_buffers.c ****       /* Getting an empty buffer using the specified timeout.*/
 737:lib/chibios/os/hal/src/hal_buffers.c ****       msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 2384              		.loc 1 737 7 view .LVU689
 2385              		.loc 1 737 13 is_stmt 0 view .LVU690
 2386 0014 0199     		ldr	r1, [sp, #4]
 2387 0016 2000     		movs	r0, r4
 2388 0018 FFF7FEFF 		bl	obqGetEmptyBufferTimeoutS
 2389              	.LVL94:
 738:lib/chibios/os/hal/src/hal_buffers.c **** 
 739:lib/chibios/os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 740:lib/chibios/os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 2390              		.loc 1 740 7 is_stmt 1 view .LVU691
 2391              		.loc 1 740 10 is_stmt 0 view .LVU692
 2392 001c 0028     		cmp	r0, #0
 2393 001e 02D0     		beq	.L69
 741:lib/chibios/os/hal/src/hal_buffers.c ****         osalSysUnlock();
 2394              		.loc 1 741 9 is_stmt 1 view .LVU693
 2395              	.LBB539:
 2396              	.LBI539:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2397              		.loc 2 520 20 view .LVU694
 2398              	.LBE539:
 2399              	.LBE538:
 2400              	.LBE537:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2401              		.loc 2 522 3 view .LVU695
 2402              	.LBB574:
 2403              	.LBB550:
 2404              	.LBB548:
 2405              	.LBB540:
 2406              	.LBI540:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2407              		.loc 5 365 20 view .LVU696
 2408              	.LBB541:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2409              		.loc 5 367 22 view .LVU697
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2410              		.loc 5 368 33 view .LVU698
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2411              		.loc 5 374 3 view .LVU699
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2412              		.loc 5 374 3 view .LVU700
 2413              		.loc 5 378 3 view .LVU701
 2414              	.LBB542:
 2415              	.LBI542:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2416              		.loc 6 396 20 view .LVU702
 2417              	.LBE542:
 2418              	.LBE541:
 2419              	.LBE540:
 2420              	.LBE548:
 2421              	.LBE550:
 2422              	.LBE574:
 2423              		.loc 6 398 3 view .LVU703
 2424              	.LBB575:
 2425              	.LBB551:
 2426              	.LBB549:
 2427              	.LBB547:
 2428              	.LBB546:
 2429              	.LBB545:
 2430              	.LBB543:
 2431              	.LBI543:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2432              		.loc 7 129 27 view .LVU704
 2433              	.LBB544:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2434              		.loc 7 131 3 view .LVU705
 2435              		.syntax divided
 2436              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2437 0020 62B6     		cpsie i
 2438              	@ 0 "" 2
 2439              		.thumb
 2440              		.syntax unified
 2441              	.LBE544:
 2442              	.LBE543:
 2443              	.LBE545:
 2444              	.LBE546:
 2445              	.LBE547:
 2446              	.LBE549:
 742:lib/chibios/os/hal/src/hal_buffers.c ****         return w;
 2447              		.loc 1 742 9 view .LVU706
 2448              	.LVL95:
 2449              	.L68:
 2450              		.loc 1 742 9 is_stmt 0 view .LVU707
 2451              	.LBE551:
 2452              	.LBE575:
 743:lib/chibios/os/hal/src/hal_buffers.c ****       }
 744:lib/chibios/os/hal/src/hal_buffers.c ****     }
 745:lib/chibios/os/hal/src/hal_buffers.c **** 
 746:lib/chibios/os/hal/src/hal_buffers.c ****     /* Size of the space available in the current buffer.*/
 747:lib/chibios/os/hal/src/hal_buffers.c ****     size = (size_t)obqp->top - (size_t)obqp->ptr;
 748:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 749:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 750:lib/chibios/os/hal/src/hal_buffers.c ****     }
 751:lib/chibios/os/hal/src/hal_buffers.c **** 
 752:lib/chibios/os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 753:lib/chibios/os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 754:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (size_t)BUFFERS_CHUNKS_SIZE) {
 755:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 756:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, (size_t)BUFFERS_CHUNKS_SIZE);
 757:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 758:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 759:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 760:lib/chibios/os/hal/src/hal_buffers.c ****     }
 761:lib/chibios/os/hal/src/hal_buffers.c ****     else {
 762:lib/chibios/os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, size);
 763:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 764:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 765:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 766:lib/chibios/os/hal/src/hal_buffers.c ****     }
 767:lib/chibios/os/hal/src/hal_buffers.c **** 
 768:lib/chibios/os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 769:lib/chibios/os/hal/src/hal_buffers.c ****     if (obqp->ptr >= obqp->top) {
 770:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 771:lib/chibios/os/hal/src/hal_buffers.c ****     }
 772:lib/chibios/os/hal/src/hal_buffers.c **** 
 773:lib/chibios/os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 774:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysUnlock();
 775:lib/chibios/os/hal/src/hal_buffers.c ****     if (w >= n) {
 776:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 777:lib/chibios/os/hal/src/hal_buffers.c ****     }
 778:lib/chibios/os/hal/src/hal_buffers.c ****     osalSysLock();
 779:lib/chibios/os/hal/src/hal_buffers.c ****   }
 780:lib/chibios/os/hal/src/hal_buffers.c **** }
 2453              		.loc 1 780 1 view .LVU708
 2454 0022 2800     		movs	r0, r5
 2455              		@ sp needed
 2456              	.LVL96:
 2457              	.LVL97:
 2458              	.LVL98:
 2459              		.loc 1 780 1 view .LVU709
 2460 0024 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2461              	.LVL99:
 2462              	.L69:
 2463              	.LBB576:
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2464              		.loc 1 747 5 is_stmt 1 view .LVU710
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2465              		.loc 1 747 44 is_stmt 0 view .LVU711
 2466 0026 A06A     		ldr	r0, [r4, #40]
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2467              		.loc 1 747 10 view .LVU712
 2468 0028 E36A     		ldr	r3, [r4, #44]
 748:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 2469              		.loc 1 748 19 view .LVU713
 2470 002a 009A     		ldr	r2, [sp]
 747:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 2471              		.loc 1 747 10 view .LVU714
 2472 002c 1B1A     		subs	r3, r3, r0
 2473              	.LVL100:
 748:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 2474              		.loc 1 748 5 is_stmt 1 view .LVU715
 748:lib/chibios/os/hal/src/hal_buffers.c ****       size = n - w;
 2475              		.loc 1 748 19 is_stmt 0 view .LVU716
 2476 002e 561B     		subs	r6, r2, r5
 2477 0030 9E42     		cmp	r6, r3
 2478 0032 00D9     		bls	.L71
 2479 0034 1E00     		movs	r6, r3
 2480              	.L71:
 2481              	.LVL101:
 754:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 2482              		.loc 1 754 5 is_stmt 1 view .LVU717
 754:lib/chibios/os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 2483              		.loc 1 754 8 is_stmt 0 view .LVU718
 2484 0036 402E     		cmp	r6, #64
 2485 0038 17D9     		bls	.L72
 756:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += (size_t)BUFFERS_CHUNKS_SIZE;
 2486              		.loc 1 756 7 is_stmt 1 view .LVU719
 2487 003a 3900     		movs	r1, r7
 2488 003c 4022     		movs	r2, #64
 2489 003e FFF7FEFF 		bl	memcpy
 2490              	.LVL102:
 757:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 2491              		.loc 1 757 7 view .LVU720
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2492              		.loc 1 758 17 is_stmt 0 view .LVU721
 2493 0042 A36A     		ldr	r3, [r4, #40]
 757:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += (size_t)BUFFERS_CHUNKS_SIZE;
 2494              		.loc 1 757 17 view .LVU722
 2495 0044 4037     		adds	r7, r7, #64
 2496              	.LVL103:
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2497              		.loc 1 758 7 is_stmt 1 view .LVU723
 758:lib/chibios/os/hal/src/hal_buffers.c ****       w         += (size_t)BUFFERS_CHUNKS_SIZE;
 2498              		.loc 1 758 17 is_stmt 0 view .LVU724
 2499 0046 4033     		adds	r3, r3, #64
 2500 0048 A362     		str	r3, [r4, #40]
 759:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2501              		.loc 1 759 7 is_stmt 1 view .LVU725
 759:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2502              		.loc 1 759 17 is_stmt 0 view .LVU726
 2503 004a 4035     		adds	r5, r5, #64
 2504              	.LVL104:
 2505              	.L73:
 769:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2506              		.loc 1 769 5 is_stmt 1 view .LVU727
 769:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2507              		.loc 1 769 8 is_stmt 0 view .LVU728
 2508 004c A36A     		ldr	r3, [r4, #40]
 2509 004e E26A     		ldr	r2, [r4, #44]
 2510 0050 9342     		cmp	r3, r2
 2511 0052 04D3     		bcc	.L74
 770:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2512              		.loc 1 770 7 is_stmt 1 view .LVU729
 2513 0054 E369     		ldr	r3, [r4, #28]
 2514 0056 2000     		movs	r0, r4
 2515 0058 191F     		subs	r1, r3, #4
 2516 005a FFF7FEFF 		bl	obqPostFullBufferS
 2517              	.LVL105:
 2518              	.L74:
 774:lib/chibios/os/hal/src/hal_buffers.c ****     if (w >= n) {
 2519              		.loc 1 774 5 view .LVU730
 2520              	.LBB552:
 2521              	.LBI552:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2522              		.loc 2 520 20 view .LVU731
 2523              	.LBE552:
 2524              	.LBE576:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2525              		.loc 2 522 3 view .LVU732
 2526              	.LBB577:
 2527              	.LBB561:
 2528              	.LBB553:
 2529              	.LBI553:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2530              		.loc 5 365 20 view .LVU733
 2531              	.LBB554:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2532              		.loc 5 367 22 view .LVU734
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2533              		.loc 5 368 33 view .LVU735
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2534              		.loc 5 374 3 view .LVU736
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2535              		.loc 5 374 3 view .LVU737
 2536              		.loc 5 378 3 view .LVU738
 2537              	.LBB555:
 2538              	.LBI555:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2539              		.loc 6 396 20 view .LVU739
 2540              	.LBE555:
 2541              	.LBE554:
 2542              	.LBE553:
 2543              	.LBE561:
 2544              	.LBE577:
 2545              		.loc 6 398 3 view .LVU740
 2546              	.LBB578:
 2547              	.LBB562:
 2548              	.LBB560:
 2549              	.LBB559:
 2550              	.LBB558:
 2551              	.LBB556:
 2552              	.LBI556:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2553              		.loc 7 129 27 view .LVU741
 2554              	.LBB557:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2555              		.loc 7 131 3 view .LVU742
 2556              		.syntax divided
 2557              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2558 005e 62B6     		cpsie i
 2559              	@ 0 "" 2
 2560              		.thumb
 2561              		.syntax unified
 2562              	.LBE557:
 2563              	.LBE556:
 2564              	.LBE558:
 2565              	.LBE559:
 2566              	.LBE560:
 2567              	.LBE562:
 775:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 2568              		.loc 1 775 5 view .LVU743
 775:lib/chibios/os/hal/src/hal_buffers.c ****       return w;
 2569              		.loc 1 775 8 is_stmt 0 view .LVU744
 2570 0060 009B     		ldr	r3, [sp]
 2571 0062 9D42     		cmp	r5, r3
 2572 0064 DDD2     		bcs	.L68
 778:lib/chibios/os/hal/src/hal_buffers.c ****   }
 2573              		.loc 1 778 5 is_stmt 1 view .LVU745
 2574              	.LBB563:
 2575              	.LBI563:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2576              		.loc 2 509 20 view .LVU746
 2577              	.LBE563:
 2578              	.LBE578:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2579              		.loc 2 511 3 view .LVU747
 2580              	.LBB579:
 2581              	.LBB571:
 2582              	.LBB564:
 2583              	.LBI564:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2584              		.loc 5 353 20 view .LVU748
 2585              	.LBE564:
 2586              	.LBE571:
 2587              	.LBE579:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2588              		.loc 5 355 3 view .LVU749
 2589              	.LBB580:
 2590              	.LBB572:
 2591              	.LBB569:
 2592              	.LBB565:
 2593              	.LBI565:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2594              		.loc 6 387 20 view .LVU750
 2595              	.LBE565:
 2596              	.LBE569:
 2597              	.LBE572:
 2598              	.LBE580:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2599              		.loc 6 389 3 view .LVU751
 2600              	.LBB581:
 2601              	.LBB573:
 2602              	.LBB570:
 2603              	.LBB568:
 2604              	.LBB566:
 2605              	.LBI566:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2606              		.loc 7 140 27 view .LVU752
 2607              	.LBB567:
 2608              		.loc 7 142 3 view .LVU753
 2609              		.syntax divided
 2610              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2611 0066 72B6     		cpsid i
 2612              	@ 0 "" 2
 2613              		.thumb
 2614              		.syntax unified
 2615              	.LBE567:
 2616              	.LBE566:
 2617              	.LBE568:
 2618              	.LBE570:
 2619              	.LBE573:
 2620              	.LBE581:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2621              		.loc 5 356 34 view .LVU754
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2622              		.loc 5 357 20 view .LVU755
 2623 0068 D1E7     		b	.L75
 2624              	.L72:
 2625              	.LBB582:
 762:lib/chibios/os/hal/src/hal_buffers.c ****       bp        += size;
 2626              		.loc 1 762 7 view .LVU756
 2627 006a 3900     		movs	r1, r7
 2628 006c 3200     		movs	r2, r6
 2629 006e FFF7FEFF 		bl	memcpy
 2630              	.LVL106:
 763:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 2631              		.loc 1 763 7 view .LVU757
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2632              		.loc 1 764 17 is_stmt 0 view .LVU758
 2633 0072 A36A     		ldr	r3, [r4, #40]
 763:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 2634              		.loc 1 763 17 view .LVU759
 2635 0074 BF19     		adds	r7, r7, r6
 2636              	.LVL107:
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2637              		.loc 1 764 7 is_stmt 1 view .LVU760
 764:lib/chibios/os/hal/src/hal_buffers.c ****       w         += size;
 2638              		.loc 1 764 17 is_stmt 0 view .LVU761
 2639 0076 9B19     		adds	r3, r3, r6
 2640 0078 A362     		str	r3, [r4, #40]
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2641              		.loc 1 765 7 is_stmt 1 view .LVU762
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2642              		.loc 1 765 17 is_stmt 0 view .LVU763
 2643 007a AD19     		adds	r5, r5, r6
 2644              	.LVL108:
 765:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2645              		.loc 1 765 17 view .LVU764
 2646 007c E6E7     		b	.L73
 2647              	.LBE582:
 2648              		.cfi_endproc
 2649              	.LFE205:
 2651              		.section	.text.obqTryFlushI,"ax",%progbits
 2652              		.align	1
 2653              		.global	obqTryFlushI
 2654              		.syntax unified
 2655              		.code	16
 2656              		.thumb_func
 2657              		.fpu softvfp
 2659              	obqTryFlushI:
 2660              	.LVL109:
 2661              	.LFB206:
 781:lib/chibios/os/hal/src/hal_buffers.c **** 
 782:lib/chibios/os/hal/src/hal_buffers.c **** /**
 783:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 784:lib/chibios/os/hal/src/hal_buffers.c ****  * @note    The notification callback is not invoked because the function
 785:lib/chibios/os/hal/src/hal_buffers.c ****  *          is meant to be called from ISR context. An operation status is
 786:lib/chibios/os/hal/src/hal_buffers.c ****  *          returned instead.
 787:lib/chibios/os/hal/src/hal_buffers.c ****  *
 788:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 789:lib/chibios/os/hal/src/hal_buffers.c ****  * @return              The operation status.
 790:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval false        if no new filled buffer has been posted to the queue.
 791:lib/chibios/os/hal/src/hal_buffers.c ****  * @retval true         if a new filled buffer has been posted to the queue.
 792:lib/chibios/os/hal/src/hal_buffers.c ****  *
 793:lib/chibios/os/hal/src/hal_buffers.c ****  * @iclass
 794:lib/chibios/os/hal/src/hal_buffers.c ****  */
 795:lib/chibios/os/hal/src/hal_buffers.c **** bool obqTryFlushI(output_buffers_queue_t *obqp) {
 2662              		.loc 1 795 49 is_stmt 1 view -0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666              		@ link register save eliminated.
 796:lib/chibios/os/hal/src/hal_buffers.c **** 
 797:lib/chibios/os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 2667              		.loc 1 797 23 view .LVU766
 798:lib/chibios/os/hal/src/hal_buffers.c **** 
 799:lib/chibios/os/hal/src/hal_buffers.c ****   /* If queue is empty and there is a buffer partially filled and
 800:lib/chibios/os/hal/src/hal_buffers.c ****      it is not being written.*/
 801:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp) && (obqp->ptr != NULL)) {
 2668              		.loc 1 801 3 view .LVU767
 795:lib/chibios/os/hal/src/hal_buffers.c **** 
 2669              		.loc 1 795 49 is_stmt 0 view .LVU768
 2670 0000 0300     		movs	r3, r0
 2671              		.loc 1 801 7 view .LVU769
 2672 0002 0269     		ldr	r2, [r0, #16]
 2673 0004 5969     		ldr	r1, [r3, #20]
 802:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 803:lib/chibios/os/hal/src/hal_buffers.c **** 
 804:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > 0U) {
 805:lib/chibios/os/hal/src/hal_buffers.c **** 
 806:lib/chibios/os/hal/src/hal_buffers.c ****       /* Writing size field in the buffer.*/
 807:lib/chibios/os/hal/src/hal_buffers.c ****       *((size_t *)obqp->bwrptr) = size;
 808:lib/chibios/os/hal/src/hal_buffers.c **** 
 809:lib/chibios/os/hal/src/hal_buffers.c ****       /* Posting the buffer in the queue.*/
 810:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bcounter--;
 811:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 812:lib/chibios/os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 813:lib/chibios/os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 814:lib/chibios/os/hal/src/hal_buffers.c ****       }
 815:lib/chibios/os/hal/src/hal_buffers.c **** 
 816:lib/chibios/os/hal/src/hal_buffers.c ****       /* No "current" buffer.*/
 817:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->ptr = NULL;
 818:lib/chibios/os/hal/src/hal_buffers.c **** 
 819:lib/chibios/os/hal/src/hal_buffers.c ****       return true;
 820:lib/chibios/os/hal/src/hal_buffers.c ****     }
 821:lib/chibios/os/hal/src/hal_buffers.c ****   }
 822:lib/chibios/os/hal/src/hal_buffers.c ****   return false;
 2674              		.loc 1 822 10 view .LVU770
 2675 0006 0020     		movs	r0, #0
 2676              	.LVL110:
 801:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2677              		.loc 1 801 7 view .LVU771
 2678 0008 8A42     		cmp	r2, r1
 2679 000a 18D1     		bne	.L80
 801:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2680              		.loc 1 801 7 discriminator 1 view .LVU772
 2681 000c D968     		ldr	r1, [r3, #12]
 2682 000e 8142     		cmp	r1, r0
 2683 0010 15D0     		beq	.L80
 801:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2684              		.loc 1 801 33 view .LVU773
 2685 0012 996A     		ldr	r1, [r3, #40]
 801:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2686              		.loc 1 801 25 view .LVU774
 2687 0014 8142     		cmp	r1, r0
 2688 0016 12D0     		beq	.L80
 2689              	.LBB583:
 802:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2690              		.loc 1 802 5 is_stmt 1 view .LVU775
 802:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 2691              		.loc 1 802 12 is_stmt 0 view .LVU776
 2692 0018 0439     		subs	r1, r1, #4
 2693 001a 891A     		subs	r1, r1, r2
 2694              	.LVL111:
 804:lib/chibios/os/hal/src/hal_buffers.c **** 
 2695              		.loc 1 804 5 is_stmt 1 view .LVU777
 804:lib/chibios/os/hal/src/hal_buffers.c **** 
 2696              		.loc 1 804 8 is_stmt 0 view .LVU778
 2697 001c 8142     		cmp	r1, r0
 2698 001e 0ED0     		beq	.L80
 807:lib/chibios/os/hal/src/hal_buffers.c **** 
 2699              		.loc 1 807 7 is_stmt 1 view .LVU779
 807:lib/chibios/os/hal/src/hal_buffers.c **** 
 2700              		.loc 1 807 33 is_stmt 0 view .LVU780
 2701 0020 1160     		str	r1, [r2]
 810:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 2702              		.loc 1 810 7 is_stmt 1 view .LVU781
 810:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 2703              		.loc 1 810 11 is_stmt 0 view .LVU782
 2704 0022 D968     		ldr	r1, [r3, #12]
 2705              	.LVL112:
 810:lib/chibios/os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 2706              		.loc 1 810 21 view .LVU783
 2707 0024 0139     		subs	r1, r1, #1
 2708 0026 D960     		str	r1, [r3, #12]
 2709              	.LVL113:
 811:lib/chibios/os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 2710              		.loc 1 811 7 is_stmt 1 view .LVU784
 811:lib/chibios/os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 2711              		.loc 1 811 20 is_stmt 0 view .LVU785
 2712 0028 D969     		ldr	r1, [r3, #28]
 2713 002a 5218     		adds	r2, r2, r1
 2714              	.LVL114:
 812:lib/chibios/os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 2715              		.loc 1 812 10 view .LVU786
 2716 002c 9969     		ldr	r1, [r3, #24]
 811:lib/chibios/os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 2717              		.loc 1 811 20 view .LVU787
 2718 002e 1A61     		str	r2, [r3, #16]
 2719              	.LVL115:
 812:lib/chibios/os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 2720              		.loc 1 812 7 is_stmt 1 view .LVU788
 812:lib/chibios/os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 2721              		.loc 1 812 10 is_stmt 0 view .LVU789
 2722 0030 8A42     		cmp	r2, r1
 2723 0032 01D3     		bcc	.L81
 813:lib/chibios/os/hal/src/hal_buffers.c ****       }
 2724              		.loc 1 813 9 is_stmt 1 view .LVU790
 813:lib/chibios/os/hal/src/hal_buffers.c ****       }
 2725              		.loc 1 813 22 is_stmt 0 view .LVU791
 2726 0034 5A6A     		ldr	r2, [r3, #36]
 2727 0036 1A61     		str	r2, [r3, #16]
 2728              	.L81:
 817:lib/chibios/os/hal/src/hal_buffers.c **** 
 2729              		.loc 1 817 7 is_stmt 1 view .LVU792
 817:lib/chibios/os/hal/src/hal_buffers.c **** 
 2730              		.loc 1 817 17 is_stmt 0 view .LVU793
 2731 0038 0022     		movs	r2, #0
 819:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2732              		.loc 1 819 14 view .LVU794
 2733 003a 0120     		movs	r0, #1
 817:lib/chibios/os/hal/src/hal_buffers.c **** 
 2734              		.loc 1 817 17 view .LVU795
 2735 003c 9A62     		str	r2, [r3, #40]
 819:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2736              		.loc 1 819 7 is_stmt 1 view .LVU796
 2737              	.L80:
 819:lib/chibios/os/hal/src/hal_buffers.c ****     }
 2738              		.loc 1 819 7 is_stmt 0 view .LVU797
 2739              	.LBE583:
 823:lib/chibios/os/hal/src/hal_buffers.c **** }
 2740              		.loc 1 823 1 view .LVU798
 2741              		@ sp needed
 2742 003e 7047     		bx	lr
 2743              		.cfi_endproc
 2744              	.LFE206:
 2746              		.section	.text.obqFlush,"ax",%progbits
 2747              		.align	1
 2748              		.global	obqFlush
 2749              		.syntax unified
 2750              		.code	16
 2751              		.thumb_func
 2752              		.fpu softvfp
 2754              	obqFlush:
 2755              	.LVL116:
 2756              	.LFB207:
 824:lib/chibios/os/hal/src/hal_buffers.c **** 
 825:lib/chibios/os/hal/src/hal_buffers.c **** /**
 826:lib/chibios/os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 827:lib/chibios/os/hal/src/hal_buffers.c ****  *
 828:lib/chibios/os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 829:lib/chibios/os/hal/src/hal_buffers.c ****  *
 830:lib/chibios/os/hal/src/hal_buffers.c ****  * @api
 831:lib/chibios/os/hal/src/hal_buffers.c ****  */
 832:lib/chibios/os/hal/src/hal_buffers.c **** void obqFlush(output_buffers_queue_t *obqp) {
 2757              		.loc 1 832 45 is_stmt 1 view -0
 2758              		.cfi_startproc
 2759              		@ args = 0, pretend = 0, frame = 0
 2760              		@ frame_needed = 0, uses_anonymous_args = 0
 833:lib/chibios/os/hal/src/hal_buffers.c **** 
 834:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysLock();
 2761              		.loc 1 834 3 view .LVU800
 2762              	.LBB584:
 2763              	.LBI584:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2764              		.loc 2 509 20 view .LVU801
 2765              	.LBE584:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2766              		.loc 2 511 3 view .LVU802
 2767              	.LBB596:
 2768              	.LBB585:
 2769              	.LBI585:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2770              		.loc 5 353 20 view .LVU803
 2771              	.LBE585:
 2772              	.LBE596:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2773              		.loc 5 355 3 view .LVU804
 2774              	.LBB597:
 2775              	.LBB593:
 2776              	.LBB586:
 2777              	.LBI586:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2778              		.loc 6 387 20 view .LVU805
 2779              	.LBE586:
 2780              	.LBE593:
 2781              	.LBE597:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2782              		.loc 6 389 3 view .LVU806
 2783              	.LBB598:
 2784              	.LBB594:
 2785              	.LBB591:
 2786              	.LBB587:
 2787              	.LBI587:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2788              		.loc 7 140 27 view .LVU807
 2789              	.LBB588:
 2790              		.loc 7 142 3 view .LVU808
 2791              	.LBE588:
 2792              	.LBE587:
 2793              	.LBE591:
 2794              	.LBE594:
 2795              	.LBE598:
 832:lib/chibios/os/hal/src/hal_buffers.c **** 
 2796              		.loc 1 832 45 is_stmt 0 view .LVU809
 2797 0000 10B5     		push	{r4, lr}
 2798              		.cfi_def_cfa_offset 8
 2799              		.cfi_offset 4, -8
 2800              		.cfi_offset 14, -4
 2801              	.LBB599:
 2802              	.LBB595:
 2803              	.LBB592:
 2804              	.LBB590:
 2805              	.LBB589:
 2806              		.loc 7 142 3 view .LVU810
 2807              		.syntax divided
 2808              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2809 0002 72B6     		cpsid i
 2810              	@ 0 "" 2
 2811              		.thumb
 2812              		.syntax unified
 2813              	.LBE589:
 2814              	.LBE590:
 2815              	.LBE592:
 2816              	.LBE595:
 2817              	.LBE599:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2818              		.loc 5 356 34 is_stmt 1 view .LVU811
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2819              		.loc 5 357 20 view .LVU812
 835:lib/chibios/os/hal/src/hal_buffers.c **** 
 836:lib/chibios/os/hal/src/hal_buffers.c ****   /* If there is a buffer partially filled and not being written.*/
 837:lib/chibios/os/hal/src/hal_buffers.c ****   if (obqp->ptr != NULL) {
 2820              		.loc 1 837 3 view .LVU813
 2821              		.loc 1 837 11 is_stmt 0 view .LVU814
 2822 0004 816A     		ldr	r1, [r0, #40]
 2823              		.loc 1 837 6 view .LVU815
 2824 0006 0029     		cmp	r1, #0
 2825 0008 05D0     		beq	.L89
 2826              	.LBB600:
 838:lib/chibios/os/hal/src/hal_buffers.c ****     size_t size = ((size_t)obqp->ptr - (size_t)obqp->bwrptr) - sizeof (size_t);
 2827              		.loc 1 838 5 is_stmt 1 view .LVU816
 2828              		.loc 1 838 12 is_stmt 0 view .LVU817
 2829 000a 0369     		ldr	r3, [r0, #16]
 2830 000c 0439     		subs	r1, r1, #4
 2831 000e C91A     		subs	r1, r1, r3
 2832              	.LVL117:
 839:lib/chibios/os/hal/src/hal_buffers.c **** 
 840:lib/chibios/os/hal/src/hal_buffers.c ****     if (size > 0U) {
 2833              		.loc 1 840 5 is_stmt 1 view .LVU818
 2834              		.loc 1 840 8 is_stmt 0 view .LVU819
 2835 0010 01D0     		beq	.L89
 841:lib/chibios/os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, size);
 2836              		.loc 1 841 7 is_stmt 1 view .LVU820
 2837 0012 FFF7FEFF 		bl	obqPostFullBufferS
 2838              	.LVL118:
 2839              	.L89:
 2840              		.loc 1 841 7 is_stmt 0 view .LVU821
 2841              	.LBE600:
 842:lib/chibios/os/hal/src/hal_buffers.c ****     }
 843:lib/chibios/os/hal/src/hal_buffers.c ****   }
 844:lib/chibios/os/hal/src/hal_buffers.c **** 
 845:lib/chibios/os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2842              		.loc 1 845 3 is_stmt 1 view .LVU822
 2843              	.LBB601:
 2844              	.LBI601:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2845              		.loc 2 520 20 view .LVU823
 2846              	.LBE601:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2847              		.loc 2 522 3 view .LVU824
 2848              	.LBB610:
 2849              	.LBB602:
 2850              	.LBI602:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2851              		.loc 5 365 20 view .LVU825
 2852              	.LBB603:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2853              		.loc 5 367 22 view .LVU826
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2854              		.loc 5 368 33 view .LVU827
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2855              		.loc 5 374 3 view .LVU828
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2856              		.loc 5 374 3 view .LVU829
 2857              		.loc 5 378 3 view .LVU830
 2858              	.LBB604:
 2859              	.LBI604:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2860              		.loc 6 396 20 view .LVU831
 2861              	.LBE604:
 2862              	.LBE603:
 2863              	.LBE602:
 2864              	.LBE610:
 2865              		.loc 6 398 3 view .LVU832
 2866              	.LBB611:
 2867              	.LBB609:
 2868              	.LBB608:
 2869              	.LBB607:
 2870              	.LBB605:
 2871              	.LBI605:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2872              		.loc 7 129 27 view .LVU833
 2873              	.LBB606:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2874              		.loc 7 131 3 view .LVU834
 2875              		.syntax divided
 2876              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2877 0016 62B6     		cpsie i
 2878              	@ 0 "" 2
 2879              		.thumb
 2880              		.syntax unified
 2881              	.LBE606:
 2882              	.LBE605:
 2883              	.LBE607:
 2884              	.LBE608:
 2885              	.LBE609:
 2886              	.LBE611:
 846:lib/chibios/os/hal/src/hal_buffers.c **** }
 2887              		.loc 1 846 1 is_stmt 0 view .LVU835
 2888              		@ sp needed
 2889 0018 10BD     		pop	{r4, pc}
 2890              		.cfi_endproc
 2891              	.LFE207:
 2893              		.text
 2894              	.Letext0:
 2895              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 2896              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 2897              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 2898              		.file 11 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 2899              		.file 12 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 2900              		.file 13 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_std
 2901              		.file 14 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 2902              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2903              		.file 16 "./lib/chibios/os/rt/include/chsystypes.h"
 2904              		.file 17 "./lib/chibios/os/rt/include/chtime.h"
 2905              		.file 18 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 2906              		.file 19 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 2907              		.file 20 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2908              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2909              		.file 22 "./lib/chibios/os/rt/include/chsem.h"
 2910              		.file 23 "./lib/chibios/os/rt/include/chmtx.h"
 2911              		.file 24 "./lib/chibios/os/rt/include/chregistry.h"
 2912              		.file 25 "./lib/chibios/os/oslib/include/chmemcore.h"
 2913              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2914              		.file 27 "./lib/chibios/os/hal/include/hal_buffers.h"
 2915              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 2916              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2917              		.file 30 "./lib/chibios/os/hal/include/hal_i2c.h"
 2918              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2919              		.file 32 "./lib/chibios/os/hal/include/hal_pwm.h"
 2920              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2921              		.file 34 "./lib/chibios/os/hal/include/hal_spi.h"
 2922              		.file 35 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 2923              		.file 36 "./lib/chibios/os/hal/include/hal_usb.h"
 2924              		.file 37 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2925              		.file 38 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_buffers.c
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:16     .text.ibqObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:24     .text.ibqObjectInit:00000000 ibqObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:144    .text.ibqResetI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:151    .text.ibqResetI:00000000 ibqResetI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:209    .text.ibqGetEmptyBufferI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:216    .text.ibqGetEmptyBufferI:00000000 ibqGetEmptyBufferI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:251    .text.ibqPostFullBufferI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:258    .text.ibqPostFullBufferI:00000000 ibqPostFullBufferI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:325    .text.ibqGetFullBufferTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:332    .text.ibqGetFullBufferTimeoutS:00000000 ibqGetFullBufferTimeoutS
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:435    .text.ibqGetFullBufferTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:442    .text.ibqGetFullBufferTimeout:00000000 ibqGetFullBufferTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:569    .text.ibqReleaseEmptyBufferS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:576    .text.ibqReleaseEmptyBufferS:00000000 ibqReleaseEmptyBufferS
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:638    .text.ibqReleaseEmptyBuffer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:645    .text.ibqReleaseEmptyBuffer:00000000 ibqReleaseEmptyBuffer
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:766    .text.ibqGetTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:773    .text.ibqGetTimeout:00000000 ibqGetTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:941    .text.ibqReadTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:948    .text.ibqReadTimeout:00000000 ibqReadTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1308   .text.obqObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1315   .text.obqObjectInit:00000000 obqObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1430   .text.obqResetI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1437   .text.obqResetI:00000000 obqResetI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1502   .text.obqGetFullBufferI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1509   .text.obqGetFullBufferI:00000000 obqGetFullBufferI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1548   .text.obqReleaseEmptyBufferI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1555   .text.obqReleaseEmptyBufferI:00000000 obqReleaseEmptyBufferI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1616   .text.obqGetEmptyBufferTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1623   .text.obqGetEmptyBufferTimeoutS:00000000 obqGetEmptyBufferTimeoutS
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1725   .text.obqGetEmptyBufferTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1732   .text.obqGetEmptyBufferTimeout:00000000 obqGetEmptyBufferTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1856   .text.obqPostFullBufferS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1863   .text.obqPostFullBufferS:00000000 obqPostFullBufferS
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1929   .text.obqPostFullBuffer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:1936   .text.obqPostFullBuffer:00000000 obqPostFullBuffer
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2057   .text.obqPutTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2064   .text.obqPutTimeout:00000000 obqPutTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2283   .text.obqWriteTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2290   .text.obqWriteTimeout:00000000 obqWriteTimeout
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2652   .text.obqTryFlushI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2659   .text.obqTryFlushI:00000000 obqTryFlushI
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2747   .text.obqFlush:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccF2glt0.s:2754   .text.obqFlush:00000000 obqFlush

UNDEFINED SYMBOLS
chThdDequeueAllI
chThdDequeueNextI
chThdEnqueueTimeoutS
memcpy
