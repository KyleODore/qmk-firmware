   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_pwm.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.pwmInit,"ax",%progbits
  16              		.align	1
  17              		.global	pwmInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	pwmInit:
  25              	.LFB186:
  26              		.file 1 "lib/chibios/os/hal/src/hal_pwm.c"
   1:lib/chibios/os/hal/src/hal_pwm.c **** /*
   2:lib/chibios/os/hal/src/hal_pwm.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_pwm.c **** 
   4:lib/chibios/os/hal/src/hal_pwm.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_pwm.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_pwm.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_pwm.c **** 
   8:lib/chibios/os/hal/src/hal_pwm.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_pwm.c **** 
  10:lib/chibios/os/hal/src/hal_pwm.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_pwm.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_pwm.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_pwm.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_pwm.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_pwm.c **** */
  16:lib/chibios/os/hal/src/hal_pwm.c **** 
  17:lib/chibios/os/hal/src/hal_pwm.c **** /**
  18:lib/chibios/os/hal/src/hal_pwm.c ****  * @file    hal_pwm.c
  19:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   PWM Driver code.
  20:lib/chibios/os/hal/src/hal_pwm.c ****  *
  21:lib/chibios/os/hal/src/hal_pwm.c ****  * @addtogroup PWM
  22:lib/chibios/os/hal/src/hal_pwm.c ****  * @{
  23:lib/chibios/os/hal/src/hal_pwm.c ****  */
  24:lib/chibios/os/hal/src/hal_pwm.c **** 
  25:lib/chibios/os/hal/src/hal_pwm.c **** #include "hal.h"
  26:lib/chibios/os/hal/src/hal_pwm.c **** 
  27:lib/chibios/os/hal/src/hal_pwm.c **** #if (HAL_USE_PWM == TRUE) || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/src/hal_pwm.c **** 
  29:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/src/hal_pwm.c **** 
  33:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver exported variables.                                                */
  35:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  36:lib/chibios/os/hal/src/hal_pwm.c **** 
  37:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  38:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local variables and types.                                         */
  39:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/src/hal_pwm.c **** 
  41:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver local functions.                                                   */
  43:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  44:lib/chibios/os/hal/src/hal_pwm.c **** 
  45:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  46:lib/chibios/os/hal/src/hal_pwm.c **** /* Driver exported functions.                                                */
  47:lib/chibios/os/hal/src/hal_pwm.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_pwm.c **** 
  49:lib/chibios/os/hal/src/hal_pwm.c **** /**
  50:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   PWM Driver initialization.
  51:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
  52:lib/chibios/os/hal/src/hal_pwm.c ****  *          no need to explicitly initialize the driver.
  53:lib/chibios/os/hal/src/hal_pwm.c ****  *
  54:lib/chibios/os/hal/src/hal_pwm.c ****  * @init
  55:lib/chibios/os/hal/src/hal_pwm.c ****  */
  56:lib/chibios/os/hal/src/hal_pwm.c **** void pwmInit(void) {
  27              		.loc 1 56 20 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  57:lib/chibios/os/hal/src/hal_pwm.c **** 
  58:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_init();
  31              		.loc 1 58 3 view .LVU1
  56:lib/chibios/os/hal/src/hal_pwm.c **** 
  32              		.loc 1 56 20 is_stmt 0 view .LVU2
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 58 3 view .LVU3
  38 0002 FFF7FEFF 		bl	pwm_lld_init
  39              	.LVL0:
  59:lib/chibios/os/hal/src/hal_pwm.c **** }
  40              		.loc 1 59 1 view .LVU4
  41              		@ sp needed
  42 0006 10BD     		pop	{r4, pc}
  43              		.cfi_endproc
  44              	.LFE186:
  46              		.section	.text.pwmObjectInit,"ax",%progbits
  47              		.align	1
  48              		.global	pwmObjectInit
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	pwmObjectInit:
  55              	.LVL1:
  56              	.LFB187:
  60:lib/chibios/os/hal/src/hal_pwm.c **** 
  61:lib/chibios/os/hal/src/hal_pwm.c **** /**
  62:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Initializes the standard part of a @p PWMDriver structure.
  63:lib/chibios/os/hal/src/hal_pwm.c ****  *
  64:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[out] pwmp     pointer to a @p PWMDriver object
  65:lib/chibios/os/hal/src/hal_pwm.c ****  *
  66:lib/chibios/os/hal/src/hal_pwm.c ****  * @init
  67:lib/chibios/os/hal/src/hal_pwm.c ****  */
  68:lib/chibios/os/hal/src/hal_pwm.c **** void pwmObjectInit(PWMDriver *pwmp) {
  57              		.loc 1 68 37 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  69:lib/chibios/os/hal/src/hal_pwm.c **** 
  70:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state    = PWM_STOP;
  62              		.loc 1 70 3 view .LVU6
  63              		.loc 1 70 18 is_stmt 0 view .LVU7
  64 0000 0123     		movs	r3, #1
  65 0002 0370     		strb	r3, [r0]
  71:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config   = NULL;
  66              		.loc 1 71 3 is_stmt 1 view .LVU8
  67              		.loc 1 71 18 is_stmt 0 view .LVU9
  68 0004 0023     		movs	r3, #0
  72:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled  = 0;
  73:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->channels = 0;
  74:lib/chibios/os/hal/src/hal_pwm.c **** #if defined(PWM_DRIVER_EXT_INIT_HOOK)
  75:lib/chibios/os/hal/src/hal_pwm.c ****   PWM_DRIVER_EXT_INIT_HOOK(pwmp);
  76:lib/chibios/os/hal/src/hal_pwm.c **** #endif
  77:lib/chibios/os/hal/src/hal_pwm.c **** }
  69              		.loc 1 77 1 view .LVU10
  70              		@ sp needed
  71:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config   = NULL;
  71              		.loc 1 71 18 view .LVU11
  72 0006 4360     		str	r3, [r0, #4]
  72:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled  = 0;
  73              		.loc 1 72 3 is_stmt 1 view .LVU12
  72:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled  = 0;
  74              		.loc 1 72 18 is_stmt 0 view .LVU13
  75 0008 C360     		str	r3, [r0, #12]
  73:lib/chibios/os/hal/src/hal_pwm.c **** #if defined(PWM_DRIVER_EXT_INIT_HOOK)
  76              		.loc 1 73 3 is_stmt 1 view .LVU14
  73:lib/chibios/os/hal/src/hal_pwm.c **** #if defined(PWM_DRIVER_EXT_INIT_HOOK)
  77              		.loc 1 73 18 is_stmt 0 view .LVU15
  78 000a 0374     		strb	r3, [r0, #16]
  79              		.loc 1 77 1 view .LVU16
  80 000c 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE187:
  84              		.section	.text.pwmStart,"ax",%progbits
  85              		.align	1
  86              		.global	pwmStart
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	pwmStart:
  93              	.LVL2:
  94              	.LFB188:
  78:lib/chibios/os/hal/src/hal_pwm.c **** 
  79:lib/chibios/os/hal/src/hal_pwm.c **** /**
  80:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Configures and activates the PWM peripheral.
  81:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Starting a driver that is already in the @p PWM_READY state
  82:lib/chibios/os/hal/src/hal_pwm.c ****  *          disables all the active channels.
  83:lib/chibios/os/hal/src/hal_pwm.c ****  *
  84:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
  85:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] config    pointer to a @p PWMConfig object
  86:lib/chibios/os/hal/src/hal_pwm.c ****  *
  87:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
  88:lib/chibios/os/hal/src/hal_pwm.c ****  */
  89:lib/chibios/os/hal/src/hal_pwm.c **** void pwmStart(PWMDriver *pwmp, const PWMConfig *config) {
  95              		.loc 1 89 57 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  90:lib/chibios/os/hal/src/hal_pwm.c **** 
  91:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (config != NULL));
  99              		.loc 1 91 3 view .LVU18
 100              		.loc 1 91 3 view .LVU19
  92:lib/chibios/os/hal/src/hal_pwm.c **** 
  93:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 101              		.loc 1 93 3 view .LVU20
 102              	.LBB141:
 103              	.LBI141:
 104              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 105              		.loc 2 509 20 view .LVU21
 106              	.LBE141:
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 107              		.loc 2 511 3 view .LVU22
 108              	.LBB153:
 109              	.LBB142:
 110              	.LBI142:
 111              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 112              		.loc 3 353 20 view .LVU23
 113              	.LBE142:
 114              	.LBE153:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 115              		.loc 3 355 3 view .LVU24
 116              	.LBB154:
 117              	.LBB150:
 118              	.LBB143:
 119              	.LBI143:
 120              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 121              		.loc 4 387 20 view .LVU25
 122              	.LBE143:
 123              	.LBE150:
 124              	.LBE154:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 125              		.loc 4 389 3 view .LVU26
 126              	.LBB155:
 127              	.LBB151:
 128              	.LBB148:
 129              	.LBB144:
 130              	.LBI144:
 131              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 132              		.loc 5 140 27 view .LVU27
 133              	.LBB145:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 134              		.loc 5 142 3 view .LVU28
 135              	.LBE145:
 136              	.LBE144:
 137              	.LBE148:
 138              	.LBE151:
 139              	.LBE155:
  89:lib/chibios/os/hal/src/hal_pwm.c **** 
 140              		.loc 1 89 57 is_stmt 0 view .LVU29
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
  89:lib/chibios/os/hal/src/hal_pwm.c **** 
 145              		.loc 1 89 57 view .LVU30
 146 0002 0400     		movs	r4, r0
 147              	.LBB156:
 148              	.LBB152:
 149              	.LBB149:
 150              	.LBB147:
 151              	.LBB146:
 152              		.loc 5 142 3 view .LVU31
 153              		.syntax divided
 154              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 155 0004 72B6     		cpsid i
 156              	@ 0 "" 2
 157              		.thumb
 158              		.syntax unified
 159              	.LBE146:
 160              	.LBE147:
 161              	.LBE149:
 162              	.LBE152:
 163              	.LBE156:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 164              		.loc 3 356 34 is_stmt 1 view .LVU32
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 165              		.loc 3 357 20 view .LVU33
  94:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 166              		.loc 1 94 3 view .LVU34
 167              		.loc 1 94 3 view .LVU35
  95:lib/chibios/os/hal/src/hal_pwm.c ****                 "invalid state");
  96:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config = config;
 168              		.loc 1 96 3 view .LVU36
  97:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 169              		.loc 1 97 16 is_stmt 0 view .LVU37
 170 0006 4B68     		ldr	r3, [r1, #4]
  96:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 171              		.loc 1 96 16 view .LVU38
 172 0008 4160     		str	r1, [r0, #4]
 173              		.loc 1 97 3 is_stmt 1 view .LVU39
  98:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_start(pwmp);
 174              		.loc 1 98 3 view .LVU40
  97:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 175              		.loc 1 97 16 is_stmt 0 view .LVU41
 176 000a 8360     		str	r3, [r0, #8]
 177              		.loc 1 98 3 view .LVU42
 178 000c FFF7FEFF 		bl	pwm_lld_start
 179              	.LVL3:
  99:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 180              		.loc 1 99 3 is_stmt 1 view .LVU43
 181              		.loc 1 99 17 is_stmt 0 view .LVU44
 182 0010 0023     		movs	r3, #0
 183 0012 E360     		str	r3, [r4, #12]
 100:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state = PWM_READY;
 184              		.loc 1 100 3 is_stmt 1 view .LVU45
 185              		.loc 1 100 15 is_stmt 0 view .LVU46
 186 0014 0233     		adds	r3, r3, #2
 187 0016 2370     		strb	r3, [r4]
 101:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 188              		.loc 1 101 3 is_stmt 1 view .LVU47
 189              	.LBB157:
 190              	.LBI157:
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 191              		.loc 2 520 20 view .LVU48
 192              	.LBE157:
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 193              		.loc 2 522 3 view .LVU49
 194              	.LBB166:
 195              	.LBB158:
 196              	.LBI158:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 197              		.loc 3 365 20 view .LVU50
 198              	.LBB159:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 199              		.loc 3 367 22 view .LVU51
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 200              		.loc 3 368 33 view .LVU52
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 201              		.loc 3 374 3 view .LVU53
 202              		.loc 3 374 3 view .LVU54
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 203              		.loc 3 378 3 view .LVU55
 204              	.LBB160:
 205              	.LBI160:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 206              		.loc 4 396 20 view .LVU56
 207              	.LBE160:
 208              	.LBE159:
 209              	.LBE158:
 210              	.LBE166:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 211              		.loc 4 398 3 view .LVU57
 212              	.LBB167:
 213              	.LBB165:
 214              	.LBB164:
 215              	.LBB163:
 216              	.LBB161:
 217              	.LBI161:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 218              		.loc 5 129 27 view .LVU58
 219              	.LBB162:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 220              		.loc 5 131 3 view .LVU59
 221              		.syntax divided
 222              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 223 0018 62B6     		cpsie i
 224              	@ 0 "" 2
 225              		.thumb
 226              		.syntax unified
 227              	.LBE162:
 228              	.LBE161:
 229              	.LBE163:
 230              	.LBE164:
 231              	.LBE165:
 232              	.LBE167:
 102:lib/chibios/os/hal/src/hal_pwm.c **** }
 233              		.loc 1 102 1 is_stmt 0 view .LVU60
 234              		@ sp needed
 235              	.LVL4:
 236              		.loc 1 102 1 view .LVU61
 237 001a 10BD     		pop	{r4, pc}
 238              		.cfi_endproc
 239              	.LFE188:
 241              		.section	.text.pwmStop,"ax",%progbits
 242              		.align	1
 243              		.global	pwmStop
 244              		.syntax unified
 245              		.code	16
 246              		.thumb_func
 247              		.fpu softvfp
 249              	pwmStop:
 250              	.LVL5:
 251              	.LFB189:
 103:lib/chibios/os/hal/src/hal_pwm.c **** 
 104:lib/chibios/os/hal/src/hal_pwm.c **** /**
 105:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Deactivates the PWM peripheral.
 106:lib/chibios/os/hal/src/hal_pwm.c ****  *
 107:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 108:lib/chibios/os/hal/src/hal_pwm.c ****  *
 109:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 110:lib/chibios/os/hal/src/hal_pwm.c ****  */
 111:lib/chibios/os/hal/src/hal_pwm.c **** void pwmStop(PWMDriver *pwmp) {
 252              		.loc 1 111 31 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 112:lib/chibios/os/hal/src/hal_pwm.c **** 
 113:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 256              		.loc 1 113 3 view .LVU63
 257              		.loc 1 113 3 view .LVU64
 114:lib/chibios/os/hal/src/hal_pwm.c **** 
 115:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 258              		.loc 1 115 3 view .LVU65
 259              	.LBB168:
 260              	.LBI168:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261              		.loc 2 509 20 view .LVU66
 262              	.LBE168:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 263              		.loc 2 511 3 view .LVU67
 264              	.LBB180:
 265              	.LBB169:
 266              	.LBI169:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 267              		.loc 3 353 20 view .LVU68
 268              	.LBE169:
 269              	.LBE180:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 270              		.loc 3 355 3 view .LVU69
 271              	.LBB181:
 272              	.LBB177:
 273              	.LBB170:
 274              	.LBI170:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275              		.loc 4 387 20 view .LVU70
 276              	.LBE170:
 277              	.LBE177:
 278              	.LBE181:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 279              		.loc 4 389 3 view .LVU71
 280              	.LBB182:
 281              	.LBB178:
 282              	.LBB175:
 283              	.LBB171:
 284              	.LBI171:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 285              		.loc 5 140 27 view .LVU72
 286              	.LBB172:
 287              		.loc 5 142 3 view .LVU73
 288              	.LBE172:
 289              	.LBE171:
 290              	.LBE175:
 291              	.LBE178:
 292              	.LBE182:
 111:lib/chibios/os/hal/src/hal_pwm.c **** 
 293              		.loc 1 111 31 is_stmt 0 view .LVU74
 294 0000 10B5     		push	{r4, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
 111:lib/chibios/os/hal/src/hal_pwm.c **** 
 298              		.loc 1 111 31 view .LVU75
 299 0002 0400     		movs	r4, r0
 300              	.LBB183:
 301              	.LBB179:
 302              	.LBB176:
 303              	.LBB174:
 304              	.LBB173:
 305              		.loc 5 142 3 view .LVU76
 306              		.syntax divided
 307              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 308 0004 72B6     		cpsid i
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312              	.LBE173:
 313              	.LBE174:
 314              	.LBE176:
 315              	.LBE179:
 316              	.LBE183:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 317              		.loc 3 356 34 is_stmt 1 view .LVU77
 357:./lib/chibios/os/rt/include/chsys.h **** }
 318              		.loc 3 357 20 view .LVU78
 116:lib/chibios/os/hal/src/hal_pwm.c **** 
 117:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 319              		.loc 1 117 3 view .LVU79
 320              		.loc 1 117 3 view .LVU80
 118:lib/chibios/os/hal/src/hal_pwm.c ****                 "invalid state");
 119:lib/chibios/os/hal/src/hal_pwm.c **** 
 120:lib/chibios/os/hal/src/hal_pwm.c ****   pwm_lld_stop(pwmp);
 321              		.loc 1 120 3 view .LVU81
 322 0006 FFF7FEFF 		bl	pwm_lld_stop
 323              	.LVL6:
 121:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 324              		.loc 1 121 3 view .LVU82
 325              		.loc 1 121 17 is_stmt 0 view .LVU83
 326 000a 0023     		movs	r3, #0
 327 000c E360     		str	r3, [r4, #12]
 122:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->config  = NULL;
 328              		.loc 1 122 3 is_stmt 1 view .LVU84
 329              		.loc 1 122 17 is_stmt 0 view .LVU85
 330 000e 6360     		str	r3, [r4, #4]
 123:lib/chibios/os/hal/src/hal_pwm.c ****   pwmp->state   = PWM_STOP;
 331              		.loc 1 123 3 is_stmt 1 view .LVU86
 332              		.loc 1 123 17 is_stmt 0 view .LVU87
 333 0010 0133     		adds	r3, r3, #1
 334 0012 2370     		strb	r3, [r4]
 124:lib/chibios/os/hal/src/hal_pwm.c **** 
 125:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 335              		.loc 1 125 3 is_stmt 1 view .LVU88
 336              	.LBB184:
 337              	.LBI184:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 338              		.loc 2 520 20 view .LVU89
 339              	.LBE184:
 340              		.loc 2 522 3 view .LVU90
 341              	.LBB193:
 342              	.LBB185:
 343              	.LBI185:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 344              		.loc 3 365 20 view .LVU91
 345              	.LBB186:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 346              		.loc 3 367 22 view .LVU92
 368:./lib/chibios/os/rt/include/chsys.h **** 
 347              		.loc 3 368 33 view .LVU93
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 348              		.loc 3 374 3 view .LVU94
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 349              		.loc 3 374 3 view .LVU95
 350              		.loc 3 378 3 view .LVU96
 351              	.LBB187:
 352              	.LBI187:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 353              		.loc 4 396 20 view .LVU97
 354              	.LBE187:
 355              	.LBE186:
 356              	.LBE185:
 357              	.LBE193:
 358              		.loc 4 398 3 view .LVU98
 359              	.LBB194:
 360              	.LBB192:
 361              	.LBB191:
 362              	.LBB190:
 363              	.LBB188:
 364              	.LBI188:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 365              		.loc 5 129 27 view .LVU99
 366              	.LBB189:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 367              		.loc 5 131 3 view .LVU100
 368              		.syntax divided
 369              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 370 0014 62B6     		cpsie i
 371              	@ 0 "" 2
 372              		.thumb
 373              		.syntax unified
 374              	.LBE189:
 375              	.LBE188:
 376              	.LBE190:
 377              	.LBE191:
 378              	.LBE192:
 379              	.LBE194:
 126:lib/chibios/os/hal/src/hal_pwm.c **** }
 380              		.loc 1 126 1 is_stmt 0 view .LVU101
 381              		@ sp needed
 382              	.LVL7:
 383              		.loc 1 126 1 view .LVU102
 384 0016 10BD     		pop	{r4, pc}
 385              		.cfi_endproc
 386              	.LFE189:
 388              		.section	.text.pwmChangePeriod,"ax",%progbits
 389              		.align	1
 390              		.global	pwmChangePeriod
 391              		.syntax unified
 392              		.code	16
 393              		.thumb_func
 394              		.fpu softvfp
 396              	pwmChangePeriod:
 397              	.LVL8:
 398              	.LFB190:
 127:lib/chibios/os/hal/src/hal_pwm.c **** 
 128:lib/chibios/os/hal/src/hal_pwm.c **** /**
 129:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Changes the period the PWM peripheral.
 130:lib/chibios/os/hal/src/hal_pwm.c ****  * @details This function changes the period of a PWM unit that has already
 131:lib/chibios/os/hal/src/hal_pwm.c ****  *          been activated using @p pwmStart().
 132:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 133:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The PWM unit period is changed to the new value.
 134:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If a period is specified that is shorter than the pulse width
 135:lib/chibios/os/hal/src/hal_pwm.c ****  *          programmed in one of the channels then the behavior is not
 136:lib/chibios/os/hal/src/hal_pwm.c ****  *          guaranteed.
 137:lib/chibios/os/hal/src/hal_pwm.c ****  *
 138:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 139:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] period    new cycle time in ticks
 140:lib/chibios/os/hal/src/hal_pwm.c ****  *
 141:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 142:lib/chibios/os/hal/src/hal_pwm.c ****  */
 143:lib/chibios/os/hal/src/hal_pwm.c **** void pwmChangePeriod(PWMDriver *pwmp, pwmcnt_t period) {
 399              		.loc 1 143 56 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 144:lib/chibios/os/hal/src/hal_pwm.c **** 
 145:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 404              		.loc 1 145 3 view .LVU104
 405              		.loc 1 145 3 view .LVU105
 146:lib/chibios/os/hal/src/hal_pwm.c **** 
 147:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 406              		.loc 1 147 3 view .LVU106
 407              	.LBB195:
 408              	.LBI195:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 409              		.loc 2 509 20 view .LVU107
 410              	.LBE195:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 411              		.loc 2 511 3 view .LVU108
 412              	.LBB203:
 413              	.LBB196:
 414              	.LBI196:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 415              		.loc 3 353 20 view .LVU109
 416              	.LBE196:
 417              	.LBE203:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 418              		.loc 3 355 3 view .LVU110
 419              	.LBB204:
 420              	.LBB201:
 421              	.LBB197:
 422              	.LBI197:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 423              		.loc 4 387 20 view .LVU111
 424              	.LBE197:
 425              	.LBE201:
 426              	.LBE204:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 427              		.loc 4 389 3 view .LVU112
 428              	.LBB205:
 429              	.LBB202:
 430              	.LBB200:
 431              	.LBB198:
 432              	.LBI198:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 433              		.loc 5 140 27 view .LVU113
 434              	.LBB199:
 435              		.loc 5 142 3 view .LVU114
 436              		.syntax divided
 437              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 438 0000 72B6     		cpsid i
 439              	@ 0 "" 2
 440              		.thumb
 441              		.syntax unified
 442              	.LBE199:
 443              	.LBE198:
 444              	.LBE200:
 445              	.LBE202:
 446              	.LBE205:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 447              		.loc 3 356 34 view .LVU115
 357:./lib/chibios/os/rt/include/chsys.h **** }
 448              		.loc 3 357 20 view .LVU116
 148:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "invalid state");
 449              		.loc 1 148 3 view .LVU117
 450              		.loc 1 148 3 view .LVU118
 149:lib/chibios/os/hal/src/hal_pwm.c ****   pwmChangePeriodI(pwmp, period);
 451              		.loc 1 149 3 view .LVU119
 452 0002 8369     		ldr	r3, [r0, #24]
 453 0004 8160     		str	r1, [r0, #8]
 454              		.loc 1 149 3 view .LVU120
 455 0006 0139     		subs	r1, r1, #1
 456              	.LVL9:
 457              		.loc 1 149 3 is_stmt 0 view .LVU121
 458 0008 D962     		str	r1, [r3, #44]
 459              		.loc 1 149 33 is_stmt 1 view .LVU122
 150:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 460              		.loc 1 150 3 view .LVU123
 461              	.LBB206:
 462              	.LBI206:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 463              		.loc 2 520 20 view .LVU124
 464              	.LBE206:
 465              		.loc 2 522 3 view .LVU125
 466              	.LBB215:
 467              	.LBB207:
 468              	.LBI207:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 469              		.loc 3 365 20 view .LVU126
 470              	.LBB208:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 471              		.loc 3 367 22 view .LVU127
 368:./lib/chibios/os/rt/include/chsys.h **** 
 472              		.loc 3 368 33 view .LVU128
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 473              		.loc 3 374 3 view .LVU129
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 474              		.loc 3 374 3 view .LVU130
 475              		.loc 3 378 3 view .LVU131
 476              	.LBB209:
 477              	.LBI209:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 478              		.loc 4 396 20 view .LVU132
 479              	.LBE209:
 480              	.LBE208:
 481              	.LBE207:
 482              	.LBE215:
 483              		.loc 4 398 3 view .LVU133
 484              	.LBB216:
 485              	.LBB214:
 486              	.LBB213:
 487              	.LBB212:
 488              	.LBB210:
 489              	.LBI210:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 490              		.loc 5 129 27 view .LVU134
 491              	.LBB211:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 492              		.loc 5 131 3 view .LVU135
 493              		.syntax divided
 494              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 495 000a 62B6     		cpsie i
 496              	@ 0 "" 2
 497              		.thumb
 498              		.syntax unified
 499              	.LBE211:
 500              	.LBE210:
 501              	.LBE212:
 502              	.LBE213:
 503              	.LBE214:
 504              	.LBE216:
 151:lib/chibios/os/hal/src/hal_pwm.c **** }
 505              		.loc 1 151 1 is_stmt 0 view .LVU136
 506              		@ sp needed
 507 000c 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE190:
 511              		.section	.text.pwmEnableChannel,"ax",%progbits
 512              		.align	1
 513              		.global	pwmEnableChannel
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
 517              		.fpu softvfp
 519              	pwmEnableChannel:
 520              	.LVL10:
 521              	.LFB191:
 152:lib/chibios/os/hal/src/hal_pwm.c **** 
 153:lib/chibios/os/hal/src/hal_pwm.c **** /**
 154:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables a PWM channel.
 155:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 156:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The channel is active using the specified configuration.
 157:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 158:lib/chibios/os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 159:lib/chibios/os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 160:lib/chibios/os/hal/src/hal_pwm.c ****  *
 161:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 162:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 163:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] width     PWM pulse width as clock pulses number
 164:lib/chibios/os/hal/src/hal_pwm.c ****  *
 165:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 166:lib/chibios/os/hal/src/hal_pwm.c ****  */
 167:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnableChannel(PWMDriver *pwmp,
 168:lib/chibios/os/hal/src/hal_pwm.c ****                       pwmchannel_t channel,
 169:lib/chibios/os/hal/src/hal_pwm.c ****                       pwmcnt_t width) {
 522              		.loc 1 169 39 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 170:lib/chibios/os/hal/src/hal_pwm.c **** 
 171:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 526              		.loc 1 171 3 view .LVU138
 527              		.loc 1 171 3 view .LVU139
 172:lib/chibios/os/hal/src/hal_pwm.c **** 
 173:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 528              		.loc 1 173 3 view .LVU140
 529              	.LBB217:
 530              	.LBI217:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 531              		.loc 2 509 20 view .LVU141
 532              	.LBE217:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 533              		.loc 2 511 3 view .LVU142
 534              	.LBB229:
 535              	.LBB218:
 536              	.LBI218:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 537              		.loc 3 353 20 view .LVU143
 538              	.LBE218:
 539              	.LBE229:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 540              		.loc 3 355 3 view .LVU144
 541              	.LBB230:
 542              	.LBB226:
 543              	.LBB219:
 544              	.LBI219:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 545              		.loc 4 387 20 view .LVU145
 546              	.LBE219:
 547              	.LBE226:
 548              	.LBE230:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 549              		.loc 4 389 3 view .LVU146
 550              	.LBB231:
 551              	.LBB227:
 552              	.LBB224:
 553              	.LBB220:
 554              	.LBI220:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 555              		.loc 5 140 27 view .LVU147
 556              	.LBB221:
 557              		.loc 5 142 3 view .LVU148
 558              	.LBE221:
 559              	.LBE220:
 560              	.LBE224:
 561              	.LBE227:
 562              	.LBE231:
 169:lib/chibios/os/hal/src/hal_pwm.c **** 
 563              		.loc 1 169 39 is_stmt 0 view .LVU149
 564 0000 10B5     		push	{r4, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
 568              	.LBB232:
 569              	.LBB228:
 570              	.LBB225:
 571              	.LBB223:
 572              	.LBB222:
 573              		.loc 5 142 3 view .LVU150
 574              		.syntax divided
 575              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 576 0002 72B6     		cpsid i
 577              	@ 0 "" 2
 578              		.thumb
 579              		.syntax unified
 580              	.LBE222:
 581              	.LBE223:
 582              	.LBE225:
 583              	.LBE228:
 584              	.LBE232:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 585              		.loc 3 356 34 is_stmt 1 view .LVU151
 357:./lib/chibios/os/rt/include/chsys.h **** }
 586              		.loc 3 357 20 view .LVU152
 174:lib/chibios/os/hal/src/hal_pwm.c **** 
 175:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 587              		.loc 1 175 3 view .LVU153
 588              		.loc 1 175 3 view .LVU154
 176:lib/chibios/os/hal/src/hal_pwm.c **** 
 177:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnableChannelI(pwmp, channel, width);
 589              		.loc 1 177 3 view .LVU155
 590              		.loc 1 177 3 view .LVU156
 591 0004 0123     		movs	r3, #1
 592 0006 8B40     		lsls	r3, r3, r1
 593 0008 C468     		ldr	r4, [r0, #12]
 594 000a 2343     		orrs	r3, r4
 595 000c C360     		str	r3, [r0, #12]
 596              		.loc 1 177 3 view .LVU157
 597 000e FFF7FEFF 		bl	pwm_lld_enable_channel
 598              	.LVL11:
 178:lib/chibios/os/hal/src/hal_pwm.c **** 
 179:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 599              		.loc 1 179 3 view .LVU158
 600              	.LBB233:
 601              	.LBI233:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 602              		.loc 2 520 20 view .LVU159
 603              	.LBE233:
 604              		.loc 2 522 3 view .LVU160
 605              	.LBB242:
 606              	.LBB234:
 607              	.LBI234:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 608              		.loc 3 365 20 view .LVU161
 609              	.LBB235:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 610              		.loc 3 367 22 view .LVU162
 368:./lib/chibios/os/rt/include/chsys.h **** 
 611              		.loc 3 368 33 view .LVU163
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 612              		.loc 3 374 3 view .LVU164
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 613              		.loc 3 374 3 view .LVU165
 614              		.loc 3 378 3 view .LVU166
 615              	.LBB236:
 616              	.LBI236:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 617              		.loc 4 396 20 view .LVU167
 618              	.LBE236:
 619              	.LBE235:
 620              	.LBE234:
 621              	.LBE242:
 622              		.loc 4 398 3 view .LVU168
 623              	.LBB243:
 624              	.LBB241:
 625              	.LBB240:
 626              	.LBB239:
 627              	.LBB237:
 628              	.LBI237:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 629              		.loc 5 129 27 view .LVU169
 630              	.LBB238:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 631              		.loc 5 131 3 view .LVU170
 632              		.syntax divided
 633              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 634 0012 62B6     		cpsie i
 635              	@ 0 "" 2
 636              		.thumb
 637              		.syntax unified
 638              	.LBE238:
 639              	.LBE237:
 640              	.LBE239:
 641              	.LBE240:
 642              	.LBE241:
 643              	.LBE243:
 180:lib/chibios/os/hal/src/hal_pwm.c **** }
 644              		.loc 1 180 1 is_stmt 0 view .LVU171
 645              		@ sp needed
 646 0014 10BD     		pop	{r4, pc}
 647              		.cfi_endproc
 648              	.LFE191:
 650              		.section	.text.pwmDisableChannel,"ax",%progbits
 651              		.align	1
 652              		.global	pwmDisableChannel
 653              		.syntax unified
 654              		.code	16
 655              		.thumb_func
 656              		.fpu softvfp
 658              	pwmDisableChannel:
 659              	.LVL12:
 660              	.LFB192:
 181:lib/chibios/os/hal/src/hal_pwm.c **** 
 182:lib/chibios/os/hal/src/hal_pwm.c **** /**
 183:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables a PWM channel and its notification.
 184:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 185:lib/chibios/os/hal/src/hal_pwm.c ****  * @post    The channel is disabled and its output line returned to the
 186:lib/chibios/os/hal/src/hal_pwm.c ****  *          idle state.
 187:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 188:lib/chibios/os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 189:lib/chibios/os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 190:lib/chibios/os/hal/src/hal_pwm.c ****  *
 191:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 192:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 193:lib/chibios/os/hal/src/hal_pwm.c ****  *
 194:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 195:lib/chibios/os/hal/src/hal_pwm.c ****  */
 196:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisableChannel(PWMDriver *pwmp, pwmchannel_t channel) {
 661              		.loc 1 196 63 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 197:lib/chibios/os/hal/src/hal_pwm.c **** 
 198:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 665              		.loc 1 198 3 view .LVU173
 666              		.loc 1 198 3 view .LVU174
 199:lib/chibios/os/hal/src/hal_pwm.c **** 
 200:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 667              		.loc 1 200 3 view .LVU175
 668              	.LBB244:
 669              	.LBI244:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 670              		.loc 2 509 20 view .LVU176
 671              	.LBE244:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 672              		.loc 2 511 3 view .LVU177
 673              	.LBB256:
 674              	.LBB245:
 675              	.LBI245:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 676              		.loc 3 353 20 view .LVU178
 677              	.LBE245:
 678              	.LBE256:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 679              		.loc 3 355 3 view .LVU179
 680              	.LBB257:
 681              	.LBB253:
 682              	.LBB246:
 683              	.LBI246:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 684              		.loc 4 387 20 view .LVU180
 685              	.LBE246:
 686              	.LBE253:
 687              	.LBE257:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 688              		.loc 4 389 3 view .LVU181
 689              	.LBB258:
 690              	.LBB254:
 691              	.LBB251:
 692              	.LBB247:
 693              	.LBI247:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 694              		.loc 5 140 27 view .LVU182
 695              	.LBB248:
 696              		.loc 5 142 3 view .LVU183
 697              	.LBE248:
 698              	.LBE247:
 699              	.LBE251:
 700              	.LBE254:
 701              	.LBE258:
 196:lib/chibios/os/hal/src/hal_pwm.c **** 
 702              		.loc 1 196 63 is_stmt 0 view .LVU184
 703 0000 10B5     		push	{r4, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 4, -8
 706              		.cfi_offset 14, -4
 707              	.LBB259:
 708              	.LBB255:
 709              	.LBB252:
 710              	.LBB250:
 711              	.LBB249:
 712              		.loc 5 142 3 view .LVU185
 713              		.syntax divided
 714              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 715 0002 72B6     		cpsid i
 716              	@ 0 "" 2
 717              		.thumb
 718              		.syntax unified
 719              	.LBE249:
 720              	.LBE250:
 721              	.LBE252:
 722              	.LBE255:
 723              	.LBE259:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 724              		.loc 3 356 34 is_stmt 1 view .LVU186
 357:./lib/chibios/os/rt/include/chsys.h **** }
 725              		.loc 3 357 20 view .LVU187
 201:lib/chibios/os/hal/src/hal_pwm.c **** 
 202:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 726              		.loc 1 202 3 view .LVU188
 727              		.loc 1 202 3 view .LVU189
 203:lib/chibios/os/hal/src/hal_pwm.c **** 
 204:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisableChannelI(pwmp, channel);
 728              		.loc 1 204 3 view .LVU190
 729              		.loc 1 204 3 view .LVU191
 730 0004 0123     		movs	r3, #1
 731 0006 8B40     		lsls	r3, r3, r1
 732 0008 C268     		ldr	r2, [r0, #12]
 733 000a 9A43     		bics	r2, r3
 734 000c C260     		str	r2, [r0, #12]
 735              		.loc 1 204 3 view .LVU192
 736 000e FFF7FEFF 		bl	pwm_lld_disable_channel
 737              	.LVL13:
 205:lib/chibios/os/hal/src/hal_pwm.c **** 
 206:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 738              		.loc 1 206 3 view .LVU193
 739              	.LBB260:
 740              	.LBI260:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 741              		.loc 2 520 20 view .LVU194
 742              	.LBE260:
 743              		.loc 2 522 3 view .LVU195
 744              	.LBB269:
 745              	.LBB261:
 746              	.LBI261:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 747              		.loc 3 365 20 view .LVU196
 748              	.LBB262:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 749              		.loc 3 367 22 view .LVU197
 368:./lib/chibios/os/rt/include/chsys.h **** 
 750              		.loc 3 368 33 view .LVU198
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 751              		.loc 3 374 3 view .LVU199
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 752              		.loc 3 374 3 view .LVU200
 753              		.loc 3 378 3 view .LVU201
 754              	.LBB263:
 755              	.LBI263:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 756              		.loc 4 396 20 view .LVU202
 757              	.LBE263:
 758              	.LBE262:
 759              	.LBE261:
 760              	.LBE269:
 761              		.loc 4 398 3 view .LVU203
 762              	.LBB270:
 763              	.LBB268:
 764              	.LBB267:
 765              	.LBB266:
 766              	.LBB264:
 767              	.LBI264:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 768              		.loc 5 129 27 view .LVU204
 769              	.LBB265:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 770              		.loc 5 131 3 view .LVU205
 771              		.syntax divided
 772              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 773 0012 62B6     		cpsie i
 774              	@ 0 "" 2
 775              		.thumb
 776              		.syntax unified
 777              	.LBE265:
 778              	.LBE264:
 779              	.LBE266:
 780              	.LBE267:
 781              	.LBE268:
 782              	.LBE270:
 207:lib/chibios/os/hal/src/hal_pwm.c **** }
 783              		.loc 1 207 1 is_stmt 0 view .LVU206
 784              		@ sp needed
 785 0014 10BD     		pop	{r4, pc}
 786              		.cfi_endproc
 787              	.LFE192:
 789              		.section	.text.pwmEnablePeriodicNotification,"ax",%progbits
 790              		.align	1
 791              		.global	pwmEnablePeriodicNotification
 792              		.syntax unified
 793              		.code	16
 794              		.thumb_func
 795              		.fpu softvfp
 797              	pwmEnablePeriodicNotification:
 798              	.LVL14:
 799              	.LFB193:
 208:lib/chibios/os/hal/src/hal_pwm.c **** 
 209:lib/chibios/os/hal/src/hal_pwm.c **** /**
 210:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables the periodic activation edge notification.
 211:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 212:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 213:lib/chibios/os/hal/src/hal_pwm.c ****  *
 214:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 215:lib/chibios/os/hal/src/hal_pwm.c ****  *
 216:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 217:lib/chibios/os/hal/src/hal_pwm.c ****  */
 218:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnablePeriodicNotification(PWMDriver *pwmp) {
 800              		.loc 1 218 53 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 219:lib/chibios/os/hal/src/hal_pwm.c **** 
 220:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 804              		.loc 1 220 3 view .LVU208
 805              		.loc 1 220 3 view .LVU209
 221:lib/chibios/os/hal/src/hal_pwm.c **** 
 222:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 806              		.loc 1 222 3 view .LVU210
 807              	.LBB271:
 808              	.LBI271:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 809              		.loc 2 509 20 view .LVU211
 810              	.LBE271:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 811              		.loc 2 511 3 view .LVU212
 812              	.LBB283:
 813              	.LBB272:
 814              	.LBI272:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 815              		.loc 3 353 20 view .LVU213
 816              	.LBE272:
 817              	.LBE283:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 818              		.loc 3 355 3 view .LVU214
 819              	.LBB284:
 820              	.LBB280:
 821              	.LBB273:
 822              	.LBI273:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 823              		.loc 4 387 20 view .LVU215
 824              	.LBE273:
 825              	.LBE280:
 826              	.LBE284:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 827              		.loc 4 389 3 view .LVU216
 828              	.LBB285:
 829              	.LBB281:
 830              	.LBB278:
 831              	.LBB274:
 832              	.LBI274:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 833              		.loc 5 140 27 view .LVU217
 834              	.LBB275:
 835              		.loc 5 142 3 view .LVU218
 836              	.LBE275:
 837              	.LBE274:
 838              	.LBE278:
 839              	.LBE281:
 840              	.LBE285:
 218:lib/chibios/os/hal/src/hal_pwm.c **** 
 841              		.loc 1 218 53 is_stmt 0 view .LVU219
 842 0000 10B5     		push	{r4, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 4, -8
 845              		.cfi_offset 14, -4
 846              	.LBB286:
 847              	.LBB282:
 848              	.LBB279:
 849              	.LBB277:
 850              	.LBB276:
 851              		.loc 5 142 3 view .LVU220
 852              		.syntax divided
 853              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 854 0002 72B6     		cpsid i
 855              	@ 0 "" 2
 856              		.thumb
 857              		.syntax unified
 858              	.LBE276:
 859              	.LBE277:
 860              	.LBE279:
 861              	.LBE282:
 862              	.LBE286:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 863              		.loc 3 356 34 is_stmt 1 view .LVU221
 357:./lib/chibios/os/rt/include/chsys.h **** }
 864              		.loc 3 357 20 view .LVU222
 223:lib/chibios/os/hal/src/hal_pwm.c **** 
 224:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 865              		.loc 1 224 3 view .LVU223
 866              		.loc 1 224 3 view .LVU224
 225:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 867              		.loc 1 225 3 view .LVU225
 868              		.loc 1 225 3 view .LVU226
 226:lib/chibios/os/hal/src/hal_pwm.c **** 
 227:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnablePeriodicNotificationI(pwmp);
 869              		.loc 1 227 3 view .LVU227
 870 0004 FFF7FEFF 		bl	pwm_lld_enable_periodic_notification
 871              	.LVL15:
 228:lib/chibios/os/hal/src/hal_pwm.c **** 
 229:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 872              		.loc 1 229 3 view .LVU228
 873              	.LBB287:
 874              	.LBI287:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 875              		.loc 2 520 20 view .LVU229
 876              	.LBE287:
 877              		.loc 2 522 3 view .LVU230
 878              	.LBB296:
 879              	.LBB288:
 880              	.LBI288:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 881              		.loc 3 365 20 view .LVU231
 882              	.LBB289:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 883              		.loc 3 367 22 view .LVU232
 368:./lib/chibios/os/rt/include/chsys.h **** 
 884              		.loc 3 368 33 view .LVU233
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 885              		.loc 3 374 3 view .LVU234
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 886              		.loc 3 374 3 view .LVU235
 887              		.loc 3 378 3 view .LVU236
 888              	.LBB290:
 889              	.LBI290:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 890              		.loc 4 396 20 view .LVU237
 891              	.LBE290:
 892              	.LBE289:
 893              	.LBE288:
 894              	.LBE296:
 895              		.loc 4 398 3 view .LVU238
 896              	.LBB297:
 897              	.LBB295:
 898              	.LBB294:
 899              	.LBB293:
 900              	.LBB291:
 901              	.LBI291:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 902              		.loc 5 129 27 view .LVU239
 903              	.LBB292:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 904              		.loc 5 131 3 view .LVU240
 905              		.syntax divided
 906              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 907 0008 62B6     		cpsie i
 908              	@ 0 "" 2
 909              		.thumb
 910              		.syntax unified
 911              	.LBE292:
 912              	.LBE291:
 913              	.LBE293:
 914              	.LBE294:
 915              	.LBE295:
 916              	.LBE297:
 230:lib/chibios/os/hal/src/hal_pwm.c **** }
 917              		.loc 1 230 1 is_stmt 0 view .LVU241
 918              		@ sp needed
 919 000a 10BD     		pop	{r4, pc}
 920              		.cfi_endproc
 921              	.LFE193:
 923              		.section	.text.pwmDisablePeriodicNotification,"ax",%progbits
 924              		.align	1
 925              		.global	pwmDisablePeriodicNotification
 926              		.syntax unified
 927              		.code	16
 928              		.thumb_func
 929              		.fpu softvfp
 931              	pwmDisablePeriodicNotification:
 932              	.LVL16:
 933              	.LFB194:
 231:lib/chibios/os/hal/src/hal_pwm.c **** 
 232:lib/chibios/os/hal/src/hal_pwm.c **** /**
 233:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables the periodic activation edge notification.
 234:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 235:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 236:lib/chibios/os/hal/src/hal_pwm.c ****  *
 237:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 238:lib/chibios/os/hal/src/hal_pwm.c ****  *
 239:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 240:lib/chibios/os/hal/src/hal_pwm.c ****  */
 241:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisablePeriodicNotification(PWMDriver *pwmp) {
 934              		.loc 1 241 54 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 242:lib/chibios/os/hal/src/hal_pwm.c **** 
 243:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 938              		.loc 1 243 3 view .LVU243
 939              		.loc 1 243 3 view .LVU244
 244:lib/chibios/os/hal/src/hal_pwm.c **** 
 245:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 940              		.loc 1 245 3 view .LVU245
 941              	.LBB298:
 942              	.LBI298:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 943              		.loc 2 509 20 view .LVU246
 944              	.LBE298:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 945              		.loc 2 511 3 view .LVU247
 946              	.LBB310:
 947              	.LBB299:
 948              	.LBI299:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 949              		.loc 3 353 20 view .LVU248
 950              	.LBE299:
 951              	.LBE310:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 952              		.loc 3 355 3 view .LVU249
 953              	.LBB311:
 954              	.LBB307:
 955              	.LBB300:
 956              	.LBI300:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 957              		.loc 4 387 20 view .LVU250
 958              	.LBE300:
 959              	.LBE307:
 960              	.LBE311:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 961              		.loc 4 389 3 view .LVU251
 962              	.LBB312:
 963              	.LBB308:
 964              	.LBB305:
 965              	.LBB301:
 966              	.LBI301:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 967              		.loc 5 140 27 view .LVU252
 968              	.LBB302:
 969              		.loc 5 142 3 view .LVU253
 970              	.LBE302:
 971              	.LBE301:
 972              	.LBE305:
 973              	.LBE308:
 974              	.LBE312:
 241:lib/chibios/os/hal/src/hal_pwm.c **** 
 975              		.loc 1 241 54 is_stmt 0 view .LVU254
 976 0000 10B5     		push	{r4, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 4, -8
 979              		.cfi_offset 14, -4
 980              	.LBB313:
 981              	.LBB309:
 982              	.LBB306:
 983              	.LBB304:
 984              	.LBB303:
 985              		.loc 5 142 3 view .LVU255
 986              		.syntax divided
 987              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 988 0002 72B6     		cpsid i
 989              	@ 0 "" 2
 990              		.thumb
 991              		.syntax unified
 992              	.LBE303:
 993              	.LBE304:
 994              	.LBE306:
 995              	.LBE309:
 996              	.LBE313:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 997              		.loc 3 356 34 is_stmt 1 view .LVU256
 357:./lib/chibios/os/rt/include/chsys.h **** }
 998              		.loc 3 357 20 view .LVU257
 246:lib/chibios/os/hal/src/hal_pwm.c **** 
 247:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 999              		.loc 1 247 3 view .LVU258
 1000              		.loc 1 247 3 view .LVU259
 248:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 1001              		.loc 1 248 3 view .LVU260
 1002              		.loc 1 248 3 view .LVU261
 249:lib/chibios/os/hal/src/hal_pwm.c **** 
 250:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisablePeriodicNotificationI(pwmp);
 1003              		.loc 1 250 3 view .LVU262
 1004 0004 FFF7FEFF 		bl	pwm_lld_disable_periodic_notification
 1005              	.LVL17:
 251:lib/chibios/os/hal/src/hal_pwm.c **** 
 252:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 1006              		.loc 1 252 3 view .LVU263
 1007              	.LBB314:
 1008              	.LBI314:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1009              		.loc 2 520 20 view .LVU264
 1010              	.LBE314:
 1011              		.loc 2 522 3 view .LVU265
 1012              	.LBB323:
 1013              	.LBB315:
 1014              	.LBI315:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1015              		.loc 3 365 20 view .LVU266
 1016              	.LBB316:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1017              		.loc 3 367 22 view .LVU267
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1018              		.loc 3 368 33 view .LVU268
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1019              		.loc 3 374 3 view .LVU269
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1020              		.loc 3 374 3 view .LVU270
 1021              		.loc 3 378 3 view .LVU271
 1022              	.LBB317:
 1023              	.LBI317:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1024              		.loc 4 396 20 view .LVU272
 1025              	.LBE317:
 1026              	.LBE316:
 1027              	.LBE315:
 1028              	.LBE323:
 1029              		.loc 4 398 3 view .LVU273
 1030              	.LBB324:
 1031              	.LBB322:
 1032              	.LBB321:
 1033              	.LBB320:
 1034              	.LBB318:
 1035              	.LBI318:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1036              		.loc 5 129 27 view .LVU274
 1037              	.LBB319:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1038              		.loc 5 131 3 view .LVU275
 1039              		.syntax divided
 1040              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1041 0008 62B6     		cpsie i
 1042              	@ 0 "" 2
 1043              		.thumb
 1044              		.syntax unified
 1045              	.LBE319:
 1046              	.LBE318:
 1047              	.LBE320:
 1048              	.LBE321:
 1049              	.LBE322:
 1050              	.LBE324:
 253:lib/chibios/os/hal/src/hal_pwm.c **** }
 1051              		.loc 1 253 1 is_stmt 0 view .LVU276
 1052              		@ sp needed
 1053 000a 10BD     		pop	{r4, pc}
 1054              		.cfi_endproc
 1055              	.LFE194:
 1057              		.section	.text.pwmEnableChannelNotification,"ax",%progbits
 1058              		.align	1
 1059              		.global	pwmEnableChannelNotification
 1060              		.syntax unified
 1061              		.code	16
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	pwmEnableChannelNotification:
 1066              	.LVL18:
 1067              	.LFB195:
 254:lib/chibios/os/hal/src/hal_pwm.c **** 
 255:lib/chibios/os/hal/src/hal_pwm.c **** /**
 256:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Enables a channel de-activation edge notification.
 257:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 258:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 259:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 260:lib/chibios/os/hal/src/hal_pwm.c ****  *
 261:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 262:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 263:lib/chibios/os/hal/src/hal_pwm.c ****  *
 264:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 265:lib/chibios/os/hal/src/hal_pwm.c ****  */
 266:lib/chibios/os/hal/src/hal_pwm.c **** void pwmEnableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 1068              		.loc 1 266 74 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 267:lib/chibios/os/hal/src/hal_pwm.c **** 
 268:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 1072              		.loc 1 268 3 view .LVU278
 1073              		.loc 1 268 3 view .LVU279
 269:lib/chibios/os/hal/src/hal_pwm.c **** 
 270:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 1074              		.loc 1 270 3 view .LVU280
 1075              	.LBB325:
 1076              	.LBI325:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1077              		.loc 2 509 20 view .LVU281
 1078              	.LBE325:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1079              		.loc 2 511 3 view .LVU282
 1080              	.LBB337:
 1081              	.LBB326:
 1082              	.LBI326:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1083              		.loc 3 353 20 view .LVU283
 1084              	.LBE326:
 1085              	.LBE337:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1086              		.loc 3 355 3 view .LVU284
 1087              	.LBB338:
 1088              	.LBB334:
 1089              	.LBB327:
 1090              	.LBI327:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1091              		.loc 4 387 20 view .LVU285
 1092              	.LBE327:
 1093              	.LBE334:
 1094              	.LBE338:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1095              		.loc 4 389 3 view .LVU286
 1096              	.LBB339:
 1097              	.LBB335:
 1098              	.LBB332:
 1099              	.LBB328:
 1100              	.LBI328:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1101              		.loc 5 140 27 view .LVU287
 1102              	.LBB329:
 1103              		.loc 5 142 3 view .LVU288
 1104              	.LBE329:
 1105              	.LBE328:
 1106              	.LBE332:
 1107              	.LBE335:
 1108              	.LBE339:
 266:lib/chibios/os/hal/src/hal_pwm.c **** 
 1109              		.loc 1 266 74 is_stmt 0 view .LVU289
 1110 0000 10B5     		push	{r4, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 4, -8
 1113              		.cfi_offset 14, -4
 1114              	.LBB340:
 1115              	.LBB336:
 1116              	.LBB333:
 1117              	.LBB331:
 1118              	.LBB330:
 1119              		.loc 5 142 3 view .LVU290
 1120              		.syntax divided
 1121              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1122 0002 72B6     		cpsid i
 1123              	@ 0 "" 2
 1124              		.thumb
 1125              		.syntax unified
 1126              	.LBE330:
 1127              	.LBE331:
 1128              	.LBE333:
 1129              	.LBE336:
 1130              	.LBE340:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1131              		.loc 3 356 34 is_stmt 1 view .LVU291
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1132              		.loc 3 357 20 view .LVU292
 271:lib/chibios/os/hal/src/hal_pwm.c **** 
 272:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 1133              		.loc 1 272 3 view .LVU293
 1134              		.loc 1 272 3 view .LVU294
 273:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 1135              		.loc 1 273 3 view .LVU295
 1136              		.loc 1 273 3 view .LVU296
 274:lib/chibios/os/hal/src/hal_pwm.c ****                 "channel not enabled");
 275:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 1137              		.loc 1 275 3 view .LVU297
 1138              		.loc 1 275 3 view .LVU298
 276:lib/chibios/os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 277:lib/chibios/os/hal/src/hal_pwm.c **** 
 278:lib/chibios/os/hal/src/hal_pwm.c ****   pwmEnableChannelNotificationI(pwmp, channel);
 1139              		.loc 1 278 3 view .LVU299
 1140 0004 FFF7FEFF 		bl	pwm_lld_enable_channel_notification
 1141              	.LVL19:
 279:lib/chibios/os/hal/src/hal_pwm.c **** 
 280:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 1142              		.loc 1 280 3 view .LVU300
 1143              	.LBB341:
 1144              	.LBI341:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1145              		.loc 2 520 20 view .LVU301
 1146              	.LBE341:
 1147              		.loc 2 522 3 view .LVU302
 1148              	.LBB350:
 1149              	.LBB342:
 1150              	.LBI342:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1151              		.loc 3 365 20 view .LVU303
 1152              	.LBB343:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1153              		.loc 3 367 22 view .LVU304
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1154              		.loc 3 368 33 view .LVU305
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1155              		.loc 3 374 3 view .LVU306
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1156              		.loc 3 374 3 view .LVU307
 1157              		.loc 3 378 3 view .LVU308
 1158              	.LBB344:
 1159              	.LBI344:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1160              		.loc 4 396 20 view .LVU309
 1161              	.LBE344:
 1162              	.LBE343:
 1163              	.LBE342:
 1164              	.LBE350:
 1165              		.loc 4 398 3 view .LVU310
 1166              	.LBB351:
 1167              	.LBB349:
 1168              	.LBB348:
 1169              	.LBB347:
 1170              	.LBB345:
 1171              	.LBI345:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1172              		.loc 5 129 27 view .LVU311
 1173              	.LBB346:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1174              		.loc 5 131 3 view .LVU312
 1175              		.syntax divided
 1176              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1177 0008 62B6     		cpsie i
 1178              	@ 0 "" 2
 1179              		.thumb
 1180              		.syntax unified
 1181              	.LBE346:
 1182              	.LBE345:
 1183              	.LBE347:
 1184              	.LBE348:
 1185              	.LBE349:
 1186              	.LBE351:
 281:lib/chibios/os/hal/src/hal_pwm.c **** }
 1187              		.loc 1 281 1 is_stmt 0 view .LVU313
 1188              		@ sp needed
 1189 000a 10BD     		pop	{r4, pc}
 1190              		.cfi_endproc
 1191              	.LFE195:
 1193              		.section	.text.pwmDisableChannelNotification,"ax",%progbits
 1194              		.align	1
 1195              		.global	pwmDisableChannelNotification
 1196              		.syntax unified
 1197              		.code	16
 1198              		.thumb_func
 1199              		.fpu softvfp
 1201              	pwmDisableChannelNotification:
 1202              	.LVL20:
 1203              	.LFB196:
 282:lib/chibios/os/hal/src/hal_pwm.c **** 
 283:lib/chibios/os/hal/src/hal_pwm.c **** /**
 284:lib/chibios/os/hal/src/hal_pwm.c ****  * @brief   Disables a channel de-activation edge notification.
 285:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 286:lib/chibios/os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 287:lib/chibios/os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 288:lib/chibios/os/hal/src/hal_pwm.c ****  *
 289:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 290:lib/chibios/os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 291:lib/chibios/os/hal/src/hal_pwm.c ****  *
 292:lib/chibios/os/hal/src/hal_pwm.c ****  * @api
 293:lib/chibios/os/hal/src/hal_pwm.c ****  */
 294:lib/chibios/os/hal/src/hal_pwm.c **** void pwmDisableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 1204              		.loc 1 294 75 is_stmt 1 view -0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 295:lib/chibios/os/hal/src/hal_pwm.c **** 
 296:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 1208              		.loc 1 296 3 view .LVU315
 1209              		.loc 1 296 3 view .LVU316
 297:lib/chibios/os/hal/src/hal_pwm.c **** 
 298:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysLock();
 1210              		.loc 1 298 3 view .LVU317
 1211              	.LBB352:
 1212              	.LBI352:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1213              		.loc 2 509 20 view .LVU318
 1214              	.LBE352:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1215              		.loc 2 511 3 view .LVU319
 1216              	.LBB364:
 1217              	.LBB353:
 1218              	.LBI353:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1219              		.loc 3 353 20 view .LVU320
 1220              	.LBE353:
 1221              	.LBE364:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1222              		.loc 3 355 3 view .LVU321
 1223              	.LBB365:
 1224              	.LBB361:
 1225              	.LBB354:
 1226              	.LBI354:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1227              		.loc 4 387 20 view .LVU322
 1228              	.LBE354:
 1229              	.LBE361:
 1230              	.LBE365:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1231              		.loc 4 389 3 view .LVU323
 1232              	.LBB366:
 1233              	.LBB362:
 1234              	.LBB359:
 1235              	.LBB355:
 1236              	.LBI355:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1237              		.loc 5 140 27 view .LVU324
 1238              	.LBB356:
 1239              		.loc 5 142 3 view .LVU325
 1240              	.LBE356:
 1241              	.LBE355:
 1242              	.LBE359:
 1243              	.LBE362:
 1244              	.LBE366:
 294:lib/chibios/os/hal/src/hal_pwm.c **** 
 1245              		.loc 1 294 75 is_stmt 0 view .LVU326
 1246 0000 10B5     		push	{r4, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 4, -8
 1249              		.cfi_offset 14, -4
 1250              	.LBB367:
 1251              	.LBB363:
 1252              	.LBB360:
 1253              	.LBB358:
 1254              	.LBB357:
 1255              		.loc 5 142 3 view .LVU327
 1256              		.syntax divided
 1257              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1258 0002 72B6     		cpsid i
 1259              	@ 0 "" 2
 1260              		.thumb
 1261              		.syntax unified
 1262              	.LBE357:
 1263              	.LBE358:
 1264              	.LBE360:
 1265              	.LBE363:
 1266              	.LBE367:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1267              		.loc 3 356 34 is_stmt 1 view .LVU328
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1268              		.loc 3 357 20 view .LVU329
 299:lib/chibios/os/hal/src/hal_pwm.c **** 
 300:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 1269              		.loc 1 300 3 view .LVU330
 1270              		.loc 1 300 3 view .LVU331
 301:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 1271              		.loc 1 301 3 view .LVU332
 1272              		.loc 1 301 3 view .LVU333
 302:lib/chibios/os/hal/src/hal_pwm.c ****                 "channel not enabled");
 303:lib/chibios/os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 1273              		.loc 1 303 3 view .LVU334
 1274              		.loc 1 303 3 view .LVU335
 304:lib/chibios/os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 305:lib/chibios/os/hal/src/hal_pwm.c **** 
 306:lib/chibios/os/hal/src/hal_pwm.c ****   pwmDisableChannelNotificationI(pwmp, channel);
 1275              		.loc 1 306 3 view .LVU336
 1276 0004 FFF7FEFF 		bl	pwm_lld_disable_channel_notification
 1277              	.LVL21:
 307:lib/chibios/os/hal/src/hal_pwm.c **** 
 308:lib/chibios/os/hal/src/hal_pwm.c ****   osalSysUnlock();
 1278              		.loc 1 308 3 view .LVU337
 1279              	.LBB368:
 1280              	.LBI368:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1281              		.loc 2 520 20 view .LVU338
 1282              	.LBE368:
 1283              		.loc 2 522 3 view .LVU339
 1284              	.LBB377:
 1285              	.LBB369:
 1286              	.LBI369:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1287              		.loc 3 365 20 view .LVU340
 1288              	.LBB370:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1289              		.loc 3 367 22 view .LVU341
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1290              		.loc 3 368 33 view .LVU342
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1291              		.loc 3 374 3 view .LVU343
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1292              		.loc 3 374 3 view .LVU344
 1293              		.loc 3 378 3 view .LVU345
 1294              	.LBB371:
 1295              	.LBI371:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1296              		.loc 4 396 20 view .LVU346
 1297              	.LBE371:
 1298              	.LBE370:
 1299              	.LBE369:
 1300              	.LBE377:
 1301              		.loc 4 398 3 view .LVU347
 1302              	.LBB378:
 1303              	.LBB376:
 1304              	.LBB375:
 1305              	.LBB374:
 1306              	.LBB372:
 1307              	.LBI372:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1308              		.loc 5 129 27 view .LVU348
 1309              	.LBB373:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1310              		.loc 5 131 3 view .LVU349
 1311              		.syntax divided
 1312              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1313 0008 62B6     		cpsie i
 1314              	@ 0 "" 2
 1315              		.thumb
 1316              		.syntax unified
 1317              	.LBE373:
 1318              	.LBE372:
 1319              	.LBE374:
 1320              	.LBE375:
 1321              	.LBE376:
 1322              	.LBE378:
 309:lib/chibios/os/hal/src/hal_pwm.c **** }
 1323              		.loc 1 309 1 is_stmt 0 view .LVU350
 1324              		@ sp needed
 1325 000a 10BD     		pop	{r4, pc}
 1326              		.cfi_endproc
 1327              	.LFE196:
 1329              		.text
 1330              	.Letext0:
 1331              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 1332              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1333              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1334              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 1335              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1336              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 1337              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 1338              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 1339              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1340              		.file 15 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 1341              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1342              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1343              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 1344              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 1345              		.file 20 "./lib/chibios/os/rt/include/chregistry.h"
 1346              		.file 21 "./lib/chibios/os/oslib/include/chmemcore.h"
 1347              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1348              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 1349              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1350              		.file 25 "./lib/chibios/os/hal/include/hal_i2c.h"
 1351              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1352              		.file 27 "./lib/chibios/os/hal/include/hal_pwm.h"
 1353              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1354              		.file 29 "./lib/chibios/os/hal/include/hal_spi.h"
 1355              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 1356              		.file 31 "./lib/chibios/os/hal/include/hal_usb.h"
 1357              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_pwm.c
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:16     .text.pwmInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:24     .text.pwmInit:00000000 pwmInit
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:47     .text.pwmObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:54     .text.pwmObjectInit:00000000 pwmObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:85     .text.pwmStart:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:92     .text.pwmStart:00000000 pwmStart
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:242    .text.pwmStop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:249    .text.pwmStop:00000000 pwmStop
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:389    .text.pwmChangePeriod:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:396    .text.pwmChangePeriod:00000000 pwmChangePeriod
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:512    .text.pwmEnableChannel:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:519    .text.pwmEnableChannel:00000000 pwmEnableChannel
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:651    .text.pwmDisableChannel:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:658    .text.pwmDisableChannel:00000000 pwmDisableChannel
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:790    .text.pwmEnablePeriodicNotification:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:797    .text.pwmEnablePeriodicNotification:00000000 pwmEnablePeriodicNotification
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:924    .text.pwmDisablePeriodicNotification:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:931    .text.pwmDisablePeriodicNotification:00000000 pwmDisablePeriodicNotification
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:1058   .text.pwmEnableChannelNotification:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:1065   .text.pwmEnableChannelNotification:00000000 pwmEnableChannelNotification
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:1194   .text.pwmDisableChannelNotification:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccfIcnhh.s:1201   .text.pwmDisableChannelNotification:00000000 pwmDisableChannelNotification

UNDEFINED SYMBOLS
pwm_lld_init
pwm_lld_start
pwm_lld_stop
pwm_lld_enable_channel
pwm_lld_disable_channel
pwm_lld_enable_periodic_notification
pwm_lld_disable_periodic_notification
pwm_lld_enable_channel_notification
pwm_lld_disable_channel_notification
