   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_i2c.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.i2cInit,"ax",%progbits
  16              		.align	1
  17              		.global	i2cInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	i2cInit:
  25              	.LFB186:
  26              		.file 1 "lib/chibios/os/hal/src/hal_i2c.c"
   1:lib/chibios/os/hal/src/hal_i2c.c **** /*
   2:lib/chibios/os/hal/src/hal_i2c.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_i2c.c **** 
   4:lib/chibios/os/hal/src/hal_i2c.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_i2c.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_i2c.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_i2c.c **** 
   8:lib/chibios/os/hal/src/hal_i2c.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_i2c.c **** 
  10:lib/chibios/os/hal/src/hal_i2c.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_i2c.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_i2c.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_i2c.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_i2c.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_i2c.c **** */
  16:lib/chibios/os/hal/src/hal_i2c.c **** /*
  17:lib/chibios/os/hal/src/hal_i2c.c ****    Concepts and parts of this file have been contributed by Uladzimir Pylinsky
  18:lib/chibios/os/hal/src/hal_i2c.c ****    aka barthess.
  19:lib/chibios/os/hal/src/hal_i2c.c ****  */
  20:lib/chibios/os/hal/src/hal_i2c.c **** 
  21:lib/chibios/os/hal/src/hal_i2c.c **** /**
  22:lib/chibios/os/hal/src/hal_i2c.c ****  * @file    hal_i2c.c
  23:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   I2C Driver code.
  24:lib/chibios/os/hal/src/hal_i2c.c ****  *
  25:lib/chibios/os/hal/src/hal_i2c.c ****  * @addtogroup I2C
  26:lib/chibios/os/hal/src/hal_i2c.c ****  * @{
  27:lib/chibios/os/hal/src/hal_i2c.c ****  */
  28:lib/chibios/os/hal/src/hal_i2c.c **** #include "hal.h"
  29:lib/chibios/os/hal/src/hal_i2c.c **** 
  30:lib/chibios/os/hal/src/hal_i2c.c **** #if (HAL_USE_I2C == TRUE) || defined(__DOXYGEN__)
  31:lib/chibios/os/hal/src/hal_i2c.c **** 
  32:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  33:lib/chibios/os/hal/src/hal_i2c.c **** /* Driver local definitions.                                                 */
  34:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  35:lib/chibios/os/hal/src/hal_i2c.c **** 
  36:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  37:lib/chibios/os/hal/src/hal_i2c.c **** /* Driver exported variables.                                                */
  38:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  39:lib/chibios/os/hal/src/hal_i2c.c **** 
  40:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  41:lib/chibios/os/hal/src/hal_i2c.c **** /* Driver local variables and types.                                         */
  42:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  43:lib/chibios/os/hal/src/hal_i2c.c **** 
  44:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  45:lib/chibios/os/hal/src/hal_i2c.c **** /* Driver local functions.                                                   */
  46:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  47:lib/chibios/os/hal/src/hal_i2c.c **** 
  48:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  49:lib/chibios/os/hal/src/hal_i2c.c **** /* Driver exported functions.                                                */
  50:lib/chibios/os/hal/src/hal_i2c.c **** /*===========================================================================*/
  51:lib/chibios/os/hal/src/hal_i2c.c **** 
  52:lib/chibios/os/hal/src/hal_i2c.c **** /**
  53:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   I2C Driver initialization.
  54:lib/chibios/os/hal/src/hal_i2c.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
  55:lib/chibios/os/hal/src/hal_i2c.c ****  *          no need to explicitly initialize the driver.
  56:lib/chibios/os/hal/src/hal_i2c.c ****  *
  57:lib/chibios/os/hal/src/hal_i2c.c ****  * @init
  58:lib/chibios/os/hal/src/hal_i2c.c ****  */
  59:lib/chibios/os/hal/src/hal_i2c.c **** void i2cInit(void) {
  27              		.loc 1 59 20 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  60:lib/chibios/os/hal/src/hal_i2c.c **** 
  61:lib/chibios/os/hal/src/hal_i2c.c ****   i2c_lld_init();
  31              		.loc 1 61 3 view .LVU1
  59:lib/chibios/os/hal/src/hal_i2c.c **** 
  32              		.loc 1 59 20 is_stmt 0 view .LVU2
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 61 3 view .LVU3
  38 0002 FFF7FEFF 		bl	i2c_lld_init
  39              	.LVL0:
  62:lib/chibios/os/hal/src/hal_i2c.c **** }
  40              		.loc 1 62 1 view .LVU4
  41              		@ sp needed
  42 0006 10BD     		pop	{r4, pc}
  43              		.cfi_endproc
  44              	.LFE186:
  46              		.section	.text.i2cObjectInit,"ax",%progbits
  47              		.align	1
  48              		.global	i2cObjectInit
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	i2cObjectInit:
  55              	.LVL1:
  56              	.LFB187:
  63:lib/chibios/os/hal/src/hal_i2c.c **** 
  64:lib/chibios/os/hal/src/hal_i2c.c **** /**
  65:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Initializes the standard part of a @p I2CDriver structure.
  66:lib/chibios/os/hal/src/hal_i2c.c ****  *
  67:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[out] i2cp     pointer to the @p I2CDriver object
  68:lib/chibios/os/hal/src/hal_i2c.c ****  *
  69:lib/chibios/os/hal/src/hal_i2c.c ****  * @init
  70:lib/chibios/os/hal/src/hal_i2c.c ****  */
  71:lib/chibios/os/hal/src/hal_i2c.c **** void i2cObjectInit(I2CDriver *i2cp) {
  57              		.loc 1 71 37 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  72:lib/chibios/os/hal/src/hal_i2c.c **** 
  73:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->state  = I2C_STOP;
  61              		.loc 1 73 3 view .LVU6
  62              		.loc 1 73 16 is_stmt 0 view .LVU7
  63 0000 0123     		movs	r3, #1
  71:lib/chibios/os/hal/src/hal_i2c.c **** 
  64              		.loc 1 71 37 view .LVU8
  65 0002 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69              		.loc 1 73 16 view .LVU9
  70 0004 0370     		strb	r3, [r0]
  74:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->config = NULL;
  71              		.loc 1 74 3 is_stmt 1 view .LVU10
  72              		.loc 1 74 16 is_stmt 0 view .LVU11
  73 0006 0023     		movs	r3, #0
  74 0008 4360     		str	r3, [r0, #4]
  75:lib/chibios/os/hal/src/hal_i2c.c **** 
  76:lib/chibios/os/hal/src/hal_i2c.c **** #if I2C_USE_MUTUAL_EXCLUSION == TRUE
  77:lib/chibios/os/hal/src/hal_i2c.c ****   osalMutexObjectInit(&i2cp->mutex);
  75              		.loc 1 77 3 is_stmt 1 view .LVU12
  76              	.LVL2:
  77              	.LBB82:
  78              	.LBI82:
  79              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:./lib/chibios/os/hal/osal/rt/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 776:./lib/chibios/os/hal/osal/rt/osal.h **** }
 777:./lib/chibios/os/hal/osal/rt/osal.h **** 
 778:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 779:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 782:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 783:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 785:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 786:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 787:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 788:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:./lib/chibios/os/hal/osal/rt/osal.h **** 
 790:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 791:./lib/chibios/os/hal/osal/rt/osal.h **** }
 792:./lib/chibios/os/hal/osal/rt/osal.h **** 
 793:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 794:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 795:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 796:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 798:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 799:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 800:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 801:./lib/chibios/os/hal/osal/rt/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
 803:./lib/chibios/os/hal/osal/rt/osal.h **** }
 804:./lib/chibios/os/hal/osal/rt/osal.h **** 
 805:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 806:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 807:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:./lib/chibios/os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 809:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 810:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 813:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 815:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 818:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 819:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 823:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specification.
 825:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 826:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 827:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 828:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 830:./lib/chibios/os/hal/osal/rt/osal.h **** 
 831:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:./lib/chibios/os/hal/osal/rt/osal.h **** }
 833:./lib/chibios/os/hal/osal/rt/osal.h **** 
 834:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 835:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 837:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 839:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 840:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 841:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 842:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:./lib/chibios/os/hal/osal/rt/osal.h **** 
 844:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:./lib/chibios/os/hal/osal/rt/osal.h **** }
 846:./lib/chibios/os/hal/osal/rt/osal.h **** 
 847:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 848:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 852:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 853:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 854:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 855:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 856:./lib/chibios/os/hal/osal/rt/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 858:./lib/chibios/os/hal/osal/rt/osal.h **** }
 859:./lib/chibios/os/hal/osal/rt/osal.h **** 
 860:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 861:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 862:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes an event source object.
 863:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 864:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] esp      pointer to the event source object
 865:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 866:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 867:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 868:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 869:./lib/chibios/os/hal/osal/rt/osal.h **** 
 870:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtObjectInit(esp);
 871:./lib/chibios/os/hal/osal/rt/osal.h **** }
 872:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 873:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 874:./lib/chibios/os/hal/osal/rt/osal.h **** 
 875:./lib/chibios/os/hal/osal/rt/osal.h ****   osalDbgCheck(esp != NULL);
 876:./lib/chibios/os/hal/osal/rt/osal.h **** 
 877:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->flags = (eventflags_t)0;
 878:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->cb    = NULL;
 879:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->param = NULL;
 880:./lib/chibios/os/hal/osal/rt/osal.h **** }
 881:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 882:./lib/chibios/os/hal/osal/rt/osal.h **** 
 883:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 884:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 885:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Add flags to an event source object.
 886:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 887:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] esp       pointer to the event flags object
 888:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 889:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 891:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 893:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 894:./lib/chibios/os/hal/osal/rt/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
 896:./lib/chibios/os/hal/osal/rt/osal.h **** }
 897:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 898:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 899:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 900:./lib/chibios/os/hal/osal/rt/osal.h **** 
 901:./lib/chibios/os/hal/osal/rt/osal.h ****   osalDbgCheck(esp != NULL);
 902:./lib/chibios/os/hal/osal/rt/osal.h **** 
 903:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->flags |= flags;
 904:./lib/chibios/os/hal/osal/rt/osal.h ****   if (esp->cb != NULL) {
 905:./lib/chibios/os/hal/osal/rt/osal.h ****     esp->cb(esp);
 906:./lib/chibios/os/hal/osal/rt/osal.h ****   }
 907:./lib/chibios/os/hal/osal/rt/osal.h **** }
 908:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 909:./lib/chibios/os/hal/osal/rt/osal.h **** 
 910:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 911:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 912:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Add flags to an event source object.
 913:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 914:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] esp       pointer to the event flags object
 915:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 916:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 917:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 918:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 919:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlags(event_source_t *esp,
 920:./lib/chibios/os/hal/osal/rt/osal.h ****                                            eventflags_t flags) {
 921:./lib/chibios/os/hal/osal/rt/osal.h **** 
 922:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtBroadcastFlags(esp, flags);
 923:./lib/chibios/os/hal/osal/rt/osal.h **** }
 924:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 925:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlags(event_source_t *esp,
 926:./lib/chibios/os/hal/osal/rt/osal.h ****                                            eventflags_t flags) {
 927:./lib/chibios/os/hal/osal/rt/osal.h **** 
 928:./lib/chibios/os/hal/osal/rt/osal.h ****   osalDbgCheck(esp != NULL);
 929:./lib/chibios/os/hal/osal/rt/osal.h **** 
 930:./lib/chibios/os/hal/osal/rt/osal.h ****   osalSysLock();
 931:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->flags |= flags;
 932:./lib/chibios/os/hal/osal/rt/osal.h ****   if (esp->cb != NULL) {
 933:./lib/chibios/os/hal/osal/rt/osal.h ****     esp->cb(esp);
 934:./lib/chibios/os/hal/osal/rt/osal.h ****   }
 935:./lib/chibios/os/hal/osal/rt/osal.h ****   osalSysUnlock();
 936:./lib/chibios/os/hal/osal/rt/osal.h **** }
 937:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 938:./lib/chibios/os/hal/osal/rt/osal.h **** 
 939:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 940:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 941:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Event callback setup.
 942:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The callback is invoked from ISR context and can
 943:./lib/chibios/os/hal/osal/rt/osal.h ****  *          only invoke I-Class functions. The callback is meant
 944:./lib/chibios/os/hal/osal/rt/osal.h ****  *          to wakeup the task that will handle the event by
 945:./lib/chibios/os/hal/osal/rt/osal.h ****  *          calling @p osalEventGetAndClearFlagsI().
 946:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 947:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] esp       pointer to the event flags object
 948:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cb        pointer to the callback function
 949:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] param     parameter to be passed to the callback function
 950:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 951:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 952:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 953:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventSetCallback(event_source_t *esp,
 954:./lib/chibios/os/hal/osal/rt/osal.h ****                                         eventcallback_t cb,
 955:./lib/chibios/os/hal/osal/rt/osal.h ****                                         void *param) {
 956:./lib/chibios/os/hal/osal/rt/osal.h **** 
 957:./lib/chibios/os/hal/osal/rt/osal.h ****   osalDbgCheck(esp != NULL);
 958:./lib/chibios/os/hal/osal/rt/osal.h **** 
 959:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->cb    = cb;
 960:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->param = param;
 961:./lib/chibios/os/hal/osal/rt/osal.h **** }
 962:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 963:./lib/chibios/os/hal/osal/rt/osal.h **** 
 964:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 965:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes s @p mutex_t object.
 966:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 967:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] mp       pointer to the @p mutex_t object
 968:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 969:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 970:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 971:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalMutexObjectInit(mutex_t *mp) {
  80              		.loc 2 971 20 view .LVU13
  81              	.LBB83:
 972:./lib/chibios/os/hal/osal/rt/osal.h **** 
 973:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES
 974:./lib/chibios/os/hal/osal/rt/osal.h ****   chMtxObjectInit(mp);
  82              		.loc 2 974 3 view .LVU14
  83              	.LBE83:
  84              	.LBE82:
  85              		.loc 1 77 3 is_stmt 0 view .LVU15
  86 000a 0C30     		adds	r0, r0, #12
  87              	.LVL3:
  88              	.LBB85:
  89              	.LBB84:
  90              		.loc 2 974 3 view .LVU16
  91 000c FFF7FEFF 		bl	chMtxObjectInit
  92              	.LVL4:
  93              		.loc 2 974 3 view .LVU17
  94              	.LBE84:
  95              	.LBE85:
  78:lib/chibios/os/hal/src/hal_i2c.c **** #endif
  79:lib/chibios/os/hal/src/hal_i2c.c **** 
  80:lib/chibios/os/hal/src/hal_i2c.c **** #if defined(I2C_DRIVER_EXT_INIT_HOOK)
  81:lib/chibios/os/hal/src/hal_i2c.c ****   I2C_DRIVER_EXT_INIT_HOOK(i2cp);
  82:lib/chibios/os/hal/src/hal_i2c.c **** #endif
  83:lib/chibios/os/hal/src/hal_i2c.c **** }
  96              		.loc 1 83 1 view .LVU18
  97              		@ sp needed
  98 0010 10BD     		pop	{r4, pc}
  99              		.cfi_endproc
 100              	.LFE187:
 102              		.section	.text.i2cStart,"ax",%progbits
 103              		.align	1
 104              		.global	i2cStart
 105              		.syntax unified
 106              		.code	16
 107              		.thumb_func
 108              		.fpu softvfp
 110              	i2cStart:
 111              	.LVL5:
 112              	.LFB188:
  84:lib/chibios/os/hal/src/hal_i2c.c **** 
  85:lib/chibios/os/hal/src/hal_i2c.c **** /**
  86:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Configures and activates the I2C peripheral.
  87:lib/chibios/os/hal/src/hal_i2c.c ****  *
  88:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
  89:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] config    pointer to the @p I2CConfig object
  90:lib/chibios/os/hal/src/hal_i2c.c ****  *
  91:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
  92:lib/chibios/os/hal/src/hal_i2c.c ****  */
  93:lib/chibios/os/hal/src/hal_i2c.c **** void i2cStart(I2CDriver *i2cp, const I2CConfig *config) {
 113              		.loc 1 93 57 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
  94:lib/chibios/os/hal/src/hal_i2c.c **** 
  95:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck((i2cp != NULL) && (config != NULL));
 117              		.loc 1 95 3 view .LVU20
 118              		.loc 1 95 3 view .LVU21
  96:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgAssert((i2cp->state == I2C_STOP) || (i2cp->state == I2C_READY) ||
 119              		.loc 1 96 3 view .LVU22
 120              		.loc 1 96 3 view .LVU23
  97:lib/chibios/os/hal/src/hal_i2c.c ****                 (i2cp->state == I2C_LOCKED), "invalid state");
  98:lib/chibios/os/hal/src/hal_i2c.c **** 
  99:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysLock();
 121              		.loc 1 99 3 view .LVU24
 122              	.LBB86:
 123              	.LBI86:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 124              		.loc 2 509 20 view .LVU25
 125              	.LBE86:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 126              		.loc 2 511 3 view .LVU26
 127              	.LBB98:
 128              	.LBB87:
 129              	.LBI87:
 130              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 131              		.loc 3 353 20 view .LVU27
 132              	.LBE87:
 133              	.LBE98:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 134              		.loc 3 355 3 view .LVU28
 135              	.LBB99:
 136              	.LBB95:
 137              	.LBB88:
 138              	.LBI88:
 139              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 140              		.loc 4 387 20 view .LVU29
 141              	.LBE88:
 142              	.LBE95:
 143              	.LBE99:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 144              		.loc 4 389 3 view .LVU30
 145              	.LBB100:
 146              	.LBB96:
 147              	.LBB93:
 148              	.LBB89:
 149              	.LBI89:
 150              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 151              		.loc 5 140 27 view .LVU31
 152              	.LBB90:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 153              		.loc 5 142 3 view .LVU32
 154              	.LBE90:
 155              	.LBE89:
 156              	.LBE93:
 157              	.LBE96:
 158              	.LBE100:
  93:lib/chibios/os/hal/src/hal_i2c.c **** 
 159              		.loc 1 93 57 is_stmt 0 view .LVU33
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
  93:lib/chibios/os/hal/src/hal_i2c.c **** 
 164              		.loc 1 93 57 view .LVU34
 165 0002 0400     		movs	r4, r0
 166              	.LBB101:
 167              	.LBB97:
 168              	.LBB94:
 169              	.LBB92:
 170              	.LBB91:
 171              		.loc 5 142 3 view .LVU35
 172              		.syntax divided
 173              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 174 0004 72B6     		cpsid i
 175              	@ 0 "" 2
 176              		.thumb
 177              		.syntax unified
 178              	.LBE91:
 179              	.LBE92:
 180              	.LBE94:
 181              	.LBE97:
 182              	.LBE101:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 183              		.loc 3 356 34 is_stmt 1 view .LVU36
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 184              		.loc 3 357 20 view .LVU37
 100:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->config = config;
 185              		.loc 1 100 3 view .LVU38
 186              		.loc 1 100 16 is_stmt 0 view .LVU39
 187 0006 4160     		str	r1, [r0, #4]
 101:lib/chibios/os/hal/src/hal_i2c.c ****   i2c_lld_start(i2cp);
 188              		.loc 1 101 3 is_stmt 1 view .LVU40
 189 0008 FFF7FEFF 		bl	i2c_lld_start
 190              	.LVL6:
 102:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->state = I2C_READY;
 191              		.loc 1 102 3 view .LVU41
 192              		.loc 1 102 15 is_stmt 0 view .LVU42
 193 000c 0223     		movs	r3, #2
 194 000e 2370     		strb	r3, [r4]
 103:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysUnlock();
 195              		.loc 1 103 3 is_stmt 1 view .LVU43
 196              	.LBB102:
 197              	.LBI102:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 198              		.loc 2 520 20 view .LVU44
 199              	.LBE102:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 200              		.loc 2 522 3 view .LVU45
 201              	.LBB111:
 202              	.LBB103:
 203              	.LBI103:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 204              		.loc 3 365 20 view .LVU46
 205              	.LBB104:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 206              		.loc 3 367 22 view .LVU47
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 207              		.loc 3 368 33 view .LVU48
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 208              		.loc 3 374 3 view .LVU49
 209              		.loc 3 374 3 view .LVU50
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 210              		.loc 3 378 3 view .LVU51
 211              	.LBB105:
 212              	.LBI105:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 213              		.loc 4 396 20 view .LVU52
 214              	.LBE105:
 215              	.LBE104:
 216              	.LBE103:
 217              	.LBE111:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 218              		.loc 4 398 3 view .LVU53
 219              	.LBB112:
 220              	.LBB110:
 221              	.LBB109:
 222              	.LBB108:
 223              	.LBB106:
 224              	.LBI106:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 225              		.loc 5 129 27 view .LVU54
 226              	.LBB107:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 227              		.loc 5 131 3 view .LVU55
 228              		.syntax divided
 229              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 230 0010 62B6     		cpsie i
 231              	@ 0 "" 2
 232              		.thumb
 233              		.syntax unified
 234              	.LBE107:
 235              	.LBE106:
 236              	.LBE108:
 237              	.LBE109:
 238              	.LBE110:
 239              	.LBE112:
 104:lib/chibios/os/hal/src/hal_i2c.c **** }
 240              		.loc 1 104 1 is_stmt 0 view .LVU56
 241              		@ sp needed
 242              	.LVL7:
 243              		.loc 1 104 1 view .LVU57
 244 0012 10BD     		pop	{r4, pc}
 245              		.cfi_endproc
 246              	.LFE188:
 248              		.section	.text.i2cStop,"ax",%progbits
 249              		.align	1
 250              		.global	i2cStop
 251              		.syntax unified
 252              		.code	16
 253              		.thumb_func
 254              		.fpu softvfp
 256              	i2cStop:
 257              	.LVL8:
 258              	.LFB189:
 105:lib/chibios/os/hal/src/hal_i2c.c **** 
 106:lib/chibios/os/hal/src/hal_i2c.c **** /**
 107:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Deactivates the I2C peripheral.
 108:lib/chibios/os/hal/src/hal_i2c.c ****  *
 109:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 110:lib/chibios/os/hal/src/hal_i2c.c ****  *
 111:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 112:lib/chibios/os/hal/src/hal_i2c.c ****  */
 113:lib/chibios/os/hal/src/hal_i2c.c **** void i2cStop(I2CDriver *i2cp) {
 259              		.loc 1 113 31 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 114:lib/chibios/os/hal/src/hal_i2c.c **** 
 115:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck(i2cp != NULL);
 263              		.loc 1 115 3 view .LVU59
 264              		.loc 1 115 3 view .LVU60
 116:lib/chibios/os/hal/src/hal_i2c.c **** 
 117:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysLock();
 265              		.loc 1 117 3 view .LVU61
 266              	.LBB113:
 267              	.LBI113:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 268              		.loc 2 509 20 view .LVU62
 269              	.LBE113:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 270              		.loc 2 511 3 view .LVU63
 271              	.LBB125:
 272              	.LBB114:
 273              	.LBI114:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 274              		.loc 3 353 20 view .LVU64
 275              	.LBE114:
 276              	.LBE125:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 277              		.loc 3 355 3 view .LVU65
 278              	.LBB126:
 279              	.LBB122:
 280              	.LBB115:
 281              	.LBI115:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 282              		.loc 4 387 20 view .LVU66
 283              	.LBE115:
 284              	.LBE122:
 285              	.LBE126:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 286              		.loc 4 389 3 view .LVU67
 287              	.LBB127:
 288              	.LBB123:
 289              	.LBB120:
 290              	.LBB116:
 291              	.LBI116:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 292              		.loc 5 140 27 view .LVU68
 293              	.LBB117:
 294              		.loc 5 142 3 view .LVU69
 295              	.LBE117:
 296              	.LBE116:
 297              	.LBE120:
 298              	.LBE123:
 299              	.LBE127:
 113:lib/chibios/os/hal/src/hal_i2c.c **** 
 300              		.loc 1 113 31 is_stmt 0 view .LVU70
 301 0000 10B5     		push	{r4, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 113:lib/chibios/os/hal/src/hal_i2c.c **** 
 305              		.loc 1 113 31 view .LVU71
 306 0002 0400     		movs	r4, r0
 307              	.LBB128:
 308              	.LBB124:
 309              	.LBB121:
 310              	.LBB119:
 311              	.LBB118:
 312              		.loc 5 142 3 view .LVU72
 313              		.syntax divided
 314              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 315 0004 72B6     		cpsid i
 316              	@ 0 "" 2
 317              		.thumb
 318              		.syntax unified
 319              	.LBE118:
 320              	.LBE119:
 321              	.LBE121:
 322              	.LBE124:
 323              	.LBE128:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 324              		.loc 3 356 34 is_stmt 1 view .LVU73
 357:./lib/chibios/os/rt/include/chsys.h **** }
 325              		.loc 3 357 20 view .LVU74
 118:lib/chibios/os/hal/src/hal_i2c.c **** 
 119:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgAssert((i2cp->state == I2C_STOP) || (i2cp->state == I2C_READY) ||
 326              		.loc 1 119 3 view .LVU75
 327              		.loc 1 119 3 view .LVU76
 120:lib/chibios/os/hal/src/hal_i2c.c ****                 (i2cp->state == I2C_LOCKED), "invalid state");
 121:lib/chibios/os/hal/src/hal_i2c.c **** 
 122:lib/chibios/os/hal/src/hal_i2c.c ****   i2c_lld_stop(i2cp);
 328              		.loc 1 122 3 view .LVU77
 329 0006 FFF7FEFF 		bl	i2c_lld_stop
 330              	.LVL9:
 123:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->config = NULL;
 331              		.loc 1 123 3 view .LVU78
 332              		.loc 1 123 16 is_stmt 0 view .LVU79
 333 000a 0023     		movs	r3, #0
 334 000c 6360     		str	r3, [r4, #4]
 124:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->state  = I2C_STOP;
 335              		.loc 1 124 3 is_stmt 1 view .LVU80
 336              		.loc 1 124 16 is_stmt 0 view .LVU81
 337 000e 0133     		adds	r3, r3, #1
 338 0010 2370     		strb	r3, [r4]
 125:lib/chibios/os/hal/src/hal_i2c.c **** 
 126:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysUnlock();
 339              		.loc 1 126 3 is_stmt 1 view .LVU82
 340              	.LBB129:
 341              	.LBI129:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 342              		.loc 2 520 20 view .LVU83
 343              	.LBE129:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 344              		.loc 2 522 3 view .LVU84
 345              	.LBB138:
 346              	.LBB130:
 347              	.LBI130:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 348              		.loc 3 365 20 view .LVU85
 349              	.LBB131:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 350              		.loc 3 367 22 view .LVU86
 368:./lib/chibios/os/rt/include/chsys.h **** 
 351              		.loc 3 368 33 view .LVU87
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 352              		.loc 3 374 3 view .LVU88
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 353              		.loc 3 374 3 view .LVU89
 354              		.loc 3 378 3 view .LVU90
 355              	.LBB132:
 356              	.LBI132:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357              		.loc 4 396 20 view .LVU91
 358              	.LBE132:
 359              	.LBE131:
 360              	.LBE130:
 361              	.LBE138:
 362              		.loc 4 398 3 view .LVU92
 363              	.LBB139:
 364              	.LBB137:
 365              	.LBB136:
 366              	.LBB135:
 367              	.LBB133:
 368              	.LBI133:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 369              		.loc 5 129 27 view .LVU93
 370              	.LBB134:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 371              		.loc 5 131 3 view .LVU94
 372              		.syntax divided
 373              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 374 0012 62B6     		cpsie i
 375              	@ 0 "" 2
 376              		.thumb
 377              		.syntax unified
 378              	.LBE134:
 379              	.LBE133:
 380              	.LBE135:
 381              	.LBE136:
 382              	.LBE137:
 383              	.LBE139:
 127:lib/chibios/os/hal/src/hal_i2c.c **** }
 384              		.loc 1 127 1 is_stmt 0 view .LVU95
 385              		@ sp needed
 386              	.LVL10:
 387              		.loc 1 127 1 view .LVU96
 388 0014 10BD     		pop	{r4, pc}
 389              		.cfi_endproc
 390              	.LFE189:
 392              		.section	.text.i2cGetErrors,"ax",%progbits
 393              		.align	1
 394              		.global	i2cGetErrors
 395              		.syntax unified
 396              		.code	16
 397              		.thumb_func
 398              		.fpu softvfp
 400              	i2cGetErrors:
 401              	.LVL11:
 402              	.LFB190:
 128:lib/chibios/os/hal/src/hal_i2c.c **** 
 129:lib/chibios/os/hal/src/hal_i2c.c **** /**
 130:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Returns the errors mask associated to the previous operation.
 131:lib/chibios/os/hal/src/hal_i2c.c ****  *
 132:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 133:lib/chibios/os/hal/src/hal_i2c.c ****  * @return              The errors mask.
 134:lib/chibios/os/hal/src/hal_i2c.c ****  *
 135:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 136:lib/chibios/os/hal/src/hal_i2c.c ****  */
 137:lib/chibios/os/hal/src/hal_i2c.c **** i2cflags_t i2cGetErrors(I2CDriver *i2cp) {
 403              		.loc 1 137 42 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 138:lib/chibios/os/hal/src/hal_i2c.c **** 
 139:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck(i2cp != NULL);
 408              		.loc 1 139 3 view .LVU98
 409              		.loc 1 139 3 view .LVU99
 140:lib/chibios/os/hal/src/hal_i2c.c **** 
 141:lib/chibios/os/hal/src/hal_i2c.c ****   return i2c_lld_get_errors(i2cp);
 410              		.loc 1 141 3 view .LVU100
 411              		.loc 1 141 10 is_stmt 0 view .LVU101
 412 0000 8068     		ldr	r0, [r0, #8]
 413              	.LVL12:
 142:lib/chibios/os/hal/src/hal_i2c.c **** }
 414              		.loc 1 142 1 view .LVU102
 415              		@ sp needed
 416 0002 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE190:
 420              		.section	.text.i2cMasterTransmitTimeout,"ax",%progbits
 421              		.align	1
 422              		.global	i2cMasterTransmitTimeout
 423              		.syntax unified
 424              		.code	16
 425              		.thumb_func
 426              		.fpu softvfp
 428              	i2cMasterTransmitTimeout:
 429              	.LVL13:
 430              	.LFB191:
 143:lib/chibios/os/hal/src/hal_i2c.c **** 
 144:lib/chibios/os/hal/src/hal_i2c.c **** /**
 145:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Sends data via the I2C bus.
 146:lib/chibios/os/hal/src/hal_i2c.c ****  * @details Function designed to realize "read-through-write" transfer
 147:lib/chibios/os/hal/src/hal_i2c.c ****  *          paradigm. If you want transmit data without any further read,
 148:lib/chibios/os/hal/src/hal_i2c.c ****  *          than set @b rxbytes field to 0.
 149:lib/chibios/os/hal/src/hal_i2c.c ****  *
 150:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 151:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] addr      slave device address (7 bits) without R/W bit
 152:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] txbuf     pointer to transmit buffer
 153:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] txbytes   number of bytes to be transmitted
 154:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[out] rxbuf    pointer to receive buffer
 155:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] rxbytes   number of bytes to be received, set it to 0 if
 156:lib/chibios/os/hal/src/hal_i2c.c ****  *                      you want transmit only
 157:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 158:lib/chibios/os/hal/src/hal_i2c.c ****  *                      the following special values are allowed:
 159:lib/chibios/os/hal/src/hal_i2c.c ****  *                      - @a TIME_INFINITE no timeout.
 160:lib/chibios/os/hal/src/hal_i2c.c ****  *                      .
 161:lib/chibios/os/hal/src/hal_i2c.c ****  *
 162:lib/chibios/os/hal/src/hal_i2c.c ****  * @return              The operation status.
 163:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_OK       if the function succeeded.
 164:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 165:lib/chibios/os/hal/src/hal_i2c.c ****  *                      be retrieved using @p i2cGetErrors().
 166:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end.
 167:lib/chibios/os/hal/src/hal_i2c.c ****  *
 168:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 169:lib/chibios/os/hal/src/hal_i2c.c ****  */
 170:lib/chibios/os/hal/src/hal_i2c.c **** msg_t i2cMasterTransmitTimeout(I2CDriver *i2cp,
 171:lib/chibios/os/hal/src/hal_i2c.c ****                                i2caddr_t addr,
 172:lib/chibios/os/hal/src/hal_i2c.c ****                                const uint8_t *txbuf,
 173:lib/chibios/os/hal/src/hal_i2c.c ****                                size_t txbytes,
 174:lib/chibios/os/hal/src/hal_i2c.c ****                                uint8_t *rxbuf,
 175:lib/chibios/os/hal/src/hal_i2c.c ****                                size_t rxbytes,
 176:lib/chibios/os/hal/src/hal_i2c.c ****                                sysinterval_t timeout) {
 431              		.loc 1 176 55 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 12, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 177:lib/chibios/os/hal/src/hal_i2c.c ****   msg_t rdymsg;
 435              		.loc 1 177 3 view .LVU104
 178:lib/chibios/os/hal/src/hal_i2c.c **** 
 179:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck((i2cp != NULL) &&
 436              		.loc 1 179 3 view .LVU105
 437              		.loc 1 179 3 view .LVU106
 180:lib/chibios/os/hal/src/hal_i2c.c ****                (txbytes > 0U) && (txbuf != NULL) &&
 181:lib/chibios/os/hal/src/hal_i2c.c ****                ((rxbytes == 0U) || ((rxbytes > 0U) && (rxbuf != NULL))) &&
 182:lib/chibios/os/hal/src/hal_i2c.c ****                (timeout != TIME_IMMEDIATE));
 183:lib/chibios/os/hal/src/hal_i2c.c **** 
 184:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgAssert(i2cp->state == I2C_READY, "not ready");
 438              		.loc 1 184 3 view .LVU107
 439              		.loc 1 184 3 view .LVU108
 185:lib/chibios/os/hal/src/hal_i2c.c **** 
 186:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysLock();
 440              		.loc 1 186 3 view .LVU109
 441              	.LBB140:
 442              	.LBI140:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 443              		.loc 2 509 20 view .LVU110
 444              	.LBE140:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 445              		.loc 2 511 3 view .LVU111
 446              	.LBB152:
 447              	.LBB141:
 448              	.LBI141:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 449              		.loc 3 353 20 view .LVU112
 450              	.LBE141:
 451              	.LBE152:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 452              		.loc 3 355 3 view .LVU113
 453              	.LBB153:
 454              	.LBB149:
 455              	.LBB142:
 456              	.LBI142:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 457              		.loc 4 387 20 view .LVU114
 458              	.LBE142:
 459              	.LBE149:
 460              	.LBE153:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 461              		.loc 4 389 3 view .LVU115
 462              	.LBB154:
 463              	.LBB150:
 464              	.LBB147:
 465              	.LBB143:
 466              	.LBI143:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 467              		.loc 5 140 27 view .LVU116
 468              	.LBB144:
 469              		.loc 5 142 3 view .LVU117
 470              	.LBE144:
 471              	.LBE143:
 472              	.LBE147:
 473              	.LBE150:
 474              	.LBE154:
 176:lib/chibios/os/hal/src/hal_i2c.c ****   msg_t rdymsg;
 475              		.loc 1 176 55 is_stmt 0 view .LVU118
 476 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 477              		.cfi_def_cfa_offset 24
 478              		.cfi_offset 0, -24
 479              		.cfi_offset 1, -20
 480              		.cfi_offset 2, -16
 481              		.cfi_offset 3, -12
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 176:lib/chibios/os/hal/src/hal_i2c.c ****   msg_t rdymsg;
 484              		.loc 1 176 55 view .LVU119
 485 0002 0400     		movs	r4, r0
 486              	.LBB155:
 487              	.LBB151:
 488              	.LBB148:
 489              	.LBB146:
 490              	.LBB145:
 491              		.loc 5 142 3 view .LVU120
 492              		.syntax divided
 493              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 494 0004 72B6     		cpsid i
 495              	@ 0 "" 2
 496              		.thumb
 497              		.syntax unified
 498              	.LBE145:
 499              	.LBE146:
 500              	.LBE148:
 501              	.LBE151:
 502              	.LBE155:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 503              		.loc 3 356 34 is_stmt 1 view .LVU121
 357:./lib/chibios/os/rt/include/chsys.h **** }
 504              		.loc 3 357 20 view .LVU122
 187:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->errors = I2C_NO_ERROR;
 505              		.loc 1 187 3 view .LVU123
 506              		.loc 1 187 16 is_stmt 0 view .LVU124
 507 0006 0020     		movs	r0, #0
 508              	.LVL14:
 509              		.loc 1 187 16 view .LVU125
 510 0008 A060     		str	r0, [r4, #8]
 188:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->state = I2C_ACTIVE_TX;
 511              		.loc 1 188 3 is_stmt 1 view .LVU126
 512              		.loc 1 188 15 is_stmt 0 view .LVU127
 513 000a 0330     		adds	r0, r0, #3
 514 000c 2070     		strb	r0, [r4]
 189:lib/chibios/os/hal/src/hal_i2c.c ****   rdymsg = i2c_lld_master_transmit_timeout(i2cp, addr, txbuf, txbytes,
 515              		.loc 1 189 3 is_stmt 1 view .LVU128
 516              		.loc 1 189 12 is_stmt 0 view .LVU129
 517 000e 0898     		ldr	r0, [sp, #32]
 518 0010 0290     		str	r0, [sp, #8]
 519 0012 0798     		ldr	r0, [sp, #28]
 520 0014 0190     		str	r0, [sp, #4]
 521 0016 0698     		ldr	r0, [sp, #24]
 522 0018 0090     		str	r0, [sp]
 523 001a 2000     		movs	r0, r4
 524 001c FFF7FEFF 		bl	i2c_lld_master_transmit_timeout
 525              	.LVL15:
 190:lib/chibios/os/hal/src/hal_i2c.c ****                                            rxbuf, rxbytes, timeout);
 191:lib/chibios/os/hal/src/hal_i2c.c ****   if (rdymsg == MSG_TIMEOUT) {
 526              		.loc 1 191 3 is_stmt 1 view .LVU130
 192:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_LOCKED;
 193:lib/chibios/os/hal/src/hal_i2c.c ****   }
 194:lib/chibios/os/hal/src/hal_i2c.c ****   else {
 195:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_READY;
 527              		.loc 1 195 17 is_stmt 0 view .LVU131
 528 0020 0223     		movs	r3, #2
 191:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_LOCKED;
 529              		.loc 1 191 6 view .LVU132
 530 0022 421C     		adds	r2, r0, #1
 531 0024 00D1     		bne	.L7
 192:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_LOCKED;
 532              		.loc 1 192 17 view .LVU133
 533 0026 0333     		adds	r3, r3, #3
 534              	.L7:
 535 0028 2370     		strb	r3, [r4]
 196:lib/chibios/os/hal/src/hal_i2c.c ****   }
 197:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysUnlock();
 536              		.loc 1 197 3 is_stmt 1 view .LVU134
 537              	.LBB156:
 538              	.LBI156:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 539              		.loc 2 520 20 view .LVU135
 540              	.LBE156:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 541              		.loc 2 522 3 view .LVU136
 542              	.LBB165:
 543              	.LBB157:
 544              	.LBI157:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 545              		.loc 3 365 20 view .LVU137
 546              	.LBB158:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 547              		.loc 3 367 22 view .LVU138
 368:./lib/chibios/os/rt/include/chsys.h **** 
 548              		.loc 3 368 33 view .LVU139
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 549              		.loc 3 374 3 view .LVU140
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 550              		.loc 3 374 3 view .LVU141
 551              		.loc 3 378 3 view .LVU142
 552              	.LBB159:
 553              	.LBI159:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 554              		.loc 4 396 20 view .LVU143
 555              	.LBE159:
 556              	.LBE158:
 557              	.LBE157:
 558              	.LBE165:
 559              		.loc 4 398 3 view .LVU144
 560              	.LBB166:
 561              	.LBB164:
 562              	.LBB163:
 563              	.LBB162:
 564              	.LBB160:
 565              	.LBI160:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 566              		.loc 5 129 27 view .LVU145
 567              	.LBB161:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 568              		.loc 5 131 3 view .LVU146
 569              		.syntax divided
 570              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 571 002a 62B6     		cpsie i
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575              	.LBE161:
 576              	.LBE160:
 577              	.LBE162:
 578              	.LBE163:
 579              	.LBE164:
 580              	.LBE166:
 198:lib/chibios/os/hal/src/hal_i2c.c ****   return rdymsg;
 581              		.loc 1 198 3 view .LVU147
 199:lib/chibios/os/hal/src/hal_i2c.c **** }
 582              		.loc 1 199 1 is_stmt 0 view .LVU148
 583 002c 04B0     		add	sp, sp, #16
 584              		@ sp needed
 585              	.LVL16:
 586              		.loc 1 199 1 view .LVU149
 587 002e 10BD     		pop	{r4, pc}
 588              		.cfi_endproc
 589              	.LFE191:
 591              		.section	.text.i2cMasterReceiveTimeout,"ax",%progbits
 592              		.align	1
 593              		.global	i2cMasterReceiveTimeout
 594              		.syntax unified
 595              		.code	16
 596              		.thumb_func
 597              		.fpu softvfp
 599              	i2cMasterReceiveTimeout:
 600              	.LVL17:
 601              	.LFB192:
 200:lib/chibios/os/hal/src/hal_i2c.c **** 
 201:lib/chibios/os/hal/src/hal_i2c.c **** /**
 202:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Receives data from the I2C bus.
 203:lib/chibios/os/hal/src/hal_i2c.c ****  *
 204:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 205:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] addr      slave device address (7 bits) without R/W bit
 206:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[out] rxbuf    pointer to receive buffer
 207:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] rxbytes   number of bytes to be received
 208:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 209:lib/chibios/os/hal/src/hal_i2c.c ****  *                      the following special values are allowed:
 210:lib/chibios/os/hal/src/hal_i2c.c ****  *                      - @a TIME_INFINITE no timeout.
 211:lib/chibios/os/hal/src/hal_i2c.c ****  *                      .
 212:lib/chibios/os/hal/src/hal_i2c.c ****  *
 213:lib/chibios/os/hal/src/hal_i2c.c ****  * @return              The operation status.
 214:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_OK       if the function succeeded.
 215:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 216:lib/chibios/os/hal/src/hal_i2c.c ****  *                      be retrieved using @p i2cGetErrors().
 217:lib/chibios/os/hal/src/hal_i2c.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end.
 218:lib/chibios/os/hal/src/hal_i2c.c ****  *
 219:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 220:lib/chibios/os/hal/src/hal_i2c.c ****  */
 221:lib/chibios/os/hal/src/hal_i2c.c **** msg_t i2cMasterReceiveTimeout(I2CDriver *i2cp,
 222:lib/chibios/os/hal/src/hal_i2c.c ****                               i2caddr_t addr,
 223:lib/chibios/os/hal/src/hal_i2c.c ****                               uint8_t *rxbuf,
 224:lib/chibios/os/hal/src/hal_i2c.c ****                               size_t rxbytes,
 225:lib/chibios/os/hal/src/hal_i2c.c ****                               sysinterval_t timeout) {
 602              		.loc 1 225 54 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 4, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lib/chibios/os/hal/src/hal_i2c.c **** 
 227:lib/chibios/os/hal/src/hal_i2c.c ****   msg_t rdymsg;
 606              		.loc 1 227 3 view .LVU151
 228:lib/chibios/os/hal/src/hal_i2c.c **** 
 229:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck((i2cp != NULL) && (addr != 0U) &&
 607              		.loc 1 229 3 view .LVU152
 608              		.loc 1 229 3 view .LVU153
 230:lib/chibios/os/hal/src/hal_i2c.c ****                (rxbytes > 0U) && (rxbuf != NULL) &&
 231:lib/chibios/os/hal/src/hal_i2c.c ****                (timeout != TIME_IMMEDIATE));
 232:lib/chibios/os/hal/src/hal_i2c.c **** 
 233:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgAssert(i2cp->state == I2C_READY, "not ready");
 609              		.loc 1 233 3 view .LVU154
 610              		.loc 1 233 3 view .LVU155
 234:lib/chibios/os/hal/src/hal_i2c.c **** 
 235:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysLock();
 611              		.loc 1 235 3 view .LVU156
 612              	.LBB167:
 613              	.LBI167:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 614              		.loc 2 509 20 view .LVU157
 615              	.LBE167:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 616              		.loc 2 511 3 view .LVU158
 617              	.LBB179:
 618              	.LBB168:
 619              	.LBI168:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 620              		.loc 3 353 20 view .LVU159
 621              	.LBE168:
 622              	.LBE179:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 623              		.loc 3 355 3 view .LVU160
 624              	.LBB180:
 625              	.LBB176:
 626              	.LBB169:
 627              	.LBI169:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 628              		.loc 4 387 20 view .LVU161
 629              	.LBE169:
 630              	.LBE176:
 631              	.LBE180:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 632              		.loc 4 389 3 view .LVU162
 633              	.LBB181:
 634              	.LBB177:
 635              	.LBB174:
 636              	.LBB170:
 637              	.LBI170:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 638              		.loc 5 140 27 view .LVU163
 639              	.LBB171:
 640              		.loc 5 142 3 view .LVU164
 641              	.LBE171:
 642              	.LBE170:
 643              	.LBE174:
 644              	.LBE177:
 645              	.LBE181:
 225:lib/chibios/os/hal/src/hal_i2c.c **** 
 646              		.loc 1 225 54 is_stmt 0 view .LVU165
 647 0000 13B5     		push	{r0, r1, r4, lr}
 648              		.cfi_def_cfa_offset 16
 649              		.cfi_offset 0, -16
 650              		.cfi_offset 1, -12
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
 225:lib/chibios/os/hal/src/hal_i2c.c **** 
 653              		.loc 1 225 54 view .LVU166
 654 0002 0400     		movs	r4, r0
 655              	.LBB182:
 656              	.LBB178:
 657              	.LBB175:
 658              	.LBB173:
 659              	.LBB172:
 660              		.loc 5 142 3 view .LVU167
 661              		.syntax divided
 662              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 663 0004 72B6     		cpsid i
 664              	@ 0 "" 2
 665              		.thumb
 666              		.syntax unified
 667              	.LBE172:
 668              	.LBE173:
 669              	.LBE175:
 670              	.LBE178:
 671              	.LBE182:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 672              		.loc 3 356 34 is_stmt 1 view .LVU168
 357:./lib/chibios/os/rt/include/chsys.h **** }
 673              		.loc 3 357 20 view .LVU169
 236:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->errors = I2C_NO_ERROR;
 674              		.loc 1 236 3 view .LVU170
 675              		.loc 1 236 16 is_stmt 0 view .LVU171
 676 0006 0020     		movs	r0, #0
 677              	.LVL18:
 678              		.loc 1 236 16 view .LVU172
 679 0008 A060     		str	r0, [r4, #8]
 237:lib/chibios/os/hal/src/hal_i2c.c ****   i2cp->state = I2C_ACTIVE_RX;
 680              		.loc 1 237 3 is_stmt 1 view .LVU173
 681              		.loc 1 237 15 is_stmt 0 view .LVU174
 682 000a 0430     		adds	r0, r0, #4
 683 000c 2070     		strb	r0, [r4]
 238:lib/chibios/os/hal/src/hal_i2c.c ****   rdymsg = i2c_lld_master_receive_timeout(i2cp, addr, rxbuf, rxbytes, timeout);
 684              		.loc 1 238 3 is_stmt 1 view .LVU175
 685              		.loc 1 238 12 is_stmt 0 view .LVU176
 686 000e 0498     		ldr	r0, [sp, #16]
 687 0010 0090     		str	r0, [sp]
 688 0012 2000     		movs	r0, r4
 689 0014 FFF7FEFF 		bl	i2c_lld_master_receive_timeout
 690              	.LVL19:
 239:lib/chibios/os/hal/src/hal_i2c.c ****   if (rdymsg == MSG_TIMEOUT) {
 691              		.loc 1 239 3 is_stmt 1 view .LVU177
 240:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_LOCKED;
 241:lib/chibios/os/hal/src/hal_i2c.c ****   }
 242:lib/chibios/os/hal/src/hal_i2c.c ****   else {
 243:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_READY;
 692              		.loc 1 243 17 is_stmt 0 view .LVU178
 693 0018 0223     		movs	r3, #2
 239:lib/chibios/os/hal/src/hal_i2c.c ****   if (rdymsg == MSG_TIMEOUT) {
 694              		.loc 1 239 6 view .LVU179
 695 001a 421C     		adds	r2, r0, #1
 696 001c 00D1     		bne	.L10
 240:lib/chibios/os/hal/src/hal_i2c.c ****     i2cp->state = I2C_LOCKED;
 697              		.loc 1 240 17 view .LVU180
 698 001e 0333     		adds	r3, r3, #3
 699              	.L10:
 700 0020 2370     		strb	r3, [r4]
 244:lib/chibios/os/hal/src/hal_i2c.c ****   }
 245:lib/chibios/os/hal/src/hal_i2c.c ****   osalSysUnlock();
 701              		.loc 1 245 3 is_stmt 1 view .LVU181
 702              	.LBB183:
 703              	.LBI183:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 704              		.loc 2 520 20 view .LVU182
 705              	.LBE183:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 706              		.loc 2 522 3 view .LVU183
 707              	.LBB192:
 708              	.LBB184:
 709              	.LBI184:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 710              		.loc 3 365 20 view .LVU184
 711              	.LBB185:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 712              		.loc 3 367 22 view .LVU185
 368:./lib/chibios/os/rt/include/chsys.h **** 
 713              		.loc 3 368 33 view .LVU186
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 714              		.loc 3 374 3 view .LVU187
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 715              		.loc 3 374 3 view .LVU188
 716              		.loc 3 378 3 view .LVU189
 717              	.LBB186:
 718              	.LBI186:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 719              		.loc 4 396 20 view .LVU190
 720              	.LBE186:
 721              	.LBE185:
 722              	.LBE184:
 723              	.LBE192:
 724              		.loc 4 398 3 view .LVU191
 725              	.LBB193:
 726              	.LBB191:
 727              	.LBB190:
 728              	.LBB189:
 729              	.LBB187:
 730              	.LBI187:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 731              		.loc 5 129 27 view .LVU192
 732              	.LBB188:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 733              		.loc 5 131 3 view .LVU193
 734              		.syntax divided
 735              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 736 0022 62B6     		cpsie i
 737              	@ 0 "" 2
 738              		.thumb
 739              		.syntax unified
 740              	.LBE188:
 741              	.LBE187:
 742              	.LBE189:
 743              	.LBE190:
 744              	.LBE191:
 745              	.LBE193:
 246:lib/chibios/os/hal/src/hal_i2c.c ****   return rdymsg;
 746              		.loc 1 246 3 view .LVU194
 247:lib/chibios/os/hal/src/hal_i2c.c **** }
 747              		.loc 1 247 1 is_stmt 0 view .LVU195
 748              		@ sp needed
 749              	.LVL20:
 750              		.loc 1 247 1 view .LVU196
 751 0024 16BD     		pop	{r1, r2, r4, pc}
 752              		.cfi_endproc
 753              	.LFE192:
 755              		.section	.text.i2cAcquireBus,"ax",%progbits
 756              		.align	1
 757              		.global	i2cAcquireBus
 758              		.syntax unified
 759              		.code	16
 760              		.thumb_func
 761              		.fpu softvfp
 763              	i2cAcquireBus:
 764              	.LVL21:
 765              	.LFB193:
 248:lib/chibios/os/hal/src/hal_i2c.c **** 
 249:lib/chibios/os/hal/src/hal_i2c.c **** #if (I2C_USE_MUTUAL_EXCLUSION == TRUE) || defined(__DOXYGEN__)
 250:lib/chibios/os/hal/src/hal_i2c.c **** /**
 251:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Gains exclusive access to the I2C bus.
 252:lib/chibios/os/hal/src/hal_i2c.c ****  * @details This function tries to gain ownership to the I2C bus, if the bus
 253:lib/chibios/os/hal/src/hal_i2c.c ****  *          is already being used then the invoking thread is queued.
 254:lib/chibios/os/hal/src/hal_i2c.c ****  * @pre     In order to use this function the option @p I2C_USE_MUTUAL_EXCLUSION
 255:lib/chibios/os/hal/src/hal_i2c.c ****  *          must be enabled.
 256:lib/chibios/os/hal/src/hal_i2c.c ****  *
 257:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 258:lib/chibios/os/hal/src/hal_i2c.c ****  *
 259:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 260:lib/chibios/os/hal/src/hal_i2c.c ****  */
 261:lib/chibios/os/hal/src/hal_i2c.c **** void i2cAcquireBus(I2CDriver *i2cp) {
 766              		.loc 1 261 37 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 262:lib/chibios/os/hal/src/hal_i2c.c **** 
 263:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck(i2cp != NULL);
 770              		.loc 1 263 3 view .LVU198
 771              		.loc 1 263 3 view .LVU199
 264:lib/chibios/os/hal/src/hal_i2c.c **** 
 265:lib/chibios/os/hal/src/hal_i2c.c ****   osalMutexLock(&i2cp->mutex);
 772              		.loc 1 265 3 view .LVU200
 773              	.LBB194:
 774              	.LBI194:
 975:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 976:./lib/chibios/os/hal/osal/rt/osal.h ****   chSemObjectInit((semaphore_t *)mp, 1);
 977:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 978:./lib/chibios/os/hal/osal/rt/osal.h ****  *mp = 0;
 979:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 980:./lib/chibios/os/hal/osal/rt/osal.h **** }
 981:./lib/chibios/os/hal/osal/rt/osal.h **** 
 982:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 983:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Locks the specified mutex.
 984:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The mutex is locked and inserted in the per-thread stack of owned
 985:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mutexes.
 986:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 987:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in,out] mp    pointer to the @p mutex_t object
 988:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 989:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 990:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 991:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalMutexLock(mutex_t *mp) {
 775              		.loc 2 991 20 view .LVU201
 776              	.LBB195:
 992:./lib/chibios/os/hal/osal/rt/osal.h **** 
 993:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES
 994:./lib/chibios/os/hal/osal/rt/osal.h ****   chMtxLock(mp);
 777              		.loc 2 994 3 view .LVU202
 778              	.LBE195:
 779              	.LBE194:
 261:lib/chibios/os/hal/src/hal_i2c.c **** 
 780              		.loc 1 261 37 is_stmt 0 view .LVU203
 781 0000 10B5     		push	{r4, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
 785              		.loc 1 265 3 view .LVU204
 786 0002 0C30     		adds	r0, r0, #12
 787              	.LVL22:
 788              	.LBB197:
 789              	.LBB196:
 790              		.loc 2 994 3 view .LVU205
 791 0004 FFF7FEFF 		bl	chMtxLock
 792              	.LVL23:
 793              		.loc 2 994 3 view .LVU206
 794              	.LBE196:
 795              	.LBE197:
 266:lib/chibios/os/hal/src/hal_i2c.c **** }
 796              		.loc 1 266 1 view .LVU207
 797              		@ sp needed
 798 0008 10BD     		pop	{r4, pc}
 799              		.cfi_endproc
 800              	.LFE193:
 802              		.section	.text.i2cReleaseBus,"ax",%progbits
 803              		.align	1
 804              		.global	i2cReleaseBus
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 808              		.fpu softvfp
 810              	i2cReleaseBus:
 811              	.LVL24:
 812              	.LFB194:
 267:lib/chibios/os/hal/src/hal_i2c.c **** 
 268:lib/chibios/os/hal/src/hal_i2c.c **** /**
 269:lib/chibios/os/hal/src/hal_i2c.c ****  * @brief   Releases exclusive access to the I2C bus.
 270:lib/chibios/os/hal/src/hal_i2c.c ****  * @pre     In order to use this function the option @p I2C_USE_MUTUAL_EXCLUSION
 271:lib/chibios/os/hal/src/hal_i2c.c ****  *          must be enabled.
 272:lib/chibios/os/hal/src/hal_i2c.c ****  *
 273:lib/chibios/os/hal/src/hal_i2c.c ****  * @param[in] i2cp      pointer to the @p I2CDriver object
 274:lib/chibios/os/hal/src/hal_i2c.c ****  *
 275:lib/chibios/os/hal/src/hal_i2c.c ****  * @api
 276:lib/chibios/os/hal/src/hal_i2c.c ****  */
 277:lib/chibios/os/hal/src/hal_i2c.c **** void i2cReleaseBus(I2CDriver *i2cp) {
 813              		.loc 1 277 37 is_stmt 1 view -0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 278:lib/chibios/os/hal/src/hal_i2c.c **** 
 279:lib/chibios/os/hal/src/hal_i2c.c ****   osalDbgCheck(i2cp != NULL);
 817              		.loc 1 279 3 view .LVU209
 818              		.loc 1 279 3 view .LVU210
 280:lib/chibios/os/hal/src/hal_i2c.c **** 
 281:lib/chibios/os/hal/src/hal_i2c.c ****   osalMutexUnlock(&i2cp->mutex);
 819              		.loc 1 281 3 view .LVU211
 820              	.LBB198:
 821              	.LBI198:
 995:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 996:./lib/chibios/os/hal/osal/rt/osal.h ****   chSemWait((semaphore_t *)mp);
 997:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 998:./lib/chibios/os/hal/osal/rt/osal.h ****   *mp = 1;
 999:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
1000:./lib/chibios/os/hal/osal/rt/osal.h **** }
1001:./lib/chibios/os/hal/osal/rt/osal.h **** 
1002:./lib/chibios/os/hal/osal/rt/osal.h **** /**
1003:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Unlocks the specified mutex.
1004:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The HAL guarantees to release mutex in reverse lock order. The
1005:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mutex being unlocked is guaranteed to be the last locked mutex
1006:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by the invoking thread.
1007:./lib/chibios/os/hal/osal/rt/osal.h ****  *          The implementation can rely on this behavior and eventually
1008:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ignore the @p mp parameter which is supplied in order to support
1009:./lib/chibios/os/hal/osal/rt/osal.h ****  *          those OSes not supporting a stack of the owned mutexes.
1010:./lib/chibios/os/hal/osal/rt/osal.h ****  *
1011:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in,out] mp    pointer to the @p mutex_t object
1012:./lib/chibios/os/hal/osal/rt/osal.h ****  *
1013:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
1014:./lib/chibios/os/hal/osal/rt/osal.h ****  */
1015:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalMutexUnlock(mutex_t *mp) {
 822              		.loc 2 1015 20 view .LVU212
 823              	.LBB199:
1016:./lib/chibios/os/hal/osal/rt/osal.h **** 
1017:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES
1018:./lib/chibios/os/hal/osal/rt/osal.h ****   chMtxUnlock(mp);
 824              		.loc 2 1018 3 view .LVU213
 825              	.LBE199:
 826              	.LBE198:
 277:lib/chibios/os/hal/src/hal_i2c.c **** 
 827              		.loc 1 277 37 is_stmt 0 view .LVU214
 828 0000 10B5     		push	{r4, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 4, -8
 831              		.cfi_offset 14, -4
 832              		.loc 1 281 3 view .LVU215
 833 0002 0C30     		adds	r0, r0, #12
 834              	.LVL25:
 835              	.LBB201:
 836              	.LBB200:
 837              		.loc 2 1018 3 view .LVU216
 838 0004 FFF7FEFF 		bl	chMtxUnlock
 839              	.LVL26:
 840              		.loc 2 1018 3 view .LVU217
 841              	.LBE200:
 842              	.LBE201:
 282:lib/chibios/os/hal/src/hal_i2c.c **** }
 843              		.loc 1 282 1 view .LVU218
 844              		@ sp needed
 845 0008 10BD     		pop	{r4, pc}
 846              		.cfi_endproc
 847              	.LFE194:
 849              		.text
 850              	.Letext0:
 851              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 852              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 853              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 854              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 855              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 856              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 857              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 858              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 859              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 860              		.file 15 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 861              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 862              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 863              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 864              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 865              		.file 20 "./lib/chibios/os/rt/include/chregistry.h"
 866              		.file 21 "./lib/chibios/os/oslib/include/chmemcore.h"
 867              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 868              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 869              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 870              		.file 25 "./lib/chibios/os/hal/include/hal_i2c.h"
 871              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 872              		.file 27 "./lib/chibios/os/hal/include/hal_pwm.h"
 873              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 874              		.file 29 "./lib/chibios/os/hal/include/hal_spi.h"
 875              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 876              		.file 31 "./lib/chibios/os/hal/include/hal_usb.h"
 877              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_i2c.c
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:16     .text.i2cInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:24     .text.i2cInit:00000000 i2cInit
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:47     .text.i2cObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:54     .text.i2cObjectInit:00000000 i2cObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:103    .text.i2cStart:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:110    .text.i2cStart:00000000 i2cStart
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:249    .text.i2cStop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:256    .text.i2cStop:00000000 i2cStop
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:393    .text.i2cGetErrors:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:400    .text.i2cGetErrors:00000000 i2cGetErrors
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:421    .text.i2cMasterTransmitTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:428    .text.i2cMasterTransmitTimeout:00000000 i2cMasterTransmitTimeout
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:592    .text.i2cMasterReceiveTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:599    .text.i2cMasterReceiveTimeout:00000000 i2cMasterReceiveTimeout
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:756    .text.i2cAcquireBus:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:763    .text.i2cAcquireBus:00000000 i2cAcquireBus
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:803    .text.i2cReleaseBus:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccMEtXdi.s:810    .text.i2cReleaseBus:00000000 i2cReleaseBus

UNDEFINED SYMBOLS
i2c_lld_init
chMtxObjectInit
i2c_lld_start
i2c_lld_stop
i2c_lld_master_transmit_timeout
i2c_lld_master_receive_timeout
chMtxLock
chMtxUnlock
