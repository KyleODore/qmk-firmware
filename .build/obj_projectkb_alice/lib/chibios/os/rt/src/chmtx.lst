   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"chmtx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.chMtxObjectInit,"ax",%progbits
  16              		.align	1
  17              		.global	chMtxObjectInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	chMtxObjectInit:
  25              	.LVL0:
  26              	.LFB154:
  27              		.file 1 "lib/chibios/os/rt/src/chmtx.c"
   1:lib/chibios/os/rt/src/chmtx.c **** /*
   2:lib/chibios/os/rt/src/chmtx.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chmtx.c **** 
   4:lib/chibios/os/rt/src/chmtx.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chmtx.c **** 
   6:lib/chibios/os/rt/src/chmtx.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chmtx.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chmtx.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chmtx.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chmtx.c **** 
  11:lib/chibios/os/rt/src/chmtx.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chmtx.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chmtx.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chmtx.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chmtx.c **** 
  16:lib/chibios/os/rt/src/chmtx.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chmtx.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chmtx.c **** */
  19:lib/chibios/os/rt/src/chmtx.c **** 
  20:lib/chibios/os/rt/src/chmtx.c **** /**
  21:lib/chibios/os/rt/src/chmtx.c ****  * @file    chmtx.c
  22:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Mutexes code.
  23:lib/chibios/os/rt/src/chmtx.c ****  *
  24:lib/chibios/os/rt/src/chmtx.c ****  * @addtogroup mutexes
  25:lib/chibios/os/rt/src/chmtx.c ****  * @details Mutexes related APIs and services.
  26:lib/chibios/os/rt/src/chmtx.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/rt/src/chmtx.c ****  *          A mutex is a threads synchronization object that can be in two
  28:lib/chibios/os/rt/src/chmtx.c ****  *          distinct states:
  29:lib/chibios/os/rt/src/chmtx.c ****  *          - Not owned (unlocked).
  30:lib/chibios/os/rt/src/chmtx.c ****  *          - Owned by a thread (locked).
  31:lib/chibios/os/rt/src/chmtx.c ****  *          .
  32:lib/chibios/os/rt/src/chmtx.c ****  *          Operations defined for mutexes:
  33:lib/chibios/os/rt/src/chmtx.c ****  *          - <b>Lock</b>: The mutex is checked, if the mutex is not owned by
  34:lib/chibios/os/rt/src/chmtx.c ****  *            some other thread then it is associated to the locking thread
  35:lib/chibios/os/rt/src/chmtx.c ****  *            else the thread is queued on the mutex in a list ordered by
  36:lib/chibios/os/rt/src/chmtx.c ****  *            priority.
  37:lib/chibios/os/rt/src/chmtx.c ****  *          - <b>Unlock</b>: The mutex is released by the owner and the highest
  38:lib/chibios/os/rt/src/chmtx.c ****  *            priority thread waiting in the queue, if any, is resumed and made
  39:lib/chibios/os/rt/src/chmtx.c ****  *            owner of the mutex.
  40:lib/chibios/os/rt/src/chmtx.c ****  *          .
  41:lib/chibios/os/rt/src/chmtx.c ****  *          <h2>Constraints</h2>
  42:lib/chibios/os/rt/src/chmtx.c ****  *          In ChibiOS/RT the Unlock operations must always be performed
  43:lib/chibios/os/rt/src/chmtx.c ****  *          in lock-reverse order. This restriction both improves the
  44:lib/chibios/os/rt/src/chmtx.c ****  *          performance and is required for an efficient implementation
  45:lib/chibios/os/rt/src/chmtx.c ****  *          of the priority inheritance mechanism.<br>
  46:lib/chibios/os/rt/src/chmtx.c ****  *          Operating under this restriction also ensures that deadlocks
  47:lib/chibios/os/rt/src/chmtx.c ****  *          are no possible.
  48:lib/chibios/os/rt/src/chmtx.c ****  *
  49:lib/chibios/os/rt/src/chmtx.c ****  *          <h2>Recursive mode</h2>
  50:lib/chibios/os/rt/src/chmtx.c ****  *          By default mutexes are not recursive, this mean that it is not
  51:lib/chibios/os/rt/src/chmtx.c ****  *          possible to take a mutex already owned by the same thread.
  52:lib/chibios/os/rt/src/chmtx.c ****  *          It is possible to enable the recursive behavior by enabling the
  53:lib/chibios/os/rt/src/chmtx.c ****  *          option @p CH_CFG_USE_MUTEXES_RECURSIVE.
  54:lib/chibios/os/rt/src/chmtx.c ****  *
  55:lib/chibios/os/rt/src/chmtx.c ****  *          <h2>The priority inversion problem</h2>
  56:lib/chibios/os/rt/src/chmtx.c ****  *          The mutexes in ChibiOS/RT implements the <b>full</b> priority
  57:lib/chibios/os/rt/src/chmtx.c ****  *          inheritance mechanism in order handle the priority inversion
  58:lib/chibios/os/rt/src/chmtx.c ****  *          problem.<br>
  59:lib/chibios/os/rt/src/chmtx.c ****  *          When a thread is queued on a mutex, any thread, directly or
  60:lib/chibios/os/rt/src/chmtx.c ****  *          indirectly, holding the mutex gains the same priority of the
  61:lib/chibios/os/rt/src/chmtx.c ****  *          waiting thread (if their priority was not already equal or higher).
  62:lib/chibios/os/rt/src/chmtx.c ****  *          The mechanism works with any number of nested mutexes and any
  63:lib/chibios/os/rt/src/chmtx.c ****  *          number of involved threads. The algorithm complexity (worst case)
  64:lib/chibios/os/rt/src/chmtx.c ****  *          is N with N equal to the number of nested mutexes.
  65:lib/chibios/os/rt/src/chmtx.c ****  * @pre     In order to use the mutex APIs the @p CH_CFG_USE_MUTEXES option
  66:lib/chibios/os/rt/src/chmtx.c ****  *          must be enabled in @p chconf.h.
  67:lib/chibios/os/rt/src/chmtx.c ****  * @post    Enabling mutexes requires 5-12 (depending on the architecture)
  68:lib/chibios/os/rt/src/chmtx.c ****  *          extra bytes in the @p thread_t structure.
  69:lib/chibios/os/rt/src/chmtx.c ****  * @{
  70:lib/chibios/os/rt/src/chmtx.c ****  */
  71:lib/chibios/os/rt/src/chmtx.c **** 
  72:lib/chibios/os/rt/src/chmtx.c **** #include "ch.h"
  73:lib/chibios/os/rt/src/chmtx.c **** 
  74:lib/chibios/os/rt/src/chmtx.c **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  75:lib/chibios/os/rt/src/chmtx.c **** 
  76:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  77:lib/chibios/os/rt/src/chmtx.c **** /* Module exported variables.                                                */
  78:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  79:lib/chibios/os/rt/src/chmtx.c **** 
  80:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  81:lib/chibios/os/rt/src/chmtx.c **** /* Module local types.                                                       */
  82:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  83:lib/chibios/os/rt/src/chmtx.c **** 
  84:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  85:lib/chibios/os/rt/src/chmtx.c **** /* Module local variables.                                                   */
  86:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chmtx.c **** 
  88:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  89:lib/chibios/os/rt/src/chmtx.c **** /* Module local functions.                                                   */
  90:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  91:lib/chibios/os/rt/src/chmtx.c **** 
  92:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  93:lib/chibios/os/rt/src/chmtx.c **** /* Module exported functions.                                                */
  94:lib/chibios/os/rt/src/chmtx.c **** /*===========================================================================*/
  95:lib/chibios/os/rt/src/chmtx.c **** 
  96:lib/chibios/os/rt/src/chmtx.c **** /**
  97:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Initializes s @p mutex_t structure.
  98:lib/chibios/os/rt/src/chmtx.c ****  *
  99:lib/chibios/os/rt/src/chmtx.c ****  * @param[out] mp       pointer to a @p mutex_t structure
 100:lib/chibios/os/rt/src/chmtx.c ****  *
 101:lib/chibios/os/rt/src/chmtx.c ****  * @init
 102:lib/chibios/os/rt/src/chmtx.c ****  */
 103:lib/chibios/os/rt/src/chmtx.c **** void chMtxObjectInit(mutex_t *mp) {
  28              		.loc 1 103 35 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 104:lib/chibios/os/rt/src/chmtx.c **** 
 105:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
  33              		.loc 1 105 3 view .LVU1
  34              		.loc 1 105 3 view .LVU2
 106:lib/chibios/os/rt/src/chmtx.c **** 
 107:lib/chibios/os/rt/src/chmtx.c ****   queue_init(&mp->queue);
  35              		.loc 1 107 3 view .LVU3
  36              	.LBB88:
  37              	.LBI88:
  38              		.file 2 "./lib/chibios/os/rt/include/chschd.h"
   1:./lib/chibios/os/rt/include/chschd.h **** /*
   2:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chschd.h **** 
   4:./lib/chibios/os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chschd.h **** 
   6:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chschd.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chschd.h **** 
  11:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chschd.h **** 
  16:./lib/chibios/os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chschd.h **** */
  19:./lib/chibios/os/rt/include/chschd.h **** 
  20:./lib/chibios/os/rt/include/chschd.h **** /**
  21:./lib/chibios/os/rt/include/chschd.h ****  * @file    chschd.h
  22:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:./lib/chibios/os/rt/include/chschd.h ****  *
  24:./lib/chibios/os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:./lib/chibios/os/rt/include/chschd.h ****  * @{
  26:./lib/chibios/os/rt/include/chschd.h ****  */
  27:./lib/chibios/os/rt/include/chschd.h **** 
  28:./lib/chibios/os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:./lib/chibios/os/rt/include/chschd.h **** #define CHSCHD_H
  30:./lib/chibios/os/rt/include/chschd.h **** 
  31:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chschd.h **** 
  35:./lib/chibios/os/rt/include/chschd.h **** /**
  36:./lib/chibios/os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:./lib/chibios/os/rt/include/chschd.h ****  * @{
  38:./lib/chibios/os/rt/include/chschd.h ****  */
  39:./lib/chibios/os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:./lib/chibios/os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  42:./lib/chibios/os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  44:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  45:./lib/chibios/os/rt/include/chschd.h **** 
  46:./lib/chibios/os/rt/include/chschd.h **** /**
  47:./lib/chibios/os/rt/include/chschd.h ****  * @name    Priority constants
  48:./lib/chibios/os/rt/include/chschd.h ****  * @{
  49:./lib/chibios/os/rt/include/chschd.h ****  */
  50:./lib/chibios/os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:./lib/chibios/os/rt/include/chschd.h ****                                                  priority.                  */
  52:./lib/chibios/os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:./lib/chibios/os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:./lib/chibios/os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:./lib/chibios/os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  57:./lib/chibios/os/rt/include/chschd.h **** 
  58:./lib/chibios/os/rt/include/chschd.h **** /**
  59:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread states
  60:./lib/chibios/os/rt/include/chschd.h ****  * @{
  61:./lib/chibios/os/rt/include/chschd.h ****  */
  62:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:./lib/chibios/os/rt/include/chschd.h ****                                                   ready list.               */
  64:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On a queue.        */
  68:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:./lib/chibios/os/rt/include/chschd.h ****                                                   in queue.                 */
  77:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:./lib/chibios/os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:./lib/chibios/os/rt/include/chschd.h ****                                                   message.                  */
  81:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:./lib/chibios/os/rt/include/chschd.h **** 
  83:./lib/chibios/os/rt/include/chschd.h **** /**
  84:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:./lib/chibios/os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:./lib/chibios/os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:./lib/chibios/os/rt/include/chschd.h ****  */
  88:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:./lib/chibios/os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:./lib/chibios/os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:./lib/chibios/os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  93:./lib/chibios/os/rt/include/chschd.h **** 
  94:./lib/chibios/os/rt/include/chschd.h **** /**
  95:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:./lib/chibios/os/rt/include/chschd.h ****  * @{
  97:./lib/chibios/os/rt/include/chschd.h ****  */
  98:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:./lib/chibios/os/rt/include/chschd.h ****                                                  mask.                      */
 100:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:./lib/chibios/os/rt/include/chschd.h ****                                                  flag.                      */
 107:./lib/chibios/os/rt/include/chschd.h **** /** @} */
 108:./lib/chibios/os/rt/include/chschd.h **** 
 109:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 110:./lib/chibios/os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 112:./lib/chibios/os/rt/include/chschd.h **** 
 113:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 114:./lib/chibios/os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chschd.h **** 
 117:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 120:./lib/chibios/os/rt/include/chschd.h **** 
 121:./lib/chibios/os/rt/include/chschd.h **** /**
 122:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:./lib/chibios/os/rt/include/chschd.h ****  */
 124:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_list {
 125:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:./lib/chibios/os/rt/include/chschd.h **** };
 127:./lib/chibios/os/rt/include/chschd.h **** 
 128:./lib/chibios/os/rt/include/chschd.h **** /**
 129:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:./lib/chibios/os/rt/include/chschd.h ****  */
 131:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_queue {
 132:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:./lib/chibios/os/rt/include/chschd.h **** };
 135:./lib/chibios/os/rt/include/chschd.h **** 
 136:./lib/chibios/os/rt/include/chschd.h **** /**
 137:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:./lib/chibios/os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:./lib/chibios/os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:./lib/chibios/os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:./lib/chibios/os/rt/include/chschd.h ****  */
 142:./lib/chibios/os/rt/include/chschd.h **** struct ch_thread {
 143:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:./lib/chibios/os/rt/include/chschd.h **** #endif
 150:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:./lib/chibios/os/rt/include/chschd.h ****   /**
 153:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:./lib/chibios/os/rt/include/chschd.h ****    */
 155:./lib/chibios/os/rt/include/chschd.h ****   const char            *name;
 156:./lib/chibios/os/rt/include/chschd.h **** #endif
 157:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:./lib/chibios/os/rt/include/chschd.h ****   /**
 160:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:./lib/chibios/os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:./lib/chibios/os/rt/include/chschd.h ****    *          dynamic threading.
 163:./lib/chibios/os/rt/include/chschd.h ****    */
 164:./lib/chibios/os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:./lib/chibios/os/rt/include/chschd.h **** #endif
 166:./lib/chibios/os/rt/include/chschd.h ****   /**
 167:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:./lib/chibios/os/rt/include/chschd.h ****    */
 169:./lib/chibios/os/rt/include/chschd.h ****   tstate_t              state;
 170:./lib/chibios/os/rt/include/chschd.h ****   /**
 171:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:./lib/chibios/os/rt/include/chschd.h ****    */
 173:./lib/chibios/os/rt/include/chschd.h ****   tmode_t               flags;
 174:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:./lib/chibios/os/rt/include/chschd.h ****   /**
 176:./lib/chibios/os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:./lib/chibios/os/rt/include/chschd.h ****    */
 178:./lib/chibios/os/rt/include/chschd.h ****   trefs_t               refs;
 179:./lib/chibios/os/rt/include/chschd.h **** #endif
 180:./lib/chibios/os/rt/include/chschd.h ****   /**
 181:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:./lib/chibios/os/rt/include/chschd.h ****    */
 183:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:./lib/chibios/os/rt/include/chschd.h ****   tslices_t             ticks;
 185:./lib/chibios/os/rt/include/chschd.h **** #endif
 186:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:./lib/chibios/os/rt/include/chschd.h ****   /**
 188:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:./lib/chibios/os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:./lib/chibios/os/rt/include/chschd.h ****    */
 191:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    time;
 192:./lib/chibios/os/rt/include/chschd.h **** #endif
 193:./lib/chibios/os/rt/include/chschd.h ****   /**
 194:./lib/chibios/os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:./lib/chibios/os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:./lib/chibios/os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:./lib/chibios/os/rt/include/chschd.h ****    */
 198:./lib/chibios/os/rt/include/chschd.h ****   union {
 199:./lib/chibios/os/rt/include/chschd.h ****     /**
 200:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:./lib/chibios/os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:./lib/chibios/os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:./lib/chibios/os/rt/include/chschd.h ****      */
 205:./lib/chibios/os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:./lib/chibios/os/rt/include/chschd.h ****     /**
 207:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:./lib/chibios/os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:./lib/chibios/os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:./lib/chibios/os/rt/include/chschd.h ****      *          this thread.
 211:./lib/chibios/os/rt/include/chschd.h ****      */
 212:./lib/chibios/os/rt/include/chschd.h ****     msg_t               exitcode;
 213:./lib/chibios/os/rt/include/chschd.h ****     /**
 214:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:./lib/chibios/os/rt/include/chschd.h ****      *          states.
 218:./lib/chibios/os/rt/include/chschd.h ****      */
 219:./lib/chibios/os/rt/include/chschd.h ****     void                *wtobjp;
 220:./lib/chibios/os/rt/include/chschd.h ****     /**
 221:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 225:./lib/chibios/os/rt/include/chschd.h ****      */
 226:./lib/chibios/os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:./lib/chibios/os/rt/include/chschd.h ****     /**
 229:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:./lib/chibios/os/rt/include/chschd.h ****      */
 231:./lib/chibios/os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:./lib/chibios/os/rt/include/chschd.h **** #endif
 233:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:./lib/chibios/os/rt/include/chschd.h ****     /**
 235:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 239:./lib/chibios/os/rt/include/chschd.h ****      */
 240:./lib/chibios/os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:./lib/chibios/os/rt/include/chschd.h **** #endif
 242:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:./lib/chibios/os/rt/include/chschd.h ****     /**
 244:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 248:./lib/chibios/os/rt/include/chschd.h ****      */
 249:./lib/chibios/os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:./lib/chibios/os/rt/include/chschd.h **** #endif
 251:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:./lib/chibios/os/rt/include/chschd.h ****     /**
 253:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:./lib/chibios/os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:./lib/chibios/os/rt/include/chschd.h ****      */
 257:./lib/chibios/os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:./lib/chibios/os/rt/include/chschd.h **** #endif
 259:./lib/chibios/os/rt/include/chschd.h ****   }                     u;
 260:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:./lib/chibios/os/rt/include/chschd.h ****   /**
 262:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:./lib/chibios/os/rt/include/chschd.h ****    */
 264:./lib/chibios/os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:./lib/chibios/os/rt/include/chschd.h **** #endif
 266:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:./lib/chibios/os/rt/include/chschd.h ****   /**
 268:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:./lib/chibios/os/rt/include/chschd.h ****    */
 270:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:./lib/chibios/os/rt/include/chschd.h **** #endif
 272:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:./lib/chibios/os/rt/include/chschd.h ****   /**
 274:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:./lib/chibios/os/rt/include/chschd.h ****    */
 276:./lib/chibios/os/rt/include/chschd.h ****   eventmask_t           epending;
 277:./lib/chibios/os/rt/include/chschd.h **** #endif
 278:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chschd.h ****   /**
 280:./lib/chibios/os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:./lib/chibios/os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:./lib/chibios/os/rt/include/chschd.h ****    */
 283:./lib/chibios/os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:./lib/chibios/os/rt/include/chschd.h ****   /**
 285:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:./lib/chibios/os/rt/include/chschd.h ****    */
 287:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               realprio;
 288:./lib/chibios/os/rt/include/chschd.h **** #endif
 289:./lib/chibios/os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:./lib/chibios/os/rt/include/chschd.h ****   /**
 292:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:./lib/chibios/os/rt/include/chschd.h ****    */
 294:./lib/chibios/os/rt/include/chschd.h ****   void                  *mpool;
 295:./lib/chibios/os/rt/include/chschd.h **** #endif
 296:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:./lib/chibios/os/rt/include/chschd.h ****   /**
 298:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:./lib/chibios/os/rt/include/chschd.h ****    */
 300:./lib/chibios/os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:./lib/chibios/os/rt/include/chschd.h **** #endif
 302:./lib/chibios/os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:./lib/chibios/os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:./lib/chibios/os/rt/include/chschd.h **** #endif
 306:./lib/chibios/os/rt/include/chschd.h **** };
 307:./lib/chibios/os/rt/include/chschd.h **** 
 308:./lib/chibios/os/rt/include/chschd.h **** /**
 309:./lib/chibios/os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:./lib/chibios/os/rt/include/chschd.h ****  *
 311:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:./lib/chibios/os/rt/include/chschd.h ****  */
 313:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:./lib/chibios/os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:./lib/chibios/os/rt/include/chschd.h ****                                                 pointer.                    */
 319:./lib/chibios/os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:./lib/chibios/os/rt/include/chschd.h ****                                                 parameter.                  */
 321:./lib/chibios/os/rt/include/chschd.h **** };
 322:./lib/chibios/os/rt/include/chschd.h **** 
 323:./lib/chibios/os/rt/include/chschd.h **** /**
 324:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:./lib/chibios/os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:./lib/chibios/os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:./lib/chibios/os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:./lib/chibios/os/rt/include/chschd.h ****  */
 329:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 332:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 334:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:./lib/chibios/os/rt/include/chschd.h **** #endif
 338:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:./lib/chibios/os/rt/include/chschd.h ****   /**
 340:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:./lib/chibios/os/rt/include/chschd.h ****    */
 342:./lib/chibios/os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:./lib/chibios/os/rt/include/chschd.h ****                                                 tick event.                 */
 344:./lib/chibios/os/rt/include/chschd.h **** #endif
 345:./lib/chibios/os/rt/include/chschd.h **** };
 346:./lib/chibios/os/rt/include/chschd.h **** 
 347:./lib/chibios/os/rt/include/chschd.h **** /**
 348:./lib/chibios/os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:./lib/chibios/os/rt/include/chschd.h ****  */
 350:./lib/chibios/os/rt/include/chschd.h **** struct ch_ready_list {
 351:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:./lib/chibios/os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:./lib/chibios/os/rt/include/chschd.h ****                                                 offsets.                    */
 356:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:./lib/chibios/os/rt/include/chschd.h **** #endif
 360:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:./lib/chibios/os/rt/include/chschd.h ****                                                 thread.                     */
 363:./lib/chibios/os/rt/include/chschd.h **** };
 364:./lib/chibios/os/rt/include/chschd.h **** 
 365:./lib/chibios/os/rt/include/chschd.h **** /**
 366:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:./lib/chibios/os/rt/include/chschd.h ****  */
 368:./lib/chibios/os/rt/include/chschd.h **** struct ch_system_debug {
 369:./lib/chibios/os/rt/include/chschd.h ****   /**
 370:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:./lib/chibios/os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:./lib/chibios/os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:./lib/chibios/os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:./lib/chibios/os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:./lib/chibios/os/rt/include/chschd.h ****    */
 376:./lib/chibios/os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:./lib/chibios/os/rt/include/chschd.h ****   /**
 379:./lib/chibios/os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:./lib/chibios/os/rt/include/chschd.h ****    */
 381:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:./lib/chibios/os/rt/include/chschd.h ****   /**
 383:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:./lib/chibios/os/rt/include/chschd.h ****    */
 385:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:./lib/chibios/os/rt/include/chschd.h **** #endif
 387:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:./lib/chibios/os/rt/include/chschd.h ****   /**
 389:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:./lib/chibios/os/rt/include/chschd.h ****    */
 391:./lib/chibios/os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:./lib/chibios/os/rt/include/chschd.h **** #endif
 393:./lib/chibios/os/rt/include/chschd.h **** };
 394:./lib/chibios/os/rt/include/chschd.h **** 
 395:./lib/chibios/os/rt/include/chschd.h **** /**
 396:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System data structure.
 397:./lib/chibios/os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:./lib/chibios/os/rt/include/chschd.h ****  *          stacks.
 399:./lib/chibios/os/rt/include/chschd.h ****  */
 400:./lib/chibios/os/rt/include/chschd.h **** struct ch_system {
 401:./lib/chibios/os/rt/include/chschd.h ****   /**
 402:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:./lib/chibios/os/rt/include/chschd.h ****    */
 404:./lib/chibios/os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:./lib/chibios/os/rt/include/chschd.h ****   /**
 406:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:./lib/chibios/os/rt/include/chschd.h ****    */
 408:./lib/chibios/os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:./lib/chibios/os/rt/include/chschd.h ****   /**
 410:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System debug.
 411:./lib/chibios/os/rt/include/chschd.h ****    */
 412:./lib/chibios/os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:./lib/chibios/os/rt/include/chschd.h ****   /**
 414:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:./lib/chibios/os/rt/include/chschd.h ****    */
 416:./lib/chibios/os/rt/include/chschd.h ****   thread_t              mainthread;
 417:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:./lib/chibios/os/rt/include/chschd.h ****   /**
 419:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:./lib/chibios/os/rt/include/chschd.h ****    */
 421:./lib/chibios/os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:./lib/chibios/os/rt/include/chschd.h **** #endif
 423:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:./lib/chibios/os/rt/include/chschd.h ****   /**
 425:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:./lib/chibios/os/rt/include/chschd.h ****    */
 427:./lib/chibios/os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:./lib/chibios/os/rt/include/chschd.h **** #endif
 429:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:./lib/chibios/os/rt/include/chschd.h **** };
 431:./lib/chibios/os/rt/include/chschd.h **** 
 432:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 433:./lib/chibios/os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 435:./lib/chibios/os/rt/include/chschd.h **** 
 436:./lib/chibios/os/rt/include/chschd.h **** /**
 437:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:./lib/chibios/os/rt/include/chschd.h ****  *
 439:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 440:./lib/chibios/os/rt/include/chschd.h ****  */
 441:./lib/chibios/os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:./lib/chibios/os/rt/include/chschd.h **** 
 443:./lib/chibios/os/rt/include/chschd.h **** /**
 444:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:./lib/chibios/os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:./lib/chibios/os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:./lib/chibios/os/rt/include/chschd.h ****  */
 448:./lib/chibios/os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:./lib/chibios/os/rt/include/chschd.h **** 
 450:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 451:./lib/chibios/os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 453:./lib/chibios/os/rt/include/chschd.h **** 
 454:./lib/chibios/os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:./lib/chibios/os/rt/include/chschd.h **** extern ch_system_t ch;
 456:./lib/chibios/os/rt/include/chschd.h **** #endif
 457:./lib/chibios/os/rt/include/chschd.h **** 
 458:./lib/chibios/os/rt/include/chschd.h **** /*
 459:./lib/chibios/os/rt/include/chschd.h ****  * Scheduler APIs.
 460:./lib/chibios/os/rt/include/chschd.h ****  */
 461:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 462:./lib/chibios/os/rt/include/chschd.h **** extern "C" {
 463:./lib/chibios/os/rt/include/chschd.h **** #endif
 464:./lib/chibios/os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:./lib/chibios/os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:./lib/chibios/os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:./lib/chibios/os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:./lib/chibios/os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:./lib/chibios/os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:./lib/chibios/os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:./lib/chibios/os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:./lib/chibios/os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:./lib/chibios/os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 485:./lib/chibios/os/rt/include/chschd.h **** }
 486:./lib/chibios/os/rt/include/chschd.h **** #endif
 487:./lib/chibios/os/rt/include/chschd.h **** 
 488:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 489:./lib/chibios/os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 491:./lib/chibios/os/rt/include/chschd.h **** 
 492:./lib/chibios/os/rt/include/chschd.h **** /**
 493:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:./lib/chibios/os/rt/include/chschd.h ****  *
 495:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:./lib/chibios/os/rt/include/chschd.h ****  *
 497:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 498:./lib/chibios/os/rt/include/chschd.h ****  */
 499:./lib/chibios/os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
 500:./lib/chibios/os/rt/include/chschd.h **** 
 501:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
 502:./lib/chibios/os/rt/include/chschd.h **** }
 503:./lib/chibios/os/rt/include/chschd.h **** 
 504:./lib/chibios/os/rt/include/chschd.h **** /**
 505:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:./lib/chibios/os/rt/include/chschd.h ****  *
 507:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 509:./lib/chibios/os/rt/include/chschd.h ****  *
 510:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 511:./lib/chibios/os/rt/include/chschd.h ****  */
 512:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:./lib/chibios/os/rt/include/chschd.h **** 
 514:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:./lib/chibios/os/rt/include/chschd.h **** }
 516:./lib/chibios/os/rt/include/chschd.h **** 
 517:./lib/chibios/os/rt/include/chschd.h **** /**
 518:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:./lib/chibios/os/rt/include/chschd.h ****  *
 520:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 522:./lib/chibios/os/rt/include/chschd.h ****  *
 523:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 524:./lib/chibios/os/rt/include/chschd.h ****  */
 525:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:./lib/chibios/os/rt/include/chschd.h **** 
 527:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:./lib/chibios/os/rt/include/chschd.h **** }
 529:./lib/chibios/os/rt/include/chschd.h **** 
 530:./lib/chibios/os/rt/include/chschd.h **** /**
 531:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:./lib/chibios/os/rt/include/chschd.h ****  *
 533:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:./lib/chibios/os/rt/include/chschd.h ****  *
 535:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 536:./lib/chibios/os/rt/include/chschd.h ****  */
 537:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
  39              		.loc 2 537 20 view .LVU4
  40              	.LBB89:
 538:./lib/chibios/os/rt/include/chschd.h **** 
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
  41              		.loc 2 539 3 view .LVU5
  42              	.LBE89:
  43              	.LBE88:
 108:lib/chibios/os/rt/src/chmtx.c ****   mp->owner = NULL;
  44              		.loc 1 108 13 is_stmt 0 view .LVU6
  45 0000 0023     		movs	r3, #0
  46              	.LBB91:
  47              	.LBB90:
  48              		.loc 2 539 13 view .LVU7
  49 0002 0060     		str	r0, [r0]
 540:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
  50              		.loc 2 540 3 is_stmt 1 view .LVU8
  51              		.loc 2 540 13 is_stmt 0 view .LVU9
  52 0004 4060     		str	r0, [r0, #4]
  53              	.LVL1:
  54              		.loc 2 540 13 view .LVU10
  55              	.LBE90:
  56              	.LBE91:
  57              		.loc 1 108 3 is_stmt 1 view .LVU11
  58              		.loc 1 108 13 is_stmt 0 view .LVU12
  59 0006 8360     		str	r3, [r0, #8]
 109:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 110:lib/chibios/os/rt/src/chmtx.c ****   mp->cnt = (cnt_t)0;
 111:lib/chibios/os/rt/src/chmtx.c **** #endif
 112:lib/chibios/os/rt/src/chmtx.c **** }
  60              		.loc 1 112 1 view .LVU13
  61              		@ sp needed
  62 0008 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE154:
  66              		.section	.text.chMtxLockS,"ax",%progbits
  67              		.align	1
  68              		.global	chMtxLockS
  69              		.syntax unified
  70              		.code	16
  71              		.thumb_func
  72              		.fpu softvfp
  74              	chMtxLockS:
  75              	.LVL2:
  76              	.LFB156:
 113:lib/chibios/os/rt/src/chmtx.c **** 
 114:lib/chibios/os/rt/src/chmtx.c **** /**
 115:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Locks the specified mutex.
 116:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is locked and inserted in the per-thread stack of owned
 117:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes.
 118:lib/chibios/os/rt/src/chmtx.c ****  *
 119:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 120:lib/chibios/os/rt/src/chmtx.c ****  *
 121:lib/chibios/os/rt/src/chmtx.c ****  * @api
 122:lib/chibios/os/rt/src/chmtx.c ****  */
 123:lib/chibios/os/rt/src/chmtx.c **** void chMtxLock(mutex_t *mp) {
 124:lib/chibios/os/rt/src/chmtx.c **** 
 125:lib/chibios/os/rt/src/chmtx.c ****   chSysLock();
 126:lib/chibios/os/rt/src/chmtx.c ****   chMtxLockS(mp);
 127:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 128:lib/chibios/os/rt/src/chmtx.c **** }
 129:lib/chibios/os/rt/src/chmtx.c **** 
 130:lib/chibios/os/rt/src/chmtx.c **** /**
 131:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Locks the specified mutex.
 132:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is locked and inserted in the per-thread stack of owned
 133:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes.
 134:lib/chibios/os/rt/src/chmtx.c ****  *
 135:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 136:lib/chibios/os/rt/src/chmtx.c ****  *
 137:lib/chibios/os/rt/src/chmtx.c ****  * @sclass
 138:lib/chibios/os/rt/src/chmtx.c ****  */
 139:lib/chibios/os/rt/src/chmtx.c **** void chMtxLockS(mutex_t *mp) {
  77              		.loc 1 139 30 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
 140:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
  81              		.loc 1 140 3 view .LVU15
 139:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
  82              		.loc 1 139 30 is_stmt 0 view .LVU16
  83 0000 70B5     		push	{r4, r5, r6, lr}
  84              		.cfi_def_cfa_offset 16
  85              		.cfi_offset 4, -16
  86              		.cfi_offset 5, -12
  87              		.cfi_offset 6, -8
  88              		.cfi_offset 14, -4
  89              		.loc 1 140 13 view .LVU17
  90 0002 1A4B     		ldr	r3, .L13
 141:lib/chibios/os/rt/src/chmtx.c **** 
 142:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheckClassS();
 143:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
 144:lib/chibios/os/rt/src/chmtx.c **** 
 145:lib/chibios/os/rt/src/chmtx.c ****   /* Is the mutex already locked? */
 146:lib/chibios/os/rt/src/chmtx.c ****   if (mp->owner != NULL) {
  91              		.loc 1 146 9 view .LVU18
  92 0004 8468     		ldr	r4, [r0, #8]
 139:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
  93              		.loc 1 139 30 view .LVU19
  94 0006 0600     		movs	r6, r0
 140:lib/chibios/os/rt/src/chmtx.c **** 
  95              		.loc 1 140 13 view .LVU20
  96 0008 9D69     		ldr	r5, [r3, #24]
  97              	.LVL3:
 142:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
  98              		.loc 1 142 21 is_stmt 1 view .LVU21
 143:lib/chibios/os/rt/src/chmtx.c **** 
  99              		.loc 1 143 3 view .LVU22
 143:lib/chibios/os/rt/src/chmtx.c **** 
 100              		.loc 1 143 3 view .LVU23
 101              		.loc 1 146 3 view .LVU24
 102              		.loc 1 146 6 is_stmt 0 view .LVU25
 103 000a 002C     		cmp	r4, #0
 104 000c 0CD1     		bne	.L3
 147:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 148:lib/chibios/os/rt/src/chmtx.c **** 
 149:lib/chibios/os/rt/src/chmtx.c ****     chDbgAssert(mp->cnt >= (cnt_t)1, "counter is not positive");
 150:lib/chibios/os/rt/src/chmtx.c **** 
 151:lib/chibios/os/rt/src/chmtx.c ****     /* If the mutex is already owned by this thread, the counter is increased
 152:lib/chibios/os/rt/src/chmtx.c ****        and there is no need of more actions.*/
 153:lib/chibios/os/rt/src/chmtx.c ****     if (mp->owner == ctp) {
 154:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt++;
 155:lib/chibios/os/rt/src/chmtx.c ****     }
 156:lib/chibios/os/rt/src/chmtx.c ****     else {
 157:lib/chibios/os/rt/src/chmtx.c **** #endif
 158:lib/chibios/os/rt/src/chmtx.c ****       /* Priority inheritance protocol; explores the thread-mutex dependencies
 159:lib/chibios/os/rt/src/chmtx.c ****          boosting the priority of all the affected threads to equal the
 160:lib/chibios/os/rt/src/chmtx.c ****          priority of the running thread requesting the mutex.*/
 161:lib/chibios/os/rt/src/chmtx.c ****       thread_t *tp = mp->owner;
 162:lib/chibios/os/rt/src/chmtx.c **** 
 163:lib/chibios/os/rt/src/chmtx.c ****       /* Does the running thread have higher priority than the mutex
 164:lib/chibios/os/rt/src/chmtx.c ****          owning thread? */
 165:lib/chibios/os/rt/src/chmtx.c ****       while (tp->prio < ctp->prio) {
 166:lib/chibios/os/rt/src/chmtx.c ****         /* Make priority of thread tp match the running thread's priority.*/
 167:lib/chibios/os/rt/src/chmtx.c ****         tp->prio = ctp->prio;
 168:lib/chibios/os/rt/src/chmtx.c **** 
 169:lib/chibios/os/rt/src/chmtx.c ****         /* The following states need priority queues reordering.*/
 170:lib/chibios/os/rt/src/chmtx.c ****         switch (tp->state) {
 171:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTMTX:
 172:lib/chibios/os/rt/src/chmtx.c ****           /* Re-enqueues the mutex owner with its new priority.*/
 173:lib/chibios/os/rt/src/chmtx.c ****           queue_prio_insert(queue_dequeue(tp), &tp->u.wtmtxp->queue);
 174:lib/chibios/os/rt/src/chmtx.c ****           tp = tp->u.wtmtxp->owner;
 175:lib/chibios/os/rt/src/chmtx.c ****           /*lint -e{9042} [16.1] Continues the while.*/
 176:lib/chibios/os/rt/src/chmtx.c ****           continue;
 177:lib/chibios/os/rt/src/chmtx.c **** #if (CH_CFG_USE_CONDVARS == TRUE) ||                                        \
 178:lib/chibios/os/rt/src/chmtx.c ****     ((CH_CFG_USE_SEMAPHORES == TRUE) &&                                     \
 179:lib/chibios/os/rt/src/chmtx.c ****      (CH_CFG_USE_SEMAPHORES_PRIORITY == TRUE)) ||                           \
 180:lib/chibios/os/rt/src/chmtx.c ****     ((CH_CFG_USE_MESSAGES == TRUE) &&                                       \
 181:lib/chibios/os/rt/src/chmtx.c ****      (CH_CFG_USE_MESSAGES_PRIORITY == TRUE))
 182:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_CONDVARS == TRUE
 183:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTCOND:
 184:lib/chibios/os/rt/src/chmtx.c **** #endif
 185:lib/chibios/os/rt/src/chmtx.c **** #if (CH_CFG_USE_SEMAPHORES == TRUE) &&                                      \
 186:lib/chibios/os/rt/src/chmtx.c ****     (CH_CFG_USE_SEMAPHORES_PRIORITY == TRUE)
 187:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTSEM:
 188:lib/chibios/os/rt/src/chmtx.c **** #endif
 189:lib/chibios/os/rt/src/chmtx.c **** #if (CH_CFG_USE_MESSAGES == TRUE) && (CH_CFG_USE_MESSAGES_PRIORITY == TRUE)
 190:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_SNDMSGQ:
 191:lib/chibios/os/rt/src/chmtx.c **** #endif
 192:lib/chibios/os/rt/src/chmtx.c ****           /* Re-enqueues tp with its new priority on the queue.*/
 193:lib/chibios/os/rt/src/chmtx.c ****           queue_prio_insert(queue_dequeue(tp), &tp->u.wtmtxp->queue);
 194:lib/chibios/os/rt/src/chmtx.c ****           break;
 195:lib/chibios/os/rt/src/chmtx.c **** #endif
 196:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_READY:
 197:lib/chibios/os/rt/src/chmtx.c **** #if CH_DBG_ENABLE_ASSERTS == TRUE
 198:lib/chibios/os/rt/src/chmtx.c ****           /* Prevents an assertion in chSchReadyI().*/
 199:lib/chibios/os/rt/src/chmtx.c ****           tp->state = CH_STATE_CURRENT;
 200:lib/chibios/os/rt/src/chmtx.c **** #endif
 201:lib/chibios/os/rt/src/chmtx.c ****           /* Re-enqueues tp with its new priority on the ready list.*/
 202:lib/chibios/os/rt/src/chmtx.c ****           (void) chSchReadyI(queue_dequeue(tp));
 203:lib/chibios/os/rt/src/chmtx.c ****           break;
 204:lib/chibios/os/rt/src/chmtx.c ****         default:
 205:lib/chibios/os/rt/src/chmtx.c ****           /* Nothing to do for other states.*/
 206:lib/chibios/os/rt/src/chmtx.c ****           break;
 207:lib/chibios/os/rt/src/chmtx.c ****         }
 208:lib/chibios/os/rt/src/chmtx.c ****         break;
 209:lib/chibios/os/rt/src/chmtx.c ****       }
 210:lib/chibios/os/rt/src/chmtx.c **** 
 211:lib/chibios/os/rt/src/chmtx.c ****       /* Sleep on the mutex.*/
 212:lib/chibios/os/rt/src/chmtx.c ****       queue_prio_insert(ctp, &mp->queue);
 213:lib/chibios/os/rt/src/chmtx.c ****       ctp->u.wtmtxp = mp;
 214:lib/chibios/os/rt/src/chmtx.c ****       chSchGoSleepS(CH_STATE_WTMTX);
 215:lib/chibios/os/rt/src/chmtx.c **** 
 216:lib/chibios/os/rt/src/chmtx.c ****       /* It is assumed that the thread performing the unlock operation assigns
 217:lib/chibios/os/rt/src/chmtx.c ****          the mutex to this thread.*/
 218:lib/chibios/os/rt/src/chmtx.c ****       chDbgAssert(mp->owner == ctp, "not owner");
 219:lib/chibios/os/rt/src/chmtx.c ****       chDbgAssert(ctp->mtxlist == mp, "not owned");
 220:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 221:lib/chibios/os/rt/src/chmtx.c ****       chDbgAssert(mp->cnt == (cnt_t)1, "counter is not one");
 222:lib/chibios/os/rt/src/chmtx.c ****     }
 223:lib/chibios/os/rt/src/chmtx.c **** #endif
 224:lib/chibios/os/rt/src/chmtx.c ****   }
 225:lib/chibios/os/rt/src/chmtx.c ****   else {
 226:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 227:lib/chibios/os/rt/src/chmtx.c ****     chDbgAssert(mp->cnt == (cnt_t)0, "counter is not zero");
 228:lib/chibios/os/rt/src/chmtx.c **** 
 229:lib/chibios/os/rt/src/chmtx.c ****     mp->cnt++;
 230:lib/chibios/os/rt/src/chmtx.c **** #endif
 231:lib/chibios/os/rt/src/chmtx.c ****     /* It was not owned, inserted in the owned mutexes list.*/
 232:lib/chibios/os/rt/src/chmtx.c ****     mp->owner = ctp;
 105              		.loc 1 232 5 is_stmt 1 view .LVU26
 233:lib/chibios/os/rt/src/chmtx.c ****     mp->next = ctp->mtxlist;
 106              		.loc 1 233 14 is_stmt 0 view .LVU27
 107 000e 6B6B     		ldr	r3, [r5, #52]
 232:lib/chibios/os/rt/src/chmtx.c ****     mp->next = ctp->mtxlist;
 108              		.loc 1 232 15 view .LVU28
 109 0010 8560     		str	r5, [r0, #8]
 110              		.loc 1 233 5 is_stmt 1 view .LVU29
 111              		.loc 1 233 14 is_stmt 0 view .LVU30
 112 0012 C360     		str	r3, [r0, #12]
 234:lib/chibios/os/rt/src/chmtx.c ****     ctp->mtxlist = mp;
 113              		.loc 1 234 5 is_stmt 1 view .LVU31
 114              		.loc 1 234 18 is_stmt 0 view .LVU32
 115 0014 6863     		str	r0, [r5, #52]
 235:lib/chibios/os/rt/src/chmtx.c ****   }
 236:lib/chibios/os/rt/src/chmtx.c **** }
 116              		.loc 1 236 1 view .LVU33
 117 0016 27E0     		b	.L2
 118              	.LVL4:
 119              	.L5:
 120              	.LBB92:
 173:lib/chibios/os/rt/src/chmtx.c ****           tp = tp->u.wtmtxp->owner;
 121              		.loc 1 173 11 is_stmt 1 view .LVU34
 122 0018 2000     		movs	r0, r4
 123 001a FFF7FEFF 		bl	queue_dequeue
 124              	.LVL5:
 125 001e 216A     		ldr	r1, [r4, #32]
 126 0020 FFF7FEFF 		bl	queue_prio_insert
 127              	.LVL6:
 174:lib/chibios/os/rt/src/chmtx.c ****           /*lint -e{9042} [16.1] Continues the while.*/
 128              		.loc 1 174 11 view .LVU35
 174:lib/chibios/os/rt/src/chmtx.c ****           /*lint -e{9042} [16.1] Continues the while.*/
 129              		.loc 1 174 21 is_stmt 0 view .LVU36
 130 0024 236A     		ldr	r3, [r4, #32]
 174:lib/chibios/os/rt/src/chmtx.c ****           /*lint -e{9042} [16.1] Continues the while.*/
 131              		.loc 1 174 14 view .LVU37
 132 0026 9C68     		ldr	r4, [r3, #8]
 133              	.LVL7:
 176:lib/chibios/os/rt/src/chmtx.c **** #if (CH_CFG_USE_CONDVARS == TRUE) ||                                        \
 134              		.loc 1 176 11 is_stmt 1 view .LVU38
 135              	.L3:
 165:lib/chibios/os/rt/src/chmtx.c ****         /* Make priority of thread tp match the running thread's priority.*/
 136              		.loc 1 165 28 is_stmt 0 view .LVU39
 137 0028 AB68     		ldr	r3, [r5, #8]
 165:lib/chibios/os/rt/src/chmtx.c ****         /* Make priority of thread tp match the running thread's priority.*/
 138              		.loc 1 165 13 view .LVU40
 139 002a A268     		ldr	r2, [r4, #8]
 140 002c 9A42     		cmp	r2, r3
 141 002e 13D2     		bcs	.L8
 167:lib/chibios/os/rt/src/chmtx.c **** 
 142              		.loc 1 167 9 is_stmt 1 view .LVU41
 167:lib/chibios/os/rt/src/chmtx.c **** 
 143              		.loc 1 167 18 is_stmt 0 view .LVU42
 144 0030 A360     		str	r3, [r4, #8]
 170:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTMTX:
 145              		.loc 1 170 9 is_stmt 1 view .LVU43
 170:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTMTX:
 146              		.loc 1 170 19 is_stmt 0 view .LVU44
 147 0032 237F     		ldrb	r3, [r4, #28]
 170:lib/chibios/os/rt/src/chmtx.c ****         case CH_STATE_WTMTX:
 148              		.loc 1 170 9 view .LVU45
 149 0034 062B     		cmp	r3, #6
 150 0036 EFD0     		beq	.L5
 151 0038 072B     		cmp	r3, #7
 152 003a 07D0     		beq	.L6
 153 003c 002B     		cmp	r3, #0
 154 003e 0BD1     		bne	.L8
 202:lib/chibios/os/rt/src/chmtx.c ****           break;
 155              		.loc 1 202 11 is_stmt 1 view .LVU46
 202:lib/chibios/os/rt/src/chmtx.c ****           break;
 156              		.loc 1 202 18 is_stmt 0 view .LVU47
 157 0040 2000     		movs	r0, r4
 158 0042 FFF7FEFF 		bl	queue_dequeue
 159              	.LVL8:
 160 0046 FFF7FEFF 		bl	chSchReadyI
 161              	.LVL9:
 203:lib/chibios/os/rt/src/chmtx.c ****         default:
 162              		.loc 1 203 11 is_stmt 1 view .LVU48
 163 004a 05E0     		b	.L8
 164              	.L6:
 193:lib/chibios/os/rt/src/chmtx.c ****           break;
 165              		.loc 1 193 11 view .LVU49
 166 004c 2000     		movs	r0, r4
 167 004e FFF7FEFF 		bl	queue_dequeue
 168              	.LVL10:
 169 0052 216A     		ldr	r1, [r4, #32]
 170 0054 FFF7FEFF 		bl	queue_prio_insert
 171              	.LVL11:
 194:lib/chibios/os/rt/src/chmtx.c **** #endif
 172              		.loc 1 194 11 view .LVU50
 173              	.L8:
 212:lib/chibios/os/rt/src/chmtx.c ****       ctp->u.wtmtxp = mp;
 174              		.loc 1 212 7 view .LVU51
 175 0058 2800     		movs	r0, r5
 176 005a 3100     		movs	r1, r6
 177 005c FFF7FEFF 		bl	queue_prio_insert
 178              	.LVL12:
 213:lib/chibios/os/rt/src/chmtx.c ****       chSchGoSleepS(CH_STATE_WTMTX);
 179              		.loc 1 213 7 view .LVU52
 213:lib/chibios/os/rt/src/chmtx.c ****       chSchGoSleepS(CH_STATE_WTMTX);
 180              		.loc 1 213 21 is_stmt 0 view .LVU53
 181 0060 2E62     		str	r6, [r5, #32]
 214:lib/chibios/os/rt/src/chmtx.c **** 
 182              		.loc 1 214 7 is_stmt 1 view .LVU54
 183 0062 0620     		movs	r0, #6
 184 0064 FFF7FEFF 		bl	chSchGoSleepS
 185              	.LVL13:
 218:lib/chibios/os/rt/src/chmtx.c ****       chDbgAssert(ctp->mtxlist == mp, "not owned");
 186              		.loc 1 218 7 view .LVU55
 218:lib/chibios/os/rt/src/chmtx.c ****       chDbgAssert(ctp->mtxlist == mp, "not owned");
 187              		.loc 1 218 7 view .LVU56
 219:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 188              		.loc 1 219 7 view .LVU57
 219:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 189              		.loc 1 219 7 view .LVU58
 190              	.L2:
 219:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 191              		.loc 1 219 7 is_stmt 0 view .LVU59
 192              	.LBE92:
 193              		.loc 1 236 1 view .LVU60
 194              		@ sp needed
 195              	.LVL14:
 196              	.LVL15:
 197              		.loc 1 236 1 view .LVU61
 198 0068 70BD     		pop	{r4, r5, r6, pc}
 199              	.L14:
 200 006a C046     		.align	2
 201              	.L13:
 202 006c 00000000 		.word	ch
 203              		.cfi_endproc
 204              	.LFE156:
 206              		.section	.text.chMtxLock,"ax",%progbits
 207              		.align	1
 208              		.global	chMtxLock
 209              		.syntax unified
 210              		.code	16
 211              		.thumb_func
 212              		.fpu softvfp
 214              	chMtxLock:
 215              	.LVL16:
 216              	.LFB155:
 123:lib/chibios/os/rt/src/chmtx.c **** 
 217              		.loc 1 123 29 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 125:lib/chibios/os/rt/src/chmtx.c ****   chMtxLockS(mp);
 221              		.loc 1 125 3 view .LVU63
 222              	.LBB93:
 223              	.LBI93:
 224              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 225              		.loc 3 353 20 view .LVU64
 226              	.LBE93:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 227              		.loc 3 355 3 view .LVU65
 228              	.LBB101:
 229              	.LBB94:
 230              	.LBI94:
 231              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 232              		.loc 4 387 20 view .LVU66
 233              	.LBE94:
 234              	.LBE101:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 235              		.loc 4 389 3 view .LVU67
 236              	.LBB102:
 237              	.LBB99:
 238              	.LBB95:
 239              	.LBI95:
 240              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 241              		.loc 5 140 27 view .LVU68
 242              	.LBB96:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 243              		.loc 5 142 3 view .LVU69
 244              	.LBE96:
 245              	.LBE95:
 246              	.LBE99:
 247              	.LBE102:
 123:lib/chibios/os/rt/src/chmtx.c **** 
 248              		.loc 1 123 29 is_stmt 0 view .LVU70
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 253              	.LBB103:
 254              	.LBB100:
 255              	.LBB98:
 256              	.LBB97:
 257              		.loc 5 142 3 view .LVU71
 258              		.syntax divided
 259              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 260 0002 72B6     		cpsid i
 261              	@ 0 "" 2
 262              		.thumb
 263              		.syntax unified
 264              	.LBE97:
 265              	.LBE98:
 266              	.LBE100:
 267              	.LBE103:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 268              		.loc 3 356 34 is_stmt 1 view .LVU72
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 269              		.loc 3 357 20 view .LVU73
 126:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 270              		.loc 1 126 3 view .LVU74
 271 0004 FFF7FEFF 		bl	chMtxLockS
 272              	.LVL17:
 127:lib/chibios/os/rt/src/chmtx.c **** }
 273              		.loc 1 127 3 view .LVU75
 274              	.LBB104:
 275              	.LBI104:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 276              		.loc 3 365 20 view .LVU76
 277              	.LBB105:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 278              		.loc 3 367 22 view .LVU77
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 279              		.loc 3 368 33 view .LVU78
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 280              		.loc 3 374 3 view .LVU79
 281              		.loc 3 374 3 view .LVU80
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 282              		.loc 3 378 3 view .LVU81
 283              	.LBB106:
 284              	.LBI106:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 285              		.loc 4 396 20 view .LVU82
 286              	.LBE106:
 287              	.LBE105:
 288              	.LBE104:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 289              		.loc 4 398 3 view .LVU83
 290              	.LBB111:
 291              	.LBB110:
 292              	.LBB109:
 293              	.LBB107:
 294              	.LBI107:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 295              		.loc 5 129 27 view .LVU84
 296              	.LBB108:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 297              		.loc 5 131 3 view .LVU85
 298              		.syntax divided
 299              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 300 0008 62B6     		cpsie i
 301              	@ 0 "" 2
 302              		.thumb
 303              		.syntax unified
 304              	.LBE108:
 305              	.LBE107:
 306              	.LBE109:
 307              	.LBE110:
 308              	.LBE111:
 128:lib/chibios/os/rt/src/chmtx.c **** 
 309              		.loc 1 128 1 is_stmt 0 view .LVU86
 310              		@ sp needed
 311 000a 10BD     		pop	{r4, pc}
 312              		.cfi_endproc
 313              	.LFE155:
 315              		.section	.text.chMtxTryLockS,"ax",%progbits
 316              		.align	1
 317              		.global	chMtxTryLockS
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 321              		.fpu softvfp
 323              	chMtxTryLockS:
 324              	.LVL18:
 325              	.LFB158:
 237:lib/chibios/os/rt/src/chmtx.c **** 
 238:lib/chibios/os/rt/src/chmtx.c **** /**
 239:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Tries to lock a mutex.
 240:lib/chibios/os/rt/src/chmtx.c ****  * @details This function attempts to lock a mutex, if the mutex is already
 241:lib/chibios/os/rt/src/chmtx.c ****  *          locked by another thread then the function exits without waiting.
 242:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is locked and inserted in the per-thread stack of owned
 243:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes.
 244:lib/chibios/os/rt/src/chmtx.c ****  * @note    This function does not have any overhead related to the
 245:lib/chibios/os/rt/src/chmtx.c ****  *          priority inheritance mechanism because it does not try to
 246:lib/chibios/os/rt/src/chmtx.c ****  *          enter a sleep state.
 247:lib/chibios/os/rt/src/chmtx.c ****  *
 248:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 249:lib/chibios/os/rt/src/chmtx.c ****  * @return              The operation status.
 250:lib/chibios/os/rt/src/chmtx.c ****  * @retval true         if the mutex has been successfully acquired
 251:lib/chibios/os/rt/src/chmtx.c ****  * @retval false        if the lock attempt failed.
 252:lib/chibios/os/rt/src/chmtx.c ****  *
 253:lib/chibios/os/rt/src/chmtx.c ****  * @api
 254:lib/chibios/os/rt/src/chmtx.c ****  */
 255:lib/chibios/os/rt/src/chmtx.c **** bool chMtxTryLock(mutex_t *mp) {
 256:lib/chibios/os/rt/src/chmtx.c ****   bool b;
 257:lib/chibios/os/rt/src/chmtx.c **** 
 258:lib/chibios/os/rt/src/chmtx.c ****   chSysLock();
 259:lib/chibios/os/rt/src/chmtx.c ****   b = chMtxTryLockS(mp);
 260:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 261:lib/chibios/os/rt/src/chmtx.c **** 
 262:lib/chibios/os/rt/src/chmtx.c ****   return b;
 263:lib/chibios/os/rt/src/chmtx.c **** }
 264:lib/chibios/os/rt/src/chmtx.c **** 
 265:lib/chibios/os/rt/src/chmtx.c **** /**
 266:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Tries to lock a mutex.
 267:lib/chibios/os/rt/src/chmtx.c ****  * @details This function attempts to lock a mutex, if the mutex is already
 268:lib/chibios/os/rt/src/chmtx.c ****  *          taken by another thread then the function exits without waiting.
 269:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is locked and inserted in the per-thread stack of owned
 270:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes.
 271:lib/chibios/os/rt/src/chmtx.c ****  * @note    This function does not have any overhead related to the
 272:lib/chibios/os/rt/src/chmtx.c ****  *          priority inheritance mechanism because it does not try to
 273:lib/chibios/os/rt/src/chmtx.c ****  *          enter a sleep state.
 274:lib/chibios/os/rt/src/chmtx.c ****  *
 275:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 276:lib/chibios/os/rt/src/chmtx.c ****  * @return              The operation status.
 277:lib/chibios/os/rt/src/chmtx.c ****  * @retval true         if the mutex has been successfully acquired
 278:lib/chibios/os/rt/src/chmtx.c ****  * @retval false        if the lock attempt failed.
 279:lib/chibios/os/rt/src/chmtx.c ****  *
 280:lib/chibios/os/rt/src/chmtx.c ****  * @sclass
 281:lib/chibios/os/rt/src/chmtx.c ****  */
 282:lib/chibios/os/rt/src/chmtx.c **** bool chMtxTryLockS(mutex_t *mp) {
 326              		.loc 1 282 33 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 283:lib/chibios/os/rt/src/chmtx.c **** 
 284:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheckClassS();
 331              		.loc 1 284 21 view .LVU88
 285:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
 332              		.loc 1 285 3 view .LVU89
 333              		.loc 1 285 3 view .LVU90
 286:lib/chibios/os/rt/src/chmtx.c **** 
 287:lib/chibios/os/rt/src/chmtx.c ****   if (mp->owner != NULL) {
 334              		.loc 1 287 3 view .LVU91
 282:lib/chibios/os/rt/src/chmtx.c **** 
 335              		.loc 1 282 33 is_stmt 0 view .LVU92
 336 0000 0300     		movs	r3, r0
 288:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 289:lib/chibios/os/rt/src/chmtx.c **** 
 290:lib/chibios/os/rt/src/chmtx.c ****     chDbgAssert(mp->cnt >= (cnt_t)1, "counter is not positive");
 291:lib/chibios/os/rt/src/chmtx.c **** 
 292:lib/chibios/os/rt/src/chmtx.c ****     if (mp->owner == currp) {
 293:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt++;
 294:lib/chibios/os/rt/src/chmtx.c ****       return true;
 295:lib/chibios/os/rt/src/chmtx.c ****     }
 296:lib/chibios/os/rt/src/chmtx.c **** #endif
 297:lib/chibios/os/rt/src/chmtx.c ****     return false;
 337              		.loc 1 297 12 view .LVU93
 338 0002 0020     		movs	r0, #0
 339              	.LVL19:
 287:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 340              		.loc 1 287 6 view .LVU94
 341 0004 9A68     		ldr	r2, [r3, #8]
 342 0006 8242     		cmp	r2, r0
 343 0008 06D1     		bne	.L17
 344              	.LVL20:
 345              	.LBB114:
 346              	.LBI114:
 282:lib/chibios/os/rt/src/chmtx.c **** 
 347              		.loc 1 282 6 is_stmt 1 view .LVU95
 348              	.LBB115:
 298:lib/chibios/os/rt/src/chmtx.c ****   }
 299:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 300:lib/chibios/os/rt/src/chmtx.c **** 
 301:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(mp->cnt == (cnt_t)0, "counter is not zero");
 302:lib/chibios/os/rt/src/chmtx.c **** 
 303:lib/chibios/os/rt/src/chmtx.c ****   mp->cnt++;
 304:lib/chibios/os/rt/src/chmtx.c **** #endif
 305:lib/chibios/os/rt/src/chmtx.c ****   mp->owner = currp;
 349              		.loc 1 305 3 view .LVU96
 350              		.loc 1 305 15 is_stmt 0 view .LVU97
 351 000a 044A     		ldr	r2, .L19
 306:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 307:lib/chibios/os/rt/src/chmtx.c ****   currp->mtxlist = mp;
 352              		.loc 1 307 18 view .LVU98
 353 000c 0130     		adds	r0, r0, #1
 305:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 354              		.loc 1 305 15 view .LVU99
 355 000e 9269     		ldr	r2, [r2, #24]
 306:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 356              		.loc 1 306 12 view .LVU100
 357 0010 516B     		ldr	r1, [r2, #52]
 305:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 358              		.loc 1 305 13 view .LVU101
 359 0012 9A60     		str	r2, [r3, #8]
 306:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 360              		.loc 1 306 3 is_stmt 1 view .LVU102
 306:lib/chibios/os/rt/src/chmtx.c ****   mp->next = currp->mtxlist;
 361              		.loc 1 306 12 is_stmt 0 view .LVU103
 362 0014 D960     		str	r1, [r3, #12]
 363              		.loc 1 307 3 is_stmt 1 view .LVU104
 364              		.loc 1 307 18 is_stmt 0 view .LVU105
 365 0016 5363     		str	r3, [r2, #52]
 308:lib/chibios/os/rt/src/chmtx.c ****   return true;
 366              		.loc 1 308 3 is_stmt 1 view .LVU106
 367              	.LVL21:
 368              	.L17:
 369              		.loc 1 308 3 is_stmt 0 view .LVU107
 370              	.LBE115:
 371              	.LBE114:
 309:lib/chibios/os/rt/src/chmtx.c **** }
 372              		.loc 1 309 1 view .LVU108
 373              		@ sp needed
 374 0018 7047     		bx	lr
 375              	.L20:
 376 001a C046     		.align	2
 377              	.L19:
 378 001c 00000000 		.word	ch
 379              		.cfi_endproc
 380              	.LFE158:
 382              		.section	.text.chMtxTryLock,"ax",%progbits
 383              		.align	1
 384              		.global	chMtxTryLock
 385              		.syntax unified
 386              		.code	16
 387              		.thumb_func
 388              		.fpu softvfp
 390              	chMtxTryLock:
 391              	.LVL22:
 392              	.LFB157:
 255:lib/chibios/os/rt/src/chmtx.c ****   bool b;
 393              		.loc 1 255 32 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 256:lib/chibios/os/rt/src/chmtx.c **** 
 397              		.loc 1 256 3 view .LVU110
 258:lib/chibios/os/rt/src/chmtx.c ****   b = chMtxTryLockS(mp);
 398              		.loc 1 258 3 view .LVU111
 399              	.LBB116:
 400              	.LBI116:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 401              		.loc 3 353 20 view .LVU112
 402              	.LBE116:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 403              		.loc 3 355 3 view .LVU113
 404              	.LBB124:
 405              	.LBB117:
 406              	.LBI117:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 407              		.loc 4 387 20 view .LVU114
 408              	.LBE117:
 409              	.LBE124:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410              		.loc 4 389 3 view .LVU115
 411              	.LBB125:
 412              	.LBB122:
 413              	.LBB118:
 414              	.LBI118:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 415              		.loc 5 140 27 view .LVU116
 416              	.LBB119:
 417              		.loc 5 142 3 view .LVU117
 418              	.LBE119:
 419              	.LBE118:
 420              	.LBE122:
 421              	.LBE125:
 255:lib/chibios/os/rt/src/chmtx.c ****   bool b;
 422              		.loc 1 255 32 is_stmt 0 view .LVU118
 423 0000 10B5     		push	{r4, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 4, -8
 426              		.cfi_offset 14, -4
 427              	.LBB126:
 428              	.LBB123:
 429              	.LBB121:
 430              	.LBB120:
 431              		.loc 5 142 3 view .LVU119
 432              		.syntax divided
 433              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 434 0002 72B6     		cpsid i
 435              	@ 0 "" 2
 436              		.thumb
 437              		.syntax unified
 438              	.LBE120:
 439              	.LBE121:
 440              	.LBE123:
 441              	.LBE126:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 442              		.loc 3 356 34 is_stmt 1 view .LVU120
 357:./lib/chibios/os/rt/include/chsys.h **** }
 443              		.loc 3 357 20 view .LVU121
 259:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 444              		.loc 1 259 3 view .LVU122
 259:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 445              		.loc 1 259 7 is_stmt 0 view .LVU123
 446 0004 FFF7FEFF 		bl	chMtxTryLockS
 447              	.LVL23:
 260:lib/chibios/os/rt/src/chmtx.c **** 
 448              		.loc 1 260 3 is_stmt 1 view .LVU124
 449              	.LBB127:
 450              	.LBI127:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 451              		.loc 3 365 20 view .LVU125
 452              	.LBB128:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 453              		.loc 3 367 22 view .LVU126
 368:./lib/chibios/os/rt/include/chsys.h **** 
 454              		.loc 3 368 33 view .LVU127
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 455              		.loc 3 374 3 view .LVU128
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 456              		.loc 3 374 3 view .LVU129
 457              		.loc 3 378 3 view .LVU130
 458              	.LBB129:
 459              	.LBI129:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 460              		.loc 4 396 20 view .LVU131
 461              	.LBE129:
 462              	.LBE128:
 463              	.LBE127:
 464              		.loc 4 398 3 view .LVU132
 465              	.LBB134:
 466              	.LBB133:
 467              	.LBB132:
 468              	.LBB130:
 469              	.LBI130:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 470              		.loc 5 129 27 view .LVU133
 471              	.LBB131:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 472              		.loc 5 131 3 view .LVU134
 473              		.syntax divided
 474              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 475 0008 62B6     		cpsie i
 476              	@ 0 "" 2
 477              		.thumb
 478              		.syntax unified
 479              	.LBE131:
 480              	.LBE130:
 481              	.LBE132:
 482              	.LBE133:
 483              	.LBE134:
 262:lib/chibios/os/rt/src/chmtx.c **** }
 484              		.loc 1 262 3 view .LVU135
 263:lib/chibios/os/rt/src/chmtx.c **** 
 485              		.loc 1 263 1 is_stmt 0 view .LVU136
 486              		@ sp needed
 487 000a 10BD     		pop	{r4, pc}
 488              		.cfi_endproc
 489              	.LFE157:
 491              		.section	.text.chMtxUnlock,"ax",%progbits
 492              		.align	1
 493              		.global	chMtxUnlock
 494              		.syntax unified
 495              		.code	16
 496              		.thumb_func
 497              		.fpu softvfp
 499              	chMtxUnlock:
 500              	.LVL24:
 501              	.LFB159:
 310:lib/chibios/os/rt/src/chmtx.c **** 
 311:lib/chibios/os/rt/src/chmtx.c **** /**
 312:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Unlocks the specified mutex.
 313:lib/chibios/os/rt/src/chmtx.c ****  * @note    Mutexes must be unlocked in reverse lock order. Violating this
 314:lib/chibios/os/rt/src/chmtx.c ****  *          rules will result in a panic if assertions are enabled.
 315:lib/chibios/os/rt/src/chmtx.c ****  * @pre     The invoking thread <b>must</b> have at least one owned mutex.
 316:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is unlocked and removed from the per-thread stack of
 317:lib/chibios/os/rt/src/chmtx.c ****  *          owned mutexes.
 318:lib/chibios/os/rt/src/chmtx.c ****  *
 319:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 320:lib/chibios/os/rt/src/chmtx.c ****  *
 321:lib/chibios/os/rt/src/chmtx.c ****  * @api
 322:lib/chibios/os/rt/src/chmtx.c ****  */
 323:lib/chibios/os/rt/src/chmtx.c **** void chMtxUnlock(mutex_t *mp) {
 502              		.loc 1 323 31 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 324:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 506              		.loc 1 324 3 view .LVU138
 507              		.loc 1 324 13 is_stmt 0 view .LVU139
 508 0000 134B     		ldr	r3, .L29
 323:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 509              		.loc 1 323 31 view .LVU140
 510 0002 10B5     		push	{r4, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 4, -8
 513              		.cfi_offset 14, -4
 514              		.loc 1 324 13 view .LVU141
 515 0004 9A69     		ldr	r2, [r3, #24]
 516              	.LVL25:
 325:lib/chibios/os/rt/src/chmtx.c ****   mutex_t *lmp;
 517              		.loc 1 325 3 is_stmt 1 view .LVU142
 326:lib/chibios/os/rt/src/chmtx.c **** 
 327:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
 518              		.loc 1 327 3 view .LVU143
 519              		.loc 1 327 3 view .LVU144
 328:lib/chibios/os/rt/src/chmtx.c **** 
 329:lib/chibios/os/rt/src/chmtx.c ****   chSysLock();
 520              		.loc 1 329 3 view .LVU145
 521              	.LBB135:
 522              	.LBI135:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 523              		.loc 3 353 20 view .LVU146
 524              	.LBE135:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 525              		.loc 3 355 3 view .LVU147
 526              	.LBB143:
 527              	.LBB136:
 528              	.LBI136:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 529              		.loc 4 387 20 view .LVU148
 530              	.LBE136:
 531              	.LBE143:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 532              		.loc 4 389 3 view .LVU149
 533              	.LBB144:
 534              	.LBB141:
 535              	.LBB137:
 536              	.LBI137:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 537              		.loc 5 140 27 view .LVU150
 538              	.LBB138:
 539              		.loc 5 142 3 view .LVU151
 540              	.LBE138:
 541              	.LBE137:
 542              	.LBE141:
 543              	.LBE144:
 323:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 544              		.loc 1 323 31 is_stmt 0 view .LVU152
 545 0006 0400     		movs	r4, r0
 546              	.LBB145:
 547              	.LBB142:
 548              	.LBB140:
 549              	.LBB139:
 550              		.loc 5 142 3 view .LVU153
 551              		.syntax divided
 552              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 553 0008 72B6     		cpsid i
 554              	@ 0 "" 2
 555              		.thumb
 556              		.syntax unified
 557              	.LBE139:
 558              	.LBE140:
 559              	.LBE142:
 560              	.LBE145:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 561              		.loc 3 356 34 is_stmt 1 view .LVU154
 357:./lib/chibios/os/rt/include/chsys.h **** }
 562              		.loc 3 357 20 view .LVU155
 330:lib/chibios/os/rt/src/chmtx.c **** 
 331:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist != NULL, "owned mutexes list empty");
 563              		.loc 1 331 3 view .LVU156
 564              		.loc 1 331 3 view .LVU157
 332:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist->owner == ctp, "ownership failure");
 565              		.loc 1 332 3 view .LVU158
 566              		.loc 1 332 3 view .LVU159
 333:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 334:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(mp->cnt >= (cnt_t)1, "counter is not positive");
 335:lib/chibios/os/rt/src/chmtx.c **** 
 336:lib/chibios/os/rt/src/chmtx.c ****   if (--mp->cnt == (cnt_t)0) {
 337:lib/chibios/os/rt/src/chmtx.c **** #endif
 338:lib/chibios/os/rt/src/chmtx.c **** 
 339:lib/chibios/os/rt/src/chmtx.c ****     chDbgAssert(ctp->mtxlist == mp, "not next in list");
 567              		.loc 1 339 5 view .LVU160
 568              		.loc 1 339 5 view .LVU161
 340:lib/chibios/os/rt/src/chmtx.c **** 
 341:lib/chibios/os/rt/src/chmtx.c ****     /* Removes the top mutex from the thread's owned mutexes list and marks
 342:lib/chibios/os/rt/src/chmtx.c ****        it as not owned. Note, it is assumed to be the same mutex passed as
 343:lib/chibios/os/rt/src/chmtx.c ****        parameter of this function.*/
 344:lib/chibios/os/rt/src/chmtx.c ****     ctp->mtxlist = mp->next;
 569              		.loc 1 344 5 view .LVU162
 570              		.loc 1 344 22 is_stmt 0 view .LVU163
 571 000a C368     		ldr	r3, [r0, #12]
 345:lib/chibios/os/rt/src/chmtx.c **** 
 346:lib/chibios/os/rt/src/chmtx.c ****     /* If a thread is waiting on the mutex then the fun part begins.*/
 347:lib/chibios/os/rt/src/chmtx.c ****     if (chMtxQueueNotEmptyS(mp)) {
 572              		.loc 1 347 8 view .LVU164
 573 000c 0168     		ldr	r1, [r0]
 344:lib/chibios/os/rt/src/chmtx.c **** 
 574              		.loc 1 344 18 view .LVU165
 575 000e 5363     		str	r3, [r2, #52]
 576              		.loc 1 347 5 is_stmt 1 view .LVU166
 577              	.LVL26:
 578              	.LBB146:
 579              	.LBI146:
 580              		.file 6 "./lib/chibios/os/rt/include/chmtx.h"
   1:./lib/chibios/os/rt/include/chmtx.h **** /*
   2:./lib/chibios/os/rt/include/chmtx.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chmtx.h **** 
   4:./lib/chibios/os/rt/include/chmtx.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chmtx.h **** 
   6:./lib/chibios/os/rt/include/chmtx.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chmtx.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chmtx.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chmtx.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chmtx.h **** 
  11:./lib/chibios/os/rt/include/chmtx.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chmtx.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chmtx.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chmtx.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chmtx.h **** 
  16:./lib/chibios/os/rt/include/chmtx.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chmtx.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chmtx.h **** */
  19:./lib/chibios/os/rt/include/chmtx.h **** 
  20:./lib/chibios/os/rt/include/chmtx.h **** /**
  21:./lib/chibios/os/rt/include/chmtx.h ****  * @file    chmtx.h
  22:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Mutexes macros and structures.
  23:./lib/chibios/os/rt/include/chmtx.h ****  *
  24:./lib/chibios/os/rt/include/chmtx.h ****  * @addtogroup mutexes
  25:./lib/chibios/os/rt/include/chmtx.h ****  * @{
  26:./lib/chibios/os/rt/include/chmtx.h ****  */
  27:./lib/chibios/os/rt/include/chmtx.h **** 
  28:./lib/chibios/os/rt/include/chmtx.h **** #ifndef CHMTX_H
  29:./lib/chibios/os/rt/include/chmtx.h **** #define CHMTX_H
  30:./lib/chibios/os/rt/include/chmtx.h **** 
  31:./lib/chibios/os/rt/include/chmtx.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  32:./lib/chibios/os/rt/include/chmtx.h **** 
  33:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chmtx.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chmtx.h **** 
  37:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chmtx.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chmtx.h **** 
  41:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chmtx.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chmtx.h **** 
  45:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chmtx.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chmtx.h **** 
  49:./lib/chibios/os/rt/include/chmtx.h **** /**
  50:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Type of a mutex structure.
  51:./lib/chibios/os/rt/include/chmtx.h ****  */
  52:./lib/chibios/os/rt/include/chmtx.h **** typedef struct ch_mutex mutex_t;
  53:./lib/chibios/os/rt/include/chmtx.h **** 
  54:./lib/chibios/os/rt/include/chmtx.h **** /**
  55:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Mutex structure.
  56:./lib/chibios/os/rt/include/chmtx.h ****  */
  57:./lib/chibios/os/rt/include/chmtx.h **** struct ch_mutex {
  58:./lib/chibios/os/rt/include/chmtx.h ****   threads_queue_t       queue;      /**< @brief Queue of the threads sleeping
  59:./lib/chibios/os/rt/include/chmtx.h ****                                                 on this mutex.              */
  60:./lib/chibios/os/rt/include/chmtx.h ****   thread_t              *owner;     /**< @brief Owner @p thread_t pointer or
  61:./lib/chibios/os/rt/include/chmtx.h ****                                                 @p NULL.                    */
  62:./lib/chibios/os/rt/include/chmtx.h ****   mutex_t               *next;      /**< @brief Next @p mutex_t into an
  63:./lib/chibios/os/rt/include/chmtx.h ****                                                 owner-list or @p NULL.      */
  64:./lib/chibios/os/rt/include/chmtx.h **** #if (CH_CFG_USE_MUTEXES_RECURSIVE == TRUE) || defined(__DOXYGEN__)
  65:./lib/chibios/os/rt/include/chmtx.h ****   cnt_t                 cnt;        /**< @brief Mutex recursion counter.    */
  66:./lib/chibios/os/rt/include/chmtx.h **** #endif
  67:./lib/chibios/os/rt/include/chmtx.h **** };
  68:./lib/chibios/os/rt/include/chmtx.h **** 
  69:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  70:./lib/chibios/os/rt/include/chmtx.h **** /* Module macros.                                                            */
  71:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  72:./lib/chibios/os/rt/include/chmtx.h **** 
  73:./lib/chibios/os/rt/include/chmtx.h **** /**
  74:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Data part of a static mutex initializer.
  75:./lib/chibios/os/rt/include/chmtx.h ****  * @details This macro should be used when statically initializing a mutex
  76:./lib/chibios/os/rt/include/chmtx.h ****  *          that is part of a bigger structure.
  77:./lib/chibios/os/rt/include/chmtx.h ****  *
  78:./lib/chibios/os/rt/include/chmtx.h ****  * @param[in] name      the name of the mutex variable
  79:./lib/chibios/os/rt/include/chmtx.h ****  */
  80:./lib/chibios/os/rt/include/chmtx.h **** #if (CH_CFG_USE_MUTEXES_RECURSIVE == TRUE) || defined(__DOXYGEN__)
  81:./lib/chibios/os/rt/include/chmtx.h **** #define _MUTEX_DATA(name) {_THREADS_QUEUE_DATA(name.queue), NULL, NULL, 0}
  82:./lib/chibios/os/rt/include/chmtx.h **** #else
  83:./lib/chibios/os/rt/include/chmtx.h **** #define _MUTEX_DATA(name) {_THREADS_QUEUE_DATA(name.queue), NULL, NULL}
  84:./lib/chibios/os/rt/include/chmtx.h **** #endif
  85:./lib/chibios/os/rt/include/chmtx.h **** 
  86:./lib/chibios/os/rt/include/chmtx.h **** /**
  87:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Static mutex initializer.
  88:./lib/chibios/os/rt/include/chmtx.h ****  * @details Statically initialized mutexes require no explicit initialization
  89:./lib/chibios/os/rt/include/chmtx.h ****  *          using @p chMtxInit().
  90:./lib/chibios/os/rt/include/chmtx.h ****  *
  91:./lib/chibios/os/rt/include/chmtx.h ****  * @param[in] name      the name of the mutex variable
  92:./lib/chibios/os/rt/include/chmtx.h ****  */
  93:./lib/chibios/os/rt/include/chmtx.h **** #define MUTEX_DECL(name) mutex_t name = _MUTEX_DATA(name)
  94:./lib/chibios/os/rt/include/chmtx.h **** 
  95:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  96:./lib/chibios/os/rt/include/chmtx.h **** /* External declarations.                                                    */
  97:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
  98:./lib/chibios/os/rt/include/chmtx.h **** 
  99:./lib/chibios/os/rt/include/chmtx.h **** #ifdef __cplusplus
 100:./lib/chibios/os/rt/include/chmtx.h **** extern "C" {
 101:./lib/chibios/os/rt/include/chmtx.h **** #endif
 102:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxObjectInit(mutex_t *mp);
 103:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxLock(mutex_t *mp);
 104:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxLockS(mutex_t *mp);
 105:./lib/chibios/os/rt/include/chmtx.h ****   bool chMtxTryLock(mutex_t *mp);
 106:./lib/chibios/os/rt/include/chmtx.h ****   bool chMtxTryLockS(mutex_t *mp);
 107:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxUnlock(mutex_t *mp);
 108:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxUnlockS(mutex_t *mp);
 109:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxUnlockAll(void);
 110:./lib/chibios/os/rt/include/chmtx.h ****   void chMtxUnlockAllS(void);
 111:./lib/chibios/os/rt/include/chmtx.h **** #ifdef __cplusplus
 112:./lib/chibios/os/rt/include/chmtx.h **** }
 113:./lib/chibios/os/rt/include/chmtx.h **** #endif
 114:./lib/chibios/os/rt/include/chmtx.h **** 
 115:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chmtx.h **** /* Module inline functions.                                                  */
 117:./lib/chibios/os/rt/include/chmtx.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chmtx.h **** 
 119:./lib/chibios/os/rt/include/chmtx.h **** /**
 120:./lib/chibios/os/rt/include/chmtx.h ****  * @brief   Returns @p true if the mutex queue contains at least a waiting
 121:./lib/chibios/os/rt/include/chmtx.h ****  *          thread.
 122:./lib/chibios/os/rt/include/chmtx.h ****  *
 123:./lib/chibios/os/rt/include/chmtx.h ****  * @param[out] mp       pointer to a @p mutex_t structure
 124:./lib/chibios/os/rt/include/chmtx.h ****  * @return              The mutex queue status.
 125:./lib/chibios/os/rt/include/chmtx.h ****  *
 126:./lib/chibios/os/rt/include/chmtx.h ****  * @sclass
 127:./lib/chibios/os/rt/include/chmtx.h ****  */
 128:./lib/chibios/os/rt/include/chmtx.h **** static inline bool chMtxQueueNotEmptyS(mutex_t *mp) {
 581              		.loc 6 128 20 view .LVU167
 582              	.LBB147:
 129:./lib/chibios/os/rt/include/chmtx.h **** 
 130:./lib/chibios/os/rt/include/chmtx.h ****   chDbgCheckClassS();
 583              		.loc 6 130 21 view .LVU168
 131:./lib/chibios/os/rt/include/chmtx.h **** 
 132:./lib/chibios/os/rt/include/chmtx.h ****   return queue_notempty(&mp->queue);
 584              		.loc 6 132 3 view .LVU169
 585              	.LBB148:
 586              	.LBI148:
 541:./lib/chibios/os/rt/include/chschd.h **** }
 542:./lib/chibios/os/rt/include/chschd.h **** 
 543:./lib/chibios/os/rt/include/chschd.h **** /**
 544:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads queue is empty.
 545:./lib/chibios/os/rt/include/chschd.h ****  *
 546:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 547:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the queue.
 548:./lib/chibios/os/rt/include/chschd.h ****  *
 549:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 550:./lib/chibios/os/rt/include/chschd.h ****  */
 551:./lib/chibios/os/rt/include/chschd.h **** static inline bool queue_isempty(const threads_queue_t *tqp) {
 552:./lib/chibios/os/rt/include/chschd.h **** 
 553:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tqp->next == (const thread_t *)tqp);
 554:./lib/chibios/os/rt/include/chschd.h **** }
 555:./lib/chibios/os/rt/include/chschd.h **** 
 556:./lib/chibios/os/rt/include/chschd.h **** /**
 557:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads queue is not empty.
 558:./lib/chibios/os/rt/include/chschd.h ****  *
 559:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 560:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the queue.
 561:./lib/chibios/os/rt/include/chschd.h ****  *
 562:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 563:./lib/chibios/os/rt/include/chschd.h ****  */
 564:./lib/chibios/os/rt/include/chschd.h **** static inline bool queue_notempty(const threads_queue_t *tqp) {
 587              		.loc 2 564 20 view .LVU170
 588              	.LBB149:
 565:./lib/chibios/os/rt/include/chschd.h **** 
 566:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tqp->next != (const thread_t *)tqp);
 589              		.loc 2 566 3 view .LVU171
 590              		.loc 2 566 3 is_stmt 0 view .LVU172
 591              	.LBE149:
 592              	.LBE148:
 593              	.LBE147:
 594              	.LBE146:
 595              		.loc 1 347 8 view .LVU173
 596 0010 8142     		cmp	r1, r0
 597 0012 19D0     		beq	.L23
 598              	.LBB150:
 348:lib/chibios/os/rt/src/chmtx.c ****       thread_t *tp;
 599              		.loc 1 348 7 is_stmt 1 view .LVU174
 349:lib/chibios/os/rt/src/chmtx.c **** 
 350:lib/chibios/os/rt/src/chmtx.c ****       /* Recalculates the optimal thread priority by scanning the owned
 351:lib/chibios/os/rt/src/chmtx.c ****          mutexes list.*/
 352:lib/chibios/os/rt/src/chmtx.c ****       tprio_t newprio = ctp->realprio;
 600              		.loc 1 352 7 view .LVU175
 601              		.loc 1 352 15 is_stmt 0 view .LVU176
 602 0014 916B     		ldr	r1, [r2, #56]
 603              	.LVL27:
 353:lib/chibios/os/rt/src/chmtx.c ****       lmp = ctp->mtxlist;
 604              		.loc 1 353 7 is_stmt 1 view .LVU177
 354:lib/chibios/os/rt/src/chmtx.c ****       while (lmp != NULL) {
 605              		.loc 1 354 7 view .LVU178
 606              	.L24:
 607              		.loc 1 354 13 is_stmt 0 view .LVU179
 608 0016 002B     		cmp	r3, #0
 609 0018 0DD1     		bne	.L27
 355:lib/chibios/os/rt/src/chmtx.c ****         /* If the highest priority thread waiting in the mutexes list has a
 356:lib/chibios/os/rt/src/chmtx.c ****            greater priority than the current thread base priority then the
 357:lib/chibios/os/rt/src/chmtx.c ****            final priority will have at least that priority.*/
 358:lib/chibios/os/rt/src/chmtx.c ****         if (chMtxQueueNotEmptyS(lmp) &&
 359:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 360:lib/chibios/os/rt/src/chmtx.c ****           newprio = lmp->queue.next->prio;
 361:lib/chibios/os/rt/src/chmtx.c ****         }
 362:lib/chibios/os/rt/src/chmtx.c ****         lmp = lmp->next;
 363:lib/chibios/os/rt/src/chmtx.c ****       }
 364:lib/chibios/os/rt/src/chmtx.c **** 
 365:lib/chibios/os/rt/src/chmtx.c ****       /* Assigns to the current thread the highest priority among all the
 366:lib/chibios/os/rt/src/chmtx.c ****          waiting threads.*/
 367:lib/chibios/os/rt/src/chmtx.c ****       ctp->prio = newprio;
 610              		.loc 1 367 7 is_stmt 1 view .LVU180
 611              		.loc 1 367 17 is_stmt 0 view .LVU181
 612 001a 9160     		str	r1, [r2, #8]
 368:lib/chibios/os/rt/src/chmtx.c **** 
 369:lib/chibios/os/rt/src/chmtx.c ****       /* Awakens the highest priority thread waiting for the unlocked mutex and
 370:lib/chibios/os/rt/src/chmtx.c ****          assigns the mutex to it.*/
 371:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 372:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt = (cnt_t)1;
 373:lib/chibios/os/rt/src/chmtx.c **** #endif
 374:lib/chibios/os/rt/src/chmtx.c ****       tp = queue_fifo_remove(&mp->queue);
 613              		.loc 1 374 7 is_stmt 1 view .LVU182
 614              		.loc 1 374 12 is_stmt 0 view .LVU183
 615 001c 2000     		movs	r0, r4
 616 001e FFF7FEFF 		bl	queue_fifo_remove
 617              	.LVL28:
 375:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 618              		.loc 1 375 7 is_stmt 1 view .LVU184
 376:lib/chibios/os/rt/src/chmtx.c ****       mp->next = tp->mtxlist;
 619              		.loc 1 376 16 is_stmt 0 view .LVU185
 620 0022 436B     		ldr	r3, [r0, #52]
 375:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 621              		.loc 1 375 17 view .LVU186
 622 0024 A060     		str	r0, [r4, #8]
 623              		.loc 1 376 7 is_stmt 1 view .LVU187
 624              		.loc 1 376 16 is_stmt 0 view .LVU188
 625 0026 E360     		str	r3, [r4, #12]
 377:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 626              		.loc 1 377 7 is_stmt 1 view .LVU189
 627              		.loc 1 377 19 is_stmt 0 view .LVU190
 628 0028 4463     		str	r4, [r0, #52]
 378:lib/chibios/os/rt/src/chmtx.c **** 
 379:lib/chibios/os/rt/src/chmtx.c ****       /* Note, not using chSchWakeupS() because that function expects the
 380:lib/chibios/os/rt/src/chmtx.c ****          current thread to have the higher or equal priority than the ones
 381:lib/chibios/os/rt/src/chmtx.c ****          in the ready list. This is not necessarily true here because we
 382:lib/chibios/os/rt/src/chmtx.c ****          just changed priority.*/
 383:lib/chibios/os/rt/src/chmtx.c ****       (void) chSchReadyI(tp);
 629              		.loc 1 383 7 is_stmt 1 view .LVU191
 630              		.loc 1 383 14 is_stmt 0 view .LVU192
 631 002a FFF7FEFF 		bl	chSchReadyI
 632              	.LVL29:
 384:lib/chibios/os/rt/src/chmtx.c ****       chSchRescheduleS();
 633              		.loc 1 384 7 is_stmt 1 view .LVU193
 634 002e FFF7FEFF 		bl	chSchRescheduleS
 635              	.LVL30:
 636              	.L28:
 637              		.loc 1 384 7 is_stmt 0 view .LVU194
 638              	.LBE150:
 385:lib/chibios/os/rt/src/chmtx.c ****     }
 386:lib/chibios/os/rt/src/chmtx.c ****     else {
 387:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = NULL;
 388:lib/chibios/os/rt/src/chmtx.c ****     }
 389:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 390:lib/chibios/os/rt/src/chmtx.c ****   }
 391:lib/chibios/os/rt/src/chmtx.c **** #endif
 392:lib/chibios/os/rt/src/chmtx.c **** 
 393:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 639              		.loc 1 393 3 is_stmt 1 view .LVU195
 640              	.LBB155:
 641              	.LBI155:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 642              		.loc 3 365 20 view .LVU196
 643              	.LBB156:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 644              		.loc 3 367 22 view .LVU197
 368:./lib/chibios/os/rt/include/chsys.h **** 
 645              		.loc 3 368 33 view .LVU198
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 646              		.loc 3 374 3 view .LVU199
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 647              		.loc 3 374 3 view .LVU200
 648              		.loc 3 378 3 view .LVU201
 649              	.LBB157:
 650              	.LBI157:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 651              		.loc 4 396 20 view .LVU202
 652              	.LBE157:
 653              	.LBE156:
 654              	.LBE155:
 655              		.loc 4 398 3 view .LVU203
 656              	.LBB162:
 657              	.LBB161:
 658              	.LBB160:
 659              	.LBB158:
 660              	.LBI158:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 661              		.loc 5 129 27 view .LVU204
 662              	.LBB159:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 663              		.loc 5 131 3 view .LVU205
 664              		.syntax divided
 665              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 666 0032 62B6     		cpsie i
 667              	@ 0 "" 2
 668              		.thumb
 669              		.syntax unified
 670              	.LBE159:
 671              	.LBE158:
 672              	.LBE160:
 673              	.LBE161:
 674              	.LBE162:
 394:lib/chibios/os/rt/src/chmtx.c **** }
 675              		.loc 1 394 1 is_stmt 0 view .LVU206
 676              		@ sp needed
 677              	.LVL31:
 678              		.loc 1 394 1 view .LVU207
 679 0034 10BD     		pop	{r4, pc}
 680              	.LVL32:
 681              	.L27:
 682              	.LBB163:
 358:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 683              		.loc 1 358 9 is_stmt 1 view .LVU208
 684              	.LBB151:
 685              	.LBI151:
 128:./lib/chibios/os/rt/include/chmtx.h **** 
 686              		.loc 6 128 20 view .LVU209
 687              	.LBB152:
 130:./lib/chibios/os/rt/include/chmtx.h **** 
 688              		.loc 6 130 21 view .LVU210
 689              		.loc 6 132 3 view .LVU211
 690              	.LBB153:
 691              	.LBI153:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 692              		.loc 2 564 20 view .LVU212
 693              	.LBB154:
 694              		.loc 2 566 3 view .LVU213
 695              		.loc 2 566 20 is_stmt 0 view .LVU214
 696 0036 1868     		ldr	r0, [r3]
 697              	.LVL33:
 698              		.loc 2 566 20 view .LVU215
 699              	.LBE154:
 700              	.LBE153:
 701              	.LBE152:
 702              	.LBE151:
 358:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 703              		.loc 1 358 12 view .LVU216
 704 0038 8342     		cmp	r3, r0
 705 003a 03D0     		beq	.L25
 706 003c 8068     		ldr	r0, [r0, #8]
 707 003e 8142     		cmp	r1, r0
 708 0040 00D2     		bcs	.L25
 709 0042 0100     		movs	r1, r0
 710              	.LVL34:
 711              	.L25:
 362:lib/chibios/os/rt/src/chmtx.c ****       }
 712              		.loc 1 362 9 is_stmt 1 view .LVU217
 362:lib/chibios/os/rt/src/chmtx.c ****       }
 713              		.loc 1 362 13 is_stmt 0 view .LVU218
 714 0044 DB68     		ldr	r3, [r3, #12]
 715              	.LVL35:
 362:lib/chibios/os/rt/src/chmtx.c ****       }
 716              		.loc 1 362 13 view .LVU219
 717 0046 E6E7     		b	.L24
 718              	.LVL36:
 719              	.L23:
 362:lib/chibios/os/rt/src/chmtx.c ****       }
 720              		.loc 1 362 13 view .LVU220
 721              	.LBE163:
 387:lib/chibios/os/rt/src/chmtx.c ****     }
 722              		.loc 1 387 7 is_stmt 1 view .LVU221
 387:lib/chibios/os/rt/src/chmtx.c ****     }
 723              		.loc 1 387 17 is_stmt 0 view .LVU222
 724 0048 0023     		movs	r3, #0
 725 004a 8B60     		str	r3, [r1, #8]
 726 004c F1E7     		b	.L28
 727              	.L30:
 728 004e C046     		.align	2
 729              	.L29:
 730 0050 00000000 		.word	ch
 731              		.cfi_endproc
 732              	.LFE159:
 734              		.section	.text.chMtxUnlockS,"ax",%progbits
 735              		.align	1
 736              		.global	chMtxUnlockS
 737              		.syntax unified
 738              		.code	16
 739              		.thumb_func
 740              		.fpu softvfp
 742              	chMtxUnlockS:
 743              	.LVL37:
 744              	.LFB160:
 395:lib/chibios/os/rt/src/chmtx.c **** 
 396:lib/chibios/os/rt/src/chmtx.c **** /**
 397:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Unlocks the specified mutex.
 398:lib/chibios/os/rt/src/chmtx.c ****  * @note    Mutexes must be unlocked in reverse lock order. Violating this
 399:lib/chibios/os/rt/src/chmtx.c ****  *          rules will result in a panic if assertions are enabled.
 400:lib/chibios/os/rt/src/chmtx.c ****  * @pre     The invoking thread <b>must</b> have at least one owned mutex.
 401:lib/chibios/os/rt/src/chmtx.c ****  * @post    The mutex is unlocked and removed from the per-thread stack of
 402:lib/chibios/os/rt/src/chmtx.c ****  *          owned mutexes.
 403:lib/chibios/os/rt/src/chmtx.c ****  * @post    This function does not reschedule so a call to a rescheduling
 404:lib/chibios/os/rt/src/chmtx.c ****  *          function must be performed before unlocking the kernel.
 405:lib/chibios/os/rt/src/chmtx.c ****  *
 406:lib/chibios/os/rt/src/chmtx.c ****  * @param[in] mp        pointer to the @p mutex_t structure
 407:lib/chibios/os/rt/src/chmtx.c ****  *
 408:lib/chibios/os/rt/src/chmtx.c ****  * @sclass
 409:lib/chibios/os/rt/src/chmtx.c ****  */
 410:lib/chibios/os/rt/src/chmtx.c **** void chMtxUnlockS(mutex_t *mp) {
 745              		.loc 1 410 32 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 411:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 749              		.loc 1 411 3 view .LVU224
 750              		.loc 1 411 13 is_stmt 0 view .LVU225
 751 0000 114B     		ldr	r3, .L38
 412:lib/chibios/os/rt/src/chmtx.c ****   mutex_t *lmp;
 413:lib/chibios/os/rt/src/chmtx.c **** 
 414:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheckClassS();
 415:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
 416:lib/chibios/os/rt/src/chmtx.c **** 
 417:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist != NULL, "owned mutexes list empty");
 418:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist->owner == ctp, "ownership failure");
 419:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 420:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(mp->cnt >= (cnt_t)1, "counter is not positive");
 421:lib/chibios/os/rt/src/chmtx.c **** 
 422:lib/chibios/os/rt/src/chmtx.c ****   if (--mp->cnt == (cnt_t)0) {
 423:lib/chibios/os/rt/src/chmtx.c **** #endif
 424:lib/chibios/os/rt/src/chmtx.c **** 
 425:lib/chibios/os/rt/src/chmtx.c ****     chDbgAssert(ctp->mtxlist == mp, "not next in list");
 426:lib/chibios/os/rt/src/chmtx.c **** 
 427:lib/chibios/os/rt/src/chmtx.c ****     /* Removes the top mutex from the thread's owned mutexes list and marks
 428:lib/chibios/os/rt/src/chmtx.c ****        it as not owned. Note, it is assumed to be the same mutex passed as
 429:lib/chibios/os/rt/src/chmtx.c ****        parameter of this function.*/
 430:lib/chibios/os/rt/src/chmtx.c ****     ctp->mtxlist = mp->next;
 431:lib/chibios/os/rt/src/chmtx.c **** 
 432:lib/chibios/os/rt/src/chmtx.c ****     /* If a thread is waiting on the mutex then the fun part begins.*/
 433:lib/chibios/os/rt/src/chmtx.c ****     if (chMtxQueueNotEmptyS(mp)) {
 752              		.loc 1 433 8 view .LVU226
 753 0002 0168     		ldr	r1, [r0]
 411:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 754              		.loc 1 411 13 view .LVU227
 755 0004 9A69     		ldr	r2, [r3, #24]
 756              	.LVL38:
 412:lib/chibios/os/rt/src/chmtx.c ****   mutex_t *lmp;
 757              		.loc 1 412 3 is_stmt 1 view .LVU228
 414:lib/chibios/os/rt/src/chmtx.c ****   chDbgCheck(mp != NULL);
 758              		.loc 1 414 21 view .LVU229
 415:lib/chibios/os/rt/src/chmtx.c **** 
 759              		.loc 1 415 3 view .LVU230
 415:lib/chibios/os/rt/src/chmtx.c **** 
 760              		.loc 1 415 3 view .LVU231
 417:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist->owner == ctp, "ownership failure");
 761              		.loc 1 417 3 view .LVU232
 417:lib/chibios/os/rt/src/chmtx.c ****   chDbgAssert(ctp->mtxlist->owner == ctp, "ownership failure");
 762              		.loc 1 417 3 view .LVU233
 418:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 763              		.loc 1 418 3 view .LVU234
 418:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 764              		.loc 1 418 3 view .LVU235
 425:lib/chibios/os/rt/src/chmtx.c **** 
 765              		.loc 1 425 5 view .LVU236
 425:lib/chibios/os/rt/src/chmtx.c **** 
 766              		.loc 1 425 5 view .LVU237
 430:lib/chibios/os/rt/src/chmtx.c **** 
 767              		.loc 1 430 5 view .LVU238
 430:lib/chibios/os/rt/src/chmtx.c **** 
 768              		.loc 1 430 22 is_stmt 0 view .LVU239
 769 0006 C368     		ldr	r3, [r0, #12]
 410:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 770              		.loc 1 410 32 view .LVU240
 771 0008 10B5     		push	{r4, lr}
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 4, -8
 774              		.cfi_offset 14, -4
 410:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 775              		.loc 1 410 32 view .LVU241
 776 000a 0400     		movs	r4, r0
 430:lib/chibios/os/rt/src/chmtx.c **** 
 777              		.loc 1 430 18 view .LVU242
 778 000c 5363     		str	r3, [r2, #52]
 779              		.loc 1 433 5 is_stmt 1 view .LVU243
 780              	.LVL39:
 781              	.LBB164:
 782              	.LBI164:
 128:./lib/chibios/os/rt/include/chmtx.h **** 
 783              		.loc 6 128 20 view .LVU244
 784              	.LBB165:
 130:./lib/chibios/os/rt/include/chmtx.h **** 
 785              		.loc 6 130 21 view .LVU245
 786              		.loc 6 132 3 view .LVU246
 787              	.LBB166:
 788              	.LBI166:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 789              		.loc 2 564 20 view .LVU247
 790              	.LBB167:
 791              		.loc 2 566 3 view .LVU248
 792              		.loc 2 566 3 is_stmt 0 view .LVU249
 793              	.LBE167:
 794              	.LBE166:
 795              	.LBE165:
 796              	.LBE164:
 797              		.loc 1 433 8 view .LVU250
 798 000e 8142     		cmp	r1, r0
 799 0010 16D0     		beq	.L32
 800              	.LBB168:
 434:lib/chibios/os/rt/src/chmtx.c ****       thread_t *tp;
 801              		.loc 1 434 7 is_stmt 1 view .LVU251
 435:lib/chibios/os/rt/src/chmtx.c **** 
 436:lib/chibios/os/rt/src/chmtx.c ****       /* Recalculates the optimal thread priority by scanning the owned
 437:lib/chibios/os/rt/src/chmtx.c ****          mutexes list.*/
 438:lib/chibios/os/rt/src/chmtx.c ****       tprio_t newprio = ctp->realprio;
 802              		.loc 1 438 7 view .LVU252
 803              		.loc 1 438 15 is_stmt 0 view .LVU253
 804 0012 916B     		ldr	r1, [r2, #56]
 805              	.LVL40:
 439:lib/chibios/os/rt/src/chmtx.c ****       lmp = ctp->mtxlist;
 806              		.loc 1 439 7 is_stmt 1 view .LVU254
 440:lib/chibios/os/rt/src/chmtx.c ****       while (lmp != NULL) {
 807              		.loc 1 440 7 view .LVU255
 808              	.L33:
 809              		.loc 1 440 13 is_stmt 0 view .LVU256
 810 0014 002B     		cmp	r3, #0
 811 0016 0AD1     		bne	.L36
 441:lib/chibios/os/rt/src/chmtx.c ****         /* If the highest priority thread waiting in the mutexes list has a
 442:lib/chibios/os/rt/src/chmtx.c ****            greater priority than the current thread base priority then the
 443:lib/chibios/os/rt/src/chmtx.c ****            final priority will have at least that priority.*/
 444:lib/chibios/os/rt/src/chmtx.c ****         if (chMtxQueueNotEmptyS(lmp) &&
 445:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 446:lib/chibios/os/rt/src/chmtx.c ****           newprio = lmp->queue.next->prio;
 447:lib/chibios/os/rt/src/chmtx.c ****         }
 448:lib/chibios/os/rt/src/chmtx.c ****         lmp = lmp->next;
 449:lib/chibios/os/rt/src/chmtx.c ****       }
 450:lib/chibios/os/rt/src/chmtx.c **** 
 451:lib/chibios/os/rt/src/chmtx.c ****       /* Assigns to the current thread the highest priority among all the
 452:lib/chibios/os/rt/src/chmtx.c ****          waiting threads.*/
 453:lib/chibios/os/rt/src/chmtx.c ****       ctp->prio = newprio;
 812              		.loc 1 453 7 is_stmt 1 view .LVU257
 813              		.loc 1 453 17 is_stmt 0 view .LVU258
 814 0018 9160     		str	r1, [r2, #8]
 454:lib/chibios/os/rt/src/chmtx.c **** 
 455:lib/chibios/os/rt/src/chmtx.c ****       /* Awakens the highest priority thread waiting for the unlocked mutex and
 456:lib/chibios/os/rt/src/chmtx.c ****          assigns the mutex to it.*/
 457:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 458:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt = (cnt_t)1;
 459:lib/chibios/os/rt/src/chmtx.c **** #endif
 460:lib/chibios/os/rt/src/chmtx.c ****       tp = queue_fifo_remove(&mp->queue);
 815              		.loc 1 460 7 is_stmt 1 view .LVU259
 816              		.loc 1 460 12 is_stmt 0 view .LVU260
 817 001a 2000     		movs	r0, r4
 818 001c FFF7FEFF 		bl	queue_fifo_remove
 819              	.LVL41:
 461:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 820              		.loc 1 461 7 is_stmt 1 view .LVU261
 462:lib/chibios/os/rt/src/chmtx.c ****       mp->next = tp->mtxlist;
 821              		.loc 1 462 16 is_stmt 0 view .LVU262
 822 0020 436B     		ldr	r3, [r0, #52]
 461:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 823              		.loc 1 461 17 view .LVU263
 824 0022 A060     		str	r0, [r4, #8]
 825              		.loc 1 462 7 is_stmt 1 view .LVU264
 826              		.loc 1 462 16 is_stmt 0 view .LVU265
 827 0024 E360     		str	r3, [r4, #12]
 463:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 828              		.loc 1 463 7 is_stmt 1 view .LVU266
 829              		.loc 1 463 19 is_stmt 0 view .LVU267
 830 0026 4463     		str	r4, [r0, #52]
 464:lib/chibios/os/rt/src/chmtx.c ****       (void) chSchReadyI(tp);
 831              		.loc 1 464 7 is_stmt 1 view .LVU268
 832              		.loc 1 464 14 is_stmt 0 view .LVU269
 833 0028 FFF7FEFF 		bl	chSchReadyI
 834              	.LVL42:
 835              	.L31:
 836              		.loc 1 464 14 view .LVU270
 837              	.LBE168:
 465:lib/chibios/os/rt/src/chmtx.c ****     }
 466:lib/chibios/os/rt/src/chmtx.c ****     else {
 467:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = NULL;
 468:lib/chibios/os/rt/src/chmtx.c ****     }
 469:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 470:lib/chibios/os/rt/src/chmtx.c ****   }
 471:lib/chibios/os/rt/src/chmtx.c **** #endif
 472:lib/chibios/os/rt/src/chmtx.c **** }
 838              		.loc 1 472 1 view .LVU271
 839              		@ sp needed
 840              	.LVL43:
 841              		.loc 1 472 1 view .LVU272
 842 002c 10BD     		pop	{r4, pc}
 843              	.LVL44:
 844              	.L36:
 845              	.LBB173:
 444:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 846              		.loc 1 444 9 is_stmt 1 view .LVU273
 847              	.LBB169:
 848              	.LBI169:
 128:./lib/chibios/os/rt/include/chmtx.h **** 
 849              		.loc 6 128 20 view .LVU274
 850              	.LBB170:
 130:./lib/chibios/os/rt/include/chmtx.h **** 
 851              		.loc 6 130 21 view .LVU275
 852              		.loc 6 132 3 view .LVU276
 853              	.LBB171:
 854              	.LBI171:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 855              		.loc 2 564 20 view .LVU277
 856              	.LBB172:
 857              		.loc 2 566 3 view .LVU278
 858              		.loc 2 566 20 is_stmt 0 view .LVU279
 859 002e 1868     		ldr	r0, [r3]
 860              	.LVL45:
 861              		.loc 2 566 20 view .LVU280
 862              	.LBE172:
 863              	.LBE171:
 864              	.LBE170:
 865              	.LBE169:
 444:lib/chibios/os/rt/src/chmtx.c ****             (lmp->queue.next->prio > newprio)) {
 866              		.loc 1 444 12 view .LVU281
 867 0030 8342     		cmp	r3, r0
 868 0032 03D0     		beq	.L34
 869 0034 8068     		ldr	r0, [r0, #8]
 870 0036 8142     		cmp	r1, r0
 871 0038 00D2     		bcs	.L34
 872 003a 0100     		movs	r1, r0
 873              	.LVL46:
 874              	.L34:
 448:lib/chibios/os/rt/src/chmtx.c ****       }
 875              		.loc 1 448 9 is_stmt 1 view .LVU282
 448:lib/chibios/os/rt/src/chmtx.c ****       }
 876              		.loc 1 448 13 is_stmt 0 view .LVU283
 877 003c DB68     		ldr	r3, [r3, #12]
 878              	.LVL47:
 448:lib/chibios/os/rt/src/chmtx.c ****       }
 879              		.loc 1 448 13 view .LVU284
 880 003e E9E7     		b	.L33
 881              	.LVL48:
 882              	.L32:
 448:lib/chibios/os/rt/src/chmtx.c ****       }
 883              		.loc 1 448 13 view .LVU285
 884              	.LBE173:
 467:lib/chibios/os/rt/src/chmtx.c ****     }
 885              		.loc 1 467 7 is_stmt 1 view .LVU286
 467:lib/chibios/os/rt/src/chmtx.c ****     }
 886              		.loc 1 467 17 is_stmt 0 view .LVU287
 887 0040 0023     		movs	r3, #0
 888 0042 8B60     		str	r3, [r1, #8]
 889              		.loc 1 472 1 view .LVU288
 890 0044 F2E7     		b	.L31
 891              	.L39:
 892 0046 C046     		.align	2
 893              	.L38:
 894 0048 00000000 		.word	ch
 895              		.cfi_endproc
 896              	.LFE160:
 898              		.section	.text.chMtxUnlockAllS,"ax",%progbits
 899              		.align	1
 900              		.global	chMtxUnlockAllS
 901              		.syntax unified
 902              		.code	16
 903              		.thumb_func
 904              		.fpu softvfp
 906              	chMtxUnlockAllS:
 907              	.LFB161:
 473:lib/chibios/os/rt/src/chmtx.c **** 
 474:lib/chibios/os/rt/src/chmtx.c **** /**
 475:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Unlocks all mutexes owned by the invoking thread.
 476:lib/chibios/os/rt/src/chmtx.c ****  * @post    The stack of owned mutexes is emptied and all the found
 477:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes are unlocked.
 478:lib/chibios/os/rt/src/chmtx.c ****  * @post    This function does not reschedule so a call to a rescheduling
 479:lib/chibios/os/rt/src/chmtx.c ****  *          function must be performed before unlocking the kernel.
 480:lib/chibios/os/rt/src/chmtx.c ****  * @note    This function is <b>MUCH MORE</b> efficient than releasing the
 481:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes one by one and not just because the call overhead,
 482:lib/chibios/os/rt/src/chmtx.c ****  *          this function does not have any overhead related to the priority
 483:lib/chibios/os/rt/src/chmtx.c ****  *          inheritance mechanism.
 484:lib/chibios/os/rt/src/chmtx.c ****  *
 485:lib/chibios/os/rt/src/chmtx.c ****  * @sclass
 486:lib/chibios/os/rt/src/chmtx.c ****  */
 487:lib/chibios/os/rt/src/chmtx.c **** void chMtxUnlockAllS(void) {
 908              		.loc 1 487 28 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 488:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 912              		.loc 1 488 3 view .LVU290
 913              		.loc 1 488 13 is_stmt 0 view .LVU291
 914 0000 0D4B     		ldr	r3, .L45
 487:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 915              		.loc 1 487 28 view .LVU292
 916 0002 70B5     		push	{r4, r5, r6, lr}
 917              		.cfi_def_cfa_offset 16
 918              		.cfi_offset 4, -16
 919              		.cfi_offset 5, -12
 920              		.cfi_offset 6, -8
 921              		.cfi_offset 14, -4
 922              		.loc 1 488 13 view .LVU293
 923 0004 9D69     		ldr	r5, [r3, #24]
 924              	.LVL49:
 489:lib/chibios/os/rt/src/chmtx.c **** 
 490:lib/chibios/os/rt/src/chmtx.c ****   while (ctp->mtxlist != NULL) {
 925              		.loc 1 490 3 is_stmt 1 view .LVU294
 926              	.L41:
 927              		.loc 1 490 13 is_stmt 0 view .LVU295
 928 0006 6C6B     		ldr	r4, [r5, #52]
 929              		.loc 1 490 9 view .LVU296
 930 0008 002C     		cmp	r4, #0
 931 000a 02D1     		bne	.L44
 491:lib/chibios/os/rt/src/chmtx.c ****     mutex_t *mp = ctp->mtxlist;
 492:lib/chibios/os/rt/src/chmtx.c ****     ctp->mtxlist = mp->next;
 493:lib/chibios/os/rt/src/chmtx.c ****     if (chMtxQueueNotEmptyS(mp)) {
 494:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 495:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt = (cnt_t)1;
 496:lib/chibios/os/rt/src/chmtx.c **** #endif
 497:lib/chibios/os/rt/src/chmtx.c ****       thread_t *tp = queue_fifo_remove(&mp->queue);
 498:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 499:lib/chibios/os/rt/src/chmtx.c ****       mp->next = tp->mtxlist;
 500:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 501:lib/chibios/os/rt/src/chmtx.c ****       (void) chSchReadyI(tp);
 502:lib/chibios/os/rt/src/chmtx.c ****     }
 503:lib/chibios/os/rt/src/chmtx.c ****     else {
 504:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 505:lib/chibios/os/rt/src/chmtx.c ****       mp->cnt = (cnt_t)0;
 506:lib/chibios/os/rt/src/chmtx.c **** #endif
 507:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = NULL;
 508:lib/chibios/os/rt/src/chmtx.c ****     }
 509:lib/chibios/os/rt/src/chmtx.c ****   }
 510:lib/chibios/os/rt/src/chmtx.c ****   ctp->prio = ctp->realprio;
 932              		.loc 1 510 3 is_stmt 1 view .LVU297
 933              		.loc 1 510 13 is_stmt 0 view .LVU298
 934 000c AB6B     		ldr	r3, [r5, #56]
 511:lib/chibios/os/rt/src/chmtx.c **** }
 935              		.loc 1 511 1 view .LVU299
 936              		@ sp needed
 510:lib/chibios/os/rt/src/chmtx.c **** }
 937              		.loc 1 510 13 view .LVU300
 938 000e AB60     		str	r3, [r5, #8]
 939              	.LVL50:
 940              		.loc 1 511 1 view .LVU301
 941 0010 70BD     		pop	{r4, r5, r6, pc}
 942              	.LVL51:
 943              	.L44:
 944              	.LBB174:
 491:lib/chibios/os/rt/src/chmtx.c ****     mutex_t *mp = ctp->mtxlist;
 945              		.loc 1 491 5 is_stmt 1 view .LVU302
 492:lib/chibios/os/rt/src/chmtx.c ****     if (chMtxQueueNotEmptyS(mp)) {
 946              		.loc 1 492 5 view .LVU303
 492:lib/chibios/os/rt/src/chmtx.c ****     if (chMtxQueueNotEmptyS(mp)) {
 947              		.loc 1 492 18 is_stmt 0 view .LVU304
 948 0012 E368     		ldr	r3, [r4, #12]
 949 0014 6B63     		str	r3, [r5, #52]
 493:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 950              		.loc 1 493 5 is_stmt 1 view .LVU305
 951              	.LVL52:
 952              	.LBB175:
 953              	.LBI175:
 128:./lib/chibios/os/rt/include/chmtx.h **** 
 954              		.loc 6 128 20 view .LVU306
 955              	.LBB176:
 130:./lib/chibios/os/rt/include/chmtx.h **** 
 956              		.loc 6 130 21 view .LVU307
 957              		.loc 6 132 3 view .LVU308
 958              	.LBB177:
 959              	.LBI177:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 960              		.loc 2 564 20 view .LVU309
 961              	.LBB178:
 962              		.loc 2 566 3 view .LVU310
 963              		.loc 2 566 3 is_stmt 0 view .LVU311
 964              	.LBE178:
 965              	.LBE177:
 966              	.LBE176:
 967              	.LBE175:
 493:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 968              		.loc 1 493 8 view .LVU312
 969 0016 2368     		ldr	r3, [r4]
 970 0018 9C42     		cmp	r4, r3
 971 001a 09D0     		beq	.L42
 972              	.LBB179:
 497:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 973              		.loc 1 497 7 is_stmt 1 view .LVU313
 497:lib/chibios/os/rt/src/chmtx.c ****       mp->owner = tp;
 974              		.loc 1 497 22 is_stmt 0 view .LVU314
 975 001c 2000     		movs	r0, r4
 976 001e FFF7FEFF 		bl	queue_fifo_remove
 977              	.LVL53:
 498:lib/chibios/os/rt/src/chmtx.c ****       mp->next = tp->mtxlist;
 978              		.loc 1 498 7 is_stmt 1 view .LVU315
 499:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 979              		.loc 1 499 16 is_stmt 0 view .LVU316
 980 0022 436B     		ldr	r3, [r0, #52]
 498:lib/chibios/os/rt/src/chmtx.c ****       mp->next = tp->mtxlist;
 981              		.loc 1 498 17 view .LVU317
 982 0024 A060     		str	r0, [r4, #8]
 499:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 983              		.loc 1 499 7 is_stmt 1 view .LVU318
 499:lib/chibios/os/rt/src/chmtx.c ****       tp->mtxlist = mp;
 984              		.loc 1 499 16 is_stmt 0 view .LVU319
 985 0026 E360     		str	r3, [r4, #12]
 500:lib/chibios/os/rt/src/chmtx.c ****       (void) chSchReadyI(tp);
 986              		.loc 1 500 7 is_stmt 1 view .LVU320
 500:lib/chibios/os/rt/src/chmtx.c ****       (void) chSchReadyI(tp);
 987              		.loc 1 500 19 is_stmt 0 view .LVU321
 988 0028 4463     		str	r4, [r0, #52]
 501:lib/chibios/os/rt/src/chmtx.c ****     }
 989              		.loc 1 501 7 is_stmt 1 view .LVU322
 501:lib/chibios/os/rt/src/chmtx.c ****     }
 990              		.loc 1 501 14 is_stmt 0 view .LVU323
 991 002a FFF7FEFF 		bl	chSchReadyI
 992              	.LVL54:
 501:lib/chibios/os/rt/src/chmtx.c ****     }
 993              		.loc 1 501 14 view .LVU324
 994              	.LBE179:
 995 002e EAE7     		b	.L41
 996              	.L42:
 507:lib/chibios/os/rt/src/chmtx.c ****     }
 997              		.loc 1 507 7 is_stmt 1 view .LVU325
 507:lib/chibios/os/rt/src/chmtx.c ****     }
 998              		.loc 1 507 17 is_stmt 0 view .LVU326
 999 0030 0023     		movs	r3, #0
 1000 0032 A360     		str	r3, [r4, #8]
 1001 0034 E7E7     		b	.L41
 1002              	.L46:
 1003 0036 C046     		.align	2
 1004              	.L45:
 1005 0038 00000000 		.word	ch
 1006              	.LBE174:
 1007              		.cfi_endproc
 1008              	.LFE161:
 1010              		.section	.text.chMtxUnlockAll,"ax",%progbits
 1011              		.align	1
 1012              		.global	chMtxUnlockAll
 1013              		.syntax unified
 1014              		.code	16
 1015              		.thumb_func
 1016              		.fpu softvfp
 1018              	chMtxUnlockAll:
 1019              	.LFB162:
 512:lib/chibios/os/rt/src/chmtx.c **** 
 513:lib/chibios/os/rt/src/chmtx.c **** /**
 514:lib/chibios/os/rt/src/chmtx.c ****  * @brief   Unlocks all mutexes owned by the invoking thread.
 515:lib/chibios/os/rt/src/chmtx.c ****  * @post    The stack of owned mutexes is emptied and all the found
 516:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes are unlocked.
 517:lib/chibios/os/rt/src/chmtx.c ****  * @note    This function is <b>MUCH MORE</b> efficient than releasing the
 518:lib/chibios/os/rt/src/chmtx.c ****  *          mutexes one by one and not just because the call overhead,
 519:lib/chibios/os/rt/src/chmtx.c ****  *          this function does not have any overhead related to the priority
 520:lib/chibios/os/rt/src/chmtx.c ****  *          inheritance mechanism.
 521:lib/chibios/os/rt/src/chmtx.c ****  *
 522:lib/chibios/os/rt/src/chmtx.c ****  * @api
 523:lib/chibios/os/rt/src/chmtx.c ****  */
 524:lib/chibios/os/rt/src/chmtx.c **** void chMtxUnlockAll(void) {
 1020              		.loc 1 524 27 is_stmt 1 view -0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 525:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 1024              		.loc 1 525 3 view .LVU328
 1025              		.loc 1 525 13 is_stmt 0 view .LVU329
 1026 0000 104B     		ldr	r3, .L56
 524:lib/chibios/os/rt/src/chmtx.c ****   thread_t *ctp = currp;
 1027              		.loc 1 524 27 view .LVU330
 1028 0002 70B5     		push	{r4, r5, r6, lr}
 1029              		.cfi_def_cfa_offset 16
 1030              		.cfi_offset 4, -16
 1031              		.cfi_offset 5, -12
 1032              		.cfi_offset 6, -8
 1033              		.cfi_offset 14, -4
 1034              		.loc 1 525 13 view .LVU331
 1035 0004 9D69     		ldr	r5, [r3, #24]
 1036              	.LVL55:
 526:lib/chibios/os/rt/src/chmtx.c **** 
 527:lib/chibios/os/rt/src/chmtx.c ****   chSysLock();
 1037              		.loc 1 527 3 is_stmt 1 view .LVU332
 1038              	.LBB180:
 1039              	.LBI180:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1040              		.loc 3 353 20 view .LVU333
 1041              	.LBE180:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1042              		.loc 3 355 3 view .LVU334
 1043              	.LBB185:
 1044              	.LBB181:
 1045              	.LBI181:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1046              		.loc 4 387 20 view .LVU335
 1047              	.LBE181:
 1048              	.LBE185:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1049              		.loc 4 389 3 view .LVU336
 1050              	.LBB186:
 1051              	.LBB184:
 1052              	.LBB182:
 1053              	.LBI182:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1054              		.loc 5 140 27 view .LVU337
 1055              	.LBB183:
 1056              		.loc 5 142 3 view .LVU338
 1057              		.syntax divided
 1058              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1059 0006 72B6     		cpsid i
 1060              	@ 0 "" 2
 1061              		.thumb
 1062              		.syntax unified
 1063              	.LBE183:
 1064              	.LBE182:
 1065              	.LBE184:
 1066              	.LBE186:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1067              		.loc 3 356 34 view .LVU339
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1068              		.loc 3 357 20 view .LVU340
 528:lib/chibios/os/rt/src/chmtx.c ****   if (ctp->mtxlist != NULL) {
 1069              		.loc 1 528 3 view .LVU341
 1070              		.loc 1 528 6 is_stmt 0 view .LVU342
 1071 0008 6B6B     		ldr	r3, [r5, #52]
 1072 000a 002B     		cmp	r3, #0
 1073 000c 15D0     		beq	.L48
 1074              	.L51:
 529:lib/chibios/os/rt/src/chmtx.c ****     do {
 1075              		.loc 1 529 5 is_stmt 1 view .LVU343
 1076              	.LBB187:
 530:lib/chibios/os/rt/src/chmtx.c ****       mutex_t *mp = ctp->mtxlist;
 1077              		.loc 1 530 7 view .LVU344
 1078              		.loc 1 530 16 is_stmt 0 view .LVU345
 1079 000e 6C6B     		ldr	r4, [r5, #52]
 1080              	.LVL56:
 531:lib/chibios/os/rt/src/chmtx.c ****       ctp->mtxlist = mp->next;
 1081              		.loc 1 531 7 is_stmt 1 view .LVU346
 1082              		.loc 1 531 20 is_stmt 0 view .LVU347
 1083 0010 E368     		ldr	r3, [r4, #12]
 1084 0012 6B63     		str	r3, [r5, #52]
 532:lib/chibios/os/rt/src/chmtx.c ****       if (chMtxQueueNotEmptyS(mp)) {
 1085              		.loc 1 532 7 is_stmt 1 view .LVU348
 1086              	.LVL57:
 1087              	.LBB188:
 1088              	.LBI188:
 128:./lib/chibios/os/rt/include/chmtx.h **** 
 1089              		.loc 6 128 20 view .LVU349
 1090              	.LBB189:
 130:./lib/chibios/os/rt/include/chmtx.h **** 
 1091              		.loc 6 130 21 view .LVU350
 1092              		.loc 6 132 3 view .LVU351
 1093              	.LBB190:
 1094              	.LBI190:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 1095              		.loc 2 564 20 view .LVU352
 1096              	.LBB191:
 1097              		.loc 2 566 3 view .LVU353
 1098              		.loc 2 566 3 is_stmt 0 view .LVU354
 1099              	.LBE191:
 1100              	.LBE190:
 1101              	.LBE189:
 1102              	.LBE188:
 1103              		.loc 1 532 10 view .LVU355
 1104 0014 2368     		ldr	r3, [r4]
 1105 0016 9C42     		cmp	r4, r3
 1106 0018 11D0     		beq	.L49
 1107              	.LBB192:
 533:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 534:lib/chibios/os/rt/src/chmtx.c ****         mp->cnt = (cnt_t)1;
 535:lib/chibios/os/rt/src/chmtx.c **** #endif
 536:lib/chibios/os/rt/src/chmtx.c ****         thread_t *tp = queue_fifo_remove(&mp->queue);
 1108              		.loc 1 536 9 is_stmt 1 view .LVU356
 1109              		.loc 1 536 24 is_stmt 0 view .LVU357
 1110 001a 2000     		movs	r0, r4
 1111 001c FFF7FEFF 		bl	queue_fifo_remove
 1112              	.LVL58:
 537:lib/chibios/os/rt/src/chmtx.c ****         mp->owner = tp;
 1113              		.loc 1 537 9 is_stmt 1 view .LVU358
 538:lib/chibios/os/rt/src/chmtx.c ****         mp->next = tp->mtxlist;
 1114              		.loc 1 538 18 is_stmt 0 view .LVU359
 1115 0020 436B     		ldr	r3, [r0, #52]
 537:lib/chibios/os/rt/src/chmtx.c ****         mp->owner = tp;
 1116              		.loc 1 537 19 view .LVU360
 1117 0022 A060     		str	r0, [r4, #8]
 1118              		.loc 1 538 9 is_stmt 1 view .LVU361
 1119              		.loc 1 538 18 is_stmt 0 view .LVU362
 1120 0024 E360     		str	r3, [r4, #12]
 539:lib/chibios/os/rt/src/chmtx.c ****         tp->mtxlist = mp;
 1121              		.loc 1 539 9 is_stmt 1 view .LVU363
 1122              		.loc 1 539 21 is_stmt 0 view .LVU364
 1123 0026 4463     		str	r4, [r0, #52]
 540:lib/chibios/os/rt/src/chmtx.c ****         (void) chSchReadyI(tp);
 1124              		.loc 1 540 9 is_stmt 1 view .LVU365
 1125              		.loc 1 540 16 is_stmt 0 view .LVU366
 1126 0028 FFF7FEFF 		bl	chSchReadyI
 1127              	.LVL59:
 1128              	.L50:
 1129              		.loc 1 540 16 view .LVU367
 1130              	.LBE192:
 1131              	.LBE187:
 541:lib/chibios/os/rt/src/chmtx.c ****       }
 542:lib/chibios/os/rt/src/chmtx.c ****       else {
 543:lib/chibios/os/rt/src/chmtx.c **** #if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
 544:lib/chibios/os/rt/src/chmtx.c ****         mp->cnt = (cnt_t)0;
 545:lib/chibios/os/rt/src/chmtx.c **** #endif
 546:lib/chibios/os/rt/src/chmtx.c ****         mp->owner = NULL;
 547:lib/chibios/os/rt/src/chmtx.c ****       }
 548:lib/chibios/os/rt/src/chmtx.c ****     } while (ctp->mtxlist != NULL);
 1132              		.loc 1 548 5 view .LVU368
 1133 002c 6B6B     		ldr	r3, [r5, #52]
 1134 002e 002B     		cmp	r3, #0
 1135 0030 EDD1     		bne	.L51
 549:lib/chibios/os/rt/src/chmtx.c ****     ctp->prio = ctp->realprio;
 1136              		.loc 1 549 5 is_stmt 1 view .LVU369
 1137              		.loc 1 549 15 is_stmt 0 view .LVU370
 1138 0032 AB6B     		ldr	r3, [r5, #56]
 1139 0034 AB60     		str	r3, [r5, #8]
 550:lib/chibios/os/rt/src/chmtx.c ****     chSchRescheduleS();
 1140              		.loc 1 550 5 is_stmt 1 view .LVU371
 1141 0036 FFF7FEFF 		bl	chSchRescheduleS
 1142              	.LVL60:
 1143              	.L48:
 551:lib/chibios/os/rt/src/chmtx.c ****   }
 552:lib/chibios/os/rt/src/chmtx.c ****   chSysUnlock();
 1144              		.loc 1 552 3 view .LVU372
 1145              	.LBB193:
 1146              	.LBI193:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1147              		.loc 3 365 20 view .LVU373
 1148              	.LBB194:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1149              		.loc 3 367 22 view .LVU374
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1150              		.loc 3 368 33 view .LVU375
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1151              		.loc 3 374 3 view .LVU376
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1152              		.loc 3 374 3 view .LVU377
 1153              		.loc 3 378 3 view .LVU378
 1154              	.LBB195:
 1155              	.LBI195:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1156              		.loc 4 396 20 view .LVU379
 1157              	.LBE195:
 1158              	.LBE194:
 1159              	.LBE193:
 1160              		.loc 4 398 3 view .LVU380
 1161              	.LBB200:
 1162              	.LBB199:
 1163              	.LBB198:
 1164              	.LBB196:
 1165              	.LBI196:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1166              		.loc 5 129 27 view .LVU381
 1167              	.LBB197:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1168              		.loc 5 131 3 view .LVU382
 1169              		.syntax divided
 1170              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1171 003a 62B6     		cpsie i
 1172              	@ 0 "" 2
 1173              		.thumb
 1174              		.syntax unified
 1175              	.LBE197:
 1176              	.LBE196:
 1177              	.LBE198:
 1178              	.LBE199:
 1179              	.LBE200:
 553:lib/chibios/os/rt/src/chmtx.c **** }
 1180              		.loc 1 553 1 is_stmt 0 view .LVU383
 1181              		@ sp needed
 1182              	.LVL61:
 1183              		.loc 1 553 1 view .LVU384
 1184 003c 70BD     		pop	{r4, r5, r6, pc}
 1185              	.LVL62:
 1186              	.L49:
 1187              	.LBB201:
 546:lib/chibios/os/rt/src/chmtx.c ****       }
 1188              		.loc 1 546 9 is_stmt 1 view .LVU385
 546:lib/chibios/os/rt/src/chmtx.c ****       }
 1189              		.loc 1 546 19 is_stmt 0 view .LVU386
 1190 003e 0023     		movs	r3, #0
 1191 0040 A360     		str	r3, [r4, #8]
 1192 0042 F3E7     		b	.L50
 1193              	.L57:
 1194              		.align	2
 1195              	.L56:
 1196 0044 00000000 		.word	ch
 1197              	.LBE201:
 1198              		.cfi_endproc
 1199              	.LFE162:
 1201              		.text
 1202              	.Letext0:
 1203              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1204              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1205              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1206              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 1207              		.file 11 "./lib/chibios/os/rt/include/chtime.h"
 1208              		.file 12 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1209              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1210              		.file 14 "./lib/chibios/os/rt/include/chsem.h"
 1211              		.file 15 "./lib/chibios/os/rt/include/chregistry.h"
 1212              		.file 16 "./lib/chibios/os/oslib/include/chmemcore.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chmtx.c
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:16     .text.chMtxObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:24     .text.chMtxObjectInit:00000000 chMtxObjectInit
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:67     .text.chMtxLockS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:74     .text.chMtxLockS:00000000 chMtxLockS
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:202    .text.chMtxLockS:0000006c $d
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:207    .text.chMtxLock:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:214    .text.chMtxLock:00000000 chMtxLock
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:316    .text.chMtxTryLockS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:323    .text.chMtxTryLockS:00000000 chMtxTryLockS
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:378    .text.chMtxTryLockS:0000001c $d
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:383    .text.chMtxTryLock:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:390    .text.chMtxTryLock:00000000 chMtxTryLock
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:492    .text.chMtxUnlock:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:499    .text.chMtxUnlock:00000000 chMtxUnlock
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:730    .text.chMtxUnlock:00000050 $d
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:735    .text.chMtxUnlockS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:742    .text.chMtxUnlockS:00000000 chMtxUnlockS
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:894    .text.chMtxUnlockS:00000048 $d
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:899    .text.chMtxUnlockAllS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:906    .text.chMtxUnlockAllS:00000000 chMtxUnlockAllS
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:1005   .text.chMtxUnlockAllS:00000038 $d
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:1011   .text.chMtxUnlockAll:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:1018   .text.chMtxUnlockAll:00000000 chMtxUnlockAll
C:\Users\kyleo\AppData\Local\Temp\cceOsRPU.s:1196   .text.chMtxUnlockAll:00000044 $d

UNDEFINED SYMBOLS
queue_dequeue
queue_prio_insert
chSchReadyI
chSchGoSleepS
ch
queue_fifo_remove
chSchRescheduleS
