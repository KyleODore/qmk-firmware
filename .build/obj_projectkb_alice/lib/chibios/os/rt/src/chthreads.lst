   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"chthreads.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._thread_init,"ax",%progbits
  16              		.align	1
  17              		.global	_thread_init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_thread_init:
  25              	.LVL0:
  26              	.LFB154:
  27              		.file 1 "lib/chibios/os/rt/src/chthreads.c"
   1:lib/chibios/os/rt/src/chthreads.c **** /*
   2:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chthreads.c **** 
   4:lib/chibios/os/rt/src/chthreads.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chthreads.c **** 
   6:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chthreads.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chthreads.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chthreads.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chthreads.c **** 
  11:lib/chibios/os/rt/src/chthreads.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chthreads.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chthreads.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chthreads.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chthreads.c **** 
  16:lib/chibios/os/rt/src/chthreads.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chthreads.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chthreads.c **** */
  19:lib/chibios/os/rt/src/chthreads.c **** 
  20:lib/chibios/os/rt/src/chthreads.c **** /**
  21:lib/chibios/os/rt/src/chthreads.c ****  * @file    chthreads.c
  22:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Threads code.
  23:lib/chibios/os/rt/src/chthreads.c ****  *
  24:lib/chibios/os/rt/src/chthreads.c ****  * @addtogroup threads
  25:lib/chibios/os/rt/src/chthreads.c ****  * @details Threads related APIs and services.
  26:lib/chibios/os/rt/src/chthreads.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/rt/src/chthreads.c ****  *          A thread is an abstraction of an independent instructions flow.
  28:lib/chibios/os/rt/src/chthreads.c ****  *          In ChibiOS/RT a thread is represented by a "C" function owning
  29:lib/chibios/os/rt/src/chthreads.c ****  *          a processor context, state informations and a dedicated stack
  30:lib/chibios/os/rt/src/chthreads.c ****  *          area. In this scenario static variables are shared among all
  31:lib/chibios/os/rt/src/chthreads.c ****  *          threads while automatic variables are local to the thread.<br>
  32:lib/chibios/os/rt/src/chthreads.c ****  *          Operations defined for threads:
  33:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Create</b>, a thread is started on the specified thread
  34:lib/chibios/os/rt/src/chthreads.c ****  *            function. This operation is available in multiple variants,
  35:lib/chibios/os/rt/src/chthreads.c ****  *            both static and dynamic.
  36:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Exit</b>, a thread terminates by returning from its top
  37:lib/chibios/os/rt/src/chthreads.c ****  *            level function or invoking a specific API, the thread can
  38:lib/chibios/os/rt/src/chthreads.c ****  *            return a value that can be retrieved by other threads.
  39:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Wait</b>, a thread waits for the termination of another
  40:lib/chibios/os/rt/src/chthreads.c ****  *            thread and retrieves its return value.
  41:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Resume</b>, a thread created in suspended state is started.
  42:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Sleep</b>, the execution of a thread is suspended for the
  43:lib/chibios/os/rt/src/chthreads.c ****  *            specified amount of time or the specified future absolute time
  44:lib/chibios/os/rt/src/chthreads.c ****  *            is reached.
  45:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>SetPriority</b>, a thread changes its own priority level.
  46:lib/chibios/os/rt/src/chthreads.c ****  *          - <b>Yield</b>, a thread voluntarily renounces to its time slot.
  47:lib/chibios/os/rt/src/chthreads.c ****  *          .
  48:lib/chibios/os/rt/src/chthreads.c ****  * @{
  49:lib/chibios/os/rt/src/chthreads.c ****  */
  50:lib/chibios/os/rt/src/chthreads.c **** 
  51:lib/chibios/os/rt/src/chthreads.c **** #include "ch.h"
  52:lib/chibios/os/rt/src/chthreads.c **** 
  53:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  54:lib/chibios/os/rt/src/chthreads.c **** /* Module local definitions.                                                 */
  55:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  56:lib/chibios/os/rt/src/chthreads.c **** 
  57:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  58:lib/chibios/os/rt/src/chthreads.c **** /* Module exported variables.                                                */
  59:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  60:lib/chibios/os/rt/src/chthreads.c **** 
  61:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  62:lib/chibios/os/rt/src/chthreads.c **** /* Module local types.                                                       */
  63:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  64:lib/chibios/os/rt/src/chthreads.c **** 
  65:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  66:lib/chibios/os/rt/src/chthreads.c **** /* Module local variables.                                                   */
  67:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  68:lib/chibios/os/rt/src/chthreads.c **** 
  69:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  70:lib/chibios/os/rt/src/chthreads.c **** /* Module local functions.                                                   */
  71:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  72:lib/chibios/os/rt/src/chthreads.c **** 
  73:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  74:lib/chibios/os/rt/src/chthreads.c **** /* Module exported functions.                                                */
  75:lib/chibios/os/rt/src/chthreads.c **** /*===========================================================================*/
  76:lib/chibios/os/rt/src/chthreads.c **** 
  77:lib/chibios/os/rt/src/chthreads.c **** /**
  78:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Initializes a thread structure.
  79:lib/chibios/os/rt/src/chthreads.c ****  * @note    This is an internal functions, do not use it in application code.
  80:lib/chibios/os/rt/src/chthreads.c ****  *
  81:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
  82:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] name      thread name
  83:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
  84:lib/chibios/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter.
  85:lib/chibios/os/rt/src/chthreads.c ****  *
  86:lib/chibios/os/rt/src/chthreads.c ****  * @notapi
  87:lib/chibios/os/rt/src/chthreads.c ****  */
  88:lib/chibios/os/rt/src/chthreads.c **** thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio) {
  28              		.loc 1 88 70 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  89:lib/chibios/os/rt/src/chthreads.c **** 
  90:lib/chibios/os/rt/src/chthreads.c ****   tp->prio      = prio;
  33              		.loc 1 90 3 view .LVU1
  91:lib/chibios/os/rt/src/chthreads.c ****   tp->state     = CH_STATE_WTSTART;
  92:lib/chibios/os/rt/src/chthreads.c ****   tp->flags     = CH_FLAG_MODE_STATIC;
  93:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
  94:lib/chibios/os/rt/src/chthreads.c ****   tp->ticks     = (tslices_t)CH_CFG_TIME_QUANTUM;
  95:lib/chibios/os/rt/src/chthreads.c **** #endif
  96:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
  97:lib/chibios/os/rt/src/chthreads.c ****   tp->realprio  = prio;
  98:lib/chibios/os/rt/src/chthreads.c ****   tp->mtxlist   = NULL;
  34              		.loc 1 98 17 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 4363     		str	r3, [r0, #52]
  99:lib/chibios/os/rt/src/chthreads.c **** #endif
 100:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_EVENTS == TRUE
 101:lib/chibios/os/rt/src/chthreads.c ****   tp->epending  = (eventmask_t)0;
  37              		.loc 1 101 17 view .LVU3
  38 0004 0363     		str	r3, [r0, #48]
  91:lib/chibios/os/rt/src/chthreads.c ****   tp->state     = CH_STATE_WTSTART;
  39              		.loc 1 91 17 view .LVU4
  40 0006 0233     		adds	r3, r3, #2
  41 0008 8383     		strh	r3, [r0, #28]
 102:lib/chibios/os/rt/src/chthreads.c **** #endif
 103:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_THREADS_PROFILING == TRUE
 104:lib/chibios/os/rt/src/chthreads.c ****   tp->time      = (systime_t)0;
 105:lib/chibios/os/rt/src/chthreads.c **** #endif
 106:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 107:lib/chibios/os/rt/src/chthreads.c ****   tp->refs      = (trefs_t)1;
  42              		.loc 1 107 17 view .LVU5
  43 000a 013B     		subs	r3, r3, #1
  44 000c 8377     		strb	r3, [r0, #30]
 108:lib/chibios/os/rt/src/chthreads.c ****   tp->name      = name;
 109:lib/chibios/os/rt/src/chthreads.c ****   REG_INSERT(tp);
  45              		.loc 1 109 3 view .LVU6
  46 000e 084B     		ldr	r3, .L2
  90:lib/chibios/os/rt/src/chthreads.c ****   tp->state     = CH_STATE_WTSTART;
  47              		.loc 1 90 17 view .LVU7
  48 0010 8260     		str	r2, [r0, #8]
  91:lib/chibios/os/rt/src/chthreads.c ****   tp->flags     = CH_FLAG_MODE_STATIC;
  49              		.loc 1 91 3 is_stmt 1 view .LVU8
  92:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
  50              		.loc 1 92 3 view .LVU9
  97:lib/chibios/os/rt/src/chthreads.c ****   tp->mtxlist   = NULL;
  51              		.loc 1 97 3 view .LVU10
  97:lib/chibios/os/rt/src/chthreads.c ****   tp->mtxlist   = NULL;
  52              		.loc 1 97 17 is_stmt 0 view .LVU11
  53 0012 8263     		str	r2, [r0, #56]
  98:lib/chibios/os/rt/src/chthreads.c **** #endif
  54              		.loc 1 98 3 is_stmt 1 view .LVU12
 101:lib/chibios/os/rt/src/chthreads.c **** #endif
  55              		.loc 1 101 3 view .LVU13
 107:lib/chibios/os/rt/src/chthreads.c ****   tp->name      = name;
  56              		.loc 1 107 3 view .LVU14
 108:lib/chibios/os/rt/src/chthreads.c ****   REG_INSERT(tp);
  57              		.loc 1 108 3 view .LVU15
  58              		.loc 1 109 3 is_stmt 0 view .LVU16
  59 0014 5A69     		ldr	r2, [r3, #20]
  60              	.LVL1:
  61              		.loc 1 109 3 view .LVU17
  62 0016 0361     		str	r3, [r0, #16]
  63 0018 4261     		str	r2, [r0, #20]
 108:lib/chibios/os/rt/src/chthreads.c ****   REG_INSERT(tp);
  64              		.loc 1 108 17 view .LVU18
  65 001a 8161     		str	r1, [r0, #24]
  66              		.loc 1 109 3 is_stmt 1 view .LVU19
  67              		.loc 1 109 3 view .LVU20
  68              		.loc 1 109 3 view .LVU21
  69 001c 1061     		str	r0, [r2, #16]
  70              		.loc 1 109 3 view .LVU22
  71 001e 5861     		str	r0, [r3, #20]
  72              		.loc 1 109 17 view .LVU23
 110:lib/chibios/os/rt/src/chthreads.c **** #else
 111:lib/chibios/os/rt/src/chthreads.c ****   (void)name;
 112:lib/chibios/os/rt/src/chthreads.c **** #endif
 113:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 114:lib/chibios/os/rt/src/chthreads.c ****   list_init(&tp->waiting);
  73              		.loc 1 114 3 view .LVU24
  74              	.LVL2:
  75              	.LBB216:
  76              	.LBI216:
  77              		.file 2 "./lib/chibios/os/rt/include/chschd.h"
   1:./lib/chibios/os/rt/include/chschd.h **** /*
   2:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chschd.h **** 
   4:./lib/chibios/os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chschd.h **** 
   6:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chschd.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chschd.h **** 
  11:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chschd.h **** 
  16:./lib/chibios/os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chschd.h **** */
  19:./lib/chibios/os/rt/include/chschd.h **** 
  20:./lib/chibios/os/rt/include/chschd.h **** /**
  21:./lib/chibios/os/rt/include/chschd.h ****  * @file    chschd.h
  22:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:./lib/chibios/os/rt/include/chschd.h ****  *
  24:./lib/chibios/os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:./lib/chibios/os/rt/include/chschd.h ****  * @{
  26:./lib/chibios/os/rt/include/chschd.h ****  */
  27:./lib/chibios/os/rt/include/chschd.h **** 
  28:./lib/chibios/os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:./lib/chibios/os/rt/include/chschd.h **** #define CHSCHD_H
  30:./lib/chibios/os/rt/include/chschd.h **** 
  31:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chschd.h **** 
  35:./lib/chibios/os/rt/include/chschd.h **** /**
  36:./lib/chibios/os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:./lib/chibios/os/rt/include/chschd.h ****  * @{
  38:./lib/chibios/os/rt/include/chschd.h ****  */
  39:./lib/chibios/os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:./lib/chibios/os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  42:./lib/chibios/os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  44:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  45:./lib/chibios/os/rt/include/chschd.h **** 
  46:./lib/chibios/os/rt/include/chschd.h **** /**
  47:./lib/chibios/os/rt/include/chschd.h ****  * @name    Priority constants
  48:./lib/chibios/os/rt/include/chschd.h ****  * @{
  49:./lib/chibios/os/rt/include/chschd.h ****  */
  50:./lib/chibios/os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:./lib/chibios/os/rt/include/chschd.h ****                                                  priority.                  */
  52:./lib/chibios/os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:./lib/chibios/os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:./lib/chibios/os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:./lib/chibios/os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  57:./lib/chibios/os/rt/include/chschd.h **** 
  58:./lib/chibios/os/rt/include/chschd.h **** /**
  59:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread states
  60:./lib/chibios/os/rt/include/chschd.h ****  * @{
  61:./lib/chibios/os/rt/include/chschd.h ****  */
  62:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:./lib/chibios/os/rt/include/chschd.h ****                                                   ready list.               */
  64:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On a queue.        */
  68:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:./lib/chibios/os/rt/include/chschd.h ****                                                   in queue.                 */
  77:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:./lib/chibios/os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:./lib/chibios/os/rt/include/chschd.h ****                                                   message.                  */
  81:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:./lib/chibios/os/rt/include/chschd.h **** 
  83:./lib/chibios/os/rt/include/chschd.h **** /**
  84:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:./lib/chibios/os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:./lib/chibios/os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:./lib/chibios/os/rt/include/chschd.h ****  */
  88:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:./lib/chibios/os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:./lib/chibios/os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:./lib/chibios/os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  93:./lib/chibios/os/rt/include/chschd.h **** 
  94:./lib/chibios/os/rt/include/chschd.h **** /**
  95:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:./lib/chibios/os/rt/include/chschd.h ****  * @{
  97:./lib/chibios/os/rt/include/chschd.h ****  */
  98:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:./lib/chibios/os/rt/include/chschd.h ****                                                  mask.                      */
 100:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:./lib/chibios/os/rt/include/chschd.h ****                                                  flag.                      */
 107:./lib/chibios/os/rt/include/chschd.h **** /** @} */
 108:./lib/chibios/os/rt/include/chschd.h **** 
 109:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 110:./lib/chibios/os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 112:./lib/chibios/os/rt/include/chschd.h **** 
 113:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 114:./lib/chibios/os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chschd.h **** 
 117:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 120:./lib/chibios/os/rt/include/chschd.h **** 
 121:./lib/chibios/os/rt/include/chschd.h **** /**
 122:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:./lib/chibios/os/rt/include/chschd.h ****  */
 124:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_list {
 125:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:./lib/chibios/os/rt/include/chschd.h **** };
 127:./lib/chibios/os/rt/include/chschd.h **** 
 128:./lib/chibios/os/rt/include/chschd.h **** /**
 129:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:./lib/chibios/os/rt/include/chschd.h ****  */
 131:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_queue {
 132:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:./lib/chibios/os/rt/include/chschd.h **** };
 135:./lib/chibios/os/rt/include/chschd.h **** 
 136:./lib/chibios/os/rt/include/chschd.h **** /**
 137:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:./lib/chibios/os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:./lib/chibios/os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:./lib/chibios/os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:./lib/chibios/os/rt/include/chschd.h ****  */
 142:./lib/chibios/os/rt/include/chschd.h **** struct ch_thread {
 143:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:./lib/chibios/os/rt/include/chschd.h **** #endif
 150:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:./lib/chibios/os/rt/include/chschd.h ****   /**
 153:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:./lib/chibios/os/rt/include/chschd.h ****    */
 155:./lib/chibios/os/rt/include/chschd.h ****   const char            *name;
 156:./lib/chibios/os/rt/include/chschd.h **** #endif
 157:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:./lib/chibios/os/rt/include/chschd.h ****   /**
 160:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:./lib/chibios/os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:./lib/chibios/os/rt/include/chschd.h ****    *          dynamic threading.
 163:./lib/chibios/os/rt/include/chschd.h ****    */
 164:./lib/chibios/os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:./lib/chibios/os/rt/include/chschd.h **** #endif
 166:./lib/chibios/os/rt/include/chschd.h ****   /**
 167:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:./lib/chibios/os/rt/include/chschd.h ****    */
 169:./lib/chibios/os/rt/include/chschd.h ****   tstate_t              state;
 170:./lib/chibios/os/rt/include/chschd.h ****   /**
 171:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:./lib/chibios/os/rt/include/chschd.h ****    */
 173:./lib/chibios/os/rt/include/chschd.h ****   tmode_t               flags;
 174:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:./lib/chibios/os/rt/include/chschd.h ****   /**
 176:./lib/chibios/os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:./lib/chibios/os/rt/include/chschd.h ****    */
 178:./lib/chibios/os/rt/include/chschd.h ****   trefs_t               refs;
 179:./lib/chibios/os/rt/include/chschd.h **** #endif
 180:./lib/chibios/os/rt/include/chschd.h ****   /**
 181:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:./lib/chibios/os/rt/include/chschd.h ****    */
 183:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:./lib/chibios/os/rt/include/chschd.h ****   tslices_t             ticks;
 185:./lib/chibios/os/rt/include/chschd.h **** #endif
 186:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:./lib/chibios/os/rt/include/chschd.h ****   /**
 188:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:./lib/chibios/os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:./lib/chibios/os/rt/include/chschd.h ****    */
 191:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    time;
 192:./lib/chibios/os/rt/include/chschd.h **** #endif
 193:./lib/chibios/os/rt/include/chschd.h ****   /**
 194:./lib/chibios/os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:./lib/chibios/os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:./lib/chibios/os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:./lib/chibios/os/rt/include/chschd.h ****    */
 198:./lib/chibios/os/rt/include/chschd.h ****   union {
 199:./lib/chibios/os/rt/include/chschd.h ****     /**
 200:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:./lib/chibios/os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:./lib/chibios/os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:./lib/chibios/os/rt/include/chschd.h ****      */
 205:./lib/chibios/os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:./lib/chibios/os/rt/include/chschd.h ****     /**
 207:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:./lib/chibios/os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:./lib/chibios/os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:./lib/chibios/os/rt/include/chschd.h ****      *          this thread.
 211:./lib/chibios/os/rt/include/chschd.h ****      */
 212:./lib/chibios/os/rt/include/chschd.h ****     msg_t               exitcode;
 213:./lib/chibios/os/rt/include/chschd.h ****     /**
 214:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:./lib/chibios/os/rt/include/chschd.h ****      *          states.
 218:./lib/chibios/os/rt/include/chschd.h ****      */
 219:./lib/chibios/os/rt/include/chschd.h ****     void                *wtobjp;
 220:./lib/chibios/os/rt/include/chschd.h ****     /**
 221:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 225:./lib/chibios/os/rt/include/chschd.h ****      */
 226:./lib/chibios/os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:./lib/chibios/os/rt/include/chschd.h ****     /**
 229:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:./lib/chibios/os/rt/include/chschd.h ****      */
 231:./lib/chibios/os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:./lib/chibios/os/rt/include/chschd.h **** #endif
 233:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:./lib/chibios/os/rt/include/chschd.h ****     /**
 235:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 239:./lib/chibios/os/rt/include/chschd.h ****      */
 240:./lib/chibios/os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:./lib/chibios/os/rt/include/chschd.h **** #endif
 242:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:./lib/chibios/os/rt/include/chschd.h ****     /**
 244:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 248:./lib/chibios/os/rt/include/chschd.h ****      */
 249:./lib/chibios/os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:./lib/chibios/os/rt/include/chschd.h **** #endif
 251:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:./lib/chibios/os/rt/include/chschd.h ****     /**
 253:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:./lib/chibios/os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:./lib/chibios/os/rt/include/chschd.h ****      */
 257:./lib/chibios/os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:./lib/chibios/os/rt/include/chschd.h **** #endif
 259:./lib/chibios/os/rt/include/chschd.h ****   }                     u;
 260:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:./lib/chibios/os/rt/include/chschd.h ****   /**
 262:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:./lib/chibios/os/rt/include/chschd.h ****    */
 264:./lib/chibios/os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:./lib/chibios/os/rt/include/chschd.h **** #endif
 266:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:./lib/chibios/os/rt/include/chschd.h ****   /**
 268:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:./lib/chibios/os/rt/include/chschd.h ****    */
 270:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:./lib/chibios/os/rt/include/chschd.h **** #endif
 272:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:./lib/chibios/os/rt/include/chschd.h ****   /**
 274:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:./lib/chibios/os/rt/include/chschd.h ****    */
 276:./lib/chibios/os/rt/include/chschd.h ****   eventmask_t           epending;
 277:./lib/chibios/os/rt/include/chschd.h **** #endif
 278:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chschd.h ****   /**
 280:./lib/chibios/os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:./lib/chibios/os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:./lib/chibios/os/rt/include/chschd.h ****    */
 283:./lib/chibios/os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:./lib/chibios/os/rt/include/chschd.h ****   /**
 285:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:./lib/chibios/os/rt/include/chschd.h ****    */
 287:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               realprio;
 288:./lib/chibios/os/rt/include/chschd.h **** #endif
 289:./lib/chibios/os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:./lib/chibios/os/rt/include/chschd.h ****   /**
 292:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:./lib/chibios/os/rt/include/chschd.h ****    */
 294:./lib/chibios/os/rt/include/chschd.h ****   void                  *mpool;
 295:./lib/chibios/os/rt/include/chschd.h **** #endif
 296:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:./lib/chibios/os/rt/include/chschd.h ****   /**
 298:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:./lib/chibios/os/rt/include/chschd.h ****    */
 300:./lib/chibios/os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:./lib/chibios/os/rt/include/chschd.h **** #endif
 302:./lib/chibios/os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:./lib/chibios/os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:./lib/chibios/os/rt/include/chschd.h **** #endif
 306:./lib/chibios/os/rt/include/chschd.h **** };
 307:./lib/chibios/os/rt/include/chschd.h **** 
 308:./lib/chibios/os/rt/include/chschd.h **** /**
 309:./lib/chibios/os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:./lib/chibios/os/rt/include/chschd.h ****  *
 311:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:./lib/chibios/os/rt/include/chschd.h ****  */
 313:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:./lib/chibios/os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:./lib/chibios/os/rt/include/chschd.h ****                                                 pointer.                    */
 319:./lib/chibios/os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:./lib/chibios/os/rt/include/chschd.h ****                                                 parameter.                  */
 321:./lib/chibios/os/rt/include/chschd.h **** };
 322:./lib/chibios/os/rt/include/chschd.h **** 
 323:./lib/chibios/os/rt/include/chschd.h **** /**
 324:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:./lib/chibios/os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:./lib/chibios/os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:./lib/chibios/os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:./lib/chibios/os/rt/include/chschd.h ****  */
 329:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 332:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 334:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:./lib/chibios/os/rt/include/chschd.h **** #endif
 338:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:./lib/chibios/os/rt/include/chschd.h ****   /**
 340:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:./lib/chibios/os/rt/include/chschd.h ****    */
 342:./lib/chibios/os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:./lib/chibios/os/rt/include/chschd.h ****                                                 tick event.                 */
 344:./lib/chibios/os/rt/include/chschd.h **** #endif
 345:./lib/chibios/os/rt/include/chschd.h **** };
 346:./lib/chibios/os/rt/include/chschd.h **** 
 347:./lib/chibios/os/rt/include/chschd.h **** /**
 348:./lib/chibios/os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:./lib/chibios/os/rt/include/chschd.h ****  */
 350:./lib/chibios/os/rt/include/chschd.h **** struct ch_ready_list {
 351:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:./lib/chibios/os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:./lib/chibios/os/rt/include/chschd.h ****                                                 offsets.                    */
 356:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:./lib/chibios/os/rt/include/chschd.h **** #endif
 360:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:./lib/chibios/os/rt/include/chschd.h ****                                                 thread.                     */
 363:./lib/chibios/os/rt/include/chschd.h **** };
 364:./lib/chibios/os/rt/include/chschd.h **** 
 365:./lib/chibios/os/rt/include/chschd.h **** /**
 366:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:./lib/chibios/os/rt/include/chschd.h ****  */
 368:./lib/chibios/os/rt/include/chschd.h **** struct ch_system_debug {
 369:./lib/chibios/os/rt/include/chschd.h ****   /**
 370:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:./lib/chibios/os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:./lib/chibios/os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:./lib/chibios/os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:./lib/chibios/os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:./lib/chibios/os/rt/include/chschd.h ****    */
 376:./lib/chibios/os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:./lib/chibios/os/rt/include/chschd.h ****   /**
 379:./lib/chibios/os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:./lib/chibios/os/rt/include/chschd.h ****    */
 381:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:./lib/chibios/os/rt/include/chschd.h ****   /**
 383:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:./lib/chibios/os/rt/include/chschd.h ****    */
 385:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:./lib/chibios/os/rt/include/chschd.h **** #endif
 387:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:./lib/chibios/os/rt/include/chschd.h ****   /**
 389:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:./lib/chibios/os/rt/include/chschd.h ****    */
 391:./lib/chibios/os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:./lib/chibios/os/rt/include/chschd.h **** #endif
 393:./lib/chibios/os/rt/include/chschd.h **** };
 394:./lib/chibios/os/rt/include/chschd.h **** 
 395:./lib/chibios/os/rt/include/chschd.h **** /**
 396:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System data structure.
 397:./lib/chibios/os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:./lib/chibios/os/rt/include/chschd.h ****  *          stacks.
 399:./lib/chibios/os/rt/include/chschd.h ****  */
 400:./lib/chibios/os/rt/include/chschd.h **** struct ch_system {
 401:./lib/chibios/os/rt/include/chschd.h ****   /**
 402:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:./lib/chibios/os/rt/include/chschd.h ****    */
 404:./lib/chibios/os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:./lib/chibios/os/rt/include/chschd.h ****   /**
 406:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:./lib/chibios/os/rt/include/chschd.h ****    */
 408:./lib/chibios/os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:./lib/chibios/os/rt/include/chschd.h ****   /**
 410:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System debug.
 411:./lib/chibios/os/rt/include/chschd.h ****    */
 412:./lib/chibios/os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:./lib/chibios/os/rt/include/chschd.h ****   /**
 414:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:./lib/chibios/os/rt/include/chschd.h ****    */
 416:./lib/chibios/os/rt/include/chschd.h ****   thread_t              mainthread;
 417:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:./lib/chibios/os/rt/include/chschd.h ****   /**
 419:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:./lib/chibios/os/rt/include/chschd.h ****    */
 421:./lib/chibios/os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:./lib/chibios/os/rt/include/chschd.h **** #endif
 423:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:./lib/chibios/os/rt/include/chschd.h ****   /**
 425:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:./lib/chibios/os/rt/include/chschd.h ****    */
 427:./lib/chibios/os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:./lib/chibios/os/rt/include/chschd.h **** #endif
 429:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:./lib/chibios/os/rt/include/chschd.h **** };
 431:./lib/chibios/os/rt/include/chschd.h **** 
 432:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 433:./lib/chibios/os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 435:./lib/chibios/os/rt/include/chschd.h **** 
 436:./lib/chibios/os/rt/include/chschd.h **** /**
 437:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:./lib/chibios/os/rt/include/chschd.h ****  *
 439:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 440:./lib/chibios/os/rt/include/chschd.h ****  */
 441:./lib/chibios/os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:./lib/chibios/os/rt/include/chschd.h **** 
 443:./lib/chibios/os/rt/include/chschd.h **** /**
 444:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:./lib/chibios/os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:./lib/chibios/os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:./lib/chibios/os/rt/include/chschd.h ****  */
 448:./lib/chibios/os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:./lib/chibios/os/rt/include/chschd.h **** 
 450:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 451:./lib/chibios/os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 453:./lib/chibios/os/rt/include/chschd.h **** 
 454:./lib/chibios/os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:./lib/chibios/os/rt/include/chschd.h **** extern ch_system_t ch;
 456:./lib/chibios/os/rt/include/chschd.h **** #endif
 457:./lib/chibios/os/rt/include/chschd.h **** 
 458:./lib/chibios/os/rt/include/chschd.h **** /*
 459:./lib/chibios/os/rt/include/chschd.h ****  * Scheduler APIs.
 460:./lib/chibios/os/rt/include/chschd.h ****  */
 461:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 462:./lib/chibios/os/rt/include/chschd.h **** extern "C" {
 463:./lib/chibios/os/rt/include/chschd.h **** #endif
 464:./lib/chibios/os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:./lib/chibios/os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:./lib/chibios/os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:./lib/chibios/os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:./lib/chibios/os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:./lib/chibios/os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:./lib/chibios/os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:./lib/chibios/os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:./lib/chibios/os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:./lib/chibios/os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 485:./lib/chibios/os/rt/include/chschd.h **** }
 486:./lib/chibios/os/rt/include/chschd.h **** #endif
 487:./lib/chibios/os/rt/include/chschd.h **** 
 488:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 489:./lib/chibios/os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 491:./lib/chibios/os/rt/include/chschd.h **** 
 492:./lib/chibios/os/rt/include/chschd.h **** /**
 493:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:./lib/chibios/os/rt/include/chschd.h ****  *
 495:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:./lib/chibios/os/rt/include/chschd.h ****  *
 497:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 498:./lib/chibios/os/rt/include/chschd.h ****  */
 499:./lib/chibios/os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
  78              		.loc 2 499 20 view .LVU25
  79              	.LBB217:
 500:./lib/chibios/os/rt/include/chschd.h **** 
 501:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
  80              		.loc 2 501 3 view .LVU26
  81              	.LBE217:
  82              	.LBE216:
  83              		.loc 1 114 3 is_stmt 0 view .LVU27
  84 0020 0300     		movs	r3, r0
  85 0022 2433     		adds	r3, r3, #36
  86              	.LVL3:
  87              	.LBB219:
  88              	.LBB218:
  89              		.loc 2 501 13 view .LVU28
  90 0024 4362     		str	r3, [r0, #36]
  91              	.LVL4:
  92              		.loc 2 501 13 view .LVU29
  93              	.LBE218:
  94              	.LBE219:
 115:lib/chibios/os/rt/src/chthreads.c **** #endif
 116:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MESSAGES == TRUE
 117:lib/chibios/os/rt/src/chthreads.c ****   queue_init(&tp->msgqueue);
  95              		.loc 1 117 3 is_stmt 1 view .LVU30
  96 0026 0433     		adds	r3, r3, #4
  97              	.LVL5:
  98              	.LBB220:
  99              	.LBI220:
 502:./lib/chibios/os/rt/include/chschd.h **** }
 503:./lib/chibios/os/rt/include/chschd.h **** 
 504:./lib/chibios/os/rt/include/chschd.h **** /**
 505:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:./lib/chibios/os/rt/include/chschd.h ****  *
 507:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 509:./lib/chibios/os/rt/include/chschd.h ****  *
 510:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 511:./lib/chibios/os/rt/include/chschd.h ****  */
 512:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:./lib/chibios/os/rt/include/chschd.h **** 
 514:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:./lib/chibios/os/rt/include/chschd.h **** }
 516:./lib/chibios/os/rt/include/chschd.h **** 
 517:./lib/chibios/os/rt/include/chschd.h **** /**
 518:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:./lib/chibios/os/rt/include/chschd.h ****  *
 520:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 522:./lib/chibios/os/rt/include/chschd.h ****  *
 523:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 524:./lib/chibios/os/rt/include/chschd.h ****  */
 525:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:./lib/chibios/os/rt/include/chschd.h **** 
 527:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:./lib/chibios/os/rt/include/chschd.h **** }
 529:./lib/chibios/os/rt/include/chschd.h **** 
 530:./lib/chibios/os/rt/include/chschd.h **** /**
 531:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:./lib/chibios/os/rt/include/chschd.h ****  *
 533:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:./lib/chibios/os/rt/include/chschd.h ****  *
 535:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 536:./lib/chibios/os/rt/include/chschd.h ****  */
 537:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
 100              		.loc 2 537 20 view .LVU31
 101              	.LBB221:
 538:./lib/chibios/os/rt/include/chschd.h **** 
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
 102              		.loc 2 539 3 view .LVU32
 103              		.loc 2 539 13 is_stmt 0 view .LVU33
 104 0028 8362     		str	r3, [r0, #40]
 540:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 105              		.loc 2 540 3 is_stmt 1 view .LVU34
 106              		.loc 2 540 13 is_stmt 0 view .LVU35
 107 002a C362     		str	r3, [r0, #44]
 108              	.LVL6:
 109              		.loc 2 540 13 view .LVU36
 110              	.LBE221:
 111              	.LBE220:
 118:lib/chibios/os/rt/src/chthreads.c **** #endif
 119:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_STATISTICS == TRUE
 120:lib/chibios/os/rt/src/chthreads.c ****   chTMObjectInit(&tp->stats);
 121:lib/chibios/os/rt/src/chthreads.c **** #endif
 122:lib/chibios/os/rt/src/chthreads.c ****   CH_CFG_THREAD_INIT_HOOK(tp);
 112              		.loc 1 122 3 is_stmt 1 view .LVU37
 113              		.loc 1 122 30 view .LVU38
 123:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 114              		.loc 1 123 3 view .LVU39
 124:lib/chibios/os/rt/src/chthreads.c **** }
 115              		.loc 1 124 1 is_stmt 0 view .LVU40
 116              		@ sp needed
 117 002c 7047     		bx	lr
 118              	.L3:
 119 002e C046     		.align	2
 120              	.L2:
 121 0030 00000000 		.word	ch
 122              		.cfi_endproc
 123              	.LFE154:
 125              		.section	.text.chThdCreateSuspendedI,"ax",%progbits
 126              		.align	1
 127              		.global	chThdCreateSuspendedI
 128              		.syntax unified
 129              		.code	16
 130              		.thumb_func
 131              		.fpu softvfp
 133              	chThdCreateSuspendedI:
 134              	.LVL7:
 135              	.LFB155:
 125:lib/chibios/os/rt/src/chthreads.c **** 
 126:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_FILL_THREADS == TRUE) || defined(__DOXYGEN__)
 127:lib/chibios/os/rt/src/chthreads.c **** /**
 128:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Memory fill utility.
 129:lib/chibios/os/rt/src/chthreads.c ****  *
 130:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] startp    first address to fill
 131:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] endp      last address to fill +1
 132:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] v         filler value
 133:lib/chibios/os/rt/src/chthreads.c ****  *
 134:lib/chibios/os/rt/src/chthreads.c ****  * @notapi
 135:lib/chibios/os/rt/src/chthreads.c ****  */
 136:lib/chibios/os/rt/src/chthreads.c **** void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v) {
 137:lib/chibios/os/rt/src/chthreads.c **** 
 138:lib/chibios/os/rt/src/chthreads.c ****   while (startp < endp) {
 139:lib/chibios/os/rt/src/chthreads.c ****     *startp++ = v;
 140:lib/chibios/os/rt/src/chthreads.c ****   }
 141:lib/chibios/os/rt/src/chthreads.c **** }
 142:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_DBG_FILL_THREADS */
 143:lib/chibios/os/rt/src/chthreads.c **** 
 144:lib/chibios/os/rt/src/chthreads.c **** /**
 145:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 146:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 147:lib/chibios/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 148:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 149:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 150:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 151:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 152:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 153:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 154:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 155:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 156:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 157:lib/chibios/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 158:lib/chibios/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 159:lib/chibios/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 160:lib/chibios/os/rt/src/chthreads.c ****  *
 161:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 162:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 163:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 164:lib/chibios/os/rt/src/chthreads.c ****  *
 165:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 166:lib/chibios/os/rt/src/chthreads.c ****  */
 167:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp) {
 136              		.loc 1 167 65 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 168:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 140              		.loc 1 168 3 view .LVU42
 169:lib/chibios/os/rt/src/chthreads.c **** 
 170:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheckClassI();
 141              		.loc 1 170 21 view .LVU43
 171:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(tdp != NULL);
 142              		.loc 1 171 3 view .LVU44
 143              		.loc 1 171 3 view .LVU45
 172:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(MEM_IS_ALIGNED(tdp->wbase, PORT_WORKING_AREA_ALIGN) &&
 144              		.loc 1 172 3 view .LVU46
 145              		.loc 1 172 3 view .LVU47
 173:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(tdp->wend, PORT_STACK_ALIGN) &&
 174:lib/chibios/os/rt/src/chthreads.c ****              (tdp->wend > tdp->wbase) &&
 175:lib/chibios/os/rt/src/chthreads.c ****              (((size_t)tdp->wend - (size_t)tdp->wbase) >= THD_WORKING_AREA_SIZE(0)));
 176:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck((tdp->prio <= HIGHPRIO) && (tdp->funcp != NULL));
 146              		.loc 1 176 3 view .LVU48
 147              		.loc 1 176 3 view .LVU49
 177:lib/chibios/os/rt/src/chthreads.c **** 
 178:lib/chibios/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 179:lib/chibios/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 180:lib/chibios/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 181:lib/chibios/os/rt/src/chthreads.c ****   tp = (thread_t *)((uint8_t *)tdp->wend -
 148              		.loc 1 181 3 view .LVU50
 149              		.loc 1 181 35 is_stmt 0 view .LVU51
 150 0000 8368     		ldr	r3, [r0, #8]
 151              	.LVL8:
 182:lib/chibios/os/rt/src/chthreads.c ****                     MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN));
 183:lib/chibios/os/rt/src/chthreads.c **** 
 184:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 185:lib/chibios/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 186:lib/chibios/os/rt/src/chthreads.c ****   tp->wabase = tdp->wbase;
 187:lib/chibios/os/rt/src/chthreads.c **** #endif
 188:lib/chibios/os/rt/src/chthreads.c **** 
 189:lib/chibios/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 190:lib/chibios/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 152              		.loc 1 190 3 is_stmt 1 view .LVU52
 167:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 153              		.loc 1 167 65 is_stmt 0 view .LVU53
 154 0002 0100     		movs	r1, r0
 155              		.loc 1 190 3 view .LVU54
 156 0004 1800     		movs	r0, r3
 157              	.LVL9:
 158              		.loc 1 190 3 view .LVU55
 159 0006 0A69     		ldr	r2, [r1, #16]
 160 0008 643B     		subs	r3, r3, #100
 161              	.LVL10:
 162              		.loc 1 190 3 view .LVU56
 163 000a 4038     		subs	r0, r0, #64
 164              	.LVL11:
 167:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 165              		.loc 1 167 65 view .LVU57
 166 000c 10B5     		push	{r4, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 4, -8
 169              		.cfi_offset 14, -4
 170              		.loc 1 190 3 view .LVU58
 171 000e C360     		str	r3, [r0, #12]
 172              		.loc 1 190 3 is_stmt 1 view .LVU59
 173 0010 1A61     		str	r2, [r3, #16]
 174              		.loc 1 190 3 view .LVU60
 175 0012 4A69     		ldr	r2, [r1, #20]
 191:lib/chibios/os/rt/src/chthreads.c **** 
 192:lib/chibios/os/rt/src/chthreads.c ****   /* The driver object is initialized but not started.*/
 193:lib/chibios/os/rt/src/chthreads.c ****   return _thread_init(tp, tdp->name, tdp->prio);
 194:lib/chibios/os/rt/src/chthreads.c **** }
 176              		.loc 1 194 1 is_stmt 0 view .LVU61
 177              		@ sp needed
 190:lib/chibios/os/rt/src/chthreads.c **** 
 178              		.loc 1 190 3 view .LVU62
 179 0014 5A61     		str	r2, [r3, #20]
 190:lib/chibios/os/rt/src/chthreads.c **** 
 180              		.loc 1 190 3 is_stmt 1 view .LVU63
 181 0016 034A     		ldr	r2, .L5
 182 0018 1A62     		str	r2, [r3, #32]
 190:lib/chibios/os/rt/src/chthreads.c **** 
 183              		.loc 1 190 63 view .LVU64
 193:lib/chibios/os/rt/src/chthreads.c **** }
 184              		.loc 1 193 3 view .LVU65
 193:lib/chibios/os/rt/src/chthreads.c **** }
 185              		.loc 1 193 10 is_stmt 0 view .LVU66
 186 001a CA68     		ldr	r2, [r1, #12]
 187 001c 0968     		ldr	r1, [r1]
 188              	.LVL12:
 193:lib/chibios/os/rt/src/chthreads.c **** }
 189              		.loc 1 193 10 view .LVU67
 190 001e FFF7FEFF 		bl	_thread_init
 191              	.LVL13:
 192              		.loc 1 194 1 view .LVU68
 193 0022 10BD     		pop	{r4, pc}
 194              	.L6:
 195              		.align	2
 196              	.L5:
 197 0024 00000000 		.word	_port_thread_start
 198              		.cfi_endproc
 199              	.LFE155:
 201              		.section	.text.chThdCreateSuspended,"ax",%progbits
 202              		.align	1
 203              		.global	chThdCreateSuspended
 204              		.syntax unified
 205              		.code	16
 206              		.thumb_func
 207              		.fpu softvfp
 209              	chThdCreateSuspended:
 210              	.LVL14:
 211              	.LFB156:
 195:lib/chibios/os/rt/src/chthreads.c **** 
 196:lib/chibios/os/rt/src/chthreads.c **** /**
 197:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 198:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 199:lib/chibios/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 200:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 201:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 202:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 203:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 204:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 205:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 206:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 207:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 208:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 209:lib/chibios/os/rt/src/chthreads.c ****  *
 210:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 211:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 212:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 213:lib/chibios/os/rt/src/chthreads.c ****  *
 214:lib/chibios/os/rt/src/chthreads.c ****  * @api
 215:lib/chibios/os/rt/src/chthreads.c ****  */
 216:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp) {
 212              		.loc 1 216 64 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 217:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 216              		.loc 1 217 3 view .LVU70
 218:lib/chibios/os/rt/src/chthreads.c **** 
 219:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 220:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 217              		.loc 1 220 3 view .LVU71
 218              		.loc 1 220 3 view .LVU72
 221:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 222:lib/chibios/os/rt/src/chthreads.c **** #endif
 223:lib/chibios/os/rt/src/chthreads.c **** 
 224:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 225:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)tdp->wbase,
 226:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)tdp->wend,
 227:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 228:lib/chibios/os/rt/src/chthreads.c **** #endif
 229:lib/chibios/os/rt/src/chthreads.c **** 
 230:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 219              		.loc 1 230 3 view .LVU73
 220              	.LBB222:
 221              	.LBI222:
 222              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 223              		.loc 3 353 20 view .LVU74
 224              	.LBE222:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 225              		.loc 3 355 3 view .LVU75
 226              	.LBB230:
 227              	.LBB223:
 228              	.LBI223:
 229              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 230              		.loc 4 387 20 view .LVU76
 231              	.LBE223:
 232              	.LBE230:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 233              		.loc 4 389 3 view .LVU77
 234              	.LBB231:
 235              	.LBB228:
 236              	.LBB224:
 237              	.LBI224:
 238              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 239              		.loc 5 140 27 view .LVU78
 240              	.LBB225:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 241              		.loc 5 142 3 view .LVU79
 242              	.LBE225:
 243              	.LBE224:
 244              	.LBE228:
 245              	.LBE231:
 216:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 246              		.loc 1 216 64 is_stmt 0 view .LVU80
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251              	.LBB232:
 252              	.LBB229:
 253              	.LBB227:
 254              	.LBB226:
 255              		.loc 5 142 3 view .LVU81
 256              		.syntax divided
 257              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 258 0002 72B6     		cpsid i
 259              	@ 0 "" 2
 260              		.thumb
 261              		.syntax unified
 262              	.LBE226:
 263              	.LBE227:
 264              	.LBE229:
 265              	.LBE232:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 266              		.loc 3 356 34 is_stmt 1 view .LVU82
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 267              		.loc 3 357 20 view .LVU83
 231:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 268              		.loc 1 231 3 view .LVU84
 269              		.loc 1 231 8 is_stmt 0 view .LVU85
 270 0004 FFF7FEFF 		bl	chThdCreateSuspendedI
 271              	.LVL15:
 232:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 272              		.loc 1 232 3 is_stmt 1 view .LVU86
 273              	.LBB233:
 274              	.LBI233:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 275              		.loc 3 365 20 view .LVU87
 276              	.LBB234:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 277              		.loc 3 367 22 view .LVU88
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 278              		.loc 3 368 33 view .LVU89
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 279              		.loc 3 374 3 view .LVU90
 280              		.loc 3 374 3 view .LVU91
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 281              		.loc 3 378 3 view .LVU92
 282              	.LBB235:
 283              	.LBI235:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 284              		.loc 4 396 20 view .LVU93
 285              	.LBE235:
 286              	.LBE234:
 287              	.LBE233:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 288              		.loc 4 398 3 view .LVU94
 289              	.LBB240:
 290              	.LBB239:
 291              	.LBB238:
 292              	.LBB236:
 293              	.LBI236:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 294              		.loc 5 129 27 view .LVU95
 295              	.LBB237:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 296              		.loc 5 131 3 view .LVU96
 297              		.syntax divided
 298              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 299 0008 62B6     		cpsie i
 300              	@ 0 "" 2
 301              		.thumb
 302              		.syntax unified
 303              	.LBE237:
 304              	.LBE236:
 305              	.LBE238:
 306              	.LBE239:
 307              	.LBE240:
 233:lib/chibios/os/rt/src/chthreads.c **** 
 234:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 308              		.loc 1 234 3 view .LVU97
 235:lib/chibios/os/rt/src/chthreads.c **** }
 309              		.loc 1 235 1 is_stmt 0 view .LVU98
 310              		@ sp needed
 311 000a 10BD     		pop	{r4, pc}
 312              		.cfi_endproc
 313              	.LFE156:
 315              		.section	.text.chThdCreateI,"ax",%progbits
 316              		.align	1
 317              		.global	chThdCreateI
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 321              		.fpu softvfp
 323              	chThdCreateI:
 324              	.LVL16:
 325              	.LFB157:
 236:lib/chibios/os/rt/src/chthreads.c **** 
 237:lib/chibios/os/rt/src/chthreads.c **** /**
 238:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 239:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 240:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 241:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 242:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 243:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 244:lib/chibios/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 245:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 246:lib/chibios/os/rt/src/chthreads.c ****  *          depending on the execution context.
 247:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 248:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 249:lib/chibios/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 250:lib/chibios/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 251:lib/chibios/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 252:lib/chibios/os/rt/src/chthreads.c ****  *
 253:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 254:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 255:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 256:lib/chibios/os/rt/src/chthreads.c ****  *
 257:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 258:lib/chibios/os/rt/src/chthreads.c ****  */
 259:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateI(const thread_descriptor_t *tdp) {
 326              		.loc 1 259 56 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 260:lib/chibios/os/rt/src/chthreads.c **** 
 261:lib/chibios/os/rt/src/chthreads.c ****   return chSchReadyI(chThdCreateSuspendedI(tdp));
 330              		.loc 1 261 3 view .LVU100
 259:lib/chibios/os/rt/src/chthreads.c **** 
 331              		.loc 1 259 56 is_stmt 0 view .LVU101
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336              		.loc 1 261 10 view .LVU102
 337 0002 FFF7FEFF 		bl	chThdCreateSuspendedI
 338              	.LVL17:
 339              		.loc 1 261 10 view .LVU103
 340 0006 FFF7FEFF 		bl	chSchReadyI
 341              	.LVL18:
 262:lib/chibios/os/rt/src/chthreads.c **** }
 342              		.loc 1 262 1 view .LVU104
 343              		@ sp needed
 344 000a 10BD     		pop	{r4, pc}
 345              		.cfi_endproc
 346              	.LFE157:
 348              		.section	.text.chThdCreate,"ax",%progbits
 349              		.align	1
 350              		.global	chThdCreate
 351              		.syntax unified
 352              		.code	16
 353              		.thumb_func
 354              		.fpu softvfp
 356              	chThdCreate:
 357              	.LVL19:
 358              	.LFB158:
 263:lib/chibios/os/rt/src/chthreads.c **** 
 264:lib/chibios/os/rt/src/chthreads.c **** /**
 265:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 266:lib/chibios/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 267:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 268:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 269:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 270:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 271:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 272:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 273:lib/chibios/os/rt/src/chthreads.c ****  *
 274:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 275:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 276:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 277:lib/chibios/os/rt/src/chthreads.c ****  *
 278:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 279:lib/chibios/os/rt/src/chthreads.c ****  */
 280:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreate(const thread_descriptor_t *tdp) {
 359              		.loc 1 280 55 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 281:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 363              		.loc 1 281 3 view .LVU106
 282:lib/chibios/os/rt/src/chthreads.c **** 
 283:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 284:lib/chibios/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 285:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 286:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 287:lib/chibios/os/rt/src/chthreads.c **** #endif
 288:lib/chibios/os/rt/src/chthreads.c **** 
 289:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 290:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)tdp->wbase,
 291:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)tdp->wend,
 292:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 293:lib/chibios/os/rt/src/chthreads.c **** #endif
 294:lib/chibios/os/rt/src/chthreads.c **** 
 295:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 364              		.loc 1 295 3 view .LVU107
 365              	.LBB241:
 366              	.LBI241:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 367              		.loc 3 353 20 view .LVU108
 368              	.LBE241:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 369              		.loc 3 355 3 view .LVU109
 370              	.LBB249:
 371              	.LBB242:
 372              	.LBI242:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 373              		.loc 4 387 20 view .LVU110
 374              	.LBE242:
 375              	.LBE249:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 376              		.loc 4 389 3 view .LVU111
 377              	.LBB250:
 378              	.LBB247:
 379              	.LBB243:
 380              	.LBI243:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 381              		.loc 5 140 27 view .LVU112
 382              	.LBB244:
 383              		.loc 5 142 3 view .LVU113
 384              	.LBE244:
 385              	.LBE243:
 386              	.LBE247:
 387              	.LBE250:
 280:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 388              		.loc 1 280 55 is_stmt 0 view .LVU114
 389 0000 10B5     		push	{r4, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 393              	.LBB251:
 394              	.LBB248:
 395              	.LBB246:
 396              	.LBB245:
 397              		.loc 5 142 3 view .LVU115
 398              		.syntax divided
 399              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 400 0002 72B6     		cpsid i
 401              	@ 0 "" 2
 402              		.thumb
 403              		.syntax unified
 404              	.LBE245:
 405              	.LBE246:
 406              	.LBE248:
 407              	.LBE251:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 408              		.loc 3 356 34 is_stmt 1 view .LVU116
 357:./lib/chibios/os/rt/include/chsys.h **** }
 409              		.loc 3 357 20 view .LVU117
 296:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 410              		.loc 1 296 3 view .LVU118
 411              		.loc 1 296 8 is_stmt 0 view .LVU119
 412 0004 FFF7FEFF 		bl	chThdCreateSuspendedI
 413              	.LVL20:
 297:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 414              		.loc 1 297 3 view .LVU120
 415 0008 0021     		movs	r1, #0
 296:lib/chibios/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 416              		.loc 1 296 8 view .LVU121
 417 000a 0400     		movs	r4, r0
 418              	.LVL21:
 419              		.loc 1 297 3 is_stmt 1 view .LVU122
 420 000c FFF7FEFF 		bl	chSchWakeupS
 421              	.LVL22:
 298:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 422              		.loc 1 298 3 view .LVU123
 423              	.LBB252:
 424              	.LBI252:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 425              		.loc 3 365 20 view .LVU124
 426              	.LBB253:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 427              		.loc 3 367 22 view .LVU125
 368:./lib/chibios/os/rt/include/chsys.h **** 
 428              		.loc 3 368 33 view .LVU126
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 429              		.loc 3 374 3 view .LVU127
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 430              		.loc 3 374 3 view .LVU128
 431              		.loc 3 378 3 view .LVU129
 432              	.LBB254:
 433              	.LBI254:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 434              		.loc 4 396 20 view .LVU130
 435              	.LBE254:
 436              	.LBE253:
 437              	.LBE252:
 438              		.loc 4 398 3 view .LVU131
 439              	.LBB259:
 440              	.LBB258:
 441              	.LBB257:
 442              	.LBB255:
 443              	.LBI255:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 444              		.loc 5 129 27 view .LVU132
 445              	.LBB256:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 446              		.loc 5 131 3 view .LVU133
 447              		.syntax divided
 448              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 449 0010 62B6     		cpsie i
 450              	@ 0 "" 2
 451              		.thumb
 452              		.syntax unified
 453              	.LBE256:
 454              	.LBE255:
 455              	.LBE257:
 456              	.LBE258:
 457              	.LBE259:
 299:lib/chibios/os/rt/src/chthreads.c **** 
 300:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 458              		.loc 1 300 3 view .LVU134
 301:lib/chibios/os/rt/src/chthreads.c **** }
 459              		.loc 1 301 1 is_stmt 0 view .LVU135
 460 0012 2000     		movs	r0, r4
 461              		@ sp needed
 462              	.LVL23:
 463              		.loc 1 301 1 view .LVU136
 464 0014 10BD     		pop	{r4, pc}
 465              		.cfi_endproc
 466              	.LFE158:
 468              		.section	.text.chThdCreateStatic,"ax",%progbits
 469              		.align	1
 470              		.global	chThdCreateStatic
 471              		.syntax unified
 472              		.code	16
 473              		.thumb_func
 474              		.fpu softvfp
 476              	chThdCreateStatic:
 477              	.LVL24:
 478              	.LFB159:
 302:lib/chibios/os/rt/src/chthreads.c **** 
 303:lib/chibios/os/rt/src/chthreads.c **** /**
 304:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 305:lib/chibios/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 306:lib/chibios/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 307:lib/chibios/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 308:lib/chibios/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 309:lib/chibios/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 310:lib/chibios/os/rt/src/chthreads.c ****  *          returning from its main function.
 311:lib/chibios/os/rt/src/chthreads.c ****  *
 312:lib/chibios/os/rt/src/chthreads.c ****  * @param[out] wsp      pointer to a working area dedicated to the thread stack
 313:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] size      size of the working area
 314:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
 315:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] pf        the thread function
 316:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] arg       an argument passed to the thread function. It can be
 317:lib/chibios/os/rt/src/chthreads.c ****  *                      @p NULL.
 318:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 319:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 320:lib/chibios/os/rt/src/chthreads.c ****  *
 321:lib/chibios/os/rt/src/chthreads.c ****  * @api
 322:lib/chibios/os/rt/src/chthreads.c ****  */
 323:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdCreateStatic(void *wsp, size_t size,
 324:lib/chibios/os/rt/src/chthreads.c ****                             tprio_t prio, tfunc_t pf, void *arg) {
 479              		.loc 1 324 66 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 4, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 325:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 483              		.loc 1 325 3 view .LVU138
 326:lib/chibios/os/rt/src/chthreads.c **** 
 327:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck((wsp != NULL) &&
 484              		.loc 1 327 3 view .LVU139
 485              		.loc 1 327 3 view .LVU140
 328:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(wsp, PORT_WORKING_AREA_ALIGN) &&
 329:lib/chibios/os/rt/src/chthreads.c ****              (size >= THD_WORKING_AREA_SIZE(0)) &&
 330:lib/chibios/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(size, PORT_STACK_ALIGN) &&
 331:lib/chibios/os/rt/src/chthreads.c ****              (prio <= HIGHPRIO) && (pf != NULL));
 332:lib/chibios/os/rt/src/chthreads.c **** 
 333:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 334:lib/chibios/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 335:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(wsp) == NULL,
 336:lib/chibios/os/rt/src/chthreads.c ****               "working area in use");
 337:lib/chibios/os/rt/src/chthreads.c **** #endif
 338:lib/chibios/os/rt/src/chthreads.c **** 
 339:lib/chibios/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 340:lib/chibios/os/rt/src/chthreads.c ****   _thread_memfill((uint8_t *)wsp,
 341:lib/chibios/os/rt/src/chthreads.c ****                   (uint8_t *)wsp + size,
 342:lib/chibios/os/rt/src/chthreads.c ****                   CH_DBG_STACK_FILL_VALUE);
 343:lib/chibios/os/rt/src/chthreads.c **** #endif
 344:lib/chibios/os/rt/src/chthreads.c **** 
 345:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 486              		.loc 1 345 3 view .LVU141
 487              	.LBB260:
 488              	.LBI260:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 489              		.loc 3 353 20 view .LVU142
 490              	.LBE260:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 491              		.loc 3 355 3 view .LVU143
 492              	.LBB268:
 493              	.LBB261:
 494              	.LBI261:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 495              		.loc 4 387 20 view .LVU144
 496              	.LBE261:
 497              	.LBE268:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 498              		.loc 4 389 3 view .LVU145
 499              	.LBB269:
 500              	.LBB266:
 501              	.LBB262:
 502              	.LBI262:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 503              		.loc 5 140 27 view .LVU146
 504              	.LBB263:
 505              		.loc 5 142 3 view .LVU147
 506              	.LBE263:
 507              	.LBE262:
 508              	.LBE266:
 509              	.LBE269:
 324:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp;
 510              		.loc 1 324 66 is_stmt 0 view .LVU148
 511 0000 10B5     		push	{r4, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 4, -8
 514              		.cfi_offset 14, -4
 515              	.LBB270:
 516              	.LBB267:
 517              	.LBB265:
 518              	.LBB264:
 519              		.loc 5 142 3 view .LVU149
 520              		.syntax divided
 521              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 522 0002 72B6     		cpsid i
 523              	@ 0 "" 2
 524              		.thumb
 525              		.syntax unified
 526              	.LBE264:
 527              	.LBE265:
 528              	.LBE267:
 529              	.LBE270:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 530              		.loc 3 356 34 is_stmt 1 view .LVU150
 357:./lib/chibios/os/rt/include/chsys.h **** }
 531              		.loc 3 357 20 view .LVU151
 346:lib/chibios/os/rt/src/chthreads.c **** 
 347:lib/chibios/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 348:lib/chibios/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 349:lib/chibios/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 350:lib/chibios/os/rt/src/chthreads.c ****   tp = (thread_t *)((uint8_t *)wsp + size -
 532              		.loc 1 350 3 view .LVU152
 533              		.loc 1 350 43 is_stmt 0 view .LVU153
 534 0004 4039     		subs	r1, r1, #64
 535              	.LVL25:
 536              		.loc 1 350 6 view .LVU154
 537 0006 4018     		adds	r0, r0, r1
 538              	.LVL26:
 351:lib/chibios/os/rt/src/chthreads.c ****                     MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN));
 352:lib/chibios/os/rt/src/chthreads.c **** 
 353:lib/chibios/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 354:lib/chibios/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 355:lib/chibios/os/rt/src/chthreads.c ****   tp->wabase = (stkalign_t *)wsp;
 356:lib/chibios/os/rt/src/chthreads.c **** #endif
 357:lib/chibios/os/rt/src/chthreads.c **** 
 358:lib/chibios/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 359:lib/chibios/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, wsp, tp, pf, arg);
 539              		.loc 1 359 3 is_stmt 1 view .LVU155
 540 0008 0100     		movs	r1, r0
 541              	.LVL27:
 542              		.loc 1 359 3 is_stmt 0 view .LVU156
 543 000a 2439     		subs	r1, r1, #36
 544 000c C160     		str	r1, [r0, #12]
 545              		.loc 1 359 3 is_stmt 1 view .LVU157
 546 000e 0B61     		str	r3, [r1, #16]
 547              		.loc 1 359 3 view .LVU158
 548 0010 029B     		ldr	r3, [sp, #8]
 549              	.LVL28:
 550              		.loc 1 359 3 is_stmt 0 view .LVU159
 551 0012 4B61     		str	r3, [r1, #20]
 552              		.loc 1 359 3 is_stmt 1 view .LVU160
 553 0014 054B     		ldr	r3, .L11
 554 0016 0B62     		str	r3, [r1, #32]
 555              		.loc 1 359 43 view .LVU161
 360:lib/chibios/os/rt/src/chthreads.c **** 
 361:lib/chibios/os/rt/src/chthreads.c ****   tp = _thread_init(tp, "noname", prio);
 556              		.loc 1 361 3 view .LVU162
 557              		.loc 1 361 8 is_stmt 0 view .LVU163
 558 0018 0549     		ldr	r1, .L11+4
 559              	.LVL29:
 560              		.loc 1 361 8 view .LVU164
 561 001a FFF7FEFF 		bl	_thread_init
 562              	.LVL30:
 362:lib/chibios/os/rt/src/chthreads.c **** 
 363:lib/chibios/os/rt/src/chthreads.c ****   /* Starting the thread immediately.*/
 364:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 563              		.loc 1 364 3 view .LVU165
 564 001e 0021     		movs	r1, #0
 361:lib/chibios/os/rt/src/chthreads.c **** 
 565              		.loc 1 361 8 view .LVU166
 566 0020 0400     		movs	r4, r0
 567              	.LVL31:
 568              		.loc 1 364 3 is_stmt 1 view .LVU167
 569 0022 FFF7FEFF 		bl	chSchWakeupS
 570              	.LVL32:
 365:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 571              		.loc 1 365 3 view .LVU168
 572              	.LBB271:
 573              	.LBI271:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 574              		.loc 3 365 20 view .LVU169
 575              	.LBB272:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 576              		.loc 3 367 22 view .LVU170
 368:./lib/chibios/os/rt/include/chsys.h **** 
 577              		.loc 3 368 33 view .LVU171
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 578              		.loc 3 374 3 view .LVU172
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 579              		.loc 3 374 3 view .LVU173
 580              		.loc 3 378 3 view .LVU174
 581              	.LBB273:
 582              	.LBI273:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 583              		.loc 4 396 20 view .LVU175
 584              	.LBE273:
 585              	.LBE272:
 586              	.LBE271:
 587              		.loc 4 398 3 view .LVU176
 588              	.LBB278:
 589              	.LBB277:
 590              	.LBB276:
 591              	.LBB274:
 592              	.LBI274:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 593              		.loc 5 129 27 view .LVU177
 594              	.LBB275:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 595              		.loc 5 131 3 view .LVU178
 596              		.syntax divided
 597              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 598 0026 62B6     		cpsie i
 599              	@ 0 "" 2
 600              		.thumb
 601              		.syntax unified
 602              	.LBE275:
 603              	.LBE274:
 604              	.LBE276:
 605              	.LBE277:
 606              	.LBE278:
 366:lib/chibios/os/rt/src/chthreads.c **** 
 367:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 607              		.loc 1 367 3 view .LVU179
 368:lib/chibios/os/rt/src/chthreads.c **** }
 608              		.loc 1 368 1 is_stmt 0 view .LVU180
 609 0028 2000     		movs	r0, r4
 610              		@ sp needed
 611              	.LVL33:
 612              		.loc 1 368 1 view .LVU181
 613 002a 10BD     		pop	{r4, pc}
 614              	.L12:
 615              		.align	2
 616              	.L11:
 617 002c 00000000 		.word	_port_thread_start
 618 0030 00000000 		.word	.LC3
 619              		.cfi_endproc
 620              	.LFE159:
 622              		.section	.text.chThdStart,"ax",%progbits
 623              		.align	1
 624              		.global	chThdStart
 625              		.syntax unified
 626              		.code	16
 627              		.thumb_func
 628              		.fpu softvfp
 630              	chThdStart:
 631              	.LVL34:
 632              	.LFB160:
 369:lib/chibios/os/rt/src/chthreads.c **** 
 370:lib/chibios/os/rt/src/chthreads.c **** /**
 371:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Resumes a thread created with @p chThdCreateI().
 372:lib/chibios/os/rt/src/chthreads.c ****  *
 373:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 374:lib/chibios/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 375:lib/chibios/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 376:lib/chibios/os/rt/src/chthreads.c ****  *
 377:lib/chibios/os/rt/src/chthreads.c ****  * @api
 378:lib/chibios/os/rt/src/chthreads.c ****  */
 379:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdStart(thread_t *tp) {
 633              		.loc 1 379 36 is_stmt 1 view -0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 380:lib/chibios/os/rt/src/chthreads.c **** 
 381:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 637              		.loc 1 381 3 view .LVU183
 638              	.LBB279:
 639              	.LBI279:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 640              		.loc 3 353 20 view .LVU184
 641              	.LBE279:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 642              		.loc 3 355 3 view .LVU185
 643              	.LBB287:
 644              	.LBB280:
 645              	.LBI280:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 646              		.loc 4 387 20 view .LVU186
 647              	.LBE280:
 648              	.LBE287:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 649              		.loc 4 389 3 view .LVU187
 650              	.LBB288:
 651              	.LBB285:
 652              	.LBB281:
 653              	.LBI281:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 654              		.loc 5 140 27 view .LVU188
 655              	.LBB282:
 656              		.loc 5 142 3 view .LVU189
 657              	.LBE282:
 658              	.LBE281:
 659              	.LBE285:
 660              	.LBE288:
 379:lib/chibios/os/rt/src/chthreads.c **** 
 661              		.loc 1 379 36 is_stmt 0 view .LVU190
 662 0000 10B5     		push	{r4, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 4, -8
 665              		.cfi_offset 14, -4
 379:lib/chibios/os/rt/src/chthreads.c **** 
 666              		.loc 1 379 36 view .LVU191
 667 0002 0400     		movs	r4, r0
 668              	.LBB289:
 669              	.LBB286:
 670              	.LBB284:
 671              	.LBB283:
 672              		.loc 5 142 3 view .LVU192
 673              		.syntax divided
 674              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 675 0004 72B6     		cpsid i
 676              	@ 0 "" 2
 677              		.thumb
 678              		.syntax unified
 679              	.LBE283:
 680              	.LBE284:
 681              	.LBE286:
 682              	.LBE289:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 683              		.loc 3 356 34 is_stmt 1 view .LVU193
 357:./lib/chibios/os/rt/include/chsys.h **** }
 684              		.loc 3 357 20 view .LVU194
 382:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 685              		.loc 1 382 3 view .LVU195
 686              		.loc 1 382 3 view .LVU196
 383:lib/chibios/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 687              		.loc 1 383 3 view .LVU197
 688 0006 0021     		movs	r1, #0
 689 0008 FFF7FEFF 		bl	chSchWakeupS
 690              	.LVL35:
 384:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 691              		.loc 1 384 3 view .LVU198
 692              	.LBB290:
 693              	.LBI290:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 694              		.loc 3 365 20 view .LVU199
 695              	.LBB291:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 696              		.loc 3 367 22 view .LVU200
 368:./lib/chibios/os/rt/include/chsys.h **** 
 697              		.loc 3 368 33 view .LVU201
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 698              		.loc 3 374 3 view .LVU202
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 699              		.loc 3 374 3 view .LVU203
 700              		.loc 3 378 3 view .LVU204
 701              	.LBB292:
 702              	.LBI292:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 703              		.loc 4 396 20 view .LVU205
 704              	.LBE292:
 705              	.LBE291:
 706              	.LBE290:
 707              		.loc 4 398 3 view .LVU206
 708              	.LBB297:
 709              	.LBB296:
 710              	.LBB295:
 711              	.LBB293:
 712              	.LBI293:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 713              		.loc 5 129 27 view .LVU207
 714              	.LBB294:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 715              		.loc 5 131 3 view .LVU208
 716              		.syntax divided
 717              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 718 000c 62B6     		cpsie i
 719              	@ 0 "" 2
 720              		.thumb
 721              		.syntax unified
 722              	.LBE294:
 723              	.LBE293:
 724              	.LBE295:
 725              	.LBE296:
 726              	.LBE297:
 385:lib/chibios/os/rt/src/chthreads.c **** 
 386:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 727              		.loc 1 386 3 view .LVU209
 387:lib/chibios/os/rt/src/chthreads.c **** }
 728              		.loc 1 387 1 is_stmt 0 view .LVU210
 729 000e 2000     		movs	r0, r4
 730              		@ sp needed
 731              	.LVL36:
 732              		.loc 1 387 1 view .LVU211
 733 0010 10BD     		pop	{r4, pc}
 734              		.cfi_endproc
 735              	.LFE160:
 737              		.section	.text.chThdAddRef,"ax",%progbits
 738              		.align	1
 739              		.global	chThdAddRef
 740              		.syntax unified
 741              		.code	16
 742              		.thumb_func
 743              		.fpu softvfp
 745              	chThdAddRef:
 746              	.LVL37:
 747              	.LFB161:
 388:lib/chibios/os/rt/src/chthreads.c **** 
 389:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 390:lib/chibios/os/rt/src/chthreads.c **** /**
 391:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Adds a reference to a thread object.
 392:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 393:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 394:lib/chibios/os/rt/src/chthreads.c ****  *
 395:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 396:lib/chibios/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter
 397:lib/chibios/os/rt/src/chthreads.c ****  *                      representing the new reference.
 398:lib/chibios/os/rt/src/chthreads.c ****  *
 399:lib/chibios/os/rt/src/chthreads.c ****  * @api
 400:lib/chibios/os/rt/src/chthreads.c ****  */
 401:lib/chibios/os/rt/src/chthreads.c **** thread_t *chThdAddRef(thread_t *tp) {
 748              		.loc 1 401 37 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 402:lib/chibios/os/rt/src/chthreads.c **** 
 403:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 753              		.loc 1 403 3 view .LVU213
 754              	.LBB298:
 755              	.LBI298:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 756              		.loc 3 353 20 view .LVU214
 757              	.LBE298:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 758              		.loc 3 355 3 view .LVU215
 759              	.LBB303:
 760              	.LBB299:
 761              	.LBI299:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 762              		.loc 4 387 20 view .LVU216
 763              	.LBE299:
 764              	.LBE303:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 765              		.loc 4 389 3 view .LVU217
 766              	.LBB304:
 767              	.LBB302:
 768              	.LBB300:
 769              	.LBI300:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 770              		.loc 5 140 27 view .LVU218
 771              	.LBB301:
 772              		.loc 5 142 3 view .LVU219
 773              		.syntax divided
 774              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 775 0000 72B6     		cpsid i
 776              	@ 0 "" 2
 777              		.thumb
 778              		.syntax unified
 779              	.LBE301:
 780              	.LBE300:
 781              	.LBE302:
 782              	.LBE304:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 783              		.loc 3 356 34 view .LVU220
 357:./lib/chibios/os/rt/include/chsys.h **** }
 784              		.loc 3 357 20 view .LVU221
 404:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs < (trefs_t)255, "too many references");
 785              		.loc 1 404 3 view .LVU222
 786              		.loc 1 404 3 view .LVU223
 405:lib/chibios/os/rt/src/chthreads.c ****   tp->refs++;
 787              		.loc 1 405 3 view .LVU224
 788              		.loc 1 405 11 is_stmt 0 view .LVU225
 789 0002 837F     		ldrb	r3, [r0, #30]
 790 0004 0133     		adds	r3, r3, #1
 791 0006 8377     		strb	r3, [r0, #30]
 406:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 792              		.loc 1 406 3 is_stmt 1 view .LVU226
 793              	.LBB305:
 794              	.LBI305:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 795              		.loc 3 365 20 view .LVU227
 796              	.LBB306:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 797              		.loc 3 367 22 view .LVU228
 368:./lib/chibios/os/rt/include/chsys.h **** 
 798              		.loc 3 368 33 view .LVU229
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 799              		.loc 3 374 3 view .LVU230
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 800              		.loc 3 374 3 view .LVU231
 801              		.loc 3 378 3 view .LVU232
 802              	.LBB307:
 803              	.LBI307:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 804              		.loc 4 396 20 view .LVU233
 805              	.LBE307:
 806              	.LBE306:
 807              	.LBE305:
 808              		.loc 4 398 3 view .LVU234
 809              	.LBB312:
 810              	.LBB311:
 811              	.LBB310:
 812              	.LBB308:
 813              	.LBI308:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 814              		.loc 5 129 27 view .LVU235
 815              	.LBB309:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 816              		.loc 5 131 3 view .LVU236
 817              		.syntax divided
 818              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 819 0008 62B6     		cpsie i
 820              	@ 0 "" 2
 821              		.thumb
 822              		.syntax unified
 823              	.LBE309:
 824              	.LBE308:
 825              	.LBE310:
 826              	.LBE311:
 827              	.LBE312:
 407:lib/chibios/os/rt/src/chthreads.c **** 
 408:lib/chibios/os/rt/src/chthreads.c ****   return tp;
 828              		.loc 1 408 3 view .LVU237
 409:lib/chibios/os/rt/src/chthreads.c **** }
 829              		.loc 1 409 1 is_stmt 0 view .LVU238
 830              		@ sp needed
 831 000a 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE161:
 835              		.section	.text.chThdRelease,"ax",%progbits
 836              		.align	1
 837              		.global	chThdRelease
 838              		.syntax unified
 839              		.code	16
 840              		.thumb_func
 841              		.fpu softvfp
 843              	chThdRelease:
 844              	.LVL38:
 845              	.LFB162:
 410:lib/chibios/os/rt/src/chthreads.c **** 
 411:lib/chibios/os/rt/src/chthreads.c **** /**
 412:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Releases a reference to a thread object.
 413:lib/chibios/os/rt/src/chthreads.c ****  * @details If the references counter reaches zero <b>and</b> the thread
 414:lib/chibios/os/rt/src/chthreads.c ****  *          is in the @p CH_STATE_FINAL state then the thread's memory is
 415:lib/chibios/os/rt/src/chthreads.c ****  *          returned to the proper allocator and the thread is removed
 416:lib/chibios/os/rt/src/chthreads.c ****  *          from the registry.<br>
 417:lib/chibios/os/rt/src/chthreads.c ****  *          Threads whose counter reaches zero and are still active become
 418:lib/chibios/os/rt/src/chthreads.c ****  *          "detached" and will be removed from registry on termination.
 419:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 420:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 421:lib/chibios/os/rt/src/chthreads.c ****  * @note    Static threads are not affected.
 422:lib/chibios/os/rt/src/chthreads.c ****  *
 423:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 424:lib/chibios/os/rt/src/chthreads.c ****  *
 425:lib/chibios/os/rt/src/chthreads.c ****  * @api
 426:lib/chibios/os/rt/src/chthreads.c ****  */
 427:lib/chibios/os/rt/src/chthreads.c **** void chThdRelease(thread_t *tp) {
 846              		.loc 1 427 33 is_stmt 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 428:lib/chibios/os/rt/src/chthreads.c **** 
 429:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 851              		.loc 1 429 3 view .LVU240
 852              	.LBB338:
 853              	.LBI338:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 854              		.loc 3 353 20 view .LVU241
 855              	.LBE338:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 856              		.loc 3 355 3 view .LVU242
 857              	.LBB343:
 858              	.LBB339:
 859              	.LBI339:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 860              		.loc 4 387 20 view .LVU243
 861              	.LBE339:
 862              	.LBE343:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 863              		.loc 4 389 3 view .LVU244
 864              	.LBB344:
 865              	.LBB342:
 866              	.LBB340:
 867              	.LBI340:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 868              		.loc 5 140 27 view .LVU245
 869              	.LBB341:
 870              		.loc 5 142 3 view .LVU246
 871              		.syntax divided
 872              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 873 0000 72B6     		cpsid i
 874              	@ 0 "" 2
 875              		.thumb
 876              		.syntax unified
 877              	.LBE341:
 878              	.LBE340:
 879              	.LBE342:
 880              	.LBE344:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 881              		.loc 3 356 34 view .LVU247
 357:./lib/chibios/os/rt/include/chsys.h **** }
 882              		.loc 3 357 20 view .LVU248
 430:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "not referenced");
 883              		.loc 1 430 3 view .LVU249
 884              		.loc 1 430 3 view .LVU250
 431:lib/chibios/os/rt/src/chthreads.c ****   tp->refs--;
 885              		.loc 1 431 3 view .LVU251
 886              		.loc 1 431 11 is_stmt 0 view .LVU252
 887 0002 837F     		ldrb	r3, [r0, #30]
 888 0004 013B     		subs	r3, r3, #1
 889 0006 8377     		strb	r3, [r0, #30]
 432:lib/chibios/os/rt/src/chthreads.c **** 
 433:lib/chibios/os/rt/src/chthreads.c ****   /* If the references counter reaches zero and the thread is in its
 434:lib/chibios/os/rt/src/chthreads.c ****      terminated state then the memory can be returned to the proper
 435:lib/chibios/os/rt/src/chthreads.c ****      allocator.*/
 436:lib/chibios/os/rt/src/chthreads.c ****   if ((tp->refs == (trefs_t)0) && (tp->state == CH_STATE_FINAL)) {
 890              		.loc 1 436 3 is_stmt 1 view .LVU253
 891              		.loc 1 436 32 is_stmt 0 view .LVU254
 892 0008 C269     		ldr	r2, [r0, #28]
 893 000a 054B     		ldr	r3, .L18
 894 000c 1340     		ands	r3, r2
 895              		.loc 1 436 6 view .LVU255
 896 000e 0F2B     		cmp	r3, #15
 897 0010 04D1     		bne	.L16
 898              	.LVL39:
 899              	.LBB345:
 900              	.LBI345:
 427:lib/chibios/os/rt/src/chthreads.c **** 
 901              		.loc 1 427 6 is_stmt 1 view .LVU256
 902              	.LBB346:
 437:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 903              		.loc 1 437 5 view .LVU257
 904 0012 0269     		ldr	r2, [r0, #16]
 905 0014 4369     		ldr	r3, [r0, #20]
 906 0016 1A61     		str	r2, [r3, #16]
 907              		.loc 1 437 5 view .LVU258
 908 0018 0269     		ldr	r2, [r0, #16]
 909 001a 5361     		str	r3, [r2, #20]
 910              		.loc 1 437 19 view .LVU259
 438:lib/chibios/os/rt/src/chthreads.c ****     chSysUnlock();
 911              		.loc 1 438 5 view .LVU260
 912              	.LBB347:
 913              	.LBI347:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 914              		.loc 3 365 20 view .LVU261
 915              	.LBB348:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 916              		.loc 3 367 22 view .LVU262
 368:./lib/chibios/os/rt/include/chsys.h **** 
 917              		.loc 3 368 33 view .LVU263
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 918              		.loc 3 374 3 view .LVU264
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 919              		.loc 3 374 3 view .LVU265
 920              		.loc 3 378 3 view .LVU266
 921              	.LBB349:
 922              	.LBI349:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 923              		.loc 4 396 20 view .LVU267
 924              	.LBE349:
 925              	.LBE348:
 926              	.LBE347:
 927              	.LBE346:
 928              	.LBE345:
 929              		.loc 4 398 3 view .LVU268
 930              	.LBB356:
 931              	.LBB355:
 932              	.LBB354:
 933              	.LBB353:
 934              	.LBB352:
 935              	.LBB350:
 936              	.LBI350:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 937              		.loc 5 129 27 view .LVU269
 938              	.LBB351:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 939              		.loc 5 131 3 view .LVU270
 940              	.LVL40:
 941              	.L16:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 942              		.loc 5 131 3 is_stmt 0 view .LVU271
 943              	.LBE351:
 944              	.LBE350:
 945              	.LBE352:
 946              	.LBE353:
 947              	.LBE354:
 948              	.LBE355:
 949              	.LBE356:
 439:lib/chibios/os/rt/src/chthreads.c **** 
 440:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 441:lib/chibios/os/rt/src/chthreads.c ****     switch (tp->flags & CH_FLAG_MODE_MASK) {
 442:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_HEAP == TRUE
 443:lib/chibios/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_HEAP:
 444:lib/chibios/os/rt/src/chthreads.c ****       chHeapFree(chThdGetWorkingAreaX(tp));
 445:lib/chibios/os/rt/src/chthreads.c ****       break;
 446:lib/chibios/os/rt/src/chthreads.c **** #endif
 447:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MEMPOOLS == TRUE
 448:lib/chibios/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_MPOOL:
 449:lib/chibios/os/rt/src/chthreads.c ****       chPoolFree(tp->mpool, chThdGetWorkingAreaX(tp));
 450:lib/chibios/os/rt/src/chthreads.c ****       break;
 451:lib/chibios/os/rt/src/chthreads.c **** #endif
 452:lib/chibios/os/rt/src/chthreads.c ****     default:
 453:lib/chibios/os/rt/src/chthreads.c ****       /* Nothing else to do for static threads.*/
 454:lib/chibios/os/rt/src/chthreads.c ****       break;
 455:lib/chibios/os/rt/src/chthreads.c ****     }
 456:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_DYNAMIC == TRUE */
 457:lib/chibios/os/rt/src/chthreads.c ****     return;
 458:lib/chibios/os/rt/src/chthreads.c ****   }
 459:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 950              		.loc 1 459 3 is_stmt 1 view .LVU272
 951              	.LBB357:
 952              	.LBI357:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 953              		.loc 3 365 20 view .LVU273
 954              	.LBB358:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 955              		.loc 3 367 22 view .LVU274
 368:./lib/chibios/os/rt/include/chsys.h **** 
 956              		.loc 3 368 33 view .LVU275
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 957              		.loc 3 374 3 view .LVU276
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 958              		.loc 3 374 3 view .LVU277
 959              		.loc 3 378 3 view .LVU278
 960              	.LBB359:
 961              	.LBI359:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 962              		.loc 4 396 20 view .LVU279
 963              	.LBE359:
 964              	.LBE358:
 965              	.LBE357:
 966              		.loc 4 398 3 view .LVU280
 967              	.LBB364:
 968              	.LBB363:
 969              	.LBB362:
 970              	.LBB360:
 971              	.LBI360:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 972              		.loc 5 129 27 view .LVU281
 973              	.LBB361:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 974              		.loc 5 131 3 view .LVU282
 975              		.syntax divided
 976              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 977 001c 62B6     		cpsie i
 978              	@ 0 "" 2
 979              		.thumb
 980              		.syntax unified
 981              	.LBE361:
 982              	.LBE360:
 983              	.LBE362:
 984              	.LBE363:
 985              	.LBE364:
 460:lib/chibios/os/rt/src/chthreads.c **** }
 986              		.loc 1 460 1 is_stmt 0 view .LVU283
 987              		@ sp needed
 988 001e 7047     		bx	lr
 989              	.L19:
 990              		.align	2
 991              	.L18:
 992 0020 FF00FF00 		.word	16711935
 993              		.cfi_endproc
 994              	.LFE162:
 996              		.section	.text.chThdExitS,"ax",%progbits
 997              		.align	1
 998              		.global	chThdExitS
 999              		.syntax unified
 1000              		.code	16
 1001              		.thumb_func
 1002              		.fpu softvfp
 1004              	chThdExitS:
 1005              	.LVL41:
 1006              	.LFB164:
 461:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 462:lib/chibios/os/rt/src/chthreads.c **** 
 463:lib/chibios/os/rt/src/chthreads.c **** /**
 464:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 465:lib/chibios/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 466:lib/chibios/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 467:lib/chibios/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 468:lib/chibios/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 469:lib/chibios/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 470:lib/chibios/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 471:lib/chibios/os/rt/src/chthreads.c ****  *          the dead code.
 472:lib/chibios/os/rt/src/chthreads.c ****  *
 473:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 474:lib/chibios/os/rt/src/chthreads.c ****  *
 475:lib/chibios/os/rt/src/chthreads.c ****  * @api
 476:lib/chibios/os/rt/src/chthreads.c ****  */
 477:lib/chibios/os/rt/src/chthreads.c **** void chThdExit(msg_t msg) {
 478:lib/chibios/os/rt/src/chthreads.c **** 
 479:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 480:lib/chibios/os/rt/src/chthreads.c ****   chThdExitS(msg);
 481:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 482:lib/chibios/os/rt/src/chthreads.c **** }
 483:lib/chibios/os/rt/src/chthreads.c **** 
 484:lib/chibios/os/rt/src/chthreads.c **** /**
 485:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 486:lib/chibios/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 487:lib/chibios/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 488:lib/chibios/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 489:lib/chibios/os/rt/src/chthreads.c ****  * @post    Exiting a non-static thread that does not have references
 490:lib/chibios/os/rt/src/chthreads.c ****  *          (detached) causes the thread to remain in the registry.
 491:lib/chibios/os/rt/src/chthreads.c ****  *          It can only be removed by performing a registry scan operation.
 492:lib/chibios/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 493:lib/chibios/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 494:lib/chibios/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 495:lib/chibios/os/rt/src/chthreads.c ****  *          the dead code.
 496:lib/chibios/os/rt/src/chthreads.c ****  *
 497:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 498:lib/chibios/os/rt/src/chthreads.c ****  *
 499:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 500:lib/chibios/os/rt/src/chthreads.c ****  */
 501:lib/chibios/os/rt/src/chthreads.c **** void chThdExitS(msg_t msg) {
 1007              		.loc 1 501 28 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 502:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = currp;
 1011              		.loc 1 502 3 view .LVU285
 1012              		.loc 1 502 13 is_stmt 0 view .LVU286
 1013 0000 0C4B     		ldr	r3, .L24
 501:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = currp;
 1014              		.loc 1 501 28 view .LVU287
 1015 0002 10B5     		push	{r4, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 14, -4
 1019              		.loc 1 502 13 view .LVU288
 1020 0004 9C69     		ldr	r4, [r3, #24]
 1021              	.LVL42:
 503:lib/chibios/os/rt/src/chthreads.c **** 
 504:lib/chibios/os/rt/src/chthreads.c ****   /* Storing exit message.*/
 505:lib/chibios/os/rt/src/chthreads.c ****   tp->u.exitcode = msg;
 1022              		.loc 1 505 3 is_stmt 1 view .LVU289
 1023              		.loc 1 505 18 is_stmt 0 view .LVU290
 1024 0006 2062     		str	r0, [r4, #32]
 506:lib/chibios/os/rt/src/chthreads.c **** 
 507:lib/chibios/os/rt/src/chthreads.c ****   /* Exit handler hook.*/
 508:lib/chibios/os/rt/src/chthreads.c ****   CH_CFG_THREAD_EXIT_HOOK(tp);
 1025              		.loc 1 508 3 is_stmt 1 view .LVU291
 1026              		.loc 1 508 30 view .LVU292
 509:lib/chibios/os/rt/src/chthreads.c **** 
 510:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 511:lib/chibios/os/rt/src/chthreads.c ****   /* Waking up any waiting thread.*/
 512:lib/chibios/os/rt/src/chthreads.c ****   while (list_notempty(&tp->waiting)) {
 1027              		.loc 1 512 3 view .LVU293
 1028              	.LVL43:
 1029              	.L21:
 1030              		.loc 1 512 10 is_stmt 0 view .LVU294
 1031 0008 2000     		movs	r0, r4
 1032              		.loc 1 512 9 view .LVU295
 1033 000a 636A     		ldr	r3, [r4, #36]
 1034              		.loc 1 512 10 view .LVU296
 1035 000c 2430     		adds	r0, r0, #36
 1036              	.LVL44:
 1037              	.LBB365:
 1038              	.LBI365:
 525:./lib/chibios/os/rt/include/chschd.h **** 
 1039              		.loc 2 525 20 is_stmt 1 view .LVU297
 1040              	.LBB366:
 527:./lib/chibios/os/rt/include/chschd.h **** }
 1041              		.loc 2 527 3 view .LVU298
 527:./lib/chibios/os/rt/include/chschd.h **** }
 1042              		.loc 2 527 3 is_stmt 0 view .LVU299
 1043              	.LBE366:
 1044              	.LBE365:
 1045              		.loc 1 512 9 view .LVU300
 1046 000e 9842     		cmp	r0, r3
 1047 0010 0AD1     		bne	.L22
 513:lib/chibios/os/rt/src/chthreads.c ****     (void) chSchReadyI(list_remove(&tp->waiting));
 514:lib/chibios/os/rt/src/chthreads.c ****   }
 515:lib/chibios/os/rt/src/chthreads.c **** #endif
 516:lib/chibios/os/rt/src/chthreads.c **** 
 517:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 518:lib/chibios/os/rt/src/chthreads.c ****   /* Static threads with no references are immediately removed from the
 519:lib/chibios/os/rt/src/chthreads.c ****      registry because there is no memory to recover.*/
 520:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 521:lib/chibios/os/rt/src/chthreads.c ****   if ((tp->refs == (trefs_t)0) &&
 522:lib/chibios/os/rt/src/chthreads.c ****       ((tp->flags & CH_FLAG_MODE_MASK) == CH_FLAG_MODE_STATIC)) {
 523:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 524:lib/chibios/os/rt/src/chthreads.c ****   }
 525:lib/chibios/os/rt/src/chthreads.c **** #else
 526:lib/chibios/os/rt/src/chthreads.c ****   if (tp->refs == (trefs_t)0) {
 1048              		.loc 1 526 3 is_stmt 1 view .LVU301
 1049              		.loc 1 526 6 is_stmt 0 view .LVU302
 1050 0012 A37F     		ldrb	r3, [r4, #30]
 1051 0014 002B     		cmp	r3, #0
 1052 0016 03D1     		bne	.L23
 527:lib/chibios/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 1053              		.loc 1 527 5 is_stmt 1 view .LVU303
 1054 0018 6269     		ldr	r2, [r4, #20]
 1055 001a 2369     		ldr	r3, [r4, #16]
 1056 001c 1361     		str	r3, [r2, #16]
 1057              		.loc 1 527 5 view .LVU304
 1058 001e 5A61     		str	r2, [r3, #20]
 1059              	.L23:
 1060              		.loc 1 527 19 discriminator 1 view .LVU305
 528:lib/chibios/os/rt/src/chthreads.c ****   }
 529:lib/chibios/os/rt/src/chthreads.c **** #endif
 530:lib/chibios/os/rt/src/chthreads.c **** #endif
 531:lib/chibios/os/rt/src/chthreads.c **** 
 532:lib/chibios/os/rt/src/chthreads.c ****   /* Going into final state.*/
 533:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_FINAL);
 1061              		.loc 1 533 3 discriminator 1 view .LVU306
 1062 0020 0F20     		movs	r0, #15
 1063 0022 FFF7FEFF 		bl	chSchGoSleepS
 1064              	.LVL45:
 534:lib/chibios/os/rt/src/chthreads.c **** 
 535:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 536:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(false, "zombies apocalypse");
 1065              		.loc 1 536 3 discriminator 1 view .LVU307
 1066              		.loc 1 536 3 discriminator 1 view .LVU308
 537:lib/chibios/os/rt/src/chthreads.c **** }
 1067              		.loc 1 537 1 is_stmt 0 discriminator 1 view .LVU309
 1068              		@ sp needed
 1069              	.LVL46:
 1070              		.loc 1 537 1 discriminator 1 view .LVU310
 1071 0026 10BD     		pop	{r4, pc}
 1072              	.LVL47:
 1073              	.L22:
 513:lib/chibios/os/rt/src/chthreads.c ****   }
 1074              		.loc 1 513 5 is_stmt 1 view .LVU311
 513:lib/chibios/os/rt/src/chthreads.c ****   }
 1075              		.loc 1 513 12 is_stmt 0 view .LVU312
 1076 0028 FFF7FEFF 		bl	list_remove
 1077              	.LVL48:
 1078 002c FFF7FEFF 		bl	chSchReadyI
 1079              	.LVL49:
 1080 0030 EAE7     		b	.L21
 1081              	.L25:
 1082 0032 C046     		.align	2
 1083              	.L24:
 1084 0034 00000000 		.word	ch
 1085              		.cfi_endproc
 1086              	.LFE164:
 1088              		.section	.text.chThdExit,"ax",%progbits
 1089              		.align	1
 1090              		.global	chThdExit
 1091              		.syntax unified
 1092              		.code	16
 1093              		.thumb_func
 1094              		.fpu softvfp
 1096              	chThdExit:
 1097              	.LVL50:
 1098              	.LFB163:
 477:lib/chibios/os/rt/src/chthreads.c **** 
 1099              		.loc 1 477 27 is_stmt 1 view -0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 479:lib/chibios/os/rt/src/chthreads.c ****   chThdExitS(msg);
 1103              		.loc 1 479 3 view .LVU314
 1104              	.LBB367:
 1105              	.LBI367:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1106              		.loc 3 353 20 view .LVU315
 1107              	.LBE367:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1108              		.loc 3 355 3 view .LVU316
 1109              	.LBB375:
 1110              	.LBB368:
 1111              	.LBI368:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1112              		.loc 4 387 20 view .LVU317
 1113              	.LBE368:
 1114              	.LBE375:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1115              		.loc 4 389 3 view .LVU318
 1116              	.LBB376:
 1117              	.LBB373:
 1118              	.LBB369:
 1119              	.LBI369:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1120              		.loc 5 140 27 view .LVU319
 1121              	.LBB370:
 1122              		.loc 5 142 3 view .LVU320
 1123              	.LBE370:
 1124              	.LBE369:
 1125              	.LBE373:
 1126              	.LBE376:
 477:lib/chibios/os/rt/src/chthreads.c **** 
 1127              		.loc 1 477 27 is_stmt 0 view .LVU321
 1128 0000 10B5     		push	{r4, lr}
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 4, -8
 1131              		.cfi_offset 14, -4
 1132              	.LBB377:
 1133              	.LBB374:
 1134              	.LBB372:
 1135              	.LBB371:
 1136              		.loc 5 142 3 view .LVU322
 1137              		.syntax divided
 1138              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1139 0002 72B6     		cpsid i
 1140              	@ 0 "" 2
 1141              		.thumb
 1142              		.syntax unified
 1143              	.LBE371:
 1144              	.LBE372:
 1145              	.LBE374:
 1146              	.LBE377:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1147              		.loc 3 356 34 is_stmt 1 view .LVU323
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1148              		.loc 3 357 20 view .LVU324
 480:lib/chibios/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 1149              		.loc 1 480 3 view .LVU325
 1150 0004 FFF7FEFF 		bl	chThdExitS
 1151              	.LVL51:
 482:lib/chibios/os/rt/src/chthreads.c **** 
 1152              		.loc 1 482 1 is_stmt 0 view .LVU326
 1153              		@ sp needed
 1154 0008 10BD     		pop	{r4, pc}
 1155              		.cfi_endproc
 1156              	.LFE163:
 1158              		.section	.text.chThdWait,"ax",%progbits
 1159              		.align	1
 1160              		.global	chThdWait
 1161              		.syntax unified
 1162              		.code	16
 1163              		.thumb_func
 1164              		.fpu softvfp
 1166              	chThdWait:
 1167              	.LVL52:
 1168              	.LFB165:
 538:lib/chibios/os/rt/src/chthreads.c **** 
 539:lib/chibios/os/rt/src/chthreads.c **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 540:lib/chibios/os/rt/src/chthreads.c **** /**
 541:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Blocks the execution of the invoking thread until the specified
 542:lib/chibios/os/rt/src/chthreads.c ****  *          thread terminates then the exit code is returned.
 543:lib/chibios/os/rt/src/chthreads.c ****  * @details This function waits for the specified thread to terminate then
 544:lib/chibios/os/rt/src/chthreads.c ****  *          decrements its reference counter, if the counter reaches zero then
 545:lib/chibios/os/rt/src/chthreads.c ****  *          the thread working area is returned to the proper allocator and
 546:lib/chibios/os/rt/src/chthreads.c ****  *          the thread is removed from registry.
 547:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_WAITEXIT must be enabled in
 548:lib/chibios/os/rt/src/chthreads.c ****  *          order to use this function.
 549:lib/chibios/os/rt/src/chthreads.c ****  * @post    Enabling @p chThdWait() requires 2-4 (depending on the
 550:lib/chibios/os/rt/src/chthreads.c ****  *          architecture) extra bytes in the @p thread_t structure.
 551:lib/chibios/os/rt/src/chthreads.c ****  * @note    If @p CH_CFG_USE_DYNAMIC is not specified this function just waits
 552:lib/chibios/os/rt/src/chthreads.c ****  *          for the thread termination, no memory allocators are involved.
 553:lib/chibios/os/rt/src/chthreads.c ****  *
 554:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 555:lib/chibios/os/rt/src/chthreads.c ****  * @return              The exit code from the terminated thread.
 556:lib/chibios/os/rt/src/chthreads.c ****  *
 557:lib/chibios/os/rt/src/chthreads.c ****  * @api
 558:lib/chibios/os/rt/src/chthreads.c ****  */
 559:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdWait(thread_t *tp) {
 1169              		.loc 1 559 31 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 560:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1173              		.loc 1 560 3 view .LVU328
 561:lib/chibios/os/rt/src/chthreads.c **** 
 562:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(tp != NULL);
 1174              		.loc 1 562 3 view .LVU329
 1175              		.loc 1 562 3 view .LVU330
 563:lib/chibios/os/rt/src/chthreads.c **** 
 564:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1176              		.loc 1 564 3 view .LVU331
 1177              	.LBB378:
 1178              	.LBI378:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1179              		.loc 3 353 20 view .LVU332
 1180              	.LBE378:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1181              		.loc 3 355 3 view .LVU333
 1182              	.LBB386:
 1183              	.LBB379:
 1184              	.LBI379:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1185              		.loc 4 387 20 view .LVU334
 1186              	.LBE379:
 1187              	.LBE386:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1188              		.loc 4 389 3 view .LVU335
 1189              	.LBB387:
 1190              	.LBB384:
 1191              	.LBB380:
 1192              	.LBI380:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1193              		.loc 5 140 27 view .LVU336
 1194              	.LBB381:
 1195              		.loc 5 142 3 view .LVU337
 1196              	.LBE381:
 1197              	.LBE380:
 1198              	.LBE384:
 1199              	.LBE387:
 559:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1200              		.loc 1 559 31 is_stmt 0 view .LVU338
 1201 0000 70B5     		push	{r4, r5, r6, lr}
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 4, -16
 1204              		.cfi_offset 5, -12
 1205              		.cfi_offset 6, -8
 1206              		.cfi_offset 14, -4
 559:lib/chibios/os/rt/src/chthreads.c ****   msg_t msg;
 1207              		.loc 1 559 31 view .LVU339
 1208 0002 0400     		movs	r4, r0
 1209              	.LBB388:
 1210              	.LBB385:
 1211              	.LBB383:
 1212              	.LBB382:
 1213              		.loc 5 142 3 view .LVU340
 1214              		.syntax divided
 1215              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1216 0004 72B6     		cpsid i
 1217              	@ 0 "" 2
 1218              		.thumb
 1219              		.syntax unified
 1220              	.LBE382:
 1221              	.LBE383:
 1222              	.LBE385:
 1223              	.LBE388:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1224              		.loc 3 356 34 is_stmt 1 view .LVU341
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1225              		.loc 3 357 20 view .LVU342
 565:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp != currp, "waiting self");
 1226              		.loc 1 565 3 view .LVU343
 1227              		.loc 1 565 3 view .LVU344
 566:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 567:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "no references");
 1228              		.loc 1 567 3 view .LVU345
 1229              		.loc 1 567 3 view .LVU346
 568:lib/chibios/os/rt/src/chthreads.c **** #endif
 569:lib/chibios/os/rt/src/chthreads.c **** 
 570:lib/chibios/os/rt/src/chthreads.c ****   if (tp->state != CH_STATE_FINAL) {
 1230              		.loc 1 570 3 view .LVU347
 1231              		.loc 1 570 6 is_stmt 0 view .LVU348
 1232 0006 037F     		ldrb	r3, [r0, #28]
 1233 0008 0F2B     		cmp	r3, #15
 1234 000a 08D0     		beq	.L28
 571:lib/chibios/os/rt/src/chthreads.c ****     list_insert(currp, &tp->waiting);
 1235              		.loc 1 571 5 is_stmt 1 view .LVU349
 1236 000c 0100     		movs	r1, r0
 1237 000e 074B     		ldr	r3, .L32
 1238 0010 2431     		adds	r1, r1, #36
 1239 0012 9869     		ldr	r0, [r3, #24]
 1240              	.LVL53:
 1241              		.loc 1 571 5 is_stmt 0 view .LVU350
 1242 0014 FFF7FEFF 		bl	list_insert
 1243              	.LVL54:
 572:lib/chibios/os/rt/src/chthreads.c ****     chSchGoSleepS(CH_STATE_WTEXIT);
 1244              		.loc 1 572 5 is_stmt 1 view .LVU351
 1245 0018 0920     		movs	r0, #9
 1246 001a FFF7FEFF 		bl	chSchGoSleepS
 1247              	.LVL55:
 1248              	.L28:
 573:lib/chibios/os/rt/src/chthreads.c ****   }
 574:lib/chibios/os/rt/src/chthreads.c ****   msg = tp->u.exitcode;
 1249              		.loc 1 574 3 view .LVU352
 1250              		.loc 1 574 7 is_stmt 0 view .LVU353
 1251 001e 256A     		ldr	r5, [r4, #32]
 1252              	.LVL56:
 575:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1253              		.loc 1 575 3 is_stmt 1 view .LVU354
 1254              	.LBB389:
 1255              	.LBI389:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1256              		.loc 3 365 20 view .LVU355
 1257              	.LBB390:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1258              		.loc 3 367 22 view .LVU356
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1259              		.loc 3 368 33 view .LVU357
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1260              		.loc 3 374 3 view .LVU358
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1261              		.loc 3 374 3 view .LVU359
 1262              		.loc 3 378 3 view .LVU360
 1263              	.LBB391:
 1264              	.LBI391:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1265              		.loc 4 396 20 view .LVU361
 1266              	.LBE391:
 1267              	.LBE390:
 1268              	.LBE389:
 1269              		.loc 4 398 3 view .LVU362
 1270              	.LBB396:
 1271              	.LBB395:
 1272              	.LBB394:
 1273              	.LBB392:
 1274              	.LBI392:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1275              		.loc 5 129 27 view .LVU363
 1276              	.LBB393:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1277              		.loc 5 131 3 view .LVU364
 1278              		.syntax divided
 1279              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1280 0020 62B6     		cpsie i
 1281              	@ 0 "" 2
 1282              		.thumb
 1283              		.syntax unified
 1284              	.LBE393:
 1285              	.LBE392:
 1286              	.LBE394:
 1287              	.LBE395:
 1288              	.LBE396:
 576:lib/chibios/os/rt/src/chthreads.c **** 
 577:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 578:lib/chibios/os/rt/src/chthreads.c ****   /* Releasing a reference to the thread.*/
 579:lib/chibios/os/rt/src/chthreads.c ****   chThdRelease(tp);
 1289              		.loc 1 579 3 view .LVU365
 1290 0022 2000     		movs	r0, r4
 1291 0024 FFF7FEFF 		bl	chThdRelease
 1292              	.LVL57:
 580:lib/chibios/os/rt/src/chthreads.c **** #endif
 581:lib/chibios/os/rt/src/chthreads.c **** 
 582:lib/chibios/os/rt/src/chthreads.c ****   return msg;
 1293              		.loc 1 582 3 view .LVU366
 583:lib/chibios/os/rt/src/chthreads.c **** }
 1294              		.loc 1 583 1 is_stmt 0 view .LVU367
 1295              		@ sp needed
 1296 0028 2800     		movs	r0, r5
 1297              	.LVL58:
 1298              	.LVL59:
 1299              		.loc 1 583 1 view .LVU368
 1300 002a 70BD     		pop	{r4, r5, r6, pc}
 1301              	.L33:
 1302              		.align	2
 1303              	.L32:
 1304 002c 00000000 		.word	ch
 1305              		.cfi_endproc
 1306              	.LFE165:
 1308              		.section	.text.chThdSetPriority,"ax",%progbits
 1309              		.align	1
 1310              		.global	chThdSetPriority
 1311              		.syntax unified
 1312              		.code	16
 1313              		.thumb_func
 1314              		.fpu softvfp
 1316              	chThdSetPriority:
 1317              	.LVL60:
 1318              	.LFB166:
 584:lib/chibios/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_WAITEXIT */
 585:lib/chibios/os/rt/src/chthreads.c **** 
 586:lib/chibios/os/rt/src/chthreads.c **** /**
 587:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Changes the running thread priority level then reschedules if
 588:lib/chibios/os/rt/src/chthreads.c ****  *          necessary.
 589:lib/chibios/os/rt/src/chthreads.c ****  * @note    The function returns the real thread priority regardless of the
 590:lib/chibios/os/rt/src/chthreads.c ****  *          current priority that could be higher than the real priority
 591:lib/chibios/os/rt/src/chthreads.c ****  *          because the priority inheritance mechanism.
 592:lib/chibios/os/rt/src/chthreads.c ****  *
 593:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] newprio   the new priority level of the running thread
 594:lib/chibios/os/rt/src/chthreads.c ****  * @return              The old priority level.
 595:lib/chibios/os/rt/src/chthreads.c ****  *
 596:lib/chibios/os/rt/src/chthreads.c ****  * @api
 597:lib/chibios/os/rt/src/chthreads.c ****  */
 598:lib/chibios/os/rt/src/chthreads.c **** tprio_t chThdSetPriority(tprio_t newprio) {
 1319              		.loc 1 598 43 is_stmt 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 599:lib/chibios/os/rt/src/chthreads.c ****   tprio_t oldprio;
 1323              		.loc 1 599 3 view .LVU370
 600:lib/chibios/os/rt/src/chthreads.c **** 
 601:lib/chibios/os/rt/src/chthreads.c ****   chDbgCheck(newprio <= HIGHPRIO);
 1324              		.loc 1 601 3 view .LVU371
 1325              		.loc 1 601 3 view .LVU372
 602:lib/chibios/os/rt/src/chthreads.c **** 
 603:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1326              		.loc 1 603 3 view .LVU373
 1327              	.LBB397:
 1328              	.LBI397:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1329              		.loc 3 353 20 view .LVU374
 1330              	.LBE397:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1331              		.loc 3 355 3 view .LVU375
 1332              	.LBB405:
 1333              	.LBB398:
 1334              	.LBI398:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1335              		.loc 4 387 20 view .LVU376
 1336              	.LBE398:
 1337              	.LBE405:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1338              		.loc 4 389 3 view .LVU377
 1339              	.LBB406:
 1340              	.LBB403:
 1341              	.LBB399:
 1342              	.LBI399:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1343              		.loc 5 140 27 view .LVU378
 1344              	.LBB400:
 1345              		.loc 5 142 3 view .LVU379
 1346              	.LBE400:
 1347              	.LBE399:
 1348              	.LBE403:
 1349              	.LBE406:
 598:lib/chibios/os/rt/src/chthreads.c ****   tprio_t oldprio;
 1350              		.loc 1 598 43 is_stmt 0 view .LVU380
 1351 0000 10B5     		push	{r4, lr}
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 4, -8
 1354              		.cfi_offset 14, -4
 1355              	.LBB407:
 1356              	.LBB404:
 1357              	.LBB402:
 1358              	.LBB401:
 1359              		.loc 5 142 3 view .LVU381
 1360              		.syntax divided
 1361              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1362 0002 72B6     		cpsid i
 1363              	@ 0 "" 2
 1364              		.thumb
 1365              		.syntax unified
 1366              	.LBE401:
 1367              	.LBE402:
 1368              	.LBE404:
 1369              	.LBE407:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1370              		.loc 3 356 34 is_stmt 1 view .LVU382
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1371              		.loc 3 357 20 view .LVU383
 604:lib/chibios/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
 605:lib/chibios/os/rt/src/chthreads.c ****   oldprio = currp->realprio;
 1372              		.loc 1 605 3 view .LVU384
 1373              		.loc 1 605 13 is_stmt 0 view .LVU385
 1374 0004 074B     		ldr	r3, .L37
 1375 0006 9B69     		ldr	r3, [r3, #24]
 1376              		.loc 1 605 11 view .LVU386
 1377 0008 9C6B     		ldr	r4, [r3, #56]
 1378              	.LVL61:
 606:lib/chibios/os/rt/src/chthreads.c ****   if ((currp->prio == currp->realprio) || (newprio > currp->prio)) {
 1379              		.loc 1 606 3 is_stmt 1 view .LVU387
 1380              		.loc 1 606 13 is_stmt 0 view .LVU388
 1381 000a 9A68     		ldr	r2, [r3, #8]
 1382              		.loc 1 606 6 view .LVU389
 1383 000c A242     		cmp	r2, r4
 1384 000e 01D0     		beq	.L35
 1385              		.loc 1 606 40 discriminator 1 view .LVU390
 1386 0010 8242     		cmp	r2, r0
 1387 0012 00D2     		bcs	.L36
 1388              	.L35:
 607:lib/chibios/os/rt/src/chthreads.c ****     currp->prio = newprio;
 1389              		.loc 1 607 5 is_stmt 1 view .LVU391
 1390              		.loc 1 607 17 is_stmt 0 view .LVU392
 1391 0014 9860     		str	r0, [r3, #8]
 1392              	.L36:
 608:lib/chibios/os/rt/src/chthreads.c ****   }
 609:lib/chibios/os/rt/src/chthreads.c ****   currp->realprio = newprio;
 1393              		.loc 1 609 3 is_stmt 1 view .LVU393
 1394              		.loc 1 609 19 is_stmt 0 view .LVU394
 1395 0016 9863     		str	r0, [r3, #56]
 610:lib/chibios/os/rt/src/chthreads.c **** #else
 611:lib/chibios/os/rt/src/chthreads.c ****   oldprio = currp->prio;
 612:lib/chibios/os/rt/src/chthreads.c ****   currp->prio = newprio;
 613:lib/chibios/os/rt/src/chthreads.c **** #endif
 614:lib/chibios/os/rt/src/chthreads.c ****   chSchRescheduleS();
 1396              		.loc 1 614 3 is_stmt 1 view .LVU395
 1397 0018 FFF7FEFF 		bl	chSchRescheduleS
 1398              	.LVL62:
 615:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1399              		.loc 1 615 3 view .LVU396
 1400              	.LBB408:
 1401              	.LBI408:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1402              		.loc 3 365 20 view .LVU397
 1403              	.LBB409:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1404              		.loc 3 367 22 view .LVU398
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1405              		.loc 3 368 33 view .LVU399
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1406              		.loc 3 374 3 view .LVU400
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1407              		.loc 3 374 3 view .LVU401
 1408              		.loc 3 378 3 view .LVU402
 1409              	.LBB410:
 1410              	.LBI410:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1411              		.loc 4 396 20 view .LVU403
 1412              	.LBE410:
 1413              	.LBE409:
 1414              	.LBE408:
 1415              		.loc 4 398 3 view .LVU404
 1416              	.LBB415:
 1417              	.LBB414:
 1418              	.LBB413:
 1419              	.LBB411:
 1420              	.LBI411:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1421              		.loc 5 129 27 view .LVU405
 1422              	.LBB412:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1423              		.loc 5 131 3 view .LVU406
 1424              		.syntax divided
 1425              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1426 001c 62B6     		cpsie i
 1427              	@ 0 "" 2
 1428              		.thumb
 1429              		.syntax unified
 1430              	.LBE412:
 1431              	.LBE411:
 1432              	.LBE413:
 1433              	.LBE414:
 1434              	.LBE415:
 616:lib/chibios/os/rt/src/chthreads.c **** 
 617:lib/chibios/os/rt/src/chthreads.c ****   return oldprio;
 1435              		.loc 1 617 3 view .LVU407
 618:lib/chibios/os/rt/src/chthreads.c **** }
 1436              		.loc 1 618 1 is_stmt 0 view .LVU408
 1437 001e 2000     		movs	r0, r4
 1438              		@ sp needed
 1439              	.LVL63:
 1440              		.loc 1 618 1 view .LVU409
 1441 0020 10BD     		pop	{r4, pc}
 1442              	.L38:
 1443 0022 C046     		.align	2
 1444              	.L37:
 1445 0024 00000000 		.word	ch
 1446              		.cfi_endproc
 1447              	.LFE166:
 1449              		.section	.text.chThdTerminate,"ax",%progbits
 1450              		.align	1
 1451              		.global	chThdTerminate
 1452              		.syntax unified
 1453              		.code	16
 1454              		.thumb_func
 1455              		.fpu softvfp
 1457              	chThdTerminate:
 1458              	.LVL64:
 1459              	.LFB167:
 619:lib/chibios/os/rt/src/chthreads.c **** 
 620:lib/chibios/os/rt/src/chthreads.c **** /**
 621:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Requests a thread termination.
 622:lib/chibios/os/rt/src/chthreads.c ****  * @pre     The target thread must be written to invoke periodically
 623:lib/chibios/os/rt/src/chthreads.c ****  *          @p chThdShouldTerminate() and terminate cleanly if it returns
 624:lib/chibios/os/rt/src/chthreads.c ****  *          @p true.
 625:lib/chibios/os/rt/src/chthreads.c ****  * @post    The specified thread will terminate after detecting the termination
 626:lib/chibios/os/rt/src/chthreads.c ****  *          condition.
 627:lib/chibios/os/rt/src/chthreads.c ****  *
 628:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 629:lib/chibios/os/rt/src/chthreads.c ****  *
 630:lib/chibios/os/rt/src/chthreads.c ****  * @api
 631:lib/chibios/os/rt/src/chthreads.c ****  */
 632:lib/chibios/os/rt/src/chthreads.c **** void chThdTerminate(thread_t *tp) {
 1460              		.loc 1 632 35 is_stmt 1 view -0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		@ link register save eliminated.
 633:lib/chibios/os/rt/src/chthreads.c **** 
 634:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1465              		.loc 1 634 3 view .LVU411
 1466              	.LBB416:
 1467              	.LBI416:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1468              		.loc 3 353 20 view .LVU412
 1469              	.LBE416:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1470              		.loc 3 355 3 view .LVU413
 1471              	.LBB421:
 1472              	.LBB417:
 1473              	.LBI417:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1474              		.loc 4 387 20 view .LVU414
 1475              	.LBE417:
 1476              	.LBE421:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1477              		.loc 4 389 3 view .LVU415
 1478              	.LBB422:
 1479              	.LBB420:
 1480              	.LBB418:
 1481              	.LBI418:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1482              		.loc 5 140 27 view .LVU416
 1483              	.LBB419:
 1484              		.loc 5 142 3 view .LVU417
 1485              		.syntax divided
 1486              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1487 0000 72B6     		cpsid i
 1488              	@ 0 "" 2
 1489              		.thumb
 1490              		.syntax unified
 1491              	.LBE419:
 1492              	.LBE418:
 1493              	.LBE420:
 1494              	.LBE422:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1495              		.loc 3 356 34 view .LVU418
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1496              		.loc 3 357 20 view .LVU419
 635:lib/chibios/os/rt/src/chthreads.c ****   tp->flags |= CH_FLAG_TERMINATE;
 1497              		.loc 1 635 3 view .LVU420
 1498              		.loc 1 635 13 is_stmt 0 view .LVU421
 1499 0002 0423     		movs	r3, #4
 1500 0004 427F     		ldrb	r2, [r0, #29]
 1501 0006 1343     		orrs	r3, r2
 1502 0008 4377     		strb	r3, [r0, #29]
 636:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1503              		.loc 1 636 3 is_stmt 1 view .LVU422
 1504              	.LBB423:
 1505              	.LBI423:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1506              		.loc 3 365 20 view .LVU423
 1507              	.LBB424:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1508              		.loc 3 367 22 view .LVU424
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1509              		.loc 3 368 33 view .LVU425
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1510              		.loc 3 374 3 view .LVU426
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1511              		.loc 3 374 3 view .LVU427
 1512              		.loc 3 378 3 view .LVU428
 1513              	.LBB425:
 1514              	.LBI425:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1515              		.loc 4 396 20 view .LVU429
 1516              	.LBE425:
 1517              	.LBE424:
 1518              	.LBE423:
 1519              		.loc 4 398 3 view .LVU430
 1520              	.LBB430:
 1521              	.LBB429:
 1522              	.LBB428:
 1523              	.LBB426:
 1524              	.LBI426:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1525              		.loc 5 129 27 view .LVU431
 1526              	.LBB427:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1527              		.loc 5 131 3 view .LVU432
 1528              		.syntax divided
 1529              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1530 000a 62B6     		cpsie i
 1531              	@ 0 "" 2
 1532              		.thumb
 1533              		.syntax unified
 1534              	.LBE427:
 1535              	.LBE426:
 1536              	.LBE428:
 1537              	.LBE429:
 1538              	.LBE430:
 637:lib/chibios/os/rt/src/chthreads.c **** }
 1539              		.loc 1 637 1 is_stmt 0 view .LVU433
 1540              		@ sp needed
 1541 000c 7047     		bx	lr
 1542              		.cfi_endproc
 1543              	.LFE167:
 1545              		.section	.text.chThdSleep,"ax",%progbits
 1546              		.align	1
 1547              		.global	chThdSleep
 1548              		.syntax unified
 1549              		.code	16
 1550              		.thumb_func
 1551              		.fpu softvfp
 1553              	chThdSleep:
 1554              	.LVL65:
 1555              	.LFB168:
 638:lib/chibios/os/rt/src/chthreads.c **** 
 639:lib/chibios/os/rt/src/chthreads.c **** /**
 640:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread for the specified time.
 641:lib/chibios/os/rt/src/chthreads.c ****  *
 642:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] time      the delay in system ticks, the special values are
 643:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 644:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 645:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 646:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 647:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 648:lib/chibios/os/rt/src/chthreads.c ****  *
 649:lib/chibios/os/rt/src/chthreads.c ****  * @api
 650:lib/chibios/os/rt/src/chthreads.c ****  */
 651:lib/chibios/os/rt/src/chthreads.c **** void chThdSleep(sysinterval_t time) {
 1556              		.loc 1 651 37 is_stmt 1 view -0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 652:lib/chibios/os/rt/src/chthreads.c **** 
 653:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1560              		.loc 1 653 3 view .LVU435
 1561              	.LBB442:
 1562              	.LBI442:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1563              		.loc 3 353 20 view .LVU436
 1564              	.LBE442:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1565              		.loc 3 355 3 view .LVU437
 1566              	.LBB450:
 1567              	.LBB443:
 1568              	.LBI443:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1569              		.loc 4 387 20 view .LVU438
 1570              	.LBE443:
 1571              	.LBE450:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1572              		.loc 4 389 3 view .LVU439
 1573              	.LBB451:
 1574              	.LBB448:
 1575              	.LBB444:
 1576              	.LBI444:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1577              		.loc 5 140 27 view .LVU440
 1578              	.LBB445:
 1579              		.loc 5 142 3 view .LVU441
 1580              	.LBE445:
 1581              	.LBE444:
 1582              	.LBE448:
 1583              	.LBE451:
 651:lib/chibios/os/rt/src/chthreads.c **** 
 1584              		.loc 1 651 37 is_stmt 0 view .LVU442
 1585 0000 10B5     		push	{r4, lr}
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 4, -8
 1588              		.cfi_offset 14, -4
 651:lib/chibios/os/rt/src/chthreads.c **** 
 1589              		.loc 1 651 37 view .LVU443
 1590 0002 0100     		movs	r1, r0
 1591              	.LBB452:
 1592              	.LBB449:
 1593              	.LBB447:
 1594              	.LBB446:
 1595              		.loc 5 142 3 view .LVU444
 1596              		.syntax divided
 1597              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1598 0004 72B6     		cpsid i
 1599              	@ 0 "" 2
 1600              		.thumb
 1601              		.syntax unified
 1602              	.LBE446:
 1603              	.LBE447:
 1604              	.LBE449:
 1605              	.LBE452:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1606              		.loc 3 356 34 is_stmt 1 view .LVU445
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1607              		.loc 3 357 20 view .LVU446
 654:lib/chibios/os/rt/src/chthreads.c ****   chThdSleepS(time);
 1608              		.loc 1 654 3 view .LVU447
 1609              	.LVL66:
 1610              	.LBB453:
 1611              	.LBI453:
 1612              		.file 6 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  */
  91:./lib/chibios/os/rt/include/chthreads.h **** /**
  92:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  94:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  95:./lib/chibios/os/rt/include/chthreads.h ****  *
  96:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  97:./lib/chibios/os/rt/include/chthreads.h ****  */
  98:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {(thread_t *)&name, (thread_t *)&name}
  99:./lib/chibios/os/rt/include/chthreads.h **** 
 100:./lib/chibios/os/rt/include/chthreads.h **** /**
 101:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 103:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 104:./lib/chibios/os/rt/include/chthreads.h ****  *
 105:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 106:./lib/chibios/os/rt/include/chthreads.h ****  */
 107:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DECL(name)                                           \
 108:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 109:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 110:./lib/chibios/os/rt/include/chthreads.h **** 
 111:./lib/chibios/os/rt/include/chthreads.h **** /**
 112:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 113:./lib/chibios/os/rt/include/chthreads.h ****  */
 114:./lib/chibios/os/rt/include/chthreads.h **** /**
 115:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 116:./lib/chibios/os/rt/include/chthreads.h ****  *
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 118:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 119:./lib/chibios/os/rt/include/chthreads.h ****  *
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 121:./lib/chibios/os/rt/include/chthreads.h ****  */
 122:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 123:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 124:./lib/chibios/os/rt/include/chthreads.h **** 
 125:./lib/chibios/os/rt/include/chthreads.h **** /**
 126:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 127:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 128:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 129:./lib/chibios/os/rt/include/chthreads.h ****  *
 130:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 131:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 132:./lib/chibios/os/rt/include/chthreads.h ****  *
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 134:./lib/chibios/os/rt/include/chthreads.h ****  */
 135:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 136:./lib/chibios/os/rt/include/chthreads.h **** 
 137:./lib/chibios/os/rt/include/chthreads.h **** /**
 138:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 139:./lib/chibios/os/rt/include/chthreads.h ****  *
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 141:./lib/chibios/os/rt/include/chthreads.h ****  */
 142:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 143:./lib/chibios/os/rt/include/chthreads.h **** 
 144:./lib/chibios/os/rt/include/chthreads.h **** /**
 145:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 146:./lib/chibios/os/rt/include/chthreads.h ****  *
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 148:./lib/chibios/os/rt/include/chthreads.h ****  */
 149:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 150:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 151:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 152:./lib/chibios/os/rt/include/chthreads.h **** 
 153:./lib/chibios/os/rt/include/chthreads.h **** /**
 154:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 155:./lib/chibios/os/rt/include/chthreads.h ****  */
 156:./lib/chibios/os/rt/include/chthreads.h **** /**
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 158:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 159:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 160:./lib/chibios/os/rt/include/chthreads.h ****  */
 161:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 162:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 163:./lib/chibios/os/rt/include/chthreads.h **** 
 164:./lib/chibios/os/rt/include/chthreads.h **** /**
 165:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 166:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 167:./lib/chibios/os/rt/include/chthreads.h ****  */
 168:./lib/chibios/os/rt/include/chthreads.h **** /**
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 170:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 171:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 175:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 176:./lib/chibios/os/rt/include/chthreads.h ****  *
 177:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 178:./lib/chibios/os/rt/include/chthreads.h ****  *
 179:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 180:./lib/chibios/os/rt/include/chthreads.h ****  */
 181:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 182:./lib/chibios/os/rt/include/chthreads.h **** 
 183:./lib/chibios/os/rt/include/chthreads.h **** /**
 184:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 185:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 186:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 187:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 188:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 191:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 192:./lib/chibios/os/rt/include/chthreads.h ****  *
 193:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 194:./lib/chibios/os/rt/include/chthreads.h ****  *
 195:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 196:./lib/chibios/os/rt/include/chthreads.h ****  */
 197:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 198:./lib/chibios/os/rt/include/chthreads.h **** 
 199:./lib/chibios/os/rt/include/chthreads.h **** /**
 200:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 201:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 202:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 203:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 204:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chthreads.h ****  *
 209:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 210:./lib/chibios/os/rt/include/chthreads.h ****  *
 211:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 212:./lib/chibios/os/rt/include/chthreads.h ****  */
 213:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 214:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 215:./lib/chibios/os/rt/include/chthreads.h **** 
 216:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 217:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 218:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 219:./lib/chibios/os/rt/include/chthreads.h **** 
 220:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 221:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 222:./lib/chibios/os/rt/include/chthreads.h **** #endif
 223:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 224:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 225:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 226:./lib/chibios/os/rt/include/chthreads.h **** #endif
 227:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 228:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 229:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 232:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 234:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 235:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 236:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #endif
 238:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 240:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 241:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 242:./lib/chibios/os/rt/include/chthreads.h **** #endif
 243:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 244:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 246:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 248:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 249:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 250:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 255:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 257:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 258:./lib/chibios/os/rt/include/chthreads.h **** }
 259:./lib/chibios/os/rt/include/chthreads.h **** #endif
 260:./lib/chibios/os/rt/include/chthreads.h **** 
 261:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 262:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 263:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 264:./lib/chibios/os/rt/include/chthreads.h **** 
 265:./lib/chibios/os/rt/include/chthreads.h ****  /**
 266:./lib/chibios/os/rt/include/chthreads.h ****   * @brief   Returns a pointer to the current @p thread_t.
 267:./lib/chibios/os/rt/include/chthreads.h ****   *
 268:./lib/chibios/os/rt/include/chthreads.h ****   * @return             A pointer to the current thread.
 269:./lib/chibios/os/rt/include/chthreads.h ****   *
 270:./lib/chibios/os/rt/include/chthreads.h ****   * @xclass
 271:./lib/chibios/os/rt/include/chthreads.h ****   */
 272:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 273:./lib/chibios/os/rt/include/chthreads.h **** 
 274:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 275:./lib/chibios/os/rt/include/chthreads.h **** }
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h **** /**
 278:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 279:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 280:./lib/chibios/os/rt/include/chthreads.h ****  *
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  *
 283:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 284:./lib/chibios/os/rt/include/chthreads.h ****  */
 285:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 286:./lib/chibios/os/rt/include/chthreads.h **** 
 287:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->prio;
 288:./lib/chibios/os/rt/include/chthreads.h **** }
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h **** /**
 291:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 292:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 293:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 294:./lib/chibios/os/rt/include/chthreads.h ****  *
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 296:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 299:./lib/chibios/os/rt/include/chthreads.h ****  */
 300:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 301:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 302:./lib/chibios/os/rt/include/chthreads.h **** 
 303:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 304:./lib/chibios/os/rt/include/chthreads.h **** }
 305:./lib/chibios/os/rt/include/chthreads.h **** #endif
 306:./lib/chibios/os/rt/include/chthreads.h **** 
 307:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 308:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 309:./lib/chibios/os/rt/include/chthreads.h **** /**
 310:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 311:./lib/chibios/os/rt/include/chthreads.h ****  *
 312:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 316:./lib/chibios/os/rt/include/chthreads.h ****  */
 317:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 318:./lib/chibios/os/rt/include/chthreads.h **** 
 319:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 320:./lib/chibios/os/rt/include/chthreads.h **** }
 321:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 322:./lib/chibios/os/rt/include/chthreads.h **** 
 323:./lib/chibios/os/rt/include/chthreads.h **** /**
 324:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 325:./lib/chibios/os/rt/include/chthreads.h ****  *
 326:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 328:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 329:./lib/chibios/os/rt/include/chthreads.h ****  *
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 331:./lib/chibios/os/rt/include/chthreads.h ****  */
 332:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 333:./lib/chibios/os/rt/include/chthreads.h **** 
 334:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 335:./lib/chibios/os/rt/include/chthreads.h **** }
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h **** /**
 338:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 339:./lib/chibios/os/rt/include/chthreads.h ****  *
 340:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 344:./lib/chibios/os/rt/include/chthreads.h ****  */
 345:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 346:./lib/chibios/os/rt/include/chthreads.h **** 
 347:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 348:./lib/chibios/os/rt/include/chthreads.h **** }
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h **** /**
 351:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 352:./lib/chibios/os/rt/include/chthreads.h ****  *
 353:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 355:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 356:./lib/chibios/os/rt/include/chthreads.h ****  *
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 358:./lib/chibios/os/rt/include/chthreads.h ****  */
 359:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 360:./lib/chibios/os/rt/include/chthreads.h **** 
 361:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 362:./lib/chibios/os/rt/include/chthreads.h **** 
 363:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 364:./lib/chibios/os/rt/include/chthreads.h **** }
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h **** /**
 367:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 368:./lib/chibios/os/rt/include/chthreads.h ****  *
 369:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 370:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 371:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 372:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 375:./lib/chibios/os/rt/include/chthreads.h ****  *
 376:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 377:./lib/chibios/os/rt/include/chthreads.h ****  */
 378:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 1613              		.loc 6 378 20 view .LVU448
 1614              	.LBB454:
 379:./lib/chibios/os/rt/include/chthreads.h **** 
 380:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 1615              		.loc 6 380 3 view .LVU449
 1616              		.loc 6 380 3 view .LVU450
 381:./lib/chibios/os/rt/include/chthreads.h **** 
 382:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 1617              		.loc 6 382 3 view .LVU451
 1618              		.loc 6 382 10 is_stmt 0 view .LVU452
 1619 0006 0820     		movs	r0, #8
 1620              	.LVL67:
 1621              		.loc 6 382 10 view .LVU453
 1622 0008 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1623              	.LVL68:
 1624              		.loc 6 382 10 view .LVU454
 1625              	.LBE454:
 1626              	.LBE453:
 655:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1627              		.loc 1 655 3 is_stmt 1 view .LVU455
 1628              	.LBB455:
 1629              	.LBI455:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1630              		.loc 3 365 20 view .LVU456
 1631              	.LBB456:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1632              		.loc 3 367 22 view .LVU457
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1633              		.loc 3 368 33 view .LVU458
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1634              		.loc 3 374 3 view .LVU459
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1635              		.loc 3 374 3 view .LVU460
 1636              		.loc 3 378 3 view .LVU461
 1637              	.LBB457:
 1638              	.LBI457:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1639              		.loc 4 396 20 view .LVU462
 1640              	.LBE457:
 1641              	.LBE456:
 1642              	.LBE455:
 1643              		.loc 4 398 3 view .LVU463
 1644              	.LBB462:
 1645              	.LBB461:
 1646              	.LBB460:
 1647              	.LBB458:
 1648              	.LBI458:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1649              		.loc 5 129 27 view .LVU464
 1650              	.LBB459:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1651              		.loc 5 131 3 view .LVU465
 1652              		.syntax divided
 1653              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1654 000c 62B6     		cpsie i
 1655              	@ 0 "" 2
 1656              		.thumb
 1657              		.syntax unified
 1658              	.LBE459:
 1659              	.LBE458:
 1660              	.LBE460:
 1661              	.LBE461:
 1662              	.LBE462:
 656:lib/chibios/os/rt/src/chthreads.c **** }
 1663              		.loc 1 656 1 is_stmt 0 view .LVU466
 1664              		@ sp needed
 1665 000e 10BD     		pop	{r4, pc}
 1666              		.cfi_endproc
 1667              	.LFE168:
 1669              		.section	.text.chThdSleepUntil,"ax",%progbits
 1670              		.align	1
 1671              		.global	chThdSleepUntil
 1672              		.syntax unified
 1673              		.code	16
 1674              		.thumb_func
 1675              		.fpu softvfp
 1677              	chThdSleepUntil:
 1678              	.LVL69:
 1679              	.LFB169:
 657:lib/chibios/os/rt/src/chthreads.c **** 
 658:lib/chibios/os/rt/src/chthreads.c **** /**
 659:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 660:lib/chibios/os/rt/src/chthreads.c ****  *          specified value.
 661:lib/chibios/os/rt/src/chthreads.c ****  * @note    The function has no concept of "past", all specifiable times
 662:lib/chibios/os/rt/src/chthreads.c ****  *          are in the future, this means that if you call this function
 663:lib/chibios/os/rt/src/chthreads.c ****  *          exceeding your calculated intervals then the function will
 664:lib/chibios/os/rt/src/chthreads.c ****  *          return in a far future time, not immediately.
 665:lib/chibios/os/rt/src/chthreads.c ****  * @see     chThdSleepUntilWindowed()
 666:lib/chibios/os/rt/src/chthreads.c ****  *
 667:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] time      absolute system time
 668:lib/chibios/os/rt/src/chthreads.c ****  *
 669:lib/chibios/os/rt/src/chthreads.c ****  * @api
 670:lib/chibios/os/rt/src/chthreads.c ****  */
 671:lib/chibios/os/rt/src/chthreads.c **** void chThdSleepUntil(systime_t time) {
 1680              		.loc 1 671 38 is_stmt 1 view -0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 672:lib/chibios/os/rt/src/chthreads.c ****   sysinterval_t interval;
 1684              		.loc 1 672 3 view .LVU468
 673:lib/chibios/os/rt/src/chthreads.c **** 
 674:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1685              		.loc 1 674 3 view .LVU469
 1686              	.LBB480:
 1687              	.LBI480:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1688              		.loc 3 353 20 view .LVU470
 1689              	.LBE480:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1690              		.loc 3 355 3 view .LVU471
 1691              	.LBB488:
 1692              	.LBB481:
 1693              	.LBI481:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1694              		.loc 4 387 20 view .LVU472
 1695              	.LBE481:
 1696              	.LBE488:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1697              		.loc 4 389 3 view .LVU473
 1698              	.LBB489:
 1699              	.LBB486:
 1700              	.LBB482:
 1701              	.LBI482:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1702              		.loc 5 140 27 view .LVU474
 1703              	.LBB483:
 1704              		.loc 5 142 3 view .LVU475
 1705              	.LBE483:
 1706              	.LBE482:
 1707              	.LBE486:
 1708              	.LBE489:
 671:lib/chibios/os/rt/src/chthreads.c ****   sysinterval_t interval;
 1709              		.loc 1 671 38 is_stmt 0 view .LVU476
 1710 0000 10B5     		push	{r4, lr}
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 4, -8
 1713              		.cfi_offset 14, -4
 1714              	.LBB490:
 1715              	.LBB487:
 1716              	.LBB485:
 1717              	.LBB484:
 1718              		.loc 5 142 3 view .LVU477
 1719              		.syntax divided
 1720              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1721 0002 72B6     		cpsid i
 1722              	@ 0 "" 2
 1723              		.thumb
 1724              		.syntax unified
 1725              	.LBE484:
 1726              	.LBE485:
 1727              	.LBE487:
 1728              	.LBE490:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1729              		.loc 3 356 34 is_stmt 1 view .LVU478
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1730              		.loc 3 357 20 view .LVU479
 675:lib/chibios/os/rt/src/chthreads.c ****   interval = chTimeDiffX(chVTGetSystemTimeX(), time);
 1731              		.loc 1 675 3 view .LVU480
 1732              	.LBB491:
 1733              	.LBI491:
 1734              		.file 7 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  79:./lib/chibios/os/rt/include/chvt.h **** }
  80:./lib/chibios/os/rt/include/chvt.h **** #endif
  81:./lib/chibios/os/rt/include/chvt.h **** 
  82:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  83:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  84:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chvt.h **** 
  86:./lib/chibios/os/rt/include/chvt.h **** /**
  87:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  88:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  89:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  90:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  91:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  92:./lib/chibios/os/rt/include/chvt.h ****  *
  93:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  94:./lib/chibios/os/rt/include/chvt.h ****  *
  95:./lib/chibios/os/rt/include/chvt.h ****  * @init
  96:./lib/chibios/os/rt/include/chvt.h ****  */
  97:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  98:./lib/chibios/os/rt/include/chvt.h **** 
  99:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 100:./lib/chibios/os/rt/include/chvt.h **** }
 101:./lib/chibios/os/rt/include/chvt.h **** 
 102:./lib/chibios/os/rt/include/chvt.h **** /**
 103:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 104:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 105:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 106:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 108:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 109:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 110:./lib/chibios/os/rt/include/chvt.h ****  *
 111:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 112:./lib/chibios/os/rt/include/chvt.h ****  *
 113:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 114:./lib/chibios/os/rt/include/chvt.h ****  */
 115:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 1735              		.loc 7 115 25 view .LVU481
 1736              	.LBE491:
 116:./lib/chibios/os/rt/include/chvt.h **** 
 117:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 118:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 119:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 120:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 1737              		.loc 7 120 3 view .LVU482
 1738              	.LBB496:
 1739              	.LBB492:
 1740              	.LBI492:
 1741              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @file    chcore_timer.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   System timer header file.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @addtogroup ARMCMx_TIMER
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #define CHCORE_TIMER_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* This is the only header in the HAL designed to be include-able alone.*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #include "hal_st.h"
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Derived constants and error checks.                                       */
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module data structures and types.                                         */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module macros.                                                            */
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* External declarations.                                                    */
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module inline functions.                                                  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Starts the alarm.
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *          this call.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStartAlarm(time);
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStopAlarm();
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Sets the alarm time.
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stSetAlarm(time);
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Returns the system time.
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @return              The system time.
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 1742              		.loc 8 105 25 view .LVU483
 1743              	.LBE492:
 1744              	.LBE496:
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   return stGetCounter();
 1745              		.loc 8 107 3 view .LVU484
 1746              	.LBB497:
 1747              	.LBB495:
 1748              	.LBB493:
 1749              	.LBI493:
 1750              		.file 9 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h"
   1:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*
   2:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   4:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   8:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  10:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     limitations under the License.
  15:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** */
  16:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  17:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  18:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @file    TIMv1/hal_st_lld.h
  19:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   ST Driver subsystem low level driver header.
  20:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @details This header is designed to be include-able without having to
  21:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          include other files from the HAL.
  22:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
  23:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @addtogroup ST
  24:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  25:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  26:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  27:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifndef HAL_ST_LLD_H
  28:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define HAL_ST_LLD_H
  29:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  30:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "mcuconf.h"
  31:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_registry.h"
  32:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_tim.h"
  33:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  34:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver constants.                                                         */
  36:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  38:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  39:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver pre-compile time settings.                                         */
  40:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  41:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  42:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  43:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @name    Configuration options
  44:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  45:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  46:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  47:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   SysTick timer IRQ priority.
  48:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  49:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_IRQ_PRIORITY) || defined(__DOXYGEN__)
  50:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_IRQ_PRIORITY               8
  51:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  52:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  53:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  54:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   TIMx unit (by number) to be used for free running operations.
  55:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    You must select a 32 bits timer if a 32 bits @p systick_t type
  56:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          is required.
  57:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    Timers 2, 3, 4 and 5 are supported.
  58:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  59:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_USE_TIMER) || defined(__DOXYGEN__)
  60:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_USE_TIMER                  2
  61:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  62:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /** @} */
  63:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  64:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  65:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Derived constants and error checks.                                       */
  66:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  67:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  68:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM2)
  69:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM2                      FALSE
  70:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  71:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  72:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM3)
  73:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM3                      FALSE
  74:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  75:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  76:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM4)
  77:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM4                      FALSE
  78:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  79:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  80:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM5)
  81:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM5                      FALSE
  82:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  83:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  84:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM21)
  85:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM21                     FALSE
  86:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  87:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  88:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_HAS_TIM22)
  89:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_HAS_TIM22                     FALSE
  90:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  91:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  92:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if STM32_ST_USE_TIMER == 2
  93:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM2
  94:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  95:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 3
  96:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM3
  97:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  98:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 4
  99:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM4
 100:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 101:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 5
 102:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM5
 103:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 104:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 21
 105:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM21
 106:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 107:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 22
 108:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                        STM32_TIM22
 109:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 110:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #else
 111:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "STM32_ST_USE_TIMER specifies an unsupported timer"
 112:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 113:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 114:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver data structures and types.                                         */
 116:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 117:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 118:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 119:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver macros.                                                            */
 120:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 121:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 122:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 123:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* External declarations.                                                    */
 124:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 125:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 126:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 127:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** extern "C" {
 128:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 129:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   void st_lld_init(void);
 130:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 131:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** }
 132:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 133:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 134:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 135:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver inline functions.                                                  */
 136:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 137:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 138:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
 139:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the time counter value.
 140:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 141:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @return              The counter value.
 142:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 143:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 144:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_counter(void) {
 1751              		.loc 9 145 25 view .LVU485
 1752              	.LBB494:
 146:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 147:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   return (systime_t)STM32_ST_TIM->CNT;
 1753              		.loc 9 147 3 view .LVU486
 1754              		.loc 9 147 10 is_stmt 0 view .LVU487
 1755 0004 8023     		movs	r3, #128
 1756 0006 DB05     		lsls	r3, r3, #23
 1757 0008 596A     		ldr	r1, [r3, #36]
 1758              	.LVL70:
 1759              		.loc 9 147 10 view .LVU488
 1760              	.LBE494:
 1761              	.LBE493:
 1762              	.LBE495:
 1763              	.LBE497:
 1764              	.LBB498:
 1765              	.LBI498:
 1766              		.file 10 "./lib/chibios/os/rt/include/chtime.h"
   1:./lib/chibios/os/rt/include/chtime.h **** /*
   2:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chtime.h **** 
   4:./lib/chibios/os/rt/include/chtime.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chtime.h **** 
   6:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chtime.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chtime.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chtime.h **** 
  11:./lib/chibios/os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chtime.h **** 
  16:./lib/chibios/os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chtime.h **** */
  19:./lib/chibios/os/rt/include/chtime.h **** 
  20:./lib/chibios/os/rt/include/chtime.h **** /**
  21:./lib/chibios/os/rt/include/chtime.h ****  * @file    chtime.h
  22:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:./lib/chibios/os/rt/include/chtime.h ****  *
  24:./lib/chibios/os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:./lib/chibios/os/rt/include/chtime.h ****  * @details This module is responsible for handling of system time and time
  26:./lib/chibios/os/rt/include/chtime.h ****  *          intervals.
  27:./lib/chibios/os/rt/include/chtime.h ****  * @{
  28:./lib/chibios/os/rt/include/chtime.h ****  */
  29:./lib/chibios/os/rt/include/chtime.h **** 
  30:./lib/chibios/os/rt/include/chtime.h **** #ifndef CHTIME_H
  31:./lib/chibios/os/rt/include/chtime.h **** #define CHTIME_H
  32:./lib/chibios/os/rt/include/chtime.h **** 
  33:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chtime.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chtime.h **** 
  37:./lib/chibios/os/rt/include/chtime.h **** /**
  38:./lib/chibios/os/rt/include/chtime.h ****  * @name    Special time constants
  39:./lib/chibios/os/rt/include/chtime.h ****  * @{
  40:./lib/chibios/os/rt/include/chtime.h ****  */
  41:./lib/chibios/os/rt/include/chtime.h **** /**
  42:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  43:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  44:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  45:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  46:./lib/chibios/os/rt/include/chtime.h ****  */
  47:./lib/chibios/os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  48:./lib/chibios/os/rt/include/chtime.h **** 
  49:./lib/chibios/os/rt/include/chtime.h **** /**
  50:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  51:./lib/chibios/os/rt/include/chtime.h ****  *          specification.
  52:./lib/chibios/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  53:./lib/chibios/os/rt/include/chtime.h ****  *          see the specific function documentation.
  54:./lib/chibios/os/rt/include/chtime.h ****  */
  55:./lib/chibios/os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  56:./lib/chibios/os/rt/include/chtime.h **** 
  57:./lib/chibios/os/rt/include/chtime.h **** /**
  58:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  59:./lib/chibios/os/rt/include/chtime.h ****  */
  60:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  61:./lib/chibios/os/rt/include/chtime.h **** 
  62:./lib/chibios/os/rt/include/chtime.h **** /**
  63:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  64:./lib/chibios/os/rt/include/chtime.h ****  */
  65:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  66:./lib/chibios/os/rt/include/chtime.h **** /** @} */
  67:./lib/chibios/os/rt/include/chtime.h **** 
  68:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  69:./lib/chibios/os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  70:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  71:./lib/chibios/os/rt/include/chtime.h **** 
  72:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  73:./lib/chibios/os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
  74:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  75:./lib/chibios/os/rt/include/chtime.h **** 
  76:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
  77:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
  78:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
  79:./lib/chibios/os/rt/include/chtime.h **** #endif
  80:./lib/chibios/os/rt/include/chtime.h **** 
  81:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
  82:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
  83:./lib/chibios/os/rt/include/chtime.h **** #endif
  84:./lib/chibios/os/rt/include/chtime.h **** 
  85:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
  86:./lib/chibios/os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
  87:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
  88:./lib/chibios/os/rt/include/chtime.h **** #endif
  89:./lib/chibios/os/rt/include/chtime.h **** 
  90:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
  91:./lib/chibios/os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
  92:./lib/chibios/os/rt/include/chtime.h **** #endif
  93:./lib/chibios/os/rt/include/chtime.h **** 
  94:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
  95:./lib/chibios/os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
  96:./lib/chibios/os/rt/include/chtime.h **** #endif
  97:./lib/chibios/os/rt/include/chtime.h **** 
  98:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
  99:./lib/chibios/os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 100:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 101:./lib/chibios/os/rt/include/chtime.h **** 
 102:./lib/chibios/os/rt/include/chtime.h **** /**
 103:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of system time.
 104:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 105:./lib/chibios/os/rt/include/chtime.h ****  */
 106:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 107:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t systime_t;
 108:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 109:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t systime_t;
 110:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 111:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t systime_t;
 112:./lib/chibios/os/rt/include/chtime.h **** #endif
 113:./lib/chibios/os/rt/include/chtime.h **** 
 114:./lib/chibios/os/rt/include/chtime.h **** /**
 115:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time interval.
 116:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 117:./lib/chibios/os/rt/include/chtime.h ****  */
 118:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 119:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 120:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 121:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 122:./lib/chibios/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 123:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 124:./lib/chibios/os/rt/include/chtime.h **** #endif
 125:./lib/chibios/os/rt/include/chtime.h **** 
 126:./lib/chibios/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 127:./lib/chibios/os/rt/include/chtime.h **** /**
 128:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of seconds.
 129:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 130:./lib/chibios/os/rt/include/chtime.h ****  */
 131:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 132:./lib/chibios/os/rt/include/chtime.h **** 
 133:./lib/chibios/os/rt/include/chtime.h **** /**
 134:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 135:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 136:./lib/chibios/os/rt/include/chtime.h ****  */
 137:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 138:./lib/chibios/os/rt/include/chtime.h **** 
 139:./lib/chibios/os/rt/include/chtime.h **** /**
 140:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 141:./lib/chibios/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 142:./lib/chibios/os/rt/include/chtime.h ****  */
 143:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 144:./lib/chibios/os/rt/include/chtime.h **** 
 145:./lib/chibios/os/rt/include/chtime.h **** /**
 146:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 147:./lib/chibios/os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 148:./lib/chibios/os/rt/include/chtime.h ****  *          only used internally for conversions.
 149:./lib/chibios/os/rt/include/chtime.h ****  */
 150:./lib/chibios/os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 151:./lib/chibios/os/rt/include/chtime.h **** 
 152:./lib/chibios/os/rt/include/chtime.h **** #else
 153:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 154:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 155:./lib/chibios/os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 156:./lib/chibios/os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 157:./lib/chibios/os/rt/include/chtime.h **** #endif
 158:./lib/chibios/os/rt/include/chtime.h **** 
 159:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 160:./lib/chibios/os/rt/include/chtime.h **** /* Module macros.                                                            */
 161:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 162:./lib/chibios/os/rt/include/chtime.h **** 
 163:./lib/chibios/os/rt/include/chtime.h **** /**
 164:./lib/chibios/os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 165:./lib/chibios/os/rt/include/chtime.h ****  * @{
 166:./lib/chibios/os/rt/include/chtime.h ****  */
 167:./lib/chibios/os/rt/include/chtime.h **** /**
 168:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 169:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 170:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 171:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 172:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 173:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 174:./lib/chibios/os/rt/include/chtime.h ****  *
 175:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 176:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 177:./lib/chibios/os/rt/include/chtime.h ****  *
 178:./lib/chibios/os/rt/include/chtime.h ****  * @api
 179:./lib/chibios/os/rt/include/chtime.h ****  */
 180:./lib/chibios/os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 181:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 182:./lib/chibios/os/rt/include/chtime.h **** 
 183:./lib/chibios/os/rt/include/chtime.h **** /**
 184:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 185:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 186:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 187:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 188:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 189:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 190:./lib/chibios/os/rt/include/chtime.h ****  *
 191:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 192:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 193:./lib/chibios/os/rt/include/chtime.h ****  *
 194:./lib/chibios/os/rt/include/chtime.h ****  * @api
 195:./lib/chibios/os/rt/include/chtime.h ****  */
 196:./lib/chibios/os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 197:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 198:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 199:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 200:./lib/chibios/os/rt/include/chtime.h **** 
 201:./lib/chibios/os/rt/include/chtime.h **** /**
 202:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 203:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 204:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 205:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chtime.h ****  *
 209:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 210:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 211:./lib/chibios/os/rt/include/chtime.h ****  *
 212:./lib/chibios/os/rt/include/chtime.h ****  * @api
 213:./lib/chibios/os/rt/include/chtime.h ****  */
 214:./lib/chibios/os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 215:./lib/chibios/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 216:./lib/chibios/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 217:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 218:./lib/chibios/os/rt/include/chtime.h **** 
 219:./lib/chibios/os/rt/include/chtime.h **** /**
 220:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 221:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 222:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 223:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 224:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 225:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 226:./lib/chibios/os/rt/include/chtime.h ****  *
 227:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 228:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 229:./lib/chibios/os/rt/include/chtime.h ****  *
 230:./lib/chibios/os/rt/include/chtime.h ****  * @api
 231:./lib/chibios/os/rt/include/chtime.h ****  */
 232:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 233:./lib/chibios/os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 234:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 235:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 236:./lib/chibios/os/rt/include/chtime.h **** 
 237:./lib/chibios/os/rt/include/chtime.h **** /**
 238:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 239:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 240:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 241:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 242:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 243:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 244:./lib/chibios/os/rt/include/chtime.h ****  *
 245:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 246:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 247:./lib/chibios/os/rt/include/chtime.h ****  *
 248:./lib/chibios/os/rt/include/chtime.h ****  * @api
 249:./lib/chibios/os/rt/include/chtime.h ****  */
 250:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 251:./lib/chibios/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 252:./lib/chibios/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 253:./lib/chibios/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 254:./lib/chibios/os/rt/include/chtime.h **** 
 255:./lib/chibios/os/rt/include/chtime.h **** /**
 256:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 257:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 258:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 259:./lib/chibios/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 260:./lib/chibios/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 261:./lib/chibios/os/rt/include/chtime.h ****  *          converted.
 262:./lib/chibios/os/rt/include/chtime.h ****  *
 263:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 264:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 265:./lib/chibios/os/rt/include/chtime.h ****  *
 266:./lib/chibios/os/rt/include/chtime.h ****  * @api
 267:./lib/chibios/os/rt/include/chtime.h ****  */
 268:./lib/chibios/os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 269:./lib/chibios/os/rt/include/chtime.h ****     (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +      \
 270:./lib/chibios/os/rt/include/chtime.h ****                     (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /    \
 271:./lib/chibios/os/rt/include/chtime.h ****                    (time_conv_t)CH_CFG_ST_FREQUENCY)
 272:./lib/chibios/os/rt/include/chtime.h **** /** @} */
 273:./lib/chibios/os/rt/include/chtime.h **** 
 274:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chtime.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chtime.h **** 
 278:./lib/chibios/os/rt/include/chtime.h **** /*
 279:./lib/chibios/os/rt/include/chtime.h ****  * Virtual Timers APIs.
 280:./lib/chibios/os/rt/include/chtime.h ****  */
 281:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 282:./lib/chibios/os/rt/include/chtime.h **** extern "C" {
 283:./lib/chibios/os/rt/include/chtime.h **** #endif
 284:./lib/chibios/os/rt/include/chtime.h **** 
 285:./lib/chibios/os/rt/include/chtime.h **** #ifdef __cplusplus
 286:./lib/chibios/os/rt/include/chtime.h **** }
 287:./lib/chibios/os/rt/include/chtime.h **** #endif
 288:./lib/chibios/os/rt/include/chtime.h **** 
 289:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 290:./lib/chibios/os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 291:./lib/chibios/os/rt/include/chtime.h **** /*===========================================================================*/
 292:./lib/chibios/os/rt/include/chtime.h **** 
 293:./lib/chibios/os/rt/include/chtime.h **** /**
 294:./lib/chibios/os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 295:./lib/chibios/os/rt/include/chtime.h ****  * @{
 296:./lib/chibios/os/rt/include/chtime.h ****  */
 297:./lib/chibios/os/rt/include/chtime.h **** /**
 298:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 299:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 300:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 301:./lib/chibios/os/rt/include/chtime.h ****  *
 302:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 303:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 304:./lib/chibios/os/rt/include/chtime.h ****  *
 305:./lib/chibios/os/rt/include/chtime.h ****  * @special
 306:./lib/chibios/os/rt/include/chtime.h ****  */
 307:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 308:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 309:./lib/chibios/os/rt/include/chtime.h **** 
 310:./lib/chibios/os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 311:./lib/chibios/os/rt/include/chtime.h **** 
 312:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 313:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 314:./lib/chibios/os/rt/include/chtime.h **** 
 315:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 316:./lib/chibios/os/rt/include/chtime.h **** }
 317:./lib/chibios/os/rt/include/chtime.h **** 
 318:./lib/chibios/os/rt/include/chtime.h **** /**
 319:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 320:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 321:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 322:./lib/chibios/os/rt/include/chtime.h ****  *
 323:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 324:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 325:./lib/chibios/os/rt/include/chtime.h ****  *
 326:./lib/chibios/os/rt/include/chtime.h ****  * @special
 327:./lib/chibios/os/rt/include/chtime.h ****  */
 328:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 329:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 330:./lib/chibios/os/rt/include/chtime.h **** 
 331:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 332:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 333:./lib/chibios/os/rt/include/chtime.h **** 
 334:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 335:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 336:./lib/chibios/os/rt/include/chtime.h **** 
 337:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 338:./lib/chibios/os/rt/include/chtime.h **** }
 339:./lib/chibios/os/rt/include/chtime.h **** 
 340:./lib/chibios/os/rt/include/chtime.h **** /**
 341:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 342:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 343:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 344:./lib/chibios/os/rt/include/chtime.h ****  *
 345:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 346:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of ticks.
 347:./lib/chibios/os/rt/include/chtime.h ****  *
 348:./lib/chibios/os/rt/include/chtime.h ****  * @special
 349:./lib/chibios/os/rt/include/chtime.h ****  */
 350:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 351:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t ticks;
 352:./lib/chibios/os/rt/include/chtime.h **** 
 353:./lib/chibios/os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 354:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 355:./lib/chibios/os/rt/include/chtime.h **** 
 356:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 357:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 358:./lib/chibios/os/rt/include/chtime.h **** 
 359:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 360:./lib/chibios/os/rt/include/chtime.h **** }
 361:./lib/chibios/os/rt/include/chtime.h **** 
 362:./lib/chibios/os/rt/include/chtime.h **** /**
 363:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 364:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 365:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 366:./lib/chibios/os/rt/include/chtime.h ****  *
 367:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 368:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of seconds.
 369:./lib/chibios/os/rt/include/chtime.h ****  *
 370:./lib/chibios/os/rt/include/chtime.h ****  * @special
 371:./lib/chibios/os/rt/include/chtime.h ****  */
 372:./lib/chibios/os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 373:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t secs;
 374:./lib/chibios/os/rt/include/chtime.h **** 
 375:./lib/chibios/os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 376:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 377:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 378:./lib/chibios/os/rt/include/chtime.h **** 
 379:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 380:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 381:./lib/chibios/os/rt/include/chtime.h **** 
 382:./lib/chibios/os/rt/include/chtime.h ****   return (time_secs_t)secs;
 383:./lib/chibios/os/rt/include/chtime.h **** }
 384:./lib/chibios/os/rt/include/chtime.h **** 
 385:./lib/chibios/os/rt/include/chtime.h **** /**
 386:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 387:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 388:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 389:./lib/chibios/os/rt/include/chtime.h ****  *
 390:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 391:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 392:./lib/chibios/os/rt/include/chtime.h ****  *
 393:./lib/chibios/os/rt/include/chtime.h ****  * @special
 394:./lib/chibios/os/rt/include/chtime.h ****  */
 395:./lib/chibios/os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 396:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t msecs;
 397:./lib/chibios/os/rt/include/chtime.h **** 
 398:./lib/chibios/os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 399:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 400:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 401:./lib/chibios/os/rt/include/chtime.h **** 
 402:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 403:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 404:./lib/chibios/os/rt/include/chtime.h **** 
 405:./lib/chibios/os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 406:./lib/chibios/os/rt/include/chtime.h **** }
 407:./lib/chibios/os/rt/include/chtime.h **** 
 408:./lib/chibios/os/rt/include/chtime.h **** /**
 409:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 410:./lib/chibios/os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 411:./lib/chibios/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 412:./lib/chibios/os/rt/include/chtime.h ****  *
 413:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/rt/include/chtime.h ****  *
 416:./lib/chibios/os/rt/include/chtime.h ****  * @special
 417:./lib/chibios/os/rt/include/chtime.h ****  */
 418:./lib/chibios/os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 419:./lib/chibios/os/rt/include/chtime.h ****   time_conv_t usecs;
 420:./lib/chibios/os/rt/include/chtime.h **** 
 421:./lib/chibios/os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 422:./lib/chibios/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 423:./lib/chibios/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 424:./lib/chibios/os/rt/include/chtime.h **** 
 425:./lib/chibios/os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 426:./lib/chibios/os/rt/include/chtime.h ****               "conversion overflow");
 427:./lib/chibios/os/rt/include/chtime.h **** 
 428:./lib/chibios/os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 429:./lib/chibios/os/rt/include/chtime.h **** }
 430:./lib/chibios/os/rt/include/chtime.h **** 
 431:./lib/chibios/os/rt/include/chtime.h **** /**
 432:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 433:./lib/chibios/os/rt/include/chtime.h ****  *
 434:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] systime   base system time
 435:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 436:./lib/chibios/os/rt/include/chtime.h ****  * @return              The new system time.
 437:./lib/chibios/os/rt/include/chtime.h ****  *
 438:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 439:./lib/chibios/os/rt/include/chtime.h ****  */
 440:./lib/chibios/os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 441:./lib/chibios/os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 442:./lib/chibios/os/rt/include/chtime.h **** 
 443:./lib/chibios/os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 444:./lib/chibios/os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)TIME_MAX_SYSTIME);
 445:./lib/chibios/os/rt/include/chtime.h **** #endif
 446:./lib/chibios/os/rt/include/chtime.h **** 
 447:./lib/chibios/os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 448:./lib/chibios/os/rt/include/chtime.h **** }
 449:./lib/chibios/os/rt/include/chtime.h **** 
 450:./lib/chibios/os/rt/include/chtime.h **** /**
 451:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 452:./lib/chibios/os/rt/include/chtime.h ****  *
 453:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     first system time
 454:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       second system time
 455:./lib/chibios/os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 456:./lib/chibios/os/rt/include/chtime.h ****  *
 457:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 458:./lib/chibios/os/rt/include/chtime.h ****  */
 459:./lib/chibios/os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 1767              		.loc 10 459 29 is_stmt 1 view .LVU489
 1768              	.LBB499:
 460:./lib/chibios/os/rt/include/chtime.h **** 
 461:./lib/chibios/os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 462:./lib/chibios/os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 463:./lib/chibios/os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 1769              		.loc 10 463 3 view .LVU490
 1770              		.loc 10 463 10 is_stmt 0 view .LVU491
 1771 000a 411A     		subs	r1, r0, r1
 1772              	.LVL71:
 1773              		.loc 10 463 10 view .LVU492
 1774              	.LBE499:
 1775              	.LBE498:
 676:lib/chibios/os/rt/src/chthreads.c ****   if (interval > (sysinterval_t)0) {
 1776              		.loc 1 676 3 is_stmt 1 view .LVU493
 1777              		.loc 1 676 6 is_stmt 0 view .LVU494
 1778 000c 02D0     		beq	.L42
 677:lib/chibios/os/rt/src/chthreads.c ****     chThdSleepS(interval);
 1779              		.loc 1 677 5 is_stmt 1 view .LVU495
 1780              	.LVL72:
 1781              	.LBB500:
 1782              	.LBI500:
 378:./lib/chibios/os/rt/include/chthreads.h **** 
 1783              		.loc 6 378 20 view .LVU496
 1784              	.LBB501:
 380:./lib/chibios/os/rt/include/chthreads.h **** 
 1785              		.loc 6 380 3 view .LVU497
 380:./lib/chibios/os/rt/include/chthreads.h **** 
 1786              		.loc 6 380 3 view .LVU498
 1787              		.loc 6 382 3 view .LVU499
 1788              		.loc 6 382 10 is_stmt 0 view .LVU500
 1789 000e 0820     		movs	r0, #8
 1790              	.LVL73:
 1791              		.loc 6 382 10 view .LVU501
 1792 0010 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1793              	.LVL74:
 1794              	.L42:
 1795              		.loc 6 382 10 view .LVU502
 1796              	.LBE501:
 1797              	.LBE500:
 678:lib/chibios/os/rt/src/chthreads.c ****   }
 679:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1798              		.loc 1 679 3 is_stmt 1 view .LVU503
 1799              	.LBB502:
 1800              	.LBI502:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1801              		.loc 3 365 20 view .LVU504
 1802              	.LBB503:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1803              		.loc 3 367 22 view .LVU505
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1804              		.loc 3 368 33 view .LVU506
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1805              		.loc 3 374 3 view .LVU507
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1806              		.loc 3 374 3 view .LVU508
 1807              		.loc 3 378 3 view .LVU509
 1808              	.LBB504:
 1809              	.LBI504:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1810              		.loc 4 396 20 view .LVU510
 1811              	.LBE504:
 1812              	.LBE503:
 1813              	.LBE502:
 1814              		.loc 4 398 3 view .LVU511
 1815              	.LBB509:
 1816              	.LBB508:
 1817              	.LBB507:
 1818              	.LBB505:
 1819              	.LBI505:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1820              		.loc 5 129 27 view .LVU512
 1821              	.LBB506:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1822              		.loc 5 131 3 view .LVU513
 1823              		.syntax divided
 1824              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1825 0014 62B6     		cpsie i
 1826              	@ 0 "" 2
 1827              		.thumb
 1828              		.syntax unified
 1829              	.LBE506:
 1830              	.LBE505:
 1831              	.LBE507:
 1832              	.LBE508:
 1833              	.LBE509:
 680:lib/chibios/os/rt/src/chthreads.c **** }
 1834              		.loc 1 680 1 is_stmt 0 view .LVU514
 1835              		@ sp needed
 1836 0016 10BD     		pop	{r4, pc}
 1837              		.cfi_endproc
 1838              	.LFE169:
 1840              		.section	.text.chThdSleepUntilWindowed,"ax",%progbits
 1841              		.align	1
 1842              		.global	chThdSleepUntilWindowed
 1843              		.syntax unified
 1844              		.code	16
 1845              		.thumb_func
 1846              		.fpu softvfp
 1848              	chThdSleepUntilWindowed:
 1849              	.LVL75:
 1850              	.LFB170:
 681:lib/chibios/os/rt/src/chthreads.c **** 
 682:lib/chibios/os/rt/src/chthreads.c **** /**
 683:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 684:lib/chibios/os/rt/src/chthreads.c ****  *          specified value.
 685:lib/chibios/os/rt/src/chthreads.c ****  * @note    The system time is assumed to be between @p prev and @p time
 686:lib/chibios/os/rt/src/chthreads.c ****  *          else the call is assumed to have been called outside the
 687:lib/chibios/os/rt/src/chthreads.c ****  *          allowed time interval, in this case no sleep is performed.
 688:lib/chibios/os/rt/src/chthreads.c ****  * @see     chThdSleepUntil()
 689:lib/chibios/os/rt/src/chthreads.c ****  *
 690:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] prev      absolute system time of the previous deadline
 691:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] next      absolute system time of the next deadline
 692:lib/chibios/os/rt/src/chthreads.c ****  * @return              the @p next parameter
 693:lib/chibios/os/rt/src/chthreads.c ****  *
 694:lib/chibios/os/rt/src/chthreads.c ****  * @api
 695:lib/chibios/os/rt/src/chthreads.c ****  */
 696:lib/chibios/os/rt/src/chthreads.c **** systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next) {
 1851              		.loc 1 696 67 is_stmt 1 view -0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 697:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1855              		.loc 1 697 3 view .LVU516
 698:lib/chibios/os/rt/src/chthreads.c **** 
 699:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 1856              		.loc 1 699 3 view .LVU517
 1857              	.LBB529:
 1858              	.LBI529:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1859              		.loc 3 353 20 view .LVU518
 1860              	.LBE529:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1861              		.loc 3 355 3 view .LVU519
 1862              	.LBB537:
 1863              	.LBB530:
 1864              	.LBI530:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1865              		.loc 4 387 20 view .LVU520
 1866              	.LBE530:
 1867              	.LBE537:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1868              		.loc 4 389 3 view .LVU521
 1869              	.LBB538:
 1870              	.LBB535:
 1871              	.LBB531:
 1872              	.LBI531:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1873              		.loc 5 140 27 view .LVU522
 1874              	.LBB532:
 1875              		.loc 5 142 3 view .LVU523
 1876              	.LBE532:
 1877              	.LBE531:
 1878              	.LBE535:
 1879              	.LBE538:
 696:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1880              		.loc 1 696 67 is_stmt 0 view .LVU524
 1881 0000 10B5     		push	{r4, lr}
 1882              		.cfi_def_cfa_offset 8
 1883              		.cfi_offset 4, -8
 1884              		.cfi_offset 14, -4
 696:lib/chibios/os/rt/src/chthreads.c ****   systime_t time;
 1885              		.loc 1 696 67 view .LVU525
 1886 0002 0C00     		movs	r4, r1
 1887              	.LBB539:
 1888              	.LBB536:
 1889              	.LBB534:
 1890              	.LBB533:
 1891              		.loc 5 142 3 view .LVU526
 1892              		.syntax divided
 1893              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1894 0004 72B6     		cpsid i
 1895              	@ 0 "" 2
 1896              		.thumb
 1897              		.syntax unified
 1898              	.LBE533:
 1899              	.LBE534:
 1900              	.LBE536:
 1901              	.LBE539:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1902              		.loc 3 356 34 is_stmt 1 view .LVU527
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1903              		.loc 3 357 20 view .LVU528
 700:lib/chibios/os/rt/src/chthreads.c ****   time = chVTGetSystemTimeX();
 1904              		.loc 1 700 3 view .LVU529
 1905              	.LBB540:
 1906              	.LBI540:
 115:./lib/chibios/os/rt/include/chvt.h **** 
 1907              		.loc 7 115 25 view .LVU530
 1908              	.LBE540:
 1909              		.loc 7 120 3 view .LVU531
 1910              	.LBB545:
 1911              	.LBB541:
 1912              	.LBI541:
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
 1913              		.loc 8 105 25 view .LVU532
 1914              	.LBE541:
 1915              	.LBE545:
 1916              		.loc 8 107 3 view .LVU533
 1917              	.LBB546:
 1918              	.LBB544:
 1919              	.LBB542:
 1920              	.LBI542:
 145:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 1921              		.loc 9 145 25 view .LVU534
 1922              	.LBB543:
 1923              		.loc 9 147 3 view .LVU535
 1924              		.loc 9 147 10 is_stmt 0 view .LVU536
 1925 0006 8023     		movs	r3, #128
 1926 0008 DB05     		lsls	r3, r3, #23
 1927 000a 596A     		ldr	r1, [r3, #36]
 1928              	.LVL76:
 1929              		.loc 9 147 10 view .LVU537
 1930              	.LBE543:
 1931              	.LBE542:
 1932              	.LBE544:
 1933              	.LBE546:
 701:lib/chibios/os/rt/src/chthreads.c ****   if (chTimeIsInRangeX(time, prev, next)) {
 1934              		.loc 1 701 3 is_stmt 1 view .LVU538
 1935              	.LBB547:
 1936              	.LBI547:
 464:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 465:./lib/chibios/os/rt/include/chtime.h **** }
 466:./lib/chibios/os/rt/include/chtime.h **** 
 467:./lib/chibios/os/rt/include/chtime.h **** /**
 468:./lib/chibios/os/rt/include/chtime.h ****  * @brief   Checks if the specified time is within the specified time range.
 469:./lib/chibios/os/rt/include/chtime.h ****  * @note    When start==end then the function returns always true because the
 470:./lib/chibios/os/rt/include/chtime.h ****  *          whole time range is specified.
 471:./lib/chibios/os/rt/include/chtime.h ****  *
 472:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] time      the time to be verified
 473:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] start     the start of the time window (inclusive)
 474:./lib/chibios/os/rt/include/chtime.h ****  * @param[in] end       the end of the time window (non inclusive)
 475:./lib/chibios/os/rt/include/chtime.h ****  * @retval true         current time within the specified time window.
 476:./lib/chibios/os/rt/include/chtime.h ****  * @retval false        current time not within the specified time window.
 477:./lib/chibios/os/rt/include/chtime.h ****  *
 478:./lib/chibios/os/rt/include/chtime.h ****  * @xclass
 479:./lib/chibios/os/rt/include/chtime.h ****  */
 480:./lib/chibios/os/rt/include/chtime.h **** static inline bool chTimeIsInRangeX(systime_t time,
 1937              		.loc 10 480 20 view .LVU539
 1938              	.LBB548:
 481:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t start,
 482:./lib/chibios/os/rt/include/chtime.h ****                                     systime_t end) {
 483:./lib/chibios/os/rt/include/chtime.h **** 
 484:./lib/chibios/os/rt/include/chtime.h ****   return (bool)((systime_t)((systime_t)time - (systime_t)start) <
 1939              		.loc 10 484 3 view .LVU540
 485:./lib/chibios/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1940              		.loc 10 485 17 is_stmt 0 view .LVU541
 1941 000c 231A     		subs	r3, r4, r0
 484:./lib/chibios/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1942              		.loc 10 484 17 view .LVU542
 1943 000e 081A     		subs	r0, r1, r0
 1944              	.LVL77:
 484:./lib/chibios/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1945              		.loc 10 484 17 view .LVU543
 1946              	.LBE548:
 1947              	.LBE547:
 1948              		.loc 1 701 6 view .LVU544
 1949 0010 8342     		cmp	r3, r0
 1950 0012 03D9     		bls	.L47
 702:lib/chibios/os/rt/src/chthreads.c ****     chThdSleepS(chTimeDiffX(time, next));
 1951              		.loc 1 702 5 is_stmt 1 view .LVU545
 1952              	.LVL78:
 1953              	.LBB549:
 1954              	.LBI549:
 459:./lib/chibios/os/rt/include/chtime.h **** 
 1955              		.loc 10 459 29 view .LVU546
 1956              	.LBB550:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1957              		.loc 10 463 3 view .LVU547
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1958              		.loc 10 463 3 is_stmt 0 view .LVU548
 1959              	.LBE550:
 1960              	.LBE549:
 1961              	.LBB552:
 1962              	.LBI552:
 378:./lib/chibios/os/rt/include/chthreads.h **** 
 1963              		.loc 6 378 20 is_stmt 1 view .LVU549
 1964              	.LBB553:
 380:./lib/chibios/os/rt/include/chthreads.h **** 
 1965              		.loc 6 380 3 view .LVU550
 380:./lib/chibios/os/rt/include/chthreads.h **** 
 1966              		.loc 6 380 3 view .LVU551
 1967              		.loc 6 382 3 view .LVU552
 1968              	.LBE553:
 1969              	.LBE552:
 1970              	.LBB555:
 1971              	.LBB551:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1972              		.loc 10 463 10 is_stmt 0 view .LVU553
 1973 0014 611A     		subs	r1, r4, r1
 1974              	.LVL79:
 463:./lib/chibios/os/rt/include/chtime.h ****   /*lint -restore*/
 1975              		.loc 10 463 10 view .LVU554
 1976              	.LBE551:
 1977              	.LBE555:
 1978              	.LBB556:
 1979              	.LBB554:
 1980              		.loc 6 382 10 view .LVU555
 1981 0016 0820     		movs	r0, #8
 1982 0018 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1983              	.LVL80:
 1984              	.L47:
 1985              		.loc 6 382 10 view .LVU556
 1986              	.LBE554:
 1987              	.LBE556:
 703:lib/chibios/os/rt/src/chthreads.c ****   }
 704:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 1988              		.loc 1 704 3 is_stmt 1 view .LVU557
 1989              	.LBB557:
 1990              	.LBI557:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1991              		.loc 3 365 20 view .LVU558
 1992              	.LBB558:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1993              		.loc 3 367 22 view .LVU559
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1994              		.loc 3 368 33 view .LVU560
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1995              		.loc 3 374 3 view .LVU561
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1996              		.loc 3 374 3 view .LVU562
 1997              		.loc 3 378 3 view .LVU563
 1998              	.LBB559:
 1999              	.LBI559:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2000              		.loc 4 396 20 view .LVU564
 2001              	.LBE559:
 2002              	.LBE558:
 2003              	.LBE557:
 2004              		.loc 4 398 3 view .LVU565
 2005              	.LBB564:
 2006              	.LBB563:
 2007              	.LBB562:
 2008              	.LBB560:
 2009              	.LBI560:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2010              		.loc 5 129 27 view .LVU566
 2011              	.LBB561:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2012              		.loc 5 131 3 view .LVU567
 2013              		.syntax divided
 2014              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2015 001c 62B6     		cpsie i
 2016              	@ 0 "" 2
 2017              		.thumb
 2018              		.syntax unified
 2019              	.LBE561:
 2020              	.LBE560:
 2021              	.LBE562:
 2022              	.LBE563:
 2023              	.LBE564:
 705:lib/chibios/os/rt/src/chthreads.c **** 
 706:lib/chibios/os/rt/src/chthreads.c ****   return next;
 2024              		.loc 1 706 3 view .LVU568
 707:lib/chibios/os/rt/src/chthreads.c **** }
 2025              		.loc 1 707 1 is_stmt 0 view .LVU569
 2026 001e 2000     		movs	r0, r4
 2027              		@ sp needed
 2028              	.LVL81:
 2029              		.loc 1 707 1 view .LVU570
 2030 0020 10BD     		pop	{r4, pc}
 2031              		.cfi_endproc
 2032              	.LFE170:
 2034              		.section	.text.chThdYield,"ax",%progbits
 2035              		.align	1
 2036              		.global	chThdYield
 2037              		.syntax unified
 2038              		.code	16
 2039              		.thumb_func
 2040              		.fpu softvfp
 2042              	chThdYield:
 2043              	.LFB171:
 708:lib/chibios/os/rt/src/chthreads.c **** 
 709:lib/chibios/os/rt/src/chthreads.c **** /**
 710:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Yields the time slot.
 711:lib/chibios/os/rt/src/chthreads.c ****  * @details Yields the CPU control to the next thread in the ready list with
 712:lib/chibios/os/rt/src/chthreads.c ****  *          equal priority, if any.
 713:lib/chibios/os/rt/src/chthreads.c ****  *
 714:lib/chibios/os/rt/src/chthreads.c ****  * @api
 715:lib/chibios/os/rt/src/chthreads.c ****  */
 716:lib/chibios/os/rt/src/chthreads.c **** void chThdYield(void) {
 2044              		.loc 1 716 23 is_stmt 1 view -0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 0, uses_anonymous_args = 0
 717:lib/chibios/os/rt/src/chthreads.c **** 
 718:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 2048              		.loc 1 718 3 view .LVU572
 2049              	.LBB578:
 2050              	.LBI578:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2051              		.loc 3 353 20 view .LVU573
 2052              	.LBE578:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2053              		.loc 3 355 3 view .LVU574
 2054              	.LBB586:
 2055              	.LBB579:
 2056              	.LBI579:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2057              		.loc 4 387 20 view .LVU575
 2058              	.LBE579:
 2059              	.LBE586:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2060              		.loc 4 389 3 view .LVU576
 2061              	.LBB587:
 2062              	.LBB584:
 2063              	.LBB580:
 2064              	.LBI580:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2065              		.loc 5 140 27 view .LVU577
 2066              	.LBB581:
 2067              		.loc 5 142 3 view .LVU578
 2068              	.LBE581:
 2069              	.LBE580:
 2070              	.LBE584:
 2071              	.LBE587:
 716:lib/chibios/os/rt/src/chthreads.c **** 
 2072              		.loc 1 716 23 is_stmt 0 view .LVU579
 2073 0000 10B5     		push	{r4, lr}
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 4, -8
 2076              		.cfi_offset 14, -4
 2077              	.LBB588:
 2078              	.LBB585:
 2079              	.LBB583:
 2080              	.LBB582:
 2081              		.loc 5 142 3 view .LVU580
 2082              		.syntax divided
 2083              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2084 0002 72B6     		cpsid i
 2085              	@ 0 "" 2
 2086              		.thumb
 2087              		.syntax unified
 2088              	.LBE582:
 2089              	.LBE583:
 2090              	.LBE585:
 2091              	.LBE588:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2092              		.loc 3 356 34 is_stmt 1 view .LVU581
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2093              		.loc 3 357 20 view .LVU582
 719:lib/chibios/os/rt/src/chthreads.c ****   chSchDoYieldS();
 2094              		.loc 1 719 3 view .LVU583
 2095              	.LBB589:
 2096              	.LBI589:
 541:./lib/chibios/os/rt/include/chschd.h **** }
 542:./lib/chibios/os/rt/include/chschd.h **** 
 543:./lib/chibios/os/rt/include/chschd.h **** /**
 544:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads queue is empty.
 545:./lib/chibios/os/rt/include/chschd.h ****  *
 546:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 547:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the queue.
 548:./lib/chibios/os/rt/include/chschd.h ****  *
 549:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 550:./lib/chibios/os/rt/include/chschd.h ****  */
 551:./lib/chibios/os/rt/include/chschd.h **** static inline bool queue_isempty(const threads_queue_t *tqp) {
 552:./lib/chibios/os/rt/include/chschd.h **** 
 553:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tqp->next == (const thread_t *)tqp);
 554:./lib/chibios/os/rt/include/chschd.h **** }
 555:./lib/chibios/os/rt/include/chschd.h **** 
 556:./lib/chibios/os/rt/include/chschd.h **** /**
 557:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads queue is not empty.
 558:./lib/chibios/os/rt/include/chschd.h ****  *
 559:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 560:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the queue.
 561:./lib/chibios/os/rt/include/chschd.h ****  *
 562:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 563:./lib/chibios/os/rt/include/chschd.h ****  */
 564:./lib/chibios/os/rt/include/chschd.h **** static inline bool queue_notempty(const threads_queue_t *tqp) {
 565:./lib/chibios/os/rt/include/chschd.h **** 
 566:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tqp->next != (const thread_t *)tqp);
 567:./lib/chibios/os/rt/include/chschd.h **** }
 568:./lib/chibios/os/rt/include/chschd.h **** 
 569:./lib/chibios/os/rt/include/chschd.h **** /* If the performance code path has been chosen then all the following
 570:./lib/chibios/os/rt/include/chschd.h ****    functions are inlined into the various kernel modules.*/
 571:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == TRUE
 572:./lib/chibios/os/rt/include/chschd.h **** static inline void list_insert(thread_t *tp, threads_list_t *tlp) {
 573:./lib/chibios/os/rt/include/chschd.h **** 
 574:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.next = tlp->next;
 575:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = tp;
 576:./lib/chibios/os/rt/include/chschd.h **** }
 577:./lib/chibios/os/rt/include/chschd.h **** 
 578:./lib/chibios/os/rt/include/chschd.h **** static inline thread_t *list_remove(threads_list_t *tlp) {
 579:./lib/chibios/os/rt/include/chschd.h **** 
 580:./lib/chibios/os/rt/include/chschd.h ****   thread_t *tp = tlp->next;
 581:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = tp->queue.next;
 582:./lib/chibios/os/rt/include/chschd.h **** 
 583:./lib/chibios/os/rt/include/chschd.h ****   return tp;
 584:./lib/chibios/os/rt/include/chschd.h **** }
 585:./lib/chibios/os/rt/include/chschd.h **** 
 586:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_prio_insert(thread_t *tp, threads_queue_t *tqp) {
 587:./lib/chibios/os/rt/include/chschd.h **** 
 588:./lib/chibios/os/rt/include/chschd.h ****   thread_t *cp = (thread_t *)tqp;
 589:./lib/chibios/os/rt/include/chschd.h ****   do {
 590:./lib/chibios/os/rt/include/chschd.h ****     cp = cp->queue.next;
 591:./lib/chibios/os/rt/include/chschd.h ****   } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 592:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.next             = cp;
 593:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.prev             = cp->queue.prev;
 594:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.prev->queue.next = tp;
 595:./lib/chibios/os/rt/include/chschd.h ****   cp->queue.prev             = tp;
 596:./lib/chibios/os/rt/include/chschd.h **** }
 597:./lib/chibios/os/rt/include/chschd.h **** 
 598:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_insert(thread_t *tp, threads_queue_t *tqp) {
 599:./lib/chibios/os/rt/include/chschd.h **** 
 600:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.next             = (thread_t *)tqp;
 601:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.prev             = tqp->prev;
 602:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.prev->queue.next = tp;
 603:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev                  = tp;
 604:./lib/chibios/os/rt/include/chschd.h **** }
 605:./lib/chibios/os/rt/include/chschd.h **** 
 606:./lib/chibios/os/rt/include/chschd.h **** static inline thread_t *queue_fifo_remove(threads_queue_t *tqp) {
 607:./lib/chibios/os/rt/include/chschd.h ****   thread_t *tp = tqp->next;
 608:./lib/chibios/os/rt/include/chschd.h **** 
 609:./lib/chibios/os/rt/include/chschd.h ****   tqp->next             = tp->queue.next;
 610:./lib/chibios/os/rt/include/chschd.h ****   tqp->next->queue.prev = (thread_t *)tqp;
 611:./lib/chibios/os/rt/include/chschd.h **** 
 612:./lib/chibios/os/rt/include/chschd.h ****   return tp;
 613:./lib/chibios/os/rt/include/chschd.h **** }
 614:./lib/chibios/os/rt/include/chschd.h **** 
 615:./lib/chibios/os/rt/include/chschd.h **** static inline thread_t *queue_lifo_remove(threads_queue_t *tqp) {
 616:./lib/chibios/os/rt/include/chschd.h ****   thread_t *tp = tqp->prev;
 617:./lib/chibios/os/rt/include/chschd.h **** 
 618:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev             = tp->queue.prev;
 619:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev->queue.next = (thread_t *)tqp;
 620:./lib/chibios/os/rt/include/chschd.h **** 
 621:./lib/chibios/os/rt/include/chschd.h ****   return tp;
 622:./lib/chibios/os/rt/include/chschd.h **** }
 623:./lib/chibios/os/rt/include/chschd.h **** 
 624:./lib/chibios/os/rt/include/chschd.h **** static inline thread_t *queue_dequeue(thread_t *tp) {
 625:./lib/chibios/os/rt/include/chschd.h **** 
 626:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.prev->queue.next = tp->queue.next;
 627:./lib/chibios/os/rt/include/chschd.h ****   tp->queue.next->queue.prev = tp->queue.prev;
 628:./lib/chibios/os/rt/include/chschd.h **** 
 629:./lib/chibios/os/rt/include/chschd.h ****   return tp;
 630:./lib/chibios/os/rt/include/chschd.h **** }
 631:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == TRUE */
 632:./lib/chibios/os/rt/include/chschd.h **** 
 633:./lib/chibios/os/rt/include/chschd.h **** /**
 634:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Determines if the current thread must reschedule.
 635:./lib/chibios/os/rt/include/chschd.h ****  * @details This function returns @p true if there is a ready thread with
 636:./lib/chibios/os/rt/include/chschd.h ****  *          higher priority.
 637:./lib/chibios/os/rt/include/chschd.h ****  *
 638:./lib/chibios/os/rt/include/chschd.h ****  * @return              The priorities situation.
 639:./lib/chibios/os/rt/include/chschd.h ****  * @retval false        if rescheduling is not necessary.
 640:./lib/chibios/os/rt/include/chschd.h ****  * @retval true         if there is a ready thread at higher priority.
 641:./lib/chibios/os/rt/include/chschd.h ****  *
 642:./lib/chibios/os/rt/include/chschd.h ****  * @iclass
 643:./lib/chibios/os/rt/include/chschd.h ****  */
 644:./lib/chibios/os/rt/include/chschd.h **** static inline bool chSchIsRescRequiredI(void) {
 645:./lib/chibios/os/rt/include/chschd.h **** 
 646:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassI();
 647:./lib/chibios/os/rt/include/chschd.h **** 
 648:./lib/chibios/os/rt/include/chschd.h ****   return firstprio(&ch.rlist.queue) > currp->prio;
 649:./lib/chibios/os/rt/include/chschd.h **** }
 650:./lib/chibios/os/rt/include/chschd.h **** 
 651:./lib/chibios/os/rt/include/chschd.h **** /**
 652:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Determines if yielding is possible.
 653:./lib/chibios/os/rt/include/chschd.h ****  * @details This function returns @p true if there is a ready thread with
 654:./lib/chibios/os/rt/include/chschd.h ****  *          equal or higher priority.
 655:./lib/chibios/os/rt/include/chschd.h ****  *
 656:./lib/chibios/os/rt/include/chschd.h ****  * @return              The priorities situation.
 657:./lib/chibios/os/rt/include/chschd.h ****  * @retval false        if yielding is not possible.
 658:./lib/chibios/os/rt/include/chschd.h ****  * @retval true         if there is a ready thread at equal or higher priority.
 659:./lib/chibios/os/rt/include/chschd.h ****  *
 660:./lib/chibios/os/rt/include/chschd.h ****  * @sclass
 661:./lib/chibios/os/rt/include/chschd.h ****  */
 662:./lib/chibios/os/rt/include/chschd.h **** static inline bool chSchCanYieldS(void) {
 663:./lib/chibios/os/rt/include/chschd.h **** 
 664:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassS();
 665:./lib/chibios/os/rt/include/chschd.h **** 
 666:./lib/chibios/os/rt/include/chschd.h ****   return firstprio(&ch.rlist.queue) >= currp->prio;
 667:./lib/chibios/os/rt/include/chschd.h **** }
 668:./lib/chibios/os/rt/include/chschd.h **** 
 669:./lib/chibios/os/rt/include/chschd.h **** /**
 670:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Yields the time slot.
 671:./lib/chibios/os/rt/include/chschd.h ****  * @details Yields the CPU control to the next thread in the ready list with
 672:./lib/chibios/os/rt/include/chschd.h ****  *          equal or higher priority, if any.
 673:./lib/chibios/os/rt/include/chschd.h ****  *
 674:./lib/chibios/os/rt/include/chschd.h ****  * @sclass
 675:./lib/chibios/os/rt/include/chschd.h ****  */
 676:./lib/chibios/os/rt/include/chschd.h **** static inline void chSchDoYieldS(void) {
 2097              		.loc 2 676 20 view .LVU584
 2098              	.LBB590:
 677:./lib/chibios/os/rt/include/chschd.h **** 
 678:./lib/chibios/os/rt/include/chschd.h ****   chDbgCheckClassS();
 2099              		.loc 2 678 21 view .LVU585
 679:./lib/chibios/os/rt/include/chschd.h **** 
 680:./lib/chibios/os/rt/include/chschd.h ****   if (chSchCanYieldS()) {
 2100              		.loc 2 680 3 view .LVU586
 2101              	.LBB591:
 2102              	.LBI591:
 662:./lib/chibios/os/rt/include/chschd.h **** 
 2103              		.loc 2 662 20 view .LVU587
 2104              	.LBB592:
 664:./lib/chibios/os/rt/include/chschd.h **** 
 2105              		.loc 2 664 21 view .LVU588
 666:./lib/chibios/os/rt/include/chschd.h **** }
 2106              		.loc 2 666 3 view .LVU589
 666:./lib/chibios/os/rt/include/chschd.h **** }
 2107              		.loc 2 666 10 is_stmt 0 view .LVU590
 2108 0004 054B     		ldr	r3, .L50
 2109 0006 1A68     		ldr	r2, [r3]
 666:./lib/chibios/os/rt/include/chschd.h **** }
 2110              		.loc 2 666 45 view .LVU591
 2111 0008 9B69     		ldr	r3, [r3, #24]
 2112              	.LBE592:
 2113              	.LBE591:
 2114              		.loc 2 680 6 view .LVU592
 2115 000a 9268     		ldr	r2, [r2, #8]
 2116 000c 9B68     		ldr	r3, [r3, #8]
 2117 000e 9A42     		cmp	r2, r3
 2118 0010 01D3     		bcc	.L49
 681:./lib/chibios/os/rt/include/chschd.h ****     chSchDoRescheduleBehind();
 2119              		.loc 2 681 5 is_stmt 1 view .LVU593
 2120 0012 FFF7FEFF 		bl	chSchDoRescheduleBehind
 2121              	.LVL82:
 2122              	.L49:
 2123              	.LBE590:
 2124              	.LBE589:
 720:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 2125              		.loc 1 720 3 view .LVU594
 2126              	.LBB593:
 2127              	.LBI593:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2128              		.loc 3 365 20 view .LVU595
 2129              	.LBB594:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2130              		.loc 3 367 22 view .LVU596
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2131              		.loc 3 368 33 view .LVU597
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2132              		.loc 3 374 3 view .LVU598
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2133              		.loc 3 374 3 view .LVU599
 2134              		.loc 3 378 3 view .LVU600
 2135              	.LBB595:
 2136              	.LBI595:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2137              		.loc 4 396 20 view .LVU601
 2138              	.LBE595:
 2139              	.LBE594:
 2140              	.LBE593:
 2141              		.loc 4 398 3 view .LVU602
 2142              	.LBB600:
 2143              	.LBB599:
 2144              	.LBB598:
 2145              	.LBB596:
 2146              	.LBI596:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2147              		.loc 5 129 27 view .LVU603
 2148              	.LBB597:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2149              		.loc 5 131 3 view .LVU604
 2150              		.syntax divided
 2151              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2152 0016 62B6     		cpsie i
 2153              	@ 0 "" 2
 2154              		.thumb
 2155              		.syntax unified
 2156              	.LBE597:
 2157              	.LBE596:
 2158              	.LBE598:
 2159              	.LBE599:
 2160              	.LBE600:
 721:lib/chibios/os/rt/src/chthreads.c **** }
 2161              		.loc 1 721 1 is_stmt 0 view .LVU605
 2162              		@ sp needed
 2163 0018 10BD     		pop	{r4, pc}
 2164              	.L51:
 2165 001a C046     		.align	2
 2166              	.L50:
 2167 001c 00000000 		.word	ch
 2168              		.cfi_endproc
 2169              	.LFE171:
 2171              		.section	.text.chThdSuspendS,"ax",%progbits
 2172              		.align	1
 2173              		.global	chThdSuspendS
 2174              		.syntax unified
 2175              		.code	16
 2176              		.thumb_func
 2177              		.fpu softvfp
 2179              	chThdSuspendS:
 2180              	.LVL83:
 2181              	.LFB172:
 722:lib/chibios/os/rt/src/chthreads.c **** 
 723:lib/chibios/os/rt/src/chthreads.c **** /**
 724:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 726:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 727:lib/chibios/os/rt/src/chthreads.c ****  *
 728:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 729:lib/chibios/os/rt/src/chthreads.c ****  * @return              The wake up message.
 730:lib/chibios/os/rt/src/chthreads.c ****  *
 731:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 732:lib/chibios/os/rt/src/chthreads.c ****  */
 733:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdSuspendS(thread_reference_t *trp) {
 2182              		.loc 1 733 46 is_stmt 1 view -0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 734:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2186              		.loc 1 734 3 view .LVU607
 2187              	.LBB601:
 2188              	.LBI601:
 272:./lib/chibios/os/rt/include/chthreads.h **** 
 2189              		.loc 6 272 25 view .LVU608
 2190              	.LBB602:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2191              		.loc 6 274 3 view .LVU609
 2192              	.LBE602:
 2193              	.LBE601:
 733:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2194              		.loc 1 733 46 is_stmt 0 view .LVU610
 2195 0000 10B5     		push	{r4, lr}
 2196              		.cfi_def_cfa_offset 8
 2197              		.cfi_offset 4, -8
 2198              		.cfi_offset 14, -4
 2199              	.LBB605:
 2200              	.LBB603:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2201              		.loc 6 274 18 view .LVU611
 2202 0002 054C     		ldr	r4, .L53
 2203              	.LBE603:
 2204              	.LBE605:
 735:lib/chibios/os/rt/src/chthreads.c **** 
 736:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 737:lib/chibios/os/rt/src/chthreads.c **** 
 738:lib/chibios/os/rt/src/chthreads.c ****   *trp = tp;
 739:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 740:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_SUSPENDED);
 741:lib/chibios/os/rt/src/chthreads.c **** 
 742:lib/chibios/os/rt/src/chthreads.c ****   return chThdGetSelfX()->u.rdymsg;
 743:lib/chibios/os/rt/src/chthreads.c **** }
 2205              		.loc 1 743 1 view .LVU612
 2206              		@ sp needed
 2207              	.LBB606:
 2208              	.LBB604:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2209              		.loc 6 274 18 view .LVU613
 2210 0004 A369     		ldr	r3, [r4, #24]
 2211              	.LVL84:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2212              		.loc 6 274 18 view .LVU614
 2213              	.LBE604:
 2214              	.LBE606:
 736:lib/chibios/os/rt/src/chthreads.c **** 
 2215              		.loc 1 736 3 is_stmt 1 view .LVU615
 736:lib/chibios/os/rt/src/chthreads.c **** 
 2216              		.loc 1 736 3 view .LVU616
 738:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 2217              		.loc 1 738 3 view .LVU617
 738:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 2218              		.loc 1 738 8 is_stmt 0 view .LVU618
 2219 0006 0360     		str	r3, [r0]
 739:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_SUSPENDED);
 2220              		.loc 1 739 3 is_stmt 1 view .LVU619
 739:lib/chibios/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_SUSPENDED);
 2221              		.loc 1 739 15 is_stmt 0 view .LVU620
 2222 0008 1862     		str	r0, [r3, #32]
 740:lib/chibios/os/rt/src/chthreads.c **** 
 2223              		.loc 1 740 3 is_stmt 1 view .LVU621
 2224 000a 0320     		movs	r0, #3
 2225              	.LVL85:
 740:lib/chibios/os/rt/src/chthreads.c **** 
 2226              		.loc 1 740 3 is_stmt 0 view .LVU622
 2227 000c FFF7FEFF 		bl	chSchGoSleepS
 2228              	.LVL86:
 742:lib/chibios/os/rt/src/chthreads.c **** }
 2229              		.loc 1 742 3 is_stmt 1 view .LVU623
 2230              	.LBB607:
 2231              	.LBI607:
 272:./lib/chibios/os/rt/include/chthreads.h **** 
 2232              		.loc 6 272 25 view .LVU624
 2233              	.LBB608:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2234              		.loc 6 274 3 view .LVU625
 2235              	.LBE608:
 2236              	.LBE607:
 742:lib/chibios/os/rt/src/chthreads.c **** }
 2237              		.loc 1 742 28 is_stmt 0 view .LVU626
 2238 0010 A369     		ldr	r3, [r4, #24]
 2239 0012 186A     		ldr	r0, [r3, #32]
 2240              		.loc 1 743 1 view .LVU627
 2241 0014 10BD     		pop	{r4, pc}
 2242              	.L54:
 2243 0016 C046     		.align	2
 2244              	.L53:
 2245 0018 00000000 		.word	ch
 2246              		.cfi_endproc
 2247              	.LFE172:
 2249              		.section	.text.chThdSuspendTimeoutS,"ax",%progbits
 2250              		.align	1
 2251              		.global	chThdSuspendTimeoutS
 2252              		.syntax unified
 2253              		.code	16
 2254              		.thumb_func
 2255              		.fpu softvfp
 2257              	chThdSuspendTimeoutS:
 2258              	.LVL87:
 2259              	.LFB173:
 744:lib/chibios/os/rt/src/chthreads.c **** 
 745:lib/chibios/os/rt/src/chthreads.c **** /**
 746:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 747:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 748:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 749:lib/chibios/os/rt/src/chthreads.c ****  *
 750:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 751:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 752:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 753:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 754:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 755:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 756:lib/chibios/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 757:lib/chibios/os/rt/src/chthreads.c ****  *                        occurred.
 758:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 759:lib/chibios/os/rt/src/chthreads.c ****  * @return              The wake up message.
 760:lib/chibios/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the operation timed out.
 761:lib/chibios/os/rt/src/chthreads.c ****  *
 762:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 763:lib/chibios/os/rt/src/chthreads.c ****  */
 764:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout) {
 2260              		.loc 1 764 76 is_stmt 1 view -0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 765:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2264              		.loc 1 765 3 view .LVU629
 2265              	.LBB609:
 2266              	.LBI609:
 272:./lib/chibios/os/rt/include/chthreads.h **** 
 2267              		.loc 6 272 25 view .LVU630
 2268              	.LBB610:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2269              		.loc 6 274 3 view .LVU631
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2270              		.loc 6 274 18 is_stmt 0 view .LVU632
 2271 0000 064B     		ldr	r3, .L58
 2272              	.LBE610:
 2273              	.LBE609:
 764:lib/chibios/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 2274              		.loc 1 764 76 view .LVU633
 2275 0002 10B5     		push	{r4, lr}
 2276              		.cfi_def_cfa_offset 8
 2277              		.cfi_offset 4, -8
 2278              		.cfi_offset 14, -4
 2279              	.LBB612:
 2280              	.LBB611:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2281              		.loc 6 274 18 view .LVU634
 2282 0004 9B69     		ldr	r3, [r3, #24]
 2283              	.LVL88:
 274:./lib/chibios/os/rt/include/chthreads.h **** }
 2284              		.loc 6 274 18 view .LVU635
 2285              	.LBE611:
 2286              	.LBE612:
 766:lib/chibios/os/rt/src/chthreads.c **** 
 767:lib/chibios/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 2287              		.loc 1 767 3 is_stmt 1 view .LVU636
 2288              		.loc 1 767 3 view .LVU637
 768:lib/chibios/os/rt/src/chthreads.c **** 
 769:lib/chibios/os/rt/src/chthreads.c ****   if (TIME_IMMEDIATE == timeout) {
 2289              		.loc 1 769 3 view .LVU638
 2290              		.loc 1 769 6 is_stmt 0 view .LVU639
 2291 0006 0029     		cmp	r1, #0
 2292 0008 05D0     		beq	.L57
 770:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 771:lib/chibios/os/rt/src/chthreads.c ****   }
 772:lib/chibios/os/rt/src/chthreads.c **** 
 773:lib/chibios/os/rt/src/chthreads.c ****   *trp = tp;
 2293              		.loc 1 773 3 is_stmt 1 view .LVU640
 2294              		.loc 1 773 8 is_stmt 0 view .LVU641
 2295 000a 0360     		str	r3, [r0]
 774:lib/chibios/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 2296              		.loc 1 774 3 is_stmt 1 view .LVU642
 2297              		.loc 1 774 15 is_stmt 0 view .LVU643
 2298 000c 1862     		str	r0, [r3, #32]
 775:lib/chibios/os/rt/src/chthreads.c **** 
 776:lib/chibios/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_SUSPENDED, timeout);
 2299              		.loc 1 776 3 is_stmt 1 view .LVU644
 2300              		.loc 1 776 10 is_stmt 0 view .LVU645
 2301 000e 0320     		movs	r0, #3
 2302              	.LVL89:
 2303              		.loc 1 776 10 view .LVU646
 2304 0010 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 2305              	.LVL90:
 2306              	.L55:
 777:lib/chibios/os/rt/src/chthreads.c **** }
 2307              		.loc 1 777 1 view .LVU647
 2308              		@ sp needed
 2309 0014 10BD     		pop	{r4, pc}
 2310              	.LVL91:
 2311              	.L57:
 770:lib/chibios/os/rt/src/chthreads.c ****   }
 2312              		.loc 1 770 12 view .LVU648
 2313 0016 0120     		movs	r0, #1
 2314              	.LVL92:
 770:lib/chibios/os/rt/src/chthreads.c ****   }
 2315              		.loc 1 770 12 view .LVU649
 2316 0018 4042     		rsbs	r0, r0, #0
 2317 001a FBE7     		b	.L55
 2318              	.L59:
 2319              		.align	2
 2320              	.L58:
 2321 001c 00000000 		.word	ch
 2322              		.cfi_endproc
 2323              	.LFE173:
 2325              		.section	.text.chThdResumeI,"ax",%progbits
 2326              		.align	1
 2327              		.global	chThdResumeI
 2328              		.syntax unified
 2329              		.code	16
 2330              		.thumb_func
 2331              		.fpu softvfp
 2333              	chThdResumeI:
 2334              	.LVL93:
 2335              	.LFB174:
 778:lib/chibios/os/rt/src/chthreads.c **** 
 779:lib/chibios/os/rt/src/chthreads.c **** /**
 780:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 781:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must not reschedule because it can be called from
 782:lib/chibios/os/rt/src/chthreads.c ****  *          ISR context.
 783:lib/chibios/os/rt/src/chthreads.c ****  *
 784:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 785:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 786:lib/chibios/os/rt/src/chthreads.c ****  *
 787:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 788:lib/chibios/os/rt/src/chthreads.c ****  */
 789:lib/chibios/os/rt/src/chthreads.c **** void chThdResumeI(thread_reference_t *trp, msg_t msg) {
 2336              		.loc 1 789 55 is_stmt 1 view -0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 790:lib/chibios/os/rt/src/chthreads.c **** 
 791:lib/chibios/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 2340              		.loc 1 791 3 view .LVU651
 2341              		.loc 1 791 7 is_stmt 0 view .LVU652
 2342 0000 0368     		ldr	r3, [r0]
 789:lib/chibios/os/rt/src/chthreads.c **** 
 2343              		.loc 1 789 55 view .LVU653
 2344 0002 10B5     		push	{r4, lr}
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 4, -8
 2347              		.cfi_offset 14, -4
 2348              		.loc 1 791 6 view .LVU654
 2349 0004 002B     		cmp	r3, #0
 2350 0006 05D0     		beq	.L60
 2351              	.LBB613:
 792:lib/chibios/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 2352              		.loc 1 792 5 is_stmt 1 view .LVU655
 2353              	.LVL94:
 793:lib/chibios/os/rt/src/chthreads.c **** 
 794:lib/chibios/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 2354              		.loc 1 794 5 view .LVU656
 2355              		.loc 1 794 5 view .LVU657
 795:lib/chibios/os/rt/src/chthreads.c **** 
 796:lib/chibios/os/rt/src/chthreads.c ****     *trp = NULL;
 2356              		.loc 1 796 5 view .LVU658
 2357              		.loc 1 796 10 is_stmt 0 view .LVU659
 2358 0008 0022     		movs	r2, #0
 2359 000a 0260     		str	r2, [r0]
 797:lib/chibios/os/rt/src/chthreads.c ****     tp->u.rdymsg = msg;
 2360              		.loc 1 797 5 is_stmt 1 view .LVU660
 2361              		.loc 1 797 18 is_stmt 0 view .LVU661
 2362 000c 1962     		str	r1, [r3, #32]
 798:lib/chibios/os/rt/src/chthreads.c ****     (void) chSchReadyI(tp);
 2363              		.loc 1 798 5 is_stmt 1 view .LVU662
 2364              		.loc 1 798 12 is_stmt 0 view .LVU663
 2365 000e 1800     		movs	r0, r3
 2366              	.LVL95:
 2367              		.loc 1 798 12 view .LVU664
 2368 0010 FFF7FEFF 		bl	chSchReadyI
 2369              	.LVL96:
 2370              	.L60:
 2371              		.loc 1 798 12 view .LVU665
 2372              	.LBE613:
 799:lib/chibios/os/rt/src/chthreads.c ****   }
 800:lib/chibios/os/rt/src/chthreads.c **** }
 2373              		.loc 1 800 1 view .LVU666
 2374              		@ sp needed
 2375 0014 10BD     		pop	{r4, pc}
 2376              		.cfi_endproc
 2377              	.LFE174:
 2379              		.section	.text.chThdResumeS,"ax",%progbits
 2380              		.align	1
 2381              		.global	chThdResumeS
 2382              		.syntax unified
 2383              		.code	16
 2384              		.thumb_func
 2385              		.fpu softvfp
 2387              	chThdResumeS:
 2388              	.LVL97:
 2389              	.LFB175:
 801:lib/chibios/os/rt/src/chthreads.c **** 
 802:lib/chibios/os/rt/src/chthreads.c **** /**
 803:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 804:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 805:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 806:lib/chibios/os/rt/src/chthreads.c ****  *
 807:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 808:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 809:lib/chibios/os/rt/src/chthreads.c ****  *
 810:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 811:lib/chibios/os/rt/src/chthreads.c ****  */
 812:lib/chibios/os/rt/src/chthreads.c **** void chThdResumeS(thread_reference_t *trp, msg_t msg) {
 2390              		.loc 1 812 55 is_stmt 1 view -0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 813:lib/chibios/os/rt/src/chthreads.c **** 
 814:lib/chibios/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 2394              		.loc 1 814 3 view .LVU668
 2395              		.loc 1 814 7 is_stmt 0 view .LVU669
 2396 0000 0368     		ldr	r3, [r0]
 812:lib/chibios/os/rt/src/chthreads.c **** 
 2397              		.loc 1 812 55 view .LVU670
 2398 0002 10B5     		push	{r4, lr}
 2399              		.cfi_def_cfa_offset 8
 2400              		.cfi_offset 4, -8
 2401              		.cfi_offset 14, -4
 2402              		.loc 1 814 6 view .LVU671
 2403 0004 002B     		cmp	r3, #0
 2404 0006 04D0     		beq	.L65
 2405              	.LBB614:
 815:lib/chibios/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 2406              		.loc 1 815 5 is_stmt 1 view .LVU672
 2407              	.LVL98:
 816:lib/chibios/os/rt/src/chthreads.c **** 
 817:lib/chibios/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 2408              		.loc 1 817 5 view .LVU673
 2409              		.loc 1 817 5 view .LVU674
 818:lib/chibios/os/rt/src/chthreads.c **** 
 819:lib/chibios/os/rt/src/chthreads.c ****     *trp = NULL;
 2410              		.loc 1 819 5 view .LVU675
 2411              		.loc 1 819 10 is_stmt 0 view .LVU676
 2412 0008 0022     		movs	r2, #0
 2413 000a 0260     		str	r2, [r0]
 820:lib/chibios/os/rt/src/chthreads.c ****     chSchWakeupS(tp, msg);
 2414              		.loc 1 820 5 is_stmt 1 view .LVU677
 2415 000c 1800     		movs	r0, r3
 2416              	.LVL99:
 2417              		.loc 1 820 5 is_stmt 0 view .LVU678
 2418 000e FFF7FEFF 		bl	chSchWakeupS
 2419              	.LVL100:
 2420              	.L65:
 2421              		.loc 1 820 5 view .LVU679
 2422              	.LBE614:
 821:lib/chibios/os/rt/src/chthreads.c ****   }
 822:lib/chibios/os/rt/src/chthreads.c **** }
 2423              		.loc 1 822 1 view .LVU680
 2424              		@ sp needed
 2425 0012 10BD     		pop	{r4, pc}
 2426              		.cfi_endproc
 2427              	.LFE175:
 2429              		.section	.text.chThdResume,"ax",%progbits
 2430              		.align	1
 2431              		.global	chThdResume
 2432              		.syntax unified
 2433              		.code	16
 2434              		.thumb_func
 2435              		.fpu softvfp
 2437              	chThdResume:
 2438              	.LVL101:
 2439              	.LFB176:
 823:lib/chibios/os/rt/src/chthreads.c **** 
 824:lib/chibios/os/rt/src/chthreads.c **** /**
 825:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 826:lib/chibios/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 827:lib/chibios/os/rt/src/chthreads.c ****  *          context.
 828:lib/chibios/os/rt/src/chthreads.c ****  *
 829:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 830:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 831:lib/chibios/os/rt/src/chthreads.c ****  *
 832:lib/chibios/os/rt/src/chthreads.c ****  * @api
 833:lib/chibios/os/rt/src/chthreads.c ****  */
 834:lib/chibios/os/rt/src/chthreads.c **** void chThdResume(thread_reference_t *trp, msg_t msg) {
 2440              		.loc 1 834 54 is_stmt 1 view -0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 835:lib/chibios/os/rt/src/chthreads.c **** 
 836:lib/chibios/os/rt/src/chthreads.c ****   chSysLock();
 2444              		.loc 1 836 3 view .LVU682
 2445              	.LBB615:
 2446              	.LBI615:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2447              		.loc 3 353 20 view .LVU683
 2448              	.LBE615:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2449              		.loc 3 355 3 view .LVU684
 2450              	.LBB623:
 2451              	.LBB616:
 2452              	.LBI616:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2453              		.loc 4 387 20 view .LVU685
 2454              	.LBE616:
 2455              	.LBE623:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2456              		.loc 4 389 3 view .LVU686
 2457              	.LBB624:
 2458              	.LBB621:
 2459              	.LBB617:
 2460              	.LBI617:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2461              		.loc 5 140 27 view .LVU687
 2462              	.LBB618:
 2463              		.loc 5 142 3 view .LVU688
 2464              	.LBE618:
 2465              	.LBE617:
 2466              	.LBE621:
 2467              	.LBE624:
 834:lib/chibios/os/rt/src/chthreads.c **** 
 2468              		.loc 1 834 54 is_stmt 0 view .LVU689
 2469 0000 10B5     		push	{r4, lr}
 2470              		.cfi_def_cfa_offset 8
 2471              		.cfi_offset 4, -8
 2472              		.cfi_offset 14, -4
 2473              	.LBB625:
 2474              	.LBB622:
 2475              	.LBB620:
 2476              	.LBB619:
 2477              		.loc 5 142 3 view .LVU690
 2478              		.syntax divided
 2479              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2480 0002 72B6     		cpsid i
 2481              	@ 0 "" 2
 2482              		.thumb
 2483              		.syntax unified
 2484              	.LBE619:
 2485              	.LBE620:
 2486              	.LBE622:
 2487              	.LBE625:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2488              		.loc 3 356 34 is_stmt 1 view .LVU691
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2489              		.loc 3 357 20 view .LVU692
 837:lib/chibios/os/rt/src/chthreads.c ****   chThdResumeS(trp, msg);
 2490              		.loc 1 837 3 view .LVU693
 2491 0004 FFF7FEFF 		bl	chThdResumeS
 2492              	.LVL102:
 838:lib/chibios/os/rt/src/chthreads.c ****   chSysUnlock();
 2493              		.loc 1 838 3 view .LVU694
 2494              	.LBB626:
 2495              	.LBI626:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2496              		.loc 3 365 20 view .LVU695
 2497              	.LBB627:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2498              		.loc 3 367 22 view .LVU696
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2499              		.loc 3 368 33 view .LVU697
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2500              		.loc 3 374 3 view .LVU698
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2501              		.loc 3 374 3 view .LVU699
 2502              		.loc 3 378 3 view .LVU700
 2503              	.LBB628:
 2504              	.LBI628:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2505              		.loc 4 396 20 view .LVU701
 2506              	.LBE628:
 2507              	.LBE627:
 2508              	.LBE626:
 2509              		.loc 4 398 3 view .LVU702
 2510              	.LBB633:
 2511              	.LBB632:
 2512              	.LBB631:
 2513              	.LBB629:
 2514              	.LBI629:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2515              		.loc 5 129 27 view .LVU703
 2516              	.LBB630:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2517              		.loc 5 131 3 view .LVU704
 2518              		.syntax divided
 2519              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2520 0008 62B6     		cpsie i
 2521              	@ 0 "" 2
 2522              		.thumb
 2523              		.syntax unified
 2524              	.LBE630:
 2525              	.LBE629:
 2526              	.LBE631:
 2527              	.LBE632:
 2528              	.LBE633:
 839:lib/chibios/os/rt/src/chthreads.c **** }
 2529              		.loc 1 839 1 is_stmt 0 view .LVU705
 2530              		@ sp needed
 2531 000a 10BD     		pop	{r4, pc}
 2532              		.cfi_endproc
 2533              	.LFE176:
 2535              		.section	.text.chThdEnqueueTimeoutS,"ax",%progbits
 2536              		.align	1
 2537              		.global	chThdEnqueueTimeoutS
 2538              		.syntax unified
 2539              		.code	16
 2540              		.thumb_func
 2541              		.fpu softvfp
 2543              	chThdEnqueueTimeoutS:
 2544              	.LVL103:
 2545              	.LFB177:
 840:lib/chibios/os/rt/src/chthreads.c **** 
 841:lib/chibios/os/rt/src/chthreads.c **** /**
 842:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Enqueues the caller thread on a threads queue object.
 843:lib/chibios/os/rt/src/chthreads.c ****  * @details The caller thread is enqueued and put to sleep until it is
 844:lib/chibios/os/rt/src/chthreads.c ****  *          dequeued or the specified timeouts expires.
 845:lib/chibios/os/rt/src/chthreads.c ****  *
 846:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 847:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 848:lib/chibios/os/rt/src/chthreads.c ****  *                      handled as follow:
 849:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 850:lib/chibios/os/rt/src/chthreads.c ****  *                        state.
 851:lib/chibios/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 852:lib/chibios/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 853:lib/chibios/os/rt/src/chthreads.c ****  *                        occurred.
 854:lib/chibios/os/rt/src/chthreads.c ****  *                      .
 855:lib/chibios/os/rt/src/chthreads.c ****  * @return              The message from @p osalQueueWakeupOneI() or
 856:lib/chibios/os/rt/src/chthreads.c ****  *                      @p osalQueueWakeupAllI() functions.
 857:lib/chibios/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 858:lib/chibios/os/rt/src/chthreads.c ****  *                      specified timeout or if the function has been
 859:lib/chibios/os/rt/src/chthreads.c ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 860:lib/chibios/os/rt/src/chthreads.c ****  *                      specification.
 861:lib/chibios/os/rt/src/chthreads.c ****  *
 862:lib/chibios/os/rt/src/chthreads.c ****  * @sclass
 863:lib/chibios/os/rt/src/chthreads.c ****  */
 864:lib/chibios/os/rt/src/chthreads.c **** msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout) {
 2546              		.loc 1 864 73 is_stmt 1 view -0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 0
 2549              		@ frame_needed = 0, uses_anonymous_args = 0
 865:lib/chibios/os/rt/src/chthreads.c **** 
 866:lib/chibios/os/rt/src/chthreads.c ****   if (TIME_IMMEDIATE == timeout) {
 2550              		.loc 1 866 3 view .LVU707
 864:lib/chibios/os/rt/src/chthreads.c **** 
 2551              		.loc 1 864 73 is_stmt 0 view .LVU708
 2552 0000 10B5     		push	{r4, lr}
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 4, -8
 2555              		.cfi_offset 14, -4
 864:lib/chibios/os/rt/src/chthreads.c **** 
 2556              		.loc 1 864 73 view .LVU709
 2557 0002 0C1E     		subs	r4, r1, #0
 2558              		.loc 1 866 6 view .LVU710
 2559 0004 09D0     		beq	.L73
 867:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 868:lib/chibios/os/rt/src/chthreads.c ****   }
 869:lib/chibios/os/rt/src/chthreads.c **** 
 870:lib/chibios/os/rt/src/chthreads.c ****   queue_insert(currp, tqp);
 2560              		.loc 1 870 3 is_stmt 1 view .LVU711
 2561 0006 064B     		ldr	r3, .L74
 2562 0008 0100     		movs	r1, r0
 2563              	.LVL104:
 2564              		.loc 1 870 3 is_stmt 0 view .LVU712
 2565 000a 9869     		ldr	r0, [r3, #24]
 2566              	.LVL105:
 2567              		.loc 1 870 3 view .LVU713
 2568 000c FFF7FEFF 		bl	queue_insert
 2569              	.LVL106:
 871:lib/chibios/os/rt/src/chthreads.c **** 
 872:lib/chibios/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_QUEUED, timeout);
 2570              		.loc 1 872 3 is_stmt 1 view .LVU714
 2571              		.loc 1 872 10 is_stmt 0 view .LVU715
 2572 0010 2100     		movs	r1, r4
 2573 0012 0420     		movs	r0, #4
 2574 0014 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 2575              	.LVL107:
 2576              	.L71:
 873:lib/chibios/os/rt/src/chthreads.c **** }
 2577              		.loc 1 873 1 view .LVU716
 2578              		@ sp needed
 2579              	.LVL108:
 2580              		.loc 1 873 1 view .LVU717
 2581 0018 10BD     		pop	{r4, pc}
 2582              	.LVL109:
 2583              	.L73:
 867:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 2584              		.loc 1 867 12 view .LVU718
 2585 001a 0120     		movs	r0, #1
 2586              	.LVL110:
 867:lib/chibios/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 2587              		.loc 1 867 12 view .LVU719
 2588 001c 4042     		rsbs	r0, r0, #0
 2589 001e FBE7     		b	.L71
 2590              	.L75:
 2591              		.align	2
 2592              	.L74:
 2593 0020 00000000 		.word	ch
 2594              		.cfi_endproc
 2595              	.LFE177:
 2597              		.section	.text.chThdDequeueNextI,"ax",%progbits
 2598              		.align	1
 2599              		.global	chThdDequeueNextI
 2600              		.syntax unified
 2601              		.code	16
 2602              		.thumb_func
 2603              		.fpu softvfp
 2605              	chThdDequeueNextI:
 2606              	.LVL111:
 2607              	.LFB178:
 874:lib/chibios/os/rt/src/chthreads.c **** 
 875:lib/chibios/os/rt/src/chthreads.c **** /**
 876:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up one thread from the threads queue object,
 877:lib/chibios/os/rt/src/chthreads.c ****  *          if any.
 878:lib/chibios/os/rt/src/chthreads.c ****  *
 879:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 880:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 881:lib/chibios/os/rt/src/chthreads.c ****  *
 882:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 883:lib/chibios/os/rt/src/chthreads.c ****  */
 884:lib/chibios/os/rt/src/chthreads.c **** void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 2608              		.loc 1 884 57 is_stmt 1 view -0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 0
 2611              		@ frame_needed = 0, uses_anonymous_args = 0
 885:lib/chibios/os/rt/src/chthreads.c **** 
 886:lib/chibios/os/rt/src/chthreads.c ****   if (queue_notempty(tqp)) {
 2612              		.loc 1 886 3 view .LVU721
 2613              	.LBB638:
 2614              	.LBI638:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 2615              		.loc 2 564 20 view .LVU722
 2616              	.LBB639:
 566:./lib/chibios/os/rt/include/chschd.h **** }
 2617              		.loc 2 566 3 view .LVU723
 566:./lib/chibios/os/rt/include/chschd.h **** }
 2618              		.loc 2 566 3 is_stmt 0 view .LVU724
 2619              	.LBE639:
 2620              	.LBE638:
 2621              		.loc 1 886 6 view .LVU725
 2622 0000 0368     		ldr	r3, [r0]
 884:lib/chibios/os/rt/src/chthreads.c **** 
 2623              		.loc 1 884 57 view .LVU726
 2624 0002 10B5     		push	{r4, lr}
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 4, -8
 2627              		.cfi_offset 14, -4
 884:lib/chibios/os/rt/src/chthreads.c **** 
 2628              		.loc 1 884 57 view .LVU727
 2629 0004 0C00     		movs	r4, r1
 2630              		.loc 1 886 6 view .LVU728
 2631 0006 9842     		cmp	r0, r3
 2632 0008 04D0     		beq	.L76
 887:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 2633              		.loc 1 887 5 is_stmt 1 view .LVU729
 2634              	.LVL112:
 2635              	.LBB640:
 2636              	.LBI640:
 383:./lib/chibios/os/rt/include/chthreads.h **** }
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h **** /**
 386:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 387:./lib/chibios/os/rt/include/chthreads.h ****  *
 388:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 389:./lib/chibios/os/rt/include/chthreads.h ****  *
 390:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 391:./lib/chibios/os/rt/include/chthreads.h ****  */
 392:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 393:./lib/chibios/os/rt/include/chthreads.h **** 
 394:./lib/chibios/os/rt/include/chthreads.h ****   queue_init(tqp);
 395:./lib/chibios/os/rt/include/chthreads.h **** }
 396:./lib/chibios/os/rt/include/chthreads.h **** 
 397:./lib/chibios/os/rt/include/chthreads.h **** /**
 398:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 399:./lib/chibios/os/rt/include/chthreads.h ****  *
 400:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 401:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The queue status.
 402:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        if the queue is not empty.
 403:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         if the queue is empty.
 404:./lib/chibios/os/rt/include/chthreads.h ****  *
 405:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 406:./lib/chibios/os/rt/include/chthreads.h ****  */
 407:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdQueueIsEmptyI(threads_queue_t *tqp) {
 408:./lib/chibios/os/rt/include/chthreads.h **** 
 409:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheckClassI();
 410:./lib/chibios/os/rt/include/chthreads.h **** 
 411:./lib/chibios/os/rt/include/chthreads.h ****   return queue_isempty(tqp);
 412:./lib/chibios/os/rt/include/chthreads.h **** }
 413:./lib/chibios/os/rt/include/chthreads.h **** 
 414:./lib/chibios/os/rt/include/chthreads.h **** /**
 415:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Dequeues and wakes up one thread from the threads queue object.
 416:./lib/chibios/os/rt/include/chthreads.h ****  * @details Dequeues one thread from the queue without checking if the queue
 417:./lib/chibios/os/rt/include/chthreads.h ****  *          is empty.
 418:./lib/chibios/os/rt/include/chthreads.h ****  * @pre     The queue must contain at least an object.
 419:./lib/chibios/os/rt/include/chthreads.h ****  *
 420:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tqp       pointer to the threads queue object
 421:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msg       the message code
 422:./lib/chibios/os/rt/include/chthreads.h ****  *
 423:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 424:./lib/chibios/os/rt/include/chthreads.h ****  */
 425:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdDoDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 2637              		.loc 6 425 20 view .LVU730
 2638              	.LBB641:
 426:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *tp;
 2639              		.loc 6 426 3 view .LVU731
 427:./lib/chibios/os/rt/include/chthreads.h **** 
 428:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(queue_notempty(tqp), "empty queue");
 2640              		.loc 6 428 3 view .LVU732
 2641              		.loc 6 428 3 view .LVU733
 429:./lib/chibios/os/rt/include/chthreads.h **** 
 430:./lib/chibios/os/rt/include/chthreads.h ****   tp = queue_fifo_remove(tqp);
 2642              		.loc 6 430 3 view .LVU734
 2643              		.loc 6 430 8 is_stmt 0 view .LVU735
 2644 000a FFF7FEFF 		bl	queue_fifo_remove
 2645              	.LVL113:
 431:./lib/chibios/os/rt/include/chthreads.h **** 
 432:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_QUEUED, "invalid state");
 2646              		.loc 6 432 3 is_stmt 1 view .LVU736
 2647              		.loc 6 432 3 view .LVU737
 433:./lib/chibios/os/rt/include/chthreads.h **** 
 434:./lib/chibios/os/rt/include/chthreads.h ****   tp->u.rdymsg = msg;
 2648              		.loc 6 434 3 view .LVU738
 2649              		.loc 6 434 16 is_stmt 0 view .LVU739
 2650 000e 0462     		str	r4, [r0, #32]
 435:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2651              		.loc 6 435 3 is_stmt 1 view .LVU740
 2652              		.loc 6 435 10 is_stmt 0 view .LVU741
 2653 0010 FFF7FEFF 		bl	chSchReadyI
 2654              	.LVL114:
 2655              	.L76:
 2656              		.loc 6 435 10 view .LVU742
 2657              	.LBE641:
 2658              	.LBE640:
 888:lib/chibios/os/rt/src/chthreads.c ****   }
 889:lib/chibios/os/rt/src/chthreads.c **** }
 2659              		.loc 1 889 1 view .LVU743
 2660              		@ sp needed
 2661              	.LVL115:
 2662              		.loc 1 889 1 view .LVU744
 2663 0014 10BD     		pop	{r4, pc}
 2664              		.cfi_endproc
 2665              	.LFE178:
 2667              		.section	.text.chThdDequeueAllI,"ax",%progbits
 2668              		.align	1
 2669              		.global	chThdDequeueAllI
 2670              		.syntax unified
 2671              		.code	16
 2672              		.thumb_func
 2673              		.fpu softvfp
 2675              	chThdDequeueAllI:
 2676              	.LVL116:
 2677              	.LFB179:
 890:lib/chibios/os/rt/src/chthreads.c **** 
 891:lib/chibios/os/rt/src/chthreads.c **** /**
 892:lib/chibios/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up all threads from the threads queue object.
 893:lib/chibios/os/rt/src/chthreads.c ****  *
 894:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 895:lib/chibios/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 896:lib/chibios/os/rt/src/chthreads.c ****  *
 897:lib/chibios/os/rt/src/chthreads.c ****  * @iclass
 898:lib/chibios/os/rt/src/chthreads.c ****  */
 899:lib/chibios/os/rt/src/chthreads.c **** void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 2678              		.loc 1 899 56 is_stmt 1 view -0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 0, uses_anonymous_args = 0
 2682              		.loc 1 899 56 is_stmt 0 view .LVU746
 2683 0000 70B5     		push	{r4, r5, r6, lr}
 2684              		.cfi_def_cfa_offset 16
 2685              		.cfi_offset 4, -16
 2686              		.cfi_offset 5, -12
 2687              		.cfi_offset 6, -8
 2688              		.cfi_offset 14, -4
 2689 0002 0400     		movs	r4, r0
 2690 0004 0D00     		movs	r5, r1
 900:lib/chibios/os/rt/src/chthreads.c **** 
 901:lib/chibios/os/rt/src/chthreads.c ****   while (queue_notempty(tqp)) {
 2691              		.loc 1 901 3 is_stmt 1 view .LVU747
 2692              	.LVL117:
 2693              	.L79:
 2694              	.LBB646:
 2695              	.LBI646:
 564:./lib/chibios/os/rt/include/chschd.h **** 
 2696              		.loc 2 564 20 view .LVU748
 2697              	.LBB647:
 566:./lib/chibios/os/rt/include/chschd.h **** }
 2698              		.loc 2 566 3 view .LVU749
 566:./lib/chibios/os/rt/include/chschd.h **** }
 2699              		.loc 2 566 3 is_stmt 0 view .LVU750
 2700              	.LBE647:
 2701              	.LBE646:
 2702              		.loc 1 901 9 view .LVU751
 2703 0006 2368     		ldr	r3, [r4]
 2704 0008 9C42     		cmp	r4, r3
 2705 000a 00D1     		bne	.L80
 902:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 903:lib/chibios/os/rt/src/chthreads.c ****   }
 904:lib/chibios/os/rt/src/chthreads.c **** }
 2706              		.loc 1 904 1 view .LVU752
 2707              		@ sp needed
 2708              	.LVL118:
 2709              	.LVL119:
 2710              		.loc 1 904 1 view .LVU753
 2711 000c 70BD     		pop	{r4, r5, r6, pc}
 2712              	.LVL120:
 2713              	.L80:
 902:lib/chibios/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 2714              		.loc 1 902 5 is_stmt 1 view .LVU754
 2715              	.LBB648:
 2716              	.LBI648:
 425:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *tp;
 2717              		.loc 6 425 20 view .LVU755
 2718              	.LBB649:
 426:./lib/chibios/os/rt/include/chthreads.h **** 
 2719              		.loc 6 426 3 view .LVU756
 428:./lib/chibios/os/rt/include/chthreads.h **** 
 2720              		.loc 6 428 3 view .LVU757
 428:./lib/chibios/os/rt/include/chthreads.h **** 
 2721              		.loc 6 428 3 view .LVU758
 430:./lib/chibios/os/rt/include/chthreads.h **** 
 2722              		.loc 6 430 3 view .LVU759
 430:./lib/chibios/os/rt/include/chthreads.h **** 
 2723              		.loc 6 430 8 is_stmt 0 view .LVU760
 2724 000e 2000     		movs	r0, r4
 2725 0010 FFF7FEFF 		bl	queue_fifo_remove
 2726              	.LVL121:
 432:./lib/chibios/os/rt/include/chthreads.h **** 
 2727              		.loc 6 432 3 is_stmt 1 view .LVU761
 432:./lib/chibios/os/rt/include/chthreads.h **** 
 2728              		.loc 6 432 3 view .LVU762
 434:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2729              		.loc 6 434 3 view .LVU763
 434:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 2730              		.loc 6 434 16 is_stmt 0 view .LVU764
 2731 0014 0562     		str	r5, [r0, #32]
 2732              		.loc 6 435 3 is_stmt 1 view .LVU765
 2733              		.loc 6 435 10 is_stmt 0 view .LVU766
 2734 0016 FFF7FEFF 		bl	chSchReadyI
 2735              	.LVL122:
 2736              		.loc 6 435 10 view .LVU767
 2737 001a F4E7     		b	.L79
 2738              	.LBE649:
 2739              	.LBE648:
 2740              		.cfi_endproc
 2741              	.LFE179:
 2743              		.section	.rodata.chThdCreateStatic.str1.1,"aMS",%progbits,1
 2744              	.LC3:
 2745 0000 6E6F6E61 		.ascii	"noname\000"
 2745      6D6500
 2746              		.text
 2747              	.Letext0:
 2748              		.file 11 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\i
 2749              		.file 12 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\
 2750              		.file 13 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_std
 2751              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2752              		.file 15 "./lib/chibios/os/rt/include/chsystypes.h"
 2753              		.file 16 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 2754              		.file 17 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2755              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2756              		.file 19 "./lib/chibios/os/rt/include/chsem.h"
 2757              		.file 20 "./lib/chibios/os/rt/include/chmtx.h"
 2758              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 2759              		.file 22 "./lib/chibios/os/oslib/include/chmemcore.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chthreads.c
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:16     .text._thread_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:24     .text._thread_init:00000000 _thread_init
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:121    .text._thread_init:00000030 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:126    .text.chThdCreateSuspendedI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:133    .text.chThdCreateSuspendedI:00000000 chThdCreateSuspendedI
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:197    .text.chThdCreateSuspendedI:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:202    .text.chThdCreateSuspended:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:209    .text.chThdCreateSuspended:00000000 chThdCreateSuspended
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:316    .text.chThdCreateI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:323    .text.chThdCreateI:00000000 chThdCreateI
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:349    .text.chThdCreate:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:356    .text.chThdCreate:00000000 chThdCreate
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:469    .text.chThdCreateStatic:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:476    .text.chThdCreateStatic:00000000 chThdCreateStatic
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:617    .text.chThdCreateStatic:0000002c $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:623    .text.chThdStart:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:630    .text.chThdStart:00000000 chThdStart
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:738    .text.chThdAddRef:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:745    .text.chThdAddRef:00000000 chThdAddRef
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:836    .text.chThdRelease:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:843    .text.chThdRelease:00000000 chThdRelease
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:992    .text.chThdRelease:00000020 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:997    .text.chThdExitS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1004   .text.chThdExitS:00000000 chThdExitS
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1084   .text.chThdExitS:00000034 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1089   .text.chThdExit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1096   .text.chThdExit:00000000 chThdExit
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1159   .text.chThdWait:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1166   .text.chThdWait:00000000 chThdWait
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1304   .text.chThdWait:0000002c $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1309   .text.chThdSetPriority:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1316   .text.chThdSetPriority:00000000 chThdSetPriority
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1445   .text.chThdSetPriority:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1450   .text.chThdTerminate:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1457   .text.chThdTerminate:00000000 chThdTerminate
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1546   .text.chThdSleep:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1553   .text.chThdSleep:00000000 chThdSleep
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1670   .text.chThdSleepUntil:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1677   .text.chThdSleepUntil:00000000 chThdSleepUntil
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1841   .text.chThdSleepUntilWindowed:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:1848   .text.chThdSleepUntilWindowed:00000000 chThdSleepUntilWindowed
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2035   .text.chThdYield:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2042   .text.chThdYield:00000000 chThdYield
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2167   .text.chThdYield:0000001c $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2172   .text.chThdSuspendS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2179   .text.chThdSuspendS:00000000 chThdSuspendS
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2245   .text.chThdSuspendS:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2250   .text.chThdSuspendTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2257   .text.chThdSuspendTimeoutS:00000000 chThdSuspendTimeoutS
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2321   .text.chThdSuspendTimeoutS:0000001c $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2326   .text.chThdResumeI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2333   .text.chThdResumeI:00000000 chThdResumeI
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2380   .text.chThdResumeS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2387   .text.chThdResumeS:00000000 chThdResumeS
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2430   .text.chThdResume:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2437   .text.chThdResume:00000000 chThdResume
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2536   .text.chThdEnqueueTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2543   .text.chThdEnqueueTimeoutS:00000000 chThdEnqueueTimeoutS
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2593   .text.chThdEnqueueTimeoutS:00000020 $d
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2598   .text.chThdDequeueNextI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2605   .text.chThdDequeueNextI:00000000 chThdDequeueNextI
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2668   .text.chThdDequeueAllI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc0xMhu2.s:2675   .text.chThdDequeueAllI:00000000 chThdDequeueAllI

UNDEFINED SYMBOLS
ch
_port_thread_start
chSchReadyI
chSchWakeupS
chSchGoSleepS
list_remove
list_insert
chSchRescheduleS
chSchGoSleepTimeoutS
chSchDoRescheduleBehind
queue_insert
queue_fifo_remove
