   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"chevents.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.chEvtRegisterMaskWithFlags,"ax",%progbits
  16              		.align	1
  17              		.global	chEvtRegisterMaskWithFlags
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	chEvtRegisterMaskWithFlags:
  25              	.LVL0:
  26              	.LFB154:
  27              		.file 1 "lib/chibios/os/rt/src/chevents.c"
   1:lib/chibios/os/rt/src/chevents.c **** /*
   2:lib/chibios/os/rt/src/chevents.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chevents.c **** 
   4:lib/chibios/os/rt/src/chevents.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chevents.c **** 
   6:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chevents.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chevents.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chevents.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chevents.c **** 
  11:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chevents.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chevents.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chevents.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chevents.c **** 
  16:lib/chibios/os/rt/src/chevents.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chevents.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chevents.c **** */
  19:lib/chibios/os/rt/src/chevents.c **** /*
  20:lib/chibios/os/rt/src/chevents.c ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:lib/chibios/os/rt/src/chevents.c ****  */
  22:lib/chibios/os/rt/src/chevents.c **** 
  23:lib/chibios/os/rt/src/chevents.c **** /**
  24:lib/chibios/os/rt/src/chevents.c ****  * @file    chevents.c
  25:lib/chibios/os/rt/src/chevents.c ****  * @brief   Events code.
  26:lib/chibios/os/rt/src/chevents.c ****  *
  27:lib/chibios/os/rt/src/chevents.c ****  * @addtogroup events
  28:lib/chibios/os/rt/src/chevents.c ****  * @details Event Flags, Event Sources and Event Listeners.
  29:lib/chibios/os/rt/src/chevents.c ****  *          <h2>Operation mode</h2>
  30:lib/chibios/os/rt/src/chevents.c ****  *          Each thread has a mask of pending events inside its
  31:lib/chibios/os/rt/src/chevents.c ****  *          @p thread_t structure.
  32:lib/chibios/os/rt/src/chevents.c ****  *          Operations defined for events:
  33:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Wait</b>, the invoking thread goes to sleep until a certain
  34:lib/chibios/os/rt/src/chevents.c ****  *            AND/OR combination of events become pending.
  35:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Clear</b>, a mask of events is cleared from the pending
  36:lib/chibios/os/rt/src/chevents.c ****  *            events, the cleared events mask is returned (only the
  37:lib/chibios/os/rt/src/chevents.c ****  *            events that were actually pending and then cleared).
  38:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Signal</b>, an events mask is directly ORed to the mask of the
  39:lib/chibios/os/rt/src/chevents.c ****  *            signaled thread.
  40:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Broadcast</b>, each thread registered on an Event Source is
  41:lib/chibios/os/rt/src/chevents.c ****  *            signaled with the events specified in its Event Listener.
  42:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Dispatch</b>, an events mask is scanned and for each bit set
  43:lib/chibios/os/rt/src/chevents.c ****  *            to one an associated handler function is invoked. Bit masks are
  44:lib/chibios/os/rt/src/chevents.c ****  *            scanned from bit zero upward.
  45:lib/chibios/os/rt/src/chevents.c ****  *          .
  46:lib/chibios/os/rt/src/chevents.c ****  *          An Event Source is a special object that can be "broadcasted" by
  47:lib/chibios/os/rt/src/chevents.c ****  *          a thread or an interrupt service routine. Broadcasting an Event
  48:lib/chibios/os/rt/src/chevents.c ****  *          Source has the effect that all the threads registered on the
  49:lib/chibios/os/rt/src/chevents.c ****  *          Event Source will be signaled with an events mask.<br>
  50:lib/chibios/os/rt/src/chevents.c ****  *          An unlimited number of Event Sources can exists in a system and
  51:lib/chibios/os/rt/src/chevents.c ****  *          each thread can be listening on an unlimited number of
  52:lib/chibios/os/rt/src/chevents.c ****  *          them.
  53:lib/chibios/os/rt/src/chevents.c ****  * @pre     In order to use the Events APIs the @p CH_CFG_USE_EVENTS option must be
  54:lib/chibios/os/rt/src/chevents.c ****  *          enabled in @p chconf.h.
  55:lib/chibios/os/rt/src/chevents.c ****  * @post    Enabling events requires 1-4 (depending on the architecture)
  56:lib/chibios/os/rt/src/chevents.c ****  *          extra bytes in the @p thread_t structure.
  57:lib/chibios/os/rt/src/chevents.c ****  * @{
  58:lib/chibios/os/rt/src/chevents.c ****  */
  59:lib/chibios/os/rt/src/chevents.c **** 
  60:lib/chibios/os/rt/src/chevents.c **** #include "ch.h"
  61:lib/chibios/os/rt/src/chevents.c **** 
  62:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  63:lib/chibios/os/rt/src/chevents.c **** 
  64:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  65:lib/chibios/os/rt/src/chevents.c **** /* Module local definitions.                                                 */
  66:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  67:lib/chibios/os/rt/src/chevents.c **** 
  68:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  69:lib/chibios/os/rt/src/chevents.c **** /* Module exported variables.                                                */
  70:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  71:lib/chibios/os/rt/src/chevents.c **** 
  72:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  73:lib/chibios/os/rt/src/chevents.c **** /* Module local types.                                                       */
  74:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  75:lib/chibios/os/rt/src/chevents.c **** 
  76:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  77:lib/chibios/os/rt/src/chevents.c **** /* Module local variables.                                                   */
  78:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  79:lib/chibios/os/rt/src/chevents.c **** 
  80:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  81:lib/chibios/os/rt/src/chevents.c **** /* Module local functions.                                                   */
  82:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  83:lib/chibios/os/rt/src/chevents.c **** 
  84:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  85:lib/chibios/os/rt/src/chevents.c **** /* Module exported functions.                                                */
  86:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chevents.c **** 
  88:lib/chibios/os/rt/src/chevents.c **** /**
  89:lib/chibios/os/rt/src/chevents.c ****  * @brief   Registers an Event Listener on an Event Source.
  90:lib/chibios/os/rt/src/chevents.c ****  * @details Once a thread has registered as listener on an event source it
  91:lib/chibios/os/rt/src/chevents.c ****  *          will be notified of all events broadcasted there.
  92:lib/chibios/os/rt/src/chevents.c ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
  93:lib/chibios/os/rt/src/chevents.c ****  *          different threads.
  94:lib/chibios/os/rt/src/chevents.c ****  *
  95:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
  96:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
  97:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events to be ORed to the thread when
  98:lib/chibios/os/rt/src/chevents.c ****  *                      the event source is broadcasted
  99:lib/chibios/os/rt/src/chevents.c ****  * @param[in] wflags    mask of flags the listening thread is interested in
 100:lib/chibios/os/rt/src/chevents.c ****  *
 101:lib/chibios/os/rt/src/chevents.c ****  * @api
 102:lib/chibios/os/rt/src/chevents.c ****  */
 103:lib/chibios/os/rt/src/chevents.c **** void chEvtRegisterMaskWithFlags(event_source_t *esp,
 104:lib/chibios/os/rt/src/chevents.c ****                                 event_listener_t *elp,
 105:lib/chibios/os/rt/src/chevents.c ****                                 eventmask_t events,
 106:lib/chibios/os/rt/src/chevents.c ****                                 eventflags_t wflags) {
  28              		.loc 1 106 54 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 107:lib/chibios/os/rt/src/chevents.c **** 
 108:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
  32              		.loc 1 108 3 view .LVU1
  33              		.loc 1 108 3 view .LVU2
 109:lib/chibios/os/rt/src/chevents.c **** 
 110:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
  34              		.loc 1 110 3 view .LVU3
  35              	.LBB144:
  36              	.LBI144:
  37              		.file 2 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
  38              		.loc 2 353 20 view .LVU4
  39              	.LBE144:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
  40              		.loc 2 355 3 view .LVU5
  41              	.LBB152:
  42              	.LBB145:
  43              	.LBI145:
  44              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
  45              		.loc 3 387 20 view .LVU6
  46              	.LBE145:
  47              	.LBE152:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
  48              		.loc 3 389 3 view .LVU7
  49              	.LBB153:
  50              	.LBB150:
  51              	.LBB146:
  52              	.LBI146:
  53              		.file 4 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  54              		.loc 4 140 27 view .LVU8
  55              	.LBB147:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  56              		.loc 4 142 3 view .LVU9
  57              	.LBE147:
  58              	.LBE146:
  59              	.LBE150:
  60              	.LBE153:
 106:lib/chibios/os/rt/src/chevents.c **** 
  61              		.loc 1 106 54 is_stmt 0 view .LVU10
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66              	.LBB154:
  67              	.LBB151:
  68              	.LBB149:
  69              	.LBB148:
  70              		.loc 4 142 3 view .LVU11
  71              		.syntax divided
  72              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
  73 0002 72B6     		cpsid i
  74              	@ 0 "" 2
  75              		.thumb
  76              		.syntax unified
  77              	.LBE148:
  78              	.LBE149:
  79              	.LBE151:
  80              	.LBE154:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
  81              		.loc 2 356 34 is_stmt 1 view .LVU12
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
  82              		.loc 2 357 20 view .LVU13
 111:lib/chibios/os/rt/src/chevents.c ****   elp->next     = esp->next;
  83              		.loc 1 111 3 view .LVU14
  84              		.loc 1 111 17 is_stmt 0 view .LVU15
  85 0004 0468     		ldr	r4, [r0]
  86 0006 0C60     		str	r4, [r1]
 112:lib/chibios/os/rt/src/chevents.c ****   esp->next     = elp;
  87              		.loc 1 112 3 is_stmt 1 view .LVU16
  88              		.loc 1 112 17 is_stmt 0 view .LVU17
  89 0008 0160     		str	r1, [r0]
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
  90              		.loc 1 113 3 is_stmt 1 view .LVU18
 114:lib/chibios/os/rt/src/chevents.c ****   elp->events   = events;
  91              		.loc 1 114 3 view .LVU19
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
  92              		.loc 1 113 19 is_stmt 0 view .LVU20
  93 000a 0448     		ldr	r0, .L2
  94              	.LVL1:
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
  95              		.loc 1 113 17 view .LVU21
  96 000c 8069     		ldr	r0, [r0, #24]
  97              		.loc 1 114 17 view .LVU22
  98 000e 8A60     		str	r2, [r1, #8]
 115:lib/chibios/os/rt/src/chevents.c ****   elp->flags    = (eventflags_t)0;
  99              		.loc 1 115 3 is_stmt 1 view .LVU23
 100              		.loc 1 115 17 is_stmt 0 view .LVU24
 101 0010 0022     		movs	r2, #0
 102              	.LVL2:
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
 103              		.loc 1 113 17 view .LVU25
 104 0012 4860     		str	r0, [r1, #4]
 105              		.loc 1 115 17 view .LVU26
 106 0014 CA60     		str	r2, [r1, #12]
 116:lib/chibios/os/rt/src/chevents.c ****   elp->wflags   = wflags;
 107              		.loc 1 116 3 is_stmt 1 view .LVU27
 108              		.loc 1 116 17 is_stmt 0 view .LVU28
 109 0016 0B61     		str	r3, [r1, #16]
 117:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 110              		.loc 1 117 3 is_stmt 1 view .LVU29
 111              	.LBB155:
 112              	.LBI155:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 113              		.loc 2 365 20 view .LVU30
 114              	.LBB156:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 115              		.loc 2 367 22 view .LVU31
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 116              		.loc 2 368 33 view .LVU32
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 117              		.loc 2 374 3 view .LVU33
 118              		.loc 2 374 3 view .LVU34
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 119              		.loc 2 378 3 view .LVU35
 120              	.LBB157:
 121              	.LBI157:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 122              		.loc 3 396 20 view .LVU36
 123              	.LBE157:
 124              	.LBE156:
 125              	.LBE155:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 126              		.loc 3 398 3 view .LVU37
 127              	.LBB162:
 128              	.LBB161:
 129              	.LBB160:
 130              	.LBB158:
 131              	.LBI158:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 132              		.loc 4 129 27 view .LVU38
 133              	.LBB159:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 134              		.loc 4 131 3 view .LVU39
 135              		.syntax divided
 136              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 137 0018 62B6     		cpsie i
 138              	@ 0 "" 2
 139              		.thumb
 140              		.syntax unified
 141              	.LBE159:
 142              	.LBE158:
 143              	.LBE160:
 144              	.LBE161:
 145              	.LBE162:
 118:lib/chibios/os/rt/src/chevents.c **** }
 146              		.loc 1 118 1 is_stmt 0 view .LVU40
 147              		@ sp needed
 148 001a 10BD     		pop	{r4, pc}
 149              	.L3:
 150              		.align	2
 151              	.L2:
 152 001c 00000000 		.word	ch
 153              		.cfi_endproc
 154              	.LFE154:
 156              		.section	.text.chEvtUnregister,"ax",%progbits
 157              		.align	1
 158              		.global	chEvtUnregister
 159              		.syntax unified
 160              		.code	16
 161              		.thumb_func
 162              		.fpu softvfp
 164              	chEvtUnregister:
 165              	.LVL3:
 166              	.LFB155:
 119:lib/chibios/os/rt/src/chevents.c **** 
 120:lib/chibios/os/rt/src/chevents.c **** /**
 121:lib/chibios/os/rt/src/chevents.c ****  * @brief   Unregisters an Event Listener from its Event Source.
 122:lib/chibios/os/rt/src/chevents.c ****  * @note    If the event listener is not registered on the specified event
 123:lib/chibios/os/rt/src/chevents.c ****  *          source then the function does nothing.
 124:lib/chibios/os/rt/src/chevents.c ****  * @note    For optimal performance it is better to perform the unregister
 125:lib/chibios/os/rt/src/chevents.c ****  *          operations in inverse order of the register operations (elements
 126:lib/chibios/os/rt/src/chevents.c ****  *          are found on top of the list).
 127:lib/chibios/os/rt/src/chevents.c ****  *
 128:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
 129:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 130:lib/chibios/os/rt/src/chevents.c ****  *
 131:lib/chibios/os/rt/src/chevents.c ****  * @api
 132:lib/chibios/os/rt/src/chevents.c ****  */
 133:lib/chibios/os/rt/src/chevents.c **** void chEvtUnregister(event_source_t *esp, event_listener_t *elp) {
 167              		.loc 1 133 66 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 134:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *p;
 172              		.loc 1 134 3 view .LVU42
 135:lib/chibios/os/rt/src/chevents.c **** 
 136:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
 173              		.loc 1 136 3 view .LVU43
 174              		.loc 1 136 3 view .LVU44
 137:lib/chibios/os/rt/src/chevents.c **** 
 138:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 139:lib/chibios/os/rt/src/chevents.c ****   p = (event_listener_t *)esp;
 175              		.loc 1 139 3 view .LVU45
 140:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 141:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 176              		.loc 1 141 3 view .LVU46
 177              	.LBB163:
 178              	.LBI163:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 179              		.loc 2 353 20 view .LVU47
 180              	.LBE163:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 181              		.loc 2 355 3 view .LVU48
 182              	.LBB168:
 183              	.LBB164:
 184              	.LBI164:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 185              		.loc 3 387 20 view .LVU49
 186              	.LBE164:
 187              	.LBE168:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 188              		.loc 3 389 3 view .LVU50
 189              	.LBB169:
 190              	.LBB167:
 191              	.LBB165:
 192              	.LBI165:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 193              		.loc 4 140 27 view .LVU51
 194              	.LBB166:
 195              		.loc 4 142 3 view .LVU52
 196              		.syntax divided
 197              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 198 0000 72B6     		cpsid i
 199              	@ 0 "" 2
 200              		.thumb
 201              		.syntax unified
 202              	.LBE166:
 203              	.LBE165:
 204              	.LBE167:
 205              	.LBE169:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 206              		.loc 2 356 34 view .LVU53
 357:./lib/chibios/os/rt/include/chsys.h **** }
 207              		.loc 2 357 20 view .LVU54
 139:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 208              		.loc 1 139 5 is_stmt 0 view .LVU55
 209 0002 0200     		movs	r2, r0
 210              	.LVL4:
 211              	.L5:
 142:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 143:lib/chibios/os/rt/src/chevents.c ****   while (p->next != (event_listener_t *)esp) {
 212              		.loc 1 143 11 view .LVU56
 213 0004 1368     		ldr	r3, [r2]
 214              		.loc 1 143 9 view .LVU57
 215 0006 8342     		cmp	r3, r0
 216 0008 03D0     		beq	.L6
 144:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 145:lib/chibios/os/rt/src/chevents.c ****     if (p->next == elp) {
 217              		.loc 1 145 5 is_stmt 1 view .LVU58
 218              		.loc 1 145 8 is_stmt 0 view .LVU59
 219 000a 8B42     		cmp	r3, r1
 220 000c 03D1     		bne	.L8
 146:lib/chibios/os/rt/src/chevents.c ****       p->next = elp->next;
 221              		.loc 1 146 7 is_stmt 1 view .LVU60
 222              		.loc 1 146 20 is_stmt 0 view .LVU61
 223 000e 0B68     		ldr	r3, [r1]
 224 0010 1360     		str	r3, [r2]
 147:lib/chibios/os/rt/src/chevents.c ****       break;
 225              		.loc 1 147 7 is_stmt 1 view .LVU62
 226              	.L6:
 148:lib/chibios/os/rt/src/chevents.c ****     }
 149:lib/chibios/os/rt/src/chevents.c ****     p = p->next;
 150:lib/chibios/os/rt/src/chevents.c ****   }
 151:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 227              		.loc 1 151 3 view .LVU63
 228              	.LBB170:
 229              	.LBI170:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 230              		.loc 2 365 20 view .LVU64
 231              	.LBB171:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 232              		.loc 2 367 22 view .LVU65
 368:./lib/chibios/os/rt/include/chsys.h **** 
 233              		.loc 2 368 33 view .LVU66
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 234              		.loc 2 374 3 view .LVU67
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 235              		.loc 2 374 3 view .LVU68
 236              		.loc 2 378 3 view .LVU69
 237              	.LBB172:
 238              	.LBI172:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 239              		.loc 3 396 20 view .LVU70
 240              	.LBE172:
 241              	.LBE171:
 242              	.LBE170:
 243              		.loc 3 398 3 view .LVU71
 244              	.LBB177:
 245              	.LBB176:
 246              	.LBB175:
 247              	.LBB173:
 248              	.LBI173:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249              		.loc 4 129 27 view .LVU72
 250              	.LBB174:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 251              		.loc 4 131 3 view .LVU73
 252              		.syntax divided
 253              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 254 0012 62B6     		cpsie i
 255              	@ 0 "" 2
 256              		.thumb
 257              		.syntax unified
 258              	.LBE174:
 259              	.LBE173:
 260              	.LBE175:
 261              	.LBE176:
 262              	.LBE177:
 152:lib/chibios/os/rt/src/chevents.c **** }
 263              		.loc 1 152 1 is_stmt 0 view .LVU74
 264              		@ sp needed
 265 0014 7047     		bx	lr
 266              	.L8:
 267 0016 1A00     		movs	r2, r3
 268              	.LVL5:
 269              		.loc 1 152 1 view .LVU75
 270 0018 F4E7     		b	.L5
 271              		.cfi_endproc
 272              	.LFE155:
 274              		.section	.text.chEvtGetAndClearEventsI,"ax",%progbits
 275              		.align	1
 276              		.global	chEvtGetAndClearEventsI
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 280              		.fpu softvfp
 282              	chEvtGetAndClearEventsI:
 283              	.LVL6:
 284              	.LFB156:
 153:lib/chibios/os/rt/src/chevents.c **** 
 154:lib/chibios/os/rt/src/chevents.c **** /**
 155:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 156:lib/chibios/os/rt/src/chevents.c ****  *
 157:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 158:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 159:lib/chibios/os/rt/src/chevents.c ****  *
 160:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 161:lib/chibios/os/rt/src/chevents.c ****  */
 162:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEventsI(eventmask_t events) {
 285              		.loc 1 162 57 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 163:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 290              		.loc 1 163 3 view .LVU77
 164:lib/chibios/os/rt/src/chevents.c **** 
 165:lib/chibios/os/rt/src/chevents.c ****   m = currp->epending & events;
 291              		.loc 1 165 3 view .LVU78
 292              		.loc 1 165 7 is_stmt 0 view .LVU79
 293 0000 034B     		ldr	r3, .L10
 166:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 167:lib/chibios/os/rt/src/chevents.c **** 
 168:lib/chibios/os/rt/src/chevents.c ****   return m;
 169:lib/chibios/os/rt/src/chevents.c **** }
 294              		.loc 1 169 1 view .LVU80
 295              		@ sp needed
 165:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 296              		.loc 1 165 7 view .LVU81
 297 0002 9A69     		ldr	r2, [r3, #24]
 165:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 298              		.loc 1 165 12 view .LVU82
 299 0004 136B     		ldr	r3, [r2, #48]
 300              	.LVL7:
 166:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 301              		.loc 1 166 3 is_stmt 1 view .LVU83
 166:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 302              		.loc 1 166 19 is_stmt 0 view .LVU84
 303 0006 1900     		movs	r1, r3
 304 0008 8143     		bics	r1, r0
 305 000a 1163     		str	r1, [r2, #48]
 168:lib/chibios/os/rt/src/chevents.c **** }
 306              		.loc 1 168 3 is_stmt 1 view .LVU85
 165:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 307              		.loc 1 165 5 is_stmt 0 view .LVU86
 308 000c 1840     		ands	r0, r3
 309              	.LVL8:
 310              		.loc 1 169 1 view .LVU87
 311 000e 7047     		bx	lr
 312              	.L11:
 313              		.align	2
 314              	.L10:
 315 0010 00000000 		.word	ch
 316              		.cfi_endproc
 317              	.LFE156:
 319              		.section	.text.chEvtGetAndClearEvents,"ax",%progbits
 320              		.align	1
 321              		.global	chEvtGetAndClearEvents
 322              		.syntax unified
 323              		.code	16
 324              		.thumb_func
 325              		.fpu softvfp
 327              	chEvtGetAndClearEvents:
 328              	.LVL9:
 329              	.LFB157:
 170:lib/chibios/os/rt/src/chevents.c **** 
 171:lib/chibios/os/rt/src/chevents.c **** /**
 172:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 173:lib/chibios/os/rt/src/chevents.c ****  *
 174:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 175:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 176:lib/chibios/os/rt/src/chevents.c ****  *
 177:lib/chibios/os/rt/src/chevents.c ****  * @api
 178:lib/chibios/os/rt/src/chevents.c ****  */
 179:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEvents(eventmask_t events) {
 330              		.loc 1 179 56 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 180:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 334              		.loc 1 180 3 view .LVU89
 181:lib/chibios/os/rt/src/chevents.c **** 
 182:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 335              		.loc 1 182 3 view .LVU90
 336              	.LBB178:
 337              	.LBI178:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 338              		.loc 2 353 20 view .LVU91
 339              	.LBE178:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 340              		.loc 2 355 3 view .LVU92
 341              	.LBB186:
 342              	.LBB179:
 343              	.LBI179:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344              		.loc 3 387 20 view .LVU93
 345              	.LBE179:
 346              	.LBE186:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 347              		.loc 3 389 3 view .LVU94
 348              	.LBB187:
 349              	.LBB184:
 350              	.LBB180:
 351              	.LBI180:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 352              		.loc 4 140 27 view .LVU95
 353              	.LBB181:
 354              		.loc 4 142 3 view .LVU96
 355              	.LBE181:
 356              	.LBE180:
 357              	.LBE184:
 358              	.LBE187:
 179:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 359              		.loc 1 179 56 is_stmt 0 view .LVU97
 360 0000 10B5     		push	{r4, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364              	.LBB188:
 365              	.LBB185:
 366              	.LBB183:
 367              	.LBB182:
 368              		.loc 4 142 3 view .LVU98
 369              		.syntax divided
 370              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 371 0002 72B6     		cpsid i
 372              	@ 0 "" 2
 373              		.thumb
 374              		.syntax unified
 375              	.LBE182:
 376              	.LBE183:
 377              	.LBE185:
 378              	.LBE188:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 379              		.loc 2 356 34 is_stmt 1 view .LVU99
 357:./lib/chibios/os/rt/include/chsys.h **** }
 380              		.loc 2 357 20 view .LVU100
 183:lib/chibios/os/rt/src/chevents.c ****   m = chEvtGetAndClearEventsI(events);
 381              		.loc 1 183 3 view .LVU101
 382              		.loc 1 183 7 is_stmt 0 view .LVU102
 383 0004 FFF7FEFF 		bl	chEvtGetAndClearEventsI
 384              	.LVL10:
 184:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 385              		.loc 1 184 3 is_stmt 1 view .LVU103
 386              	.LBB189:
 387              	.LBI189:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 388              		.loc 2 365 20 view .LVU104
 389              	.LBB190:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 390              		.loc 2 367 22 view .LVU105
 368:./lib/chibios/os/rt/include/chsys.h **** 
 391              		.loc 2 368 33 view .LVU106
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 392              		.loc 2 374 3 view .LVU107
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 393              		.loc 2 374 3 view .LVU108
 394              		.loc 2 378 3 view .LVU109
 395              	.LBB191:
 396              	.LBI191:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 397              		.loc 3 396 20 view .LVU110
 398              	.LBE191:
 399              	.LBE190:
 400              	.LBE189:
 401              		.loc 3 398 3 view .LVU111
 402              	.LBB196:
 403              	.LBB195:
 404              	.LBB194:
 405              	.LBB192:
 406              	.LBI192:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 407              		.loc 4 129 27 view .LVU112
 408              	.LBB193:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 409              		.loc 4 131 3 view .LVU113
 410              		.syntax divided
 411              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 412 0008 62B6     		cpsie i
 413              	@ 0 "" 2
 414              		.thumb
 415              		.syntax unified
 416              	.LBE193:
 417              	.LBE192:
 418              	.LBE194:
 419              	.LBE195:
 420              	.LBE196:
 185:lib/chibios/os/rt/src/chevents.c **** 
 186:lib/chibios/os/rt/src/chevents.c ****   return m;
 421              		.loc 1 186 3 view .LVU114
 187:lib/chibios/os/rt/src/chevents.c **** }
 422              		.loc 1 187 1 is_stmt 0 view .LVU115
 423              		@ sp needed
 424 000a 10BD     		pop	{r4, pc}
 425              		.cfi_endproc
 426              	.LFE157:
 428              		.section	.text.chEvtAddEvents,"ax",%progbits
 429              		.align	1
 430              		.global	chEvtAddEvents
 431              		.syntax unified
 432              		.code	16
 433              		.thumb_func
 434              		.fpu softvfp
 436              	chEvtAddEvents:
 437              	.LVL11:
 438              	.LFB158:
 188:lib/chibios/os/rt/src/chevents.c **** 
 189:lib/chibios/os/rt/src/chevents.c **** /**
 190:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds (OR) a set of events to the current thread, this is
 191:lib/chibios/os/rt/src/chevents.c ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 192:lib/chibios/os/rt/src/chevents.c ****  *
 193:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be added
 194:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of currently pending events.
 195:lib/chibios/os/rt/src/chevents.c ****  *
 196:lib/chibios/os/rt/src/chevents.c ****  * @api
 197:lib/chibios/os/rt/src/chevents.c ****  */
 198:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtAddEvents(eventmask_t events) {
 439              		.loc 1 198 48 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 199:lib/chibios/os/rt/src/chevents.c ****   eventmask_t newevt;
 444              		.loc 1 199 3 view .LVU117
 200:lib/chibios/os/rt/src/chevents.c **** 
 201:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 445              		.loc 1 201 3 view .LVU118
 446              	.LBB208:
 447              	.LBI208:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 448              		.loc 2 353 20 view .LVU119
 449              	.LBE208:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 450              		.loc 2 355 3 view .LVU120
 451              	.LBB213:
 452              	.LBB209:
 453              	.LBI209:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 454              		.loc 3 387 20 view .LVU121
 455              	.LBE209:
 456              	.LBE213:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 457              		.loc 3 389 3 view .LVU122
 458              	.LBB214:
 459              	.LBB212:
 460              	.LBB210:
 461              	.LBI210:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 462              		.loc 4 140 27 view .LVU123
 463              	.LBB211:
 464              		.loc 4 142 3 view .LVU124
 465              		.syntax divided
 466              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 467 0000 72B6     		cpsid i
 468              	@ 0 "" 2
 469              		.thumb
 470              		.syntax unified
 471              	.LBE211:
 472              	.LBE210:
 473              	.LBE212:
 474              	.LBE214:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 475              		.loc 2 356 34 view .LVU125
 357:./lib/chibios/os/rt/include/chsys.h **** }
 476              		.loc 2 357 20 view .LVU126
 202:lib/chibios/os/rt/src/chevents.c ****   newevt = chEvtAddEventsI(events);
 477              		.loc 1 202 3 view .LVU127
 478              	.LVL12:
 479              	.LBB215:
 480              	.LBI215:
 481              		.file 5 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 174:./lib/chibios/os/rt/include/chevents.h **** }
 175:./lib/chibios/os/rt/include/chevents.h **** 
 176:./lib/chibios/os/rt/include/chevents.h **** /**
 177:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 178:./lib/chibios/os/rt/include/chevents.h ****  * @details Once a thread has registered as listener on an event source it
 179:./lib/chibios/os/rt/include/chevents.h ****  *          will be notified of all events broadcasted there.
 180:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
 181:./lib/chibios/os/rt/include/chevents.h ****  *          different threads.
 182:./lib/chibios/os/rt/include/chevents.h ****  *
 183:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 184:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 185:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the mask of events to be ORed to the thread when
 186:./lib/chibios/os/rt/include/chevents.h ****  *                      the event source is broadcasted
 187:./lib/chibios/os/rt/include/chevents.h ****  *
 188:./lib/chibios/os/rt/include/chevents.h ****  * @api
 189:./lib/chibios/os/rt/include/chevents.h ****  */
 190:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegisterMask(event_source_t *esp,
 191:./lib/chibios/os/rt/include/chevents.h ****                                      event_listener_t *elp,
 192:./lib/chibios/os/rt/include/chevents.h ****                                      eventmask_t events) {
 193:./lib/chibios/os/rt/include/chevents.h **** 
 194:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMaskWithFlags(esp, elp, events, (eventflags_t)-1);
 195:./lib/chibios/os/rt/include/chevents.h **** }
 196:./lib/chibios/os/rt/include/chevents.h **** 
 197:./lib/chibios/os/rt/include/chevents.h **** /**
 198:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 199:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can use the same event identifier, the
 200:./lib/chibios/os/rt/include/chevents.h ****  *          listener will share the callback function.
 201:./lib/chibios/os/rt/include/chevents.h ****  *
 202:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the  @p event_source_t structure
 203:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 204:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] event     numeric identifier assigned to the Event Listener.
 205:./lib/chibios/os/rt/include/chevents.h ****  *                      The value must range between zero and the size, in bit,
 206:./lib/chibios/os/rt/include/chevents.h ****  *                      of the @p eventmask_t type minus one.
 207:./lib/chibios/os/rt/include/chevents.h ****  *
 208:./lib/chibios/os/rt/include/chevents.h ****  * @api
 209:./lib/chibios/os/rt/include/chevents.h ****  */
 210:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegister(event_source_t *esp,
 211:./lib/chibios/os/rt/include/chevents.h ****                                  event_listener_t *elp,
 212:./lib/chibios/os/rt/include/chevents.h ****                                  eventid_t event) {
 213:./lib/chibios/os/rt/include/chevents.h **** 
 214:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMask(esp, elp, EVENT_MASK(event));
 215:./lib/chibios/os/rt/include/chevents.h **** }
 216:./lib/chibios/os/rt/include/chevents.h **** 
 217:./lib/chibios/os/rt/include/chevents.h **** /**
 218:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Verifies if there is at least one @p event_listener_t registered.
 219:./lib/chibios/os/rt/include/chevents.h ****  *
 220:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:./lib/chibios/os/rt/include/chevents.h ****  * @return              The event source status.
 222:./lib/chibios/os/rt/include/chevents.h ****  *
 223:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 224:./lib/chibios/os/rt/include/chevents.h ****  */
 225:./lib/chibios/os/rt/include/chevents.h **** static inline bool chEvtIsListeningI(event_source_t *esp) {
 226:./lib/chibios/os/rt/include/chevents.h **** 
 227:./lib/chibios/os/rt/include/chevents.h ****   return (bool)(esp != (event_source_t *)esp->next);
 228:./lib/chibios/os/rt/include/chevents.h **** }
 229:./lib/chibios/os/rt/include/chevents.h **** 
 230:./lib/chibios/os/rt/include/chevents.h **** /**
 231:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 232:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 233:./lib/chibios/os/rt/include/chevents.h ****  *
 234:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 235:./lib/chibios/os/rt/include/chevents.h ****  *
 236:./lib/chibios/os/rt/include/chevents.h ****  * @api
 237:./lib/chibios/os/rt/include/chevents.h ****  */
 238:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcast(event_source_t *esp) {
 239:./lib/chibios/os/rt/include/chevents.h **** 
 240:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlags(esp, (eventflags_t)0);
 241:./lib/chibios/os/rt/include/chevents.h **** }
 242:./lib/chibios/os/rt/include/chevents.h **** 
 243:./lib/chibios/os/rt/include/chevents.h **** /**
 244:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 245:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 246:./lib/chibios/os/rt/include/chevents.h ****  * @post    This function does not reschedule so a call to a rescheduling
 247:./lib/chibios/os/rt/include/chevents.h ****  *          function must be performed before unlocking the kernel. Note that
 248:./lib/chibios/os/rt/include/chevents.h ****  *          interrupt handlers always reschedule on exit so an explicit
 249:./lib/chibios/os/rt/include/chevents.h ****  *          reschedule must not be performed in ISRs.
 250:./lib/chibios/os/rt/include/chevents.h ****  *
 251:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 252:./lib/chibios/os/rt/include/chevents.h ****  *
 253:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 254:./lib/chibios/os/rt/include/chevents.h ****  */
 255:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcastI(event_source_t *esp) {
 256:./lib/chibios/os/rt/include/chevents.h **** 
 257:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlagsI(esp, (eventflags_t)0);
 258:./lib/chibios/os/rt/include/chevents.h **** }
 259:./lib/chibios/os/rt/include/chevents.h **** 
 260:./lib/chibios/os/rt/include/chevents.h **** /**
 261:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Adds (OR) a set of events to the current thread, this is
 262:./lib/chibios/os/rt/include/chevents.h ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 263:./lib/chibios/os/rt/include/chevents.h ****  *
 264:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the events to be added
 265:./lib/chibios/os/rt/include/chevents.h ****  * @return              The mask of currently pending events.
 266:./lib/chibios/os/rt/include/chevents.h ****  *
 267:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 268:./lib/chibios/os/rt/include/chevents.h ****  */
 269:./lib/chibios/os/rt/include/chevents.h **** static inline eventmask_t chEvtAddEventsI(eventmask_t events) {
 482              		.loc 5 269 27 view .LVU128
 483              	.LBB216:
 270:./lib/chibios/os/rt/include/chevents.h **** 
 271:./lib/chibios/os/rt/include/chevents.h ****   return currp->epending |= events;
 484              		.loc 5 271 3 view .LVU129
 485              		.loc 5 271 10 is_stmt 0 view .LVU130
 486 0002 034B     		ldr	r3, .L14
 487 0004 9B69     		ldr	r3, [r3, #24]
 488              		.loc 5 271 26 view .LVU131
 489 0006 1A6B     		ldr	r2, [r3, #48]
 490 0008 1043     		orrs	r0, r2
 491              	.LVL13:
 492              		.loc 5 271 26 view .LVU132
 493 000a 1863     		str	r0, [r3, #48]
 494              	.LVL14:
 495              		.loc 5 271 26 view .LVU133
 496              	.LBE216:
 497              	.LBE215:
 203:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 498              		.loc 1 203 3 is_stmt 1 view .LVU134
 499              	.LBB217:
 500              	.LBI217:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 501              		.loc 2 365 20 view .LVU135
 502              	.LBB218:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 503              		.loc 2 367 22 view .LVU136
 368:./lib/chibios/os/rt/include/chsys.h **** 
 504              		.loc 2 368 33 view .LVU137
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 505              		.loc 2 374 3 view .LVU138
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 506              		.loc 2 374 3 view .LVU139
 507              		.loc 2 378 3 view .LVU140
 508              	.LBB219:
 509              	.LBI219:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 510              		.loc 3 396 20 view .LVU141
 511              	.LBE219:
 512              	.LBE218:
 513              	.LBE217:
 514              		.loc 3 398 3 view .LVU142
 515              	.LBB224:
 516              	.LBB223:
 517              	.LBB222:
 518              	.LBB220:
 519              	.LBI220:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 520              		.loc 4 129 27 view .LVU143
 521              	.LBB221:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 522              		.loc 4 131 3 view .LVU144
 523              		.syntax divided
 524              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 525 000c 62B6     		cpsie i
 526              	@ 0 "" 2
 527              		.thumb
 528              		.syntax unified
 529              	.LBE221:
 530              	.LBE220:
 531              	.LBE222:
 532              	.LBE223:
 533              	.LBE224:
 204:lib/chibios/os/rt/src/chevents.c **** 
 205:lib/chibios/os/rt/src/chevents.c ****   return newevt;
 534              		.loc 1 205 3 view .LVU145
 206:lib/chibios/os/rt/src/chevents.c **** }
 535              		.loc 1 206 1 is_stmt 0 view .LVU146
 536              		@ sp needed
 537 000e 7047     		bx	lr
 538              	.L15:
 539              		.align	2
 540              	.L14:
 541 0010 00000000 		.word	ch
 542              		.cfi_endproc
 543              	.LFE158:
 545              		.section	.text.chEvtGetAndClearFlags,"ax",%progbits
 546              		.align	1
 547              		.global	chEvtGetAndClearFlags
 548              		.syntax unified
 549              		.code	16
 550              		.thumb_func
 551              		.fpu softvfp
 553              	chEvtGetAndClearFlags:
 554              	.LVL15:
 555              	.LFB160:
 207:lib/chibios/os/rt/src/chevents.c **** 
 208:lib/chibios/os/rt/src/chevents.c **** /**
 209:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 210:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 211:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 212:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 213:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 214:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 215:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 216:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 217:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 218:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 219:lib/chibios/os/rt/src/chevents.c ****  *
 220:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 222:lib/chibios/os/rt/src/chevents.c ****  *
 223:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 224:lib/chibios/os/rt/src/chevents.c ****  */
 225:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags) {
 226:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 227:lib/chibios/os/rt/src/chevents.c **** 
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 229:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 230:lib/chibios/os/rt/src/chevents.c **** 
 231:lib/chibios/os/rt/src/chevents.c ****   elp = esp->next;
 232:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 233:lib/chibios/os/rt/src/chevents.c ****   while (elp != (event_listener_t *)esp) {
 234:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 235:lib/chibios/os/rt/src/chevents.c ****     elp->flags |= flags;
 236:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 237:lib/chibios/os/rt/src/chevents.c ****        source does not emit any flag.*/
 238:lib/chibios/os/rt/src/chevents.c ****     if ((flags == (eventflags_t)0) ||
 239:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 240:lib/chibios/os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 241:lib/chibios/os/rt/src/chevents.c ****     }
 242:lib/chibios/os/rt/src/chevents.c ****     elp = elp->next;
 243:lib/chibios/os/rt/src/chevents.c ****   }
 244:lib/chibios/os/rt/src/chevents.c **** }
 245:lib/chibios/os/rt/src/chevents.c **** 
 246:lib/chibios/os/rt/src/chevents.c **** /**
 247:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the flags associated to an @p event_listener_t.
 248:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 249:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 250:lib/chibios/os/rt/src/chevents.c ****  *
 251:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 252:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 253:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 254:lib/chibios/os/rt/src/chevents.c ****  *
 255:lib/chibios/os/rt/src/chevents.c ****  * @api
 256:lib/chibios/os/rt/src/chevents.c ****  */
 257:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlags(event_listener_t *elp) {
 556              		.loc 1 257 59 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 258:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 561              		.loc 1 258 3 view .LVU148
 259:lib/chibios/os/rt/src/chevents.c **** 
 260:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 562              		.loc 1 260 3 view .LVU149
 563              	.LBB225:
 564              	.LBI225:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 565              		.loc 2 353 20 view .LVU150
 566              	.LBE225:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 567              		.loc 2 355 3 view .LVU151
 568              	.LBB230:
 569              	.LBB226:
 570              	.LBI226:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 571              		.loc 3 387 20 view .LVU152
 572              	.LBE226:
 573              	.LBE230:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 574              		.loc 3 389 3 view .LVU153
 575              	.LBB231:
 576              	.LBB229:
 577              	.LBB227:
 578              	.LBI227:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 579              		.loc 4 140 27 view .LVU154
 580              	.LBB228:
 581              		.loc 4 142 3 view .LVU155
 582              		.syntax divided
 583              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 584 0000 72B6     		cpsid i
 585              	@ 0 "" 2
 586              		.thumb
 587              		.syntax unified
 588              	.LBE228:
 589              	.LBE227:
 590              	.LBE229:
 591              	.LBE231:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 592              		.loc 2 356 34 view .LVU156
 357:./lib/chibios/os/rt/include/chsys.h **** }
 593              		.loc 2 357 20 view .LVU157
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 594              		.loc 1 261 3 view .LVU158
 262:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 595              		.loc 1 262 14 is_stmt 0 view .LVU159
 596 0002 0022     		movs	r2, #0
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 597              		.loc 1 261 9 view .LVU160
 598 0004 C368     		ldr	r3, [r0, #12]
 599              	.LVL16:
 600              		.loc 1 262 3 is_stmt 1 view .LVU161
 601              		.loc 1 262 14 is_stmt 0 view .LVU162
 602 0006 C260     		str	r2, [r0, #12]
 263:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 603              		.loc 1 263 3 is_stmt 1 view .LVU163
 604              	.LBB232:
 605              	.LBI232:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 606              		.loc 2 365 20 view .LVU164
 607              	.LBB233:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 608              		.loc 2 367 22 view .LVU165
 368:./lib/chibios/os/rt/include/chsys.h **** 
 609              		.loc 2 368 33 view .LVU166
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 610              		.loc 2 374 3 view .LVU167
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 611              		.loc 2 374 3 view .LVU168
 612              		.loc 2 378 3 view .LVU169
 613              	.LBB234:
 614              	.LBI234:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 615              		.loc 3 396 20 view .LVU170
 616              	.LBE234:
 617              	.LBE233:
 618              	.LBE232:
 619              		.loc 3 398 3 view .LVU171
 620              	.LBB239:
 621              	.LBB238:
 622              	.LBB237:
 623              	.LBB235:
 624              	.LBI235:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 625              		.loc 4 129 27 view .LVU172
 626              	.LBB236:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 627              		.loc 4 131 3 view .LVU173
 628              		.syntax divided
 629              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 630 0008 62B6     		cpsie i
 631              	@ 0 "" 2
 632              		.thumb
 633              		.syntax unified
 634              	.LBE236:
 635              	.LBE235:
 636              	.LBE237:
 637              	.LBE238:
 638              	.LBE239:
 264:lib/chibios/os/rt/src/chevents.c **** 
 265:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 639              		.loc 1 265 3 view .LVU174
 640              		.loc 1 265 16 is_stmt 0 view .LVU175
 641 000a 0069     		ldr	r0, [r0, #16]
 642              	.LVL17:
 266:lib/chibios/os/rt/src/chevents.c **** }
 643              		.loc 1 266 1 view .LVU176
 644              		@ sp needed
 265:lib/chibios/os/rt/src/chevents.c **** }
 645              		.loc 1 265 16 view .LVU177
 646 000c 1840     		ands	r0, r3
 647              		.loc 1 266 1 view .LVU178
 648 000e 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE160:
 652              		.section	.text.chEvtSignalI,"ax",%progbits
 653              		.align	1
 654              		.global	chEvtSignalI
 655              		.syntax unified
 656              		.code	16
 657              		.thumb_func
 658              		.fpu softvfp
 660              	chEvtSignalI:
 661              	.LVL18:
 662              	.LFB162:
 267:lib/chibios/os/rt/src/chevents.c **** 
 268:lib/chibios/os/rt/src/chevents.c **** /**
 269:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 270:lib/chibios/os/rt/src/chevents.c ****  *
 271:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 272:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 273:lib/chibios/os/rt/src/chevents.c ****  *
 274:lib/chibios/os/rt/src/chevents.c ****  * @api
 275:lib/chibios/os/rt/src/chevents.c ****  */
 276:lib/chibios/os/rt/src/chevents.c **** void chEvtSignal(thread_t *tp, eventmask_t events) {
 277:lib/chibios/os/rt/src/chevents.c **** 
 278:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 279:lib/chibios/os/rt/src/chevents.c **** 
 280:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 281:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 282:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 283:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 284:lib/chibios/os/rt/src/chevents.c **** }
 285:lib/chibios/os/rt/src/chevents.c **** 
 286:lib/chibios/os/rt/src/chevents.c **** /**
 287:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 288:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 289:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 290:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 291:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 292:lib/chibios/os/rt/src/chevents.c ****  *
 293:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 294:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 295:lib/chibios/os/rt/src/chevents.c ****  *
 296:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 297:lib/chibios/os/rt/src/chevents.c ****  */
 298:lib/chibios/os/rt/src/chevents.c **** void chEvtSignalI(thread_t *tp, eventmask_t events) {
 663              		.loc 1 298 53 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 299:lib/chibios/os/rt/src/chevents.c **** 
 300:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 667              		.loc 1 300 21 view .LVU180
 301:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 668              		.loc 1 301 3 view .LVU181
 669              		.loc 1 301 3 view .LVU182
 302:lib/chibios/os/rt/src/chevents.c **** 
 303:lib/chibios/os/rt/src/chevents.c ****   tp->epending |= events;
 670              		.loc 1 303 3 view .LVU183
 298:lib/chibios/os/rt/src/chevents.c **** 
 671              		.loc 1 298 53 is_stmt 0 view .LVU184
 672 0000 10B5     		push	{r4, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 4, -8
 675              		.cfi_offset 14, -4
 676              		.loc 1 303 16 view .LVU185
 677 0002 036B     		ldr	r3, [r0, #48]
 678 0004 1943     		orrs	r1, r3
 679              	.LVL19:
 304:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 305:lib/chibios/os/rt/src/chevents.c ****   if (((tp->state == CH_STATE_WTOREVT) &&
 680              		.loc 1 305 11 view .LVU186
 681 0006 037F     		ldrb	r3, [r0, #28]
 303:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 682              		.loc 1 303 16 view .LVU187
 683 0008 0163     		str	r1, [r0, #48]
 684              		.loc 1 305 3 is_stmt 1 view .LVU188
 685              		.loc 1 305 6 is_stmt 0 view .LVU189
 686 000a 0A2B     		cmp	r3, #10
 687 000c 03D1     		bne	.L18
 688              		.loc 1 305 40 discriminator 1 view .LVU190
 689 000e 036A     		ldr	r3, [r0, #32]
 690 0010 0B42     		tst	r3, r1
 691 0012 06D1     		bne	.L19
 692              	.LVL20:
 693              	.L17:
 306:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 307:lib/chibios/os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 308:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 309:lib/chibios/os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 310:lib/chibios/os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 311:lib/chibios/os/rt/src/chevents.c ****   }
 312:lib/chibios/os/rt/src/chevents.c **** }
 694              		.loc 1 312 1 view .LVU191
 695              		@ sp needed
 696 0014 10BD     		pop	{r4, pc}
 697              	.LVL21:
 698              	.L18:
 306:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 699              		.loc 1 306 59 view .LVU192
 700 0016 0B2B     		cmp	r3, #11
 701 0018 FCD1     		bne	.L17
 308:lib/chibios/os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 702              		.loc 1 308 30 view .LVU193
 703 001a 036A     		ldr	r3, [r0, #32]
 308:lib/chibios/os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 704              		.loc 1 308 23 view .LVU194
 705 001c 1940     		ands	r1, r3
 307:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 706              		.loc 1 307 41 view .LVU195
 707 001e 8B42     		cmp	r3, r1
 708 0020 F8D1     		bne	.L17
 709              	.L19:
 309:lib/chibios/os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 710              		.loc 1 309 5 is_stmt 1 view .LVU196
 309:lib/chibios/os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 711              		.loc 1 309 18 is_stmt 0 view .LVU197
 712 0022 0023     		movs	r3, #0
 713 0024 0362     		str	r3, [r0, #32]
 310:lib/chibios/os/rt/src/chevents.c ****   }
 714              		.loc 1 310 5 is_stmt 1 view .LVU198
 310:lib/chibios/os/rt/src/chevents.c ****   }
 715              		.loc 1 310 12 is_stmt 0 view .LVU199
 716 0026 FFF7FEFF 		bl	chSchReadyI
 717              	.LVL22:
 718              		.loc 1 312 1 view .LVU200
 719 002a F3E7     		b	.L17
 720              		.cfi_endproc
 721              	.LFE162:
 723              		.section	.text.chEvtBroadcastFlagsI,"ax",%progbits
 724              		.align	1
 725              		.global	chEvtBroadcastFlagsI
 726              		.syntax unified
 727              		.code	16
 728              		.thumb_func
 729              		.fpu softvfp
 731              	chEvtBroadcastFlagsI:
 732              	.LVL23:
 733              	.LFB159:
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 734              		.loc 1 225 68 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lib/chibios/os/rt/src/chevents.c **** 
 738              		.loc 1 226 3 view .LVU202
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 739              		.loc 1 228 21 view .LVU203
 229:lib/chibios/os/rt/src/chevents.c **** 
 740              		.loc 1 229 3 view .LVU204
 229:lib/chibios/os/rt/src/chevents.c **** 
 741              		.loc 1 229 3 view .LVU205
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 742              		.loc 1 231 3 view .LVU206
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 743              		.loc 1 225 68 is_stmt 0 view .LVU207
 744 0000 70B5     		push	{r4, r5, r6, lr}
 745              		.cfi_def_cfa_offset 16
 746              		.cfi_offset 4, -16
 747              		.cfi_offset 5, -12
 748              		.cfi_offset 6, -8
 749              		.cfi_offset 14, -4
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 750              		.loc 1 225 68 view .LVU208
 751 0002 0600     		movs	r6, r0
 752 0004 0D00     		movs	r5, r1
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 753              		.loc 1 231 7 view .LVU209
 754 0006 0468     		ldr	r4, [r0]
 755              	.LVL24:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 756              		.loc 1 233 3 is_stmt 1 view .LVU210
 757              	.L22:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 758              		.loc 1 233 9 is_stmt 0 view .LVU211
 759 0008 B442     		cmp	r4, r6
 760 000a 00D1     		bne	.L25
 244:lib/chibios/os/rt/src/chevents.c **** 
 761              		.loc 1 244 1 view .LVU212
 762              		@ sp needed
 763              	.LVL25:
 764              	.LVL26:
 765              	.LVL27:
 244:lib/chibios/os/rt/src/chevents.c **** 
 766              		.loc 1 244 1 view .LVU213
 767 000c 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL28:
 769              	.L25:
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 770              		.loc 1 235 5 is_stmt 1 view .LVU214
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 771              		.loc 1 235 16 is_stmt 0 view .LVU215
 772 000e E368     		ldr	r3, [r4, #12]
 773 0010 2B43     		orrs	r3, r5
 774 0012 E360     		str	r3, [r4, #12]
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 775              		.loc 1 238 5 is_stmt 1 view .LVU216
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 776              		.loc 1 238 8 is_stmt 0 view .LVU217
 777 0014 002D     		cmp	r5, #0
 778 0016 02D0     		beq	.L23
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 779              		.loc 1 238 36 discriminator 1 view .LVU218
 780 0018 2369     		ldr	r3, [r4, #16]
 781 001a 2B42     		tst	r3, r5
 782 001c 03D0     		beq	.L24
 783              	.L23:
 240:lib/chibios/os/rt/src/chevents.c ****     }
 784              		.loc 1 240 7 is_stmt 1 view .LVU219
 785 001e A168     		ldr	r1, [r4, #8]
 786 0020 6068     		ldr	r0, [r4, #4]
 787 0022 FFF7FEFF 		bl	chEvtSignalI
 788              	.LVL29:
 789              	.L24:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 790              		.loc 1 242 5 view .LVU220
 242:lib/chibios/os/rt/src/chevents.c ****   }
 791              		.loc 1 242 9 is_stmt 0 view .LVU221
 792 0026 2468     		ldr	r4, [r4]
 793              	.LVL30:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 794              		.loc 1 242 9 view .LVU222
 795 0028 EEE7     		b	.L22
 796              		.cfi_endproc
 797              	.LFE159:
 799              		.section	.text.chEvtSignal,"ax",%progbits
 800              		.align	1
 801              		.global	chEvtSignal
 802              		.syntax unified
 803              		.code	16
 804              		.thumb_func
 805              		.fpu softvfp
 807              	chEvtSignal:
 808              	.LVL31:
 809              	.LFB161:
 276:lib/chibios/os/rt/src/chevents.c **** 
 810              		.loc 1 276 52 is_stmt 1 view -0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 278:lib/chibios/os/rt/src/chevents.c **** 
 814              		.loc 1 278 3 view .LVU224
 278:lib/chibios/os/rt/src/chevents.c **** 
 815              		.loc 1 278 3 view .LVU225
 280:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 816              		.loc 1 280 3 view .LVU226
 817              	.LBB240:
 818              	.LBI240:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 819              		.loc 2 353 20 view .LVU227
 820              	.LBE240:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 821              		.loc 2 355 3 view .LVU228
 822              	.LBB248:
 823              	.LBB241:
 824              	.LBI241:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 825              		.loc 3 387 20 view .LVU229
 826              	.LBE241:
 827              	.LBE248:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 828              		.loc 3 389 3 view .LVU230
 829              	.LBB249:
 830              	.LBB246:
 831              	.LBB242:
 832              	.LBI242:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 833              		.loc 4 140 27 view .LVU231
 834              	.LBB243:
 835              		.loc 4 142 3 view .LVU232
 836              	.LBE243:
 837              	.LBE242:
 838              	.LBE246:
 839              	.LBE249:
 276:lib/chibios/os/rt/src/chevents.c **** 
 840              		.loc 1 276 52 is_stmt 0 view .LVU233
 841 0000 10B5     		push	{r4, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 4, -8
 844              		.cfi_offset 14, -4
 845              	.LBB250:
 846              	.LBB247:
 847              	.LBB245:
 848              	.LBB244:
 849              		.loc 4 142 3 view .LVU234
 850              		.syntax divided
 851              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 852 0002 72B6     		cpsid i
 853              	@ 0 "" 2
 854              		.thumb
 855              		.syntax unified
 856              	.LBE244:
 857              	.LBE245:
 858              	.LBE247:
 859              	.LBE250:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 860              		.loc 2 356 34 is_stmt 1 view .LVU235
 357:./lib/chibios/os/rt/include/chsys.h **** }
 861              		.loc 2 357 20 view .LVU236
 281:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 862              		.loc 1 281 3 view .LVU237
 863 0004 FFF7FEFF 		bl	chEvtSignalI
 864              	.LVL32:
 282:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 865              		.loc 1 282 3 view .LVU238
 866 0008 FFF7FEFF 		bl	chSchRescheduleS
 867              	.LVL33:
 283:lib/chibios/os/rt/src/chevents.c **** }
 868              		.loc 1 283 3 view .LVU239
 869              	.LBB251:
 870              	.LBI251:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 871              		.loc 2 365 20 view .LVU240
 872              	.LBB252:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 873              		.loc 2 367 22 view .LVU241
 368:./lib/chibios/os/rt/include/chsys.h **** 
 874              		.loc 2 368 33 view .LVU242
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 875              		.loc 2 374 3 view .LVU243
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 876              		.loc 2 374 3 view .LVU244
 877              		.loc 2 378 3 view .LVU245
 878              	.LBB253:
 879              	.LBI253:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 880              		.loc 3 396 20 view .LVU246
 881              	.LBE253:
 882              	.LBE252:
 883              	.LBE251:
 884              		.loc 3 398 3 view .LVU247
 885              	.LBB258:
 886              	.LBB257:
 887              	.LBB256:
 888              	.LBB254:
 889              	.LBI254:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 890              		.loc 4 129 27 view .LVU248
 891              	.LBB255:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 892              		.loc 4 131 3 view .LVU249
 893              		.syntax divided
 894              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 895 000c 62B6     		cpsie i
 896              	@ 0 "" 2
 897              		.thumb
 898              		.syntax unified
 899              	.LBE255:
 900              	.LBE254:
 901              	.LBE256:
 902              	.LBE257:
 903              	.LBE258:
 284:lib/chibios/os/rt/src/chevents.c **** 
 904              		.loc 1 284 1 is_stmt 0 view .LVU250
 905              		@ sp needed
 906 000e 10BD     		pop	{r4, pc}
 907              		.cfi_endproc
 908              	.LFE161:
 910              		.section	.text.chEvtBroadcastFlags,"ax",%progbits
 911              		.align	1
 912              		.global	chEvtBroadcastFlags
 913              		.syntax unified
 914              		.code	16
 915              		.thumb_func
 916              		.fpu softvfp
 918              	chEvtBroadcastFlags:
 919              	.LVL34:
 920              	.LFB163:
 313:lib/chibios/os/rt/src/chevents.c **** 
 314:lib/chibios/os/rt/src/chevents.c **** /**
 315:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 316:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 317:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 318:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 319:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 320:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 321:lib/chibios/os/rt/src/chevents.c ****  *
 322:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 323:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 324:lib/chibios/os/rt/src/chevents.c ****  *
 325:lib/chibios/os/rt/src/chevents.c ****  * @api
 326:lib/chibios/os/rt/src/chevents.c ****  */
 327:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags) {
 921              		.loc 1 327 67 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 328:lib/chibios/os/rt/src/chevents.c **** 
 329:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 925              		.loc 1 329 3 view .LVU252
 926              	.LBB259:
 927              	.LBI259:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 928              		.loc 2 353 20 view .LVU253
 929              	.LBE259:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 930              		.loc 2 355 3 view .LVU254
 931              	.LBB267:
 932              	.LBB260:
 933              	.LBI260:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 934              		.loc 3 387 20 view .LVU255
 935              	.LBE260:
 936              	.LBE267:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 937              		.loc 3 389 3 view .LVU256
 938              	.LBB268:
 939              	.LBB265:
 940              	.LBB261:
 941              	.LBI261:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 942              		.loc 4 140 27 view .LVU257
 943              	.LBB262:
 944              		.loc 4 142 3 view .LVU258
 945              	.LBE262:
 946              	.LBE261:
 947              	.LBE265:
 948              	.LBE268:
 327:lib/chibios/os/rt/src/chevents.c **** 
 949              		.loc 1 327 67 is_stmt 0 view .LVU259
 950 0000 10B5     		push	{r4, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 14, -4
 954              	.LBB269:
 955              	.LBB266:
 956              	.LBB264:
 957              	.LBB263:
 958              		.loc 4 142 3 view .LVU260
 959              		.syntax divided
 960              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 961 0002 72B6     		cpsid i
 962              	@ 0 "" 2
 963              		.thumb
 964              		.syntax unified
 965              	.LBE263:
 966              	.LBE264:
 967              	.LBE266:
 968              	.LBE269:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 969              		.loc 2 356 34 is_stmt 1 view .LVU261
 357:./lib/chibios/os/rt/include/chsys.h **** }
 970              		.loc 2 357 20 view .LVU262
 330:lib/chibios/os/rt/src/chevents.c ****   chEvtBroadcastFlagsI(esp, flags);
 971              		.loc 1 330 3 view .LVU263
 972 0004 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 973              	.LVL35:
 331:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 974              		.loc 1 331 3 view .LVU264
 975 0008 FFF7FEFF 		bl	chSchRescheduleS
 976              	.LVL36:
 332:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 977              		.loc 1 332 3 view .LVU265
 978              	.LBB270:
 979              	.LBI270:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 980              		.loc 2 365 20 view .LVU266
 981              	.LBB271:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 982              		.loc 2 367 22 view .LVU267
 368:./lib/chibios/os/rt/include/chsys.h **** 
 983              		.loc 2 368 33 view .LVU268
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 984              		.loc 2 374 3 view .LVU269
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 985              		.loc 2 374 3 view .LVU270
 986              		.loc 2 378 3 view .LVU271
 987              	.LBB272:
 988              	.LBI272:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 989              		.loc 3 396 20 view .LVU272
 990              	.LBE272:
 991              	.LBE271:
 992              	.LBE270:
 993              		.loc 3 398 3 view .LVU273
 994              	.LBB277:
 995              	.LBB276:
 996              	.LBB275:
 997              	.LBB273:
 998              	.LBI273:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 999              		.loc 4 129 27 view .LVU274
 1000              	.LBB274:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1001              		.loc 4 131 3 view .LVU275
 1002              		.syntax divided
 1003              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1004 000c 62B6     		cpsie i
 1005              	@ 0 "" 2
 1006              		.thumb
 1007              		.syntax unified
 1008              	.LBE274:
 1009              	.LBE273:
 1010              	.LBE275:
 1011              	.LBE276:
 1012              	.LBE277:
 333:lib/chibios/os/rt/src/chevents.c **** }
 1013              		.loc 1 333 1 is_stmt 0 view .LVU276
 1014              		@ sp needed
 1015 000e 10BD     		pop	{r4, pc}
 1016              		.cfi_endproc
 1017              	.LFE163:
 1019              		.section	.text.chEvtGetAndClearFlagsI,"ax",%progbits
 1020              		.align	1
 1021              		.global	chEvtGetAndClearFlagsI
 1022              		.syntax unified
 1023              		.code	16
 1024              		.thumb_func
 1025              		.fpu softvfp
 1027              	chEvtGetAndClearFlagsI:
 1028              	.LVL37:
 1029              	.LFB164:
 334:lib/chibios/os/rt/src/chevents.c **** 
 335:lib/chibios/os/rt/src/chevents.c **** /**
 336:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the unmasked flags associated to an @p event_listener_t.
 337:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 338:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 339:lib/chibios/os/rt/src/chevents.c ****  *
 340:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 341:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 342:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 343:lib/chibios/os/rt/src/chevents.c ****  *
 344:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 345:lib/chibios/os/rt/src/chevents.c ****  */
 346:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp) {
 1030              		.loc 1 346 60 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 347:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 1035              		.loc 1 347 3 view .LVU278
 348:lib/chibios/os/rt/src/chevents.c **** 
 349:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 1036              		.loc 1 349 3 view .LVU279
 350:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 1037              		.loc 1 350 14 is_stmt 0 view .LVU280
 1038 0000 0022     		movs	r2, #0
 349:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 1039              		.loc 1 349 9 view .LVU281
 1040 0002 C368     		ldr	r3, [r0, #12]
 1041              	.LVL38:
 1042              		.loc 1 350 3 is_stmt 1 view .LVU282
 1043              		.loc 1 350 14 is_stmt 0 view .LVU283
 1044 0004 C260     		str	r2, [r0, #12]
 351:lib/chibios/os/rt/src/chevents.c **** 
 352:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 1045              		.loc 1 352 3 is_stmt 1 view .LVU284
 1046              		.loc 1 352 16 is_stmt 0 view .LVU285
 1047 0006 0069     		ldr	r0, [r0, #16]
 1048              	.LVL39:
 353:lib/chibios/os/rt/src/chevents.c **** }
 1049              		.loc 1 353 1 view .LVU286
 1050              		@ sp needed
 352:lib/chibios/os/rt/src/chevents.c **** }
 1051              		.loc 1 352 16 view .LVU287
 1052 0008 1840     		ands	r0, r3
 1053              		.loc 1 353 1 view .LVU288
 1054 000a 7047     		bx	lr
 1055              		.cfi_endproc
 1056              	.LFE164:
 1058              		.section	.text.chEvtDispatch,"ax",%progbits
 1059              		.align	1
 1060              		.global	chEvtDispatch
 1061              		.syntax unified
 1062              		.code	16
 1063              		.thumb_func
 1064              		.fpu softvfp
 1066              	chEvtDispatch:
 1067              	.LVL40:
 1068              	.LFB165:
 354:lib/chibios/os/rt/src/chevents.c **** 
 355:lib/chibios/os/rt/src/chevents.c **** /**
 356:lib/chibios/os/rt/src/chevents.c ****  * @brief   Invokes the event handlers associated to an event flags mask.
 357:lib/chibios/os/rt/src/chevents.c ****  *
 358:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    mask of events to be dispatched
 359:lib/chibios/os/rt/src/chevents.c ****  * @param[in] handlers  an array of @p evhandler_t. The array must have size
 360:lib/chibios/os/rt/src/chevents.c ****  *                      equal to the number of bits in eventmask_t.
 361:lib/chibios/os/rt/src/chevents.c ****  *
 362:lib/chibios/os/rt/src/chevents.c ****  * @api
 363:lib/chibios/os/rt/src/chevents.c ****  */
 364:lib/chibios/os/rt/src/chevents.c **** void chEvtDispatch(const evhandler_t *handlers, eventmask_t events) {
 1069              		.loc 1 364 69 is_stmt 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 365:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1073              		.loc 1 365 3 view .LVU290
 366:lib/chibios/os/rt/src/chevents.c **** 
 367:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(handlers != NULL);
 1074              		.loc 1 367 3 view .LVU291
 1075              		.loc 1 367 3 view .LVU292
 368:lib/chibios/os/rt/src/chevents.c **** 
 369:lib/chibios/os/rt/src/chevents.c ****   eid = (eventid_t)0;
 1076              		.loc 1 369 3 view .LVU293
 370:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1077              		.loc 1 370 3 view .LVU294
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1078              		.loc 1 364 69 is_stmt 0 view .LVU295
 1079 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1080              		.cfi_def_cfa_offset 24
 1081              		.cfi_offset 3, -24
 1082              		.cfi_offset 4, -20
 1083              		.cfi_offset 5, -16
 1084              		.cfi_offset 6, -12
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1087              		.loc 1 364 69 view .LVU296
 1088 0002 0700     		movs	r7, r0
 1089 0004 0D00     		movs	r5, r1
 369:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1090              		.loc 1 369 7 view .LVU297
 1091 0006 0024     		movs	r4, #0
 371:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 1092              		.loc 1 371 36 view .LVU298
 1093 0008 0126     		movs	r6, #1
 1094              	.LVL41:
 1095              	.L36:
 370:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 1096              		.loc 1 370 9 view .LVU299
 1097 000a 002D     		cmp	r5, #0
 1098 000c 00D1     		bne	.L38
 372:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 373:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 374:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 375:lib/chibios/os/rt/src/chevents.c ****     }
 376:lib/chibios/os/rt/src/chevents.c ****     eid++;
 377:lib/chibios/os/rt/src/chevents.c ****   }
 378:lib/chibios/os/rt/src/chevents.c **** }
 1099              		.loc 1 378 1 view .LVU300
 1100              		@ sp needed
 1101              	.LVL42:
 1102              	.LVL43:
 1103              	.LVL44:
 1104              		.loc 1 378 1 view .LVU301
 1105 000e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1106              	.LVL45:
 1107              	.L38:
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1108              		.loc 1 371 5 is_stmt 1 view .LVU302
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1109              		.loc 1 371 36 is_stmt 0 view .LVU303
 1110 0010 2B00     		movs	r3, r5
 1111 0012 E340     		lsrs	r3, r3, r4
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1112              		.loc 1 371 8 view .LVU304
 1113 0014 3342     		tst	r3, r6
 1114 0016 06D0     		beq	.L37
 372:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1115              		.loc 1 372 7 is_stmt 1 view .LVU305
 372:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1116              		.loc 1 372 7 view .LVU306
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1117              		.loc 1 373 7 view .LVU307
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1118              		.loc 1 373 18 is_stmt 0 view .LVU308
 1119 0018 3300     		movs	r3, r6
 1120 001a A340     		lsls	r3, r3, r4
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1121              		.loc 1 373 14 view .LVU309
 1122 001c 9D43     		bics	r5, r3
 1123              	.LVL46:
 374:lib/chibios/os/rt/src/chevents.c ****     }
 1124              		.loc 1 374 7 is_stmt 1 view .LVU310
 374:lib/chibios/os/rt/src/chevents.c ****     }
 1125              		.loc 1 374 15 is_stmt 0 view .LVU311
 1126 001e A300     		lsls	r3, r4, #2
 374:lib/chibios/os/rt/src/chevents.c ****     }
 1127              		.loc 1 374 7 view .LVU312
 1128 0020 FB58     		ldr	r3, [r7, r3]
 1129 0022 2000     		movs	r0, r4
 1130 0024 9847     		blx	r3
 1131              	.LVL47:
 1132              	.L37:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1133              		.loc 1 376 5 is_stmt 1 view .LVU313
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1134              		.loc 1 376 8 is_stmt 0 view .LVU314
 1135 0026 0134     		adds	r4, r4, #1
 1136              	.LVL48:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1137              		.loc 1 376 8 view .LVU315
 1138 0028 EFE7     		b	.L36
 1139              		.cfi_endproc
 1140              	.LFE165:
 1142              		.section	.text.chEvtWaitOneTimeout,"ax",%progbits
 1143              		.align	1
 1144              		.global	chEvtWaitOneTimeout
 1145              		.syntax unified
 1146              		.code	16
 1147              		.thumb_func
 1148              		.fpu softvfp
 1150              	chEvtWaitOneTimeout:
 1151              	.LVL49:
 1152              	.LFB166:
 379:lib/chibios/os/rt/src/chevents.c **** 
 380:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) ||                                      \
 381:lib/chibios/os/rt/src/chevents.c ****     (CH_CFG_USE_EVENTS_TIMEOUT == FALSE) ||                                 \
 382:lib/chibios/os/rt/src/chevents.c ****     defined(__DOXYGEN__)
 383:lib/chibios/os/rt/src/chevents.c **** /**
 384:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 385:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 386:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 387:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 388:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop in
 389:lib/chibios/os/rt/src/chevents.c ****  *          order to serve all the pending events.<br>
 390:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 391:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 392:lib/chibios/os/rt/src/chevents.c ****  *
 393:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 394:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 395:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 396:lib/chibios/os/rt/src/chevents.c ****  *
 397:lib/chibios/os/rt/src/chevents.c ****  * @api
 398:lib/chibios/os/rt/src/chevents.c ****  */
 399:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOne(eventmask_t events) {
 400:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 401:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 402:lib/chibios/os/rt/src/chevents.c **** 
 403:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 404:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 405:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 406:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 407:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 408:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 409:lib/chibios/os/rt/src/chevents.c ****   }
 410:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 411:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 412:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 413:lib/chibios/os/rt/src/chevents.c **** 
 414:lib/chibios/os/rt/src/chevents.c ****   return m;
 415:lib/chibios/os/rt/src/chevents.c **** }
 416:lib/chibios/os/rt/src/chevents.c **** 
 417:lib/chibios/os/rt/src/chevents.c **** /**
 418:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 419:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 420:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 421:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 422:lib/chibios/os/rt/src/chevents.c ****  *
 423:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 424:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 425:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 426:lib/chibios/os/rt/src/chevents.c ****  *
 427:lib/chibios/os/rt/src/chevents.c ****  * @api
 428:lib/chibios/os/rt/src/chevents.c ****  */
 429:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAny(eventmask_t events) {
 430:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 431:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 432:lib/chibios/os/rt/src/chevents.c **** 
 433:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 434:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 435:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 436:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 437:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 438:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 439:lib/chibios/os/rt/src/chevents.c ****   }
 440:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 441:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 442:lib/chibios/os/rt/src/chevents.c **** 
 443:lib/chibios/os/rt/src/chevents.c ****   return m;
 444:lib/chibios/os/rt/src/chevents.c **** }
 445:lib/chibios/os/rt/src/chevents.c **** 
 446:lib/chibios/os/rt/src/chevents.c **** /**
 447:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 448:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 449:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 450:lib/chibios/os/rt/src/chevents.c ****  *
 451:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 452:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 453:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 454:lib/chibios/os/rt/src/chevents.c ****  *
 455:lib/chibios/os/rt/src/chevents.c ****  * @api
 456:lib/chibios/os/rt/src/chevents.c ****  */
 457:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAll(eventmask_t events) {
 458:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 459:lib/chibios/os/rt/src/chevents.c **** 
 460:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 461:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 462:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 463:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTANDEVT);
 464:lib/chibios/os/rt/src/chevents.c ****   }
 465:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 466:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 467:lib/chibios/os/rt/src/chevents.c **** 
 468:lib/chibios/os/rt/src/chevents.c ****   return events;
 469:lib/chibios/os/rt/src/chevents.c **** }
 470:lib/chibios/os/rt/src/chevents.c **** #endif /* CH_CFG_OPTIMIZE_SPEED || !CH_CFG_USE_EVENTS_TIMEOUT */
 471:lib/chibios/os/rt/src/chevents.c **** 
 472:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS_TIMEOUT == TRUE) || defined(__DOXYGEN__)
 473:lib/chibios/os/rt/src/chevents.c **** /**
 474:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 475:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 476:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 477:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 478:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop
 479:lib/chibios/os/rt/src/chevents.c ****  *          in order to serve all the pending events.<br>
 480:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 481:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 482:lib/chibios/os/rt/src/chevents.c ****  *
 483:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 484:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 485:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 486:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 487:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 488:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 489:lib/chibios/os/rt/src/chevents.c ****  *                      .
 490:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 491:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 492:lib/chibios/os/rt/src/chevents.c ****  *
 493:lib/chibios/os/rt/src/chevents.c ****  * @api
 494:lib/chibios/os/rt/src/chevents.c ****  */
 495:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout) {
 1153              		.loc 1 495 76 is_stmt 1 view -0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 496:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1157              		.loc 1 496 3 view .LVU317
 1158              		.loc 1 496 13 is_stmt 0 view .LVU318
 1159 0000 0D4B     		ldr	r3, .L48
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1160              		.loc 1 495 76 view .LVU319
 1161 0002 70B5     		push	{r4, r5, r6, lr}
 1162              		.cfi_def_cfa_offset 16
 1163              		.cfi_offset 4, -16
 1164              		.cfi_offset 5, -12
 1165              		.cfi_offset 6, -8
 1166              		.cfi_offset 14, -4
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1167              		.loc 1 495 76 view .LVU320
 1168 0004 0600     		movs	r6, r0
 1169              		.loc 1 496 13 view .LVU321
 1170 0006 9D69     		ldr	r5, [r3, #24]
 1171              	.LVL50:
 497:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1172              		.loc 1 497 3 is_stmt 1 view .LVU322
 498:lib/chibios/os/rt/src/chevents.c **** 
 499:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1173              		.loc 1 499 3 view .LVU323
 1174              	.LBB278:
 1175              	.LBI278:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1176              		.loc 2 353 20 view .LVU324
 1177              	.LBE278:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1178              		.loc 2 355 3 view .LVU325
 1179              	.LBB283:
 1180              	.LBB279:
 1181              	.LBI279:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1182              		.loc 3 387 20 view .LVU326
 1183              	.LBE279:
 1184              	.LBE283:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1185              		.loc 3 389 3 view .LVU327
 1186              	.LBB284:
 1187              	.LBB282:
 1188              	.LBB280:
 1189              	.LBI280:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1190              		.loc 4 140 27 view .LVU328
 1191              	.LBB281:
 1192              		.loc 4 142 3 view .LVU329
 1193              		.syntax divided
 1194              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1195 0008 72B6     		cpsid i
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.LBE281:
 1200              	.LBE280:
 1201              	.LBE282:
 1202              	.LBE284:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1203              		.loc 2 356 34 view .LVU330
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1204              		.loc 2 357 20 view .LVU331
 500:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1205              		.loc 1 500 3 view .LVU332
 1206              		.loc 1 500 5 is_stmt 0 view .LVU333
 1207 000a 2C6B     		ldr	r4, [r5, #48]
 1208 000c 0440     		ands	r4, r0
 1209              	.LVL51:
 501:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1210              		.loc 1 501 3 is_stmt 1 view .LVU334
 1211              		.loc 1 501 6 is_stmt 0 view .LVU335
 1212 000e 0CD1     		bne	.L43
 502:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1213              		.loc 1 502 5 is_stmt 1 view .LVU336
 1214              		.loc 1 502 8 is_stmt 0 view .LVU337
 1215 0010 0029     		cmp	r1, #0
 1216 0012 02D1     		bne	.L44
 1217              	.LVL52:
 1218              	.L47:
 503:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 504:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 505:lib/chibios/os/rt/src/chevents.c ****     }
 506:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 507:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 508:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 509:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 510:lib/chibios/os/rt/src/chevents.c ****     }
 511:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 512:lib/chibios/os/rt/src/chevents.c ****   }
 513:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 514:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 515:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1219              		.loc 1 515 3 is_stmt 1 view .LVU338
 1220              	.LBB285:
 1221              	.LBI285:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1222              		.loc 2 365 20 view .LVU339
 1223              	.LBB286:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1224              		.loc 2 367 22 view .LVU340
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1225              		.loc 2 368 33 view .LVU341
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1226              		.loc 2 374 3 view .LVU342
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1227              		.loc 2 374 3 view .LVU343
 1228              		.loc 2 378 3 view .LVU344
 1229              	.LBB287:
 1230              	.LBI287:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1231              		.loc 3 396 20 view .LVU345
 1232              	.LBE287:
 1233              	.LBE286:
 1234              	.LBE285:
 1235              		.loc 3 398 3 view .LVU346
 1236              	.LBB292:
 1237              	.LBB291:
 1238              	.LBB290:
 1239              	.LBB288:
 1240              	.LBI288:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1241              		.loc 4 129 27 view .LVU347
 1242              	.LBB289:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1243              		.loc 4 131 3 view .LVU348
 1244              		.syntax divided
 1245              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1246 0014 62B6     		cpsie i
 1247              	@ 0 "" 2
 1248              		.thumb
 1249              		.syntax unified
 1250              	.LBE289:
 1251              	.LBE288:
 1252              	.LBE290:
 1253              	.LBE291:
 1254              	.LBE292:
 516:lib/chibios/os/rt/src/chevents.c **** 
 517:lib/chibios/os/rt/src/chevents.c ****   return m;
 1255              		.loc 1 517 3 view .LVU349
 518:lib/chibios/os/rt/src/chevents.c **** }
 1256              		.loc 1 518 1 is_stmt 0 view .LVU350
 1257 0016 2000     		movs	r0, r4
 1258              		@ sp needed
 1259              	.LVL53:
 1260              	.LVL54:
 1261              	.LVL55:
 1262              		.loc 1 518 1 view .LVU351
 1263 0018 70BD     		pop	{r4, r5, r6, pc}
 1264              	.LVL56:
 1265              	.L44:
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1266              		.loc 1 506 5 is_stmt 1 view .LVU352
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1267              		.loc 1 506 19 is_stmt 0 view .LVU353
 1268 001a 2862     		str	r0, [r5, #32]
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1269              		.loc 1 507 5 is_stmt 1 view .LVU354
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1270              		.loc 1 507 9 is_stmt 0 view .LVU355
 1271 001c 0A20     		movs	r0, #10
 1272              	.LVL57:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1273              		.loc 1 507 9 view .LVU356
 1274 001e FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1275              	.LVL58:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1276              		.loc 1 507 8 view .LVU357
 1277 0022 0028     		cmp	r0, #0
 1278 0024 F6DB     		blt	.L47
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1279              		.loc 1 511 5 is_stmt 1 view .LVU358
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1280              		.loc 1 511 7 is_stmt 0 view .LVU359
 1281 0026 2C6B     		ldr	r4, [r5, #48]
 1282              	.LVL59:
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1283              		.loc 1 511 7 view .LVU360
 1284 0028 3440     		ands	r4, r6
 1285              	.LVL60:
 1286              	.L43:
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1287              		.loc 1 513 3 is_stmt 1 view .LVU361
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1288              		.loc 1 513 5 is_stmt 0 view .LVU362
 1289 002a 6342     		rsbs	r3, r4, #0
 1290 002c 1C40     		ands	r4, r3
 1291              	.LVL61:
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1292              		.loc 1 514 3 is_stmt 1 view .LVU363
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1293              		.loc 1 514 17 is_stmt 0 view .LVU364
 1294 002e 2B6B     		ldr	r3, [r5, #48]
 1295 0030 A343     		bics	r3, r4
 1296 0032 2B63     		str	r3, [r5, #48]
 1297 0034 EEE7     		b	.L47
 1298              	.L49:
 1299 0036 C046     		.align	2
 1300              	.L48:
 1301 0038 00000000 		.word	ch
 1302              		.cfi_endproc
 1303              	.LFE166:
 1305              		.section	.text.chEvtWaitAnyTimeout,"ax",%progbits
 1306              		.align	1
 1307              		.global	chEvtWaitAnyTimeout
 1308              		.syntax unified
 1309              		.code	16
 1310              		.thumb_func
 1311              		.fpu softvfp
 1313              	chEvtWaitAnyTimeout:
 1314              	.LVL62:
 1315              	.LFB167:
 519:lib/chibios/os/rt/src/chevents.c **** 
 520:lib/chibios/os/rt/src/chevents.c **** /**
 521:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 522:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 523:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 524:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 525:lib/chibios/os/rt/src/chevents.c ****  *
 526:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 527:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 528:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 530:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 532:lib/chibios/os/rt/src/chevents.c ****  *                      .
 533:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 534:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 535:lib/chibios/os/rt/src/chevents.c ****  *
 536:lib/chibios/os/rt/src/chevents.c ****  * @api
 537:lib/chibios/os/rt/src/chevents.c ****  */
 538:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout) {
 1316              		.loc 1 538 76 is_stmt 1 view -0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 539:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1320              		.loc 1 539 3 view .LVU366
 1321              		.loc 1 539 13 is_stmt 0 view .LVU367
 1322 0000 0C4B     		ldr	r3, .L56
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1323              		.loc 1 538 76 view .LVU368
 1324 0002 70B5     		push	{r4, r5, r6, lr}
 1325              		.cfi_def_cfa_offset 16
 1326              		.cfi_offset 4, -16
 1327              		.cfi_offset 5, -12
 1328              		.cfi_offset 6, -8
 1329              		.cfi_offset 14, -4
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1330              		.loc 1 538 76 view .LVU369
 1331 0004 0600     		movs	r6, r0
 1332              		.loc 1 539 13 view .LVU370
 1333 0006 9D69     		ldr	r5, [r3, #24]
 1334              	.LVL63:
 540:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1335              		.loc 1 540 3 is_stmt 1 view .LVU371
 541:lib/chibios/os/rt/src/chevents.c **** 
 542:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1336              		.loc 1 542 3 view .LVU372
 1337              	.LBB293:
 1338              	.LBI293:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1339              		.loc 2 353 20 view .LVU373
 1340              	.LBE293:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1341              		.loc 2 355 3 view .LVU374
 1342              	.LBB298:
 1343              	.LBB294:
 1344              	.LBI294:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1345              		.loc 3 387 20 view .LVU375
 1346              	.LBE294:
 1347              	.LBE298:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1348              		.loc 3 389 3 view .LVU376
 1349              	.LBB299:
 1350              	.LBB297:
 1351              	.LBB295:
 1352              	.LBI295:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1353              		.loc 4 140 27 view .LVU377
 1354              	.LBB296:
 1355              		.loc 4 142 3 view .LVU378
 1356              		.syntax divided
 1357              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1358 0008 72B6     		cpsid i
 1359              	@ 0 "" 2
 1360              		.thumb
 1361              		.syntax unified
 1362              	.LBE296:
 1363              	.LBE295:
 1364              	.LBE297:
 1365              	.LBE299:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1366              		.loc 2 356 34 view .LVU379
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1367              		.loc 2 357 20 view .LVU380
 543:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1368              		.loc 1 543 3 view .LVU381
 1369              		.loc 1 543 5 is_stmt 0 view .LVU382
 1370 000a 2C6B     		ldr	r4, [r5, #48]
 1371 000c 0440     		ands	r4, r0
 1372              	.LVL64:
 544:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1373              		.loc 1 544 3 is_stmt 1 view .LVU383
 1374              		.loc 1 544 6 is_stmt 0 view .LVU384
 1375 000e 0CD1     		bne	.L51
 545:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1376              		.loc 1 545 5 is_stmt 1 view .LVU385
 1377              		.loc 1 545 8 is_stmt 0 view .LVU386
 1378 0010 0029     		cmp	r1, #0
 1379 0012 02D1     		bne	.L52
 1380              	.LVL65:
 1381              	.L55:
 546:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 547:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 548:lib/chibios/os/rt/src/chevents.c ****     }
 549:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 550:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 551:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 552:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 553:lib/chibios/os/rt/src/chevents.c ****     }
 554:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 555:lib/chibios/os/rt/src/chevents.c ****   }
 556:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 557:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1382              		.loc 1 557 3 is_stmt 1 view .LVU387
 1383              	.LBB300:
 1384              	.LBI300:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1385              		.loc 2 365 20 view .LVU388
 1386              	.LBB301:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1387              		.loc 2 367 22 view .LVU389
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1388              		.loc 2 368 33 view .LVU390
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1389              		.loc 2 374 3 view .LVU391
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1390              		.loc 2 374 3 view .LVU392
 1391              		.loc 2 378 3 view .LVU393
 1392              	.LBB302:
 1393              	.LBI302:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1394              		.loc 3 396 20 view .LVU394
 1395              	.LBE302:
 1396              	.LBE301:
 1397              	.LBE300:
 1398              		.loc 3 398 3 view .LVU395
 1399              	.LBB307:
 1400              	.LBB306:
 1401              	.LBB305:
 1402              	.LBB303:
 1403              	.LBI303:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1404              		.loc 4 129 27 view .LVU396
 1405              	.LBB304:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1406              		.loc 4 131 3 view .LVU397
 1407              		.syntax divided
 1408              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1409 0014 62B6     		cpsie i
 1410              	@ 0 "" 2
 1411              		.thumb
 1412              		.syntax unified
 1413              	.LBE304:
 1414              	.LBE303:
 1415              	.LBE305:
 1416              	.LBE306:
 1417              	.LBE307:
 558:lib/chibios/os/rt/src/chevents.c **** 
 559:lib/chibios/os/rt/src/chevents.c ****   return m;
 1418              		.loc 1 559 3 view .LVU398
 560:lib/chibios/os/rt/src/chevents.c **** }
 1419              		.loc 1 560 1 is_stmt 0 view .LVU399
 1420 0016 2000     		movs	r0, r4
 1421              		@ sp needed
 1422              	.LVL66:
 1423              	.LVL67:
 1424              	.LVL68:
 1425              		.loc 1 560 1 view .LVU400
 1426 0018 70BD     		pop	{r4, r5, r6, pc}
 1427              	.LVL69:
 1428              	.L52:
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1429              		.loc 1 549 5 is_stmt 1 view .LVU401
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1430              		.loc 1 549 19 is_stmt 0 view .LVU402
 1431 001a 2862     		str	r0, [r5, #32]
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1432              		.loc 1 550 5 is_stmt 1 view .LVU403
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1433              		.loc 1 550 9 is_stmt 0 view .LVU404
 1434 001c 0A20     		movs	r0, #10
 1435              	.LVL70:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1436              		.loc 1 550 9 view .LVU405
 1437 001e FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1438              	.LVL71:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1439              		.loc 1 550 8 view .LVU406
 1440 0022 0028     		cmp	r0, #0
 1441 0024 F6DB     		blt	.L55
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1442              		.loc 1 554 5 is_stmt 1 view .LVU407
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1443              		.loc 1 554 7 is_stmt 0 view .LVU408
 1444 0026 2C6B     		ldr	r4, [r5, #48]
 1445              	.LVL72:
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1446              		.loc 1 554 7 view .LVU409
 1447 0028 3440     		ands	r4, r6
 1448              	.LVL73:
 1449              	.L51:
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1450              		.loc 1 556 3 is_stmt 1 view .LVU410
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1451              		.loc 1 556 17 is_stmt 0 view .LVU411
 1452 002a 2B6B     		ldr	r3, [r5, #48]
 1453 002c A343     		bics	r3, r4
 1454 002e 2B63     		str	r3, [r5, #48]
 1455 0030 F0E7     		b	.L55
 1456              	.L57:
 1457 0032 C046     		.align	2
 1458              	.L56:
 1459 0034 00000000 		.word	ch
 1460              		.cfi_endproc
 1461              	.LFE167:
 1463              		.section	.text.chEvtWaitAllTimeout,"ax",%progbits
 1464              		.align	1
 1465              		.global	chEvtWaitAllTimeout
 1466              		.syntax unified
 1467              		.code	16
 1468              		.thumb_func
 1469              		.fpu softvfp
 1471              	chEvtWaitAllTimeout:
 1472              	.LVL74:
 1473              	.LFB168:
 561:lib/chibios/os/rt/src/chevents.c **** 
 562:lib/chibios/os/rt/src/chevents.c **** /**
 563:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 564:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 565:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 566:lib/chibios/os/rt/src/chevents.c ****  *
 567:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 568:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 569:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 570:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 571:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 572:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 573:lib/chibios/os/rt/src/chevents.c ****  *                      .
 574:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 575:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 576:lib/chibios/os/rt/src/chevents.c ****  *
 577:lib/chibios/os/rt/src/chevents.c ****  * @api
 578:lib/chibios/os/rt/src/chevents.c ****  */
 579:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout) {
 1474              		.loc 1 579 76 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 580:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1478              		.loc 1 580 3 view .LVU413
 1479              		.loc 1 580 13 is_stmt 0 view .LVU414
 1480 0000 0E4B     		ldr	r3, .L62
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1481              		.loc 1 579 76 view .LVU415
 1482 0002 70B5     		push	{r4, r5, r6, lr}
 1483              		.cfi_def_cfa_offset 16
 1484              		.cfi_offset 4, -16
 1485              		.cfi_offset 5, -12
 1486              		.cfi_offset 6, -8
 1487              		.cfi_offset 14, -4
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1488              		.loc 1 579 76 view .LVU416
 1489 0004 0400     		movs	r4, r0
 1490              		.loc 1 580 13 view .LVU417
 1491 0006 9D69     		ldr	r5, [r3, #24]
 1492              	.LVL75:
 581:lib/chibios/os/rt/src/chevents.c **** 
 582:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1493              		.loc 1 582 3 is_stmt 1 view .LVU418
 1494              	.LBB308:
 1495              	.LBI308:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1496              		.loc 2 353 20 view .LVU419
 1497              	.LBE308:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1498              		.loc 2 355 3 view .LVU420
 1499              	.LBB313:
 1500              	.LBB309:
 1501              	.LBI309:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1502              		.loc 3 387 20 view .LVU421
 1503              	.LBE309:
 1504              	.LBE313:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1505              		.loc 3 389 3 view .LVU422
 1506              	.LBB314:
 1507              	.LBB312:
 1508              	.LBB310:
 1509              	.LBI310:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1510              		.loc 4 140 27 view .LVU423
 1511              	.LBB311:
 1512              		.loc 4 142 3 view .LVU424
 1513              		.syntax divided
 1514              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1515 0008 72B6     		cpsid i
 1516              	@ 0 "" 2
 1517              		.thumb
 1518              		.syntax unified
 1519              	.LBE311:
 1520              	.LBE310:
 1521              	.LBE312:
 1522              	.LBE314:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1523              		.loc 2 356 34 view .LVU425
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1524              		.loc 2 357 20 view .LVU426
 583:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1525              		.loc 1 583 3 view .LVU427
 1526              		.loc 1 583 22 is_stmt 0 view .LVU428
 1527 000a 2B6B     		ldr	r3, [r5, #48]
 1528 000c 0340     		ands	r3, r0
 1529              		.loc 1 583 6 view .LVU429
 1530 000e 8342     		cmp	r3, r0
 1531 0010 0DD0     		beq	.L59
 584:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1532              		.loc 1 584 5 is_stmt 1 view .LVU430
 1533              		.loc 1 584 8 is_stmt 0 view .LVU431
 1534 0012 0029     		cmp	r1, #0
 1535 0014 02D1     		bne	.L60
 585:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1536              		.loc 1 585 7 is_stmt 1 view .LVU432
 1537              	.LBB315:
 1538              	.LBI315:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1539              		.loc 2 365 20 view .LVU433
 1540              	.LBB316:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1541              		.loc 2 367 22 view .LVU434
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1542              		.loc 2 368 33 view .LVU435
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1543              		.loc 2 374 3 view .LVU436
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1544              		.loc 2 374 3 view .LVU437
 1545              		.loc 2 378 3 view .LVU438
 1546              	.LBB317:
 1547              	.LBI317:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1548              		.loc 3 396 20 view .LVU439
 1549              	.LBE317:
 1550              	.LBE316:
 1551              	.LBE315:
 1552              		.loc 3 398 3 view .LVU440
 1553              	.LBB322:
 1554              	.LBB321:
 1555              	.LBB320:
 1556              	.LBB318:
 1557              	.LBI318:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1558              		.loc 4 129 27 view .LVU441
 1559              	.LBB319:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1560              		.loc 4 131 3 view .LVU442
 1561              		.syntax divided
 1562              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1563 0016 62B6     		cpsie i
 1564              	@ 0 "" 2
 1565              		.thumb
 1566              		.syntax unified
 1567              	.LBE319:
 1568              	.LBE318:
 1569              	.LBE320:
 1570              	.LBE321:
 1571              	.LBE322:
 586:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1572              		.loc 1 586 7 view .LVU443
 1573              	.LVL76:
 1574              	.L61:
 587:lib/chibios/os/rt/src/chevents.c ****     }
 588:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 589:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 590:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 591:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 592:lib/chibios/os/rt/src/chevents.c ****     }
 593:lib/chibios/os/rt/src/chevents.c ****   }
 594:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 595:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 596:lib/chibios/os/rt/src/chevents.c **** 
 597:lib/chibios/os/rt/src/chevents.c ****   return events;
 598:lib/chibios/os/rt/src/chevents.c **** }
 1575              		.loc 1 598 1 is_stmt 0 view .LVU444
 1576 0018 0800     		movs	r0, r1
 1577              		@ sp needed
 1578              	.LVL77:
 1579              	.LVL78:
 1580              		.loc 1 598 1 view .LVU445
 1581 001a 70BD     		pop	{r4, r5, r6, pc}
 1582              	.LVL79:
 1583              	.L60:
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1584              		.loc 1 588 5 is_stmt 1 view .LVU446
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1585              		.loc 1 588 19 is_stmt 0 view .LVU447
 1586 001c 2862     		str	r0, [r5, #32]
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1587              		.loc 1 589 5 is_stmt 1 view .LVU448
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1588              		.loc 1 589 9 is_stmt 0 view .LVU449
 1589 001e 0B20     		movs	r0, #11
 1590              	.LVL80:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1591              		.loc 1 589 9 view .LVU450
 1592 0020 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1593              	.LVL81:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1594              		.loc 1 589 8 view .LVU451
 1595 0024 0028     		cmp	r0, #0
 1596 0026 02DA     		bge	.L59
 590:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1597              		.loc 1 590 7 is_stmt 1 view .LVU452
 1598              	.LBB323:
 1599              	.LBI323:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1600              		.loc 2 365 20 view .LVU453
 1601              	.LBB324:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1602              		.loc 2 367 22 view .LVU454
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1603              		.loc 2 368 33 view .LVU455
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1604              		.loc 2 374 3 view .LVU456
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1605              		.loc 2 374 3 view .LVU457
 1606              		.loc 2 378 3 view .LVU458
 1607              	.LBB325:
 1608              	.LBI325:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1609              		.loc 3 396 20 view .LVU459
 1610              	.LBE325:
 1611              	.LBE324:
 1612              	.LBE323:
 1613              		.loc 3 398 3 view .LVU460
 1614              	.LBB330:
 1615              	.LBB329:
 1616              	.LBB328:
 1617              	.LBB326:
 1618              	.LBI326:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1619              		.loc 4 129 27 view .LVU461
 1620              	.LBB327:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1621              		.loc 4 131 3 view .LVU462
 1622              		.syntax divided
 1623              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1624 0028 62B6     		cpsie i
 1625              	@ 0 "" 2
 1626              		.thumb
 1627              		.syntax unified
 1628              	.LBE327:
 1629              	.LBE326:
 1630              	.LBE328:
 1631              	.LBE329:
 1632              	.LBE330:
 591:lib/chibios/os/rt/src/chevents.c ****     }
 1633              		.loc 1 591 7 view .LVU463
 591:lib/chibios/os/rt/src/chevents.c ****     }
 1634              		.loc 1 591 14 is_stmt 0 view .LVU464
 1635 002a 0021     		movs	r1, #0
 1636 002c F4E7     		b	.L61
 1637              	.L59:
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1638              		.loc 1 594 3 is_stmt 1 view .LVU465
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1639              		.loc 1 594 17 is_stmt 0 view .LVU466
 1640 002e 2B6B     		ldr	r3, [r5, #48]
 1641 0030 A343     		bics	r3, r4
 1642 0032 2B63     		str	r3, [r5, #48]
 595:lib/chibios/os/rt/src/chevents.c **** 
 1643              		.loc 1 595 3 is_stmt 1 view .LVU467
 1644              	.LBB331:
 1645              	.LBI331:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1646              		.loc 2 365 20 view .LVU468
 1647              	.LBB332:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1648              		.loc 2 367 22 view .LVU469
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1649              		.loc 2 368 33 view .LVU470
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1650              		.loc 2 374 3 view .LVU471
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1651              		.loc 2 374 3 view .LVU472
 1652              		.loc 2 378 3 view .LVU473
 1653              	.LBB333:
 1654              	.LBI333:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1655              		.loc 3 396 20 view .LVU474
 1656              	.LBE333:
 1657              	.LBE332:
 1658              	.LBE331:
 1659              		.loc 3 398 3 view .LVU475
 1660              	.LBB338:
 1661              	.LBB337:
 1662              	.LBB336:
 1663              	.LBB334:
 1664              	.LBI334:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1665              		.loc 4 129 27 view .LVU476
 1666              	.LBB335:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1667              		.loc 4 131 3 view .LVU477
 1668              		.syntax divided
 1669              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1670 0034 62B6     		cpsie i
 1671              	@ 0 "" 2
 1672              		.thumb
 1673              		.syntax unified
 1674              	.LBE335:
 1675              	.LBE334:
 1676              	.LBE336:
 1677              	.LBE337:
 1678              	.LBE338:
 597:lib/chibios/os/rt/src/chevents.c **** }
 1679              		.loc 1 597 3 view .LVU478
 597:lib/chibios/os/rt/src/chevents.c **** }
 1680              		.loc 1 597 10 is_stmt 0 view .LVU479
 1681 0036 2100     		movs	r1, r4
 1682 0038 EEE7     		b	.L61
 1683              	.L63:
 1684 003a C046     		.align	2
 1685              	.L62:
 1686 003c 00000000 		.word	ch
 1687              		.cfi_endproc
 1688              	.LFE168:
 1690              		.text
 1691              	.Letext0:
 1692              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1693              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1694              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1695              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 1696              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 1697              		.file 11 "./lib/chibios/os/rt/include/chtime.h"
 1698              		.file 12 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1699              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1700              		.file 14 "./lib/chibios/os/rt/include/chsem.h"
 1701              		.file 15 "./lib/chibios/os/rt/include/chmtx.h"
 1702              		.file 16 "./lib/chibios/os/rt/include/chregistry.h"
 1703              		.file 17 "./lib/chibios/os/oslib/include/chmemcore.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chevents.c
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:16     .text.chEvtRegisterMaskWithFlags:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:24     .text.chEvtRegisterMaskWithFlags:00000000 chEvtRegisterMaskWithFlags
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:152    .text.chEvtRegisterMaskWithFlags:0000001c $d
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:157    .text.chEvtUnregister:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:164    .text.chEvtUnregister:00000000 chEvtUnregister
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:275    .text.chEvtGetAndClearEventsI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:282    .text.chEvtGetAndClearEventsI:00000000 chEvtGetAndClearEventsI
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:315    .text.chEvtGetAndClearEventsI:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:320    .text.chEvtGetAndClearEvents:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:327    .text.chEvtGetAndClearEvents:00000000 chEvtGetAndClearEvents
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:429    .text.chEvtAddEvents:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:436    .text.chEvtAddEvents:00000000 chEvtAddEvents
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:541    .text.chEvtAddEvents:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:546    .text.chEvtGetAndClearFlags:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:553    .text.chEvtGetAndClearFlags:00000000 chEvtGetAndClearFlags
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:653    .text.chEvtSignalI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:660    .text.chEvtSignalI:00000000 chEvtSignalI
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:724    .text.chEvtBroadcastFlagsI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:731    .text.chEvtBroadcastFlagsI:00000000 chEvtBroadcastFlagsI
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:800    .text.chEvtSignal:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:807    .text.chEvtSignal:00000000 chEvtSignal
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:911    .text.chEvtBroadcastFlags:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:918    .text.chEvtBroadcastFlags:00000000 chEvtBroadcastFlags
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1020   .text.chEvtGetAndClearFlagsI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1027   .text.chEvtGetAndClearFlagsI:00000000 chEvtGetAndClearFlagsI
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1059   .text.chEvtDispatch:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1066   .text.chEvtDispatch:00000000 chEvtDispatch
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1143   .text.chEvtWaitOneTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1150   .text.chEvtWaitOneTimeout:00000000 chEvtWaitOneTimeout
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1301   .text.chEvtWaitOneTimeout:00000038 $d
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1306   .text.chEvtWaitAnyTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1313   .text.chEvtWaitAnyTimeout:00000000 chEvtWaitAnyTimeout
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1459   .text.chEvtWaitAnyTimeout:00000034 $d
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1464   .text.chEvtWaitAllTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1471   .text.chEvtWaitAllTimeout:00000000 chEvtWaitAllTimeout
C:\Users\kyleo\AppData\Local\Temp\ccBv0vWB.s:1686   .text.chEvtWaitAllTimeout:0000003c $d

UNDEFINED SYMBOLS
ch
chSchReadyI
chSchRescheduleS
chSchGoSleepTimeoutS
