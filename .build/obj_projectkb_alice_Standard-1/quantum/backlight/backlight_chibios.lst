   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"backlight_chibios.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uidiv
  16              		.global	__aeabi_idiv
  17              		.section	.text.cie_lightness,"ax",%progbits
  18              		.align	1
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	cie_lightness:
  26              	.LVL0:
  27              	.LFB194:
  28              		.file 1 "quantum/backlight/backlight_chibios.c"
   1:quantum/backlight/backlight_chibios.c **** #include "quantum.h"
   2:quantum/backlight/backlight_chibios.c **** #include "backlight.h"
   3:quantum/backlight/backlight_chibios.c **** #include <hal.h>
   4:quantum/backlight/backlight_chibios.c **** #include "debug.h"
   5:quantum/backlight/backlight_chibios.c **** 
   6:quantum/backlight/backlight_chibios.c **** // TODO: remove short term bodge when refactoring BACKLIGHT_CUSTOM_DRIVER out
   7:quantum/backlight/backlight_chibios.c **** #ifdef BACKLIGHT_PIN
   8:quantum/backlight/backlight_chibios.c **** 
   9:quantum/backlight/backlight_chibios.c **** // GPIOV2 && GPIOV3
  10:quantum/backlight/backlight_chibios.c **** #    ifndef BACKLIGHT_PAL_MODE
  11:quantum/backlight/backlight_chibios.c **** #        define BACKLIGHT_PAL_MODE 2
  12:quantum/backlight/backlight_chibios.c **** #    endif
  13:quantum/backlight/backlight_chibios.c **** 
  14:quantum/backlight/backlight_chibios.c **** // GENERIC
  15:quantum/backlight/backlight_chibios.c **** #    ifndef BACKLIGHT_PWM_DRIVER
  16:quantum/backlight/backlight_chibios.c **** #        define BACKLIGHT_PWM_DRIVER PWMD4
  17:quantum/backlight/backlight_chibios.c **** #    endif
  18:quantum/backlight/backlight_chibios.c **** #    ifndef BACKLIGHT_PWM_CHANNEL
  19:quantum/backlight/backlight_chibios.c **** #        define BACKLIGHT_PWM_CHANNEL 3
  20:quantum/backlight/backlight_chibios.c **** #    endif
  21:quantum/backlight/backlight_chibios.c **** 
  22:quantum/backlight/backlight_chibios.c **** static void breathing_callback(PWMDriver *pwmp);
  23:quantum/backlight/backlight_chibios.c **** 
  24:quantum/backlight/backlight_chibios.c **** static PWMConfig pwmCFG = {0xFFFF, /* PWM clock frequency  */
  25:quantum/backlight/backlight_chibios.c ****                            256,    /* PWM period (in ticks) 1S (1/10kHz=0.1mS 0.1ms*10000 ticks=1S)
  26:quantum/backlight/backlight_chibios.c ****                            NULL,   /* No Callback */
  27:quantum/backlight/backlight_chibios.c ****                            {       /* Default all channels to disabled - Channels will be configure
  28:quantum/backlight/backlight_chibios.c ****                             {PWM_OUTPUT_DISABLED, NULL},
  29:quantum/backlight/backlight_chibios.c ****                             {PWM_OUTPUT_DISABLED, NULL},
  30:quantum/backlight/backlight_chibios.c ****                             {PWM_OUTPUT_DISABLED, NULL},
  31:quantum/backlight/backlight_chibios.c ****                             {PWM_OUTPUT_DISABLED, NULL}},
  32:quantum/backlight/backlight_chibios.c ****                            0, /* HW dependent part.*/
  33:quantum/backlight/backlight_chibios.c ****                            0};
  34:quantum/backlight/backlight_chibios.c **** 
  35:quantum/backlight/backlight_chibios.c **** static PWMConfig pwmCFG_breathing = {0xFFFF,             /** PWM clock frequency  */
  36:quantum/backlight/backlight_chibios.c ****                                      256,                /* PWM period (in ticks) 1S (1/10kHz=0.1mS
  37:quantum/backlight/backlight_chibios.c ****                                      breathing_callback, /* Breathing Callback */
  38:quantum/backlight/backlight_chibios.c ****                                      {                   /* Default all channels to disabled - Chan
  39:quantum/backlight/backlight_chibios.c ****                                       {PWM_OUTPUT_DISABLED, NULL},
  40:quantum/backlight/backlight_chibios.c ****                                       {PWM_OUTPUT_DISABLED, NULL},
  41:quantum/backlight/backlight_chibios.c ****                                       {PWM_OUTPUT_DISABLED, NULL},
  42:quantum/backlight/backlight_chibios.c ****                                       {PWM_OUTPUT_DISABLED, NULL}},
  43:quantum/backlight/backlight_chibios.c ****                                      0, /* HW dependent part.*/
  44:quantum/backlight/backlight_chibios.c ****                                      0};
  45:quantum/backlight/backlight_chibios.c **** 
  46:quantum/backlight/backlight_chibios.c **** // See http://jared.geek.nz/2013/feb/linear-led-pwm
  47:quantum/backlight/backlight_chibios.c **** static uint16_t cie_lightness(uint16_t v) {
  29              		.loc 1 47 43 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  48:quantum/backlight/backlight_chibios.c ****     if (v <= 5243)     // if below 8% of max
  33              		.loc 1 48 5 view .LVU1
  34              		.loc 1 48 8 is_stmt 0 view .LVU2
  35 0000 0C4B     		ldr	r3, .L6
  47:quantum/backlight/backlight_chibios.c ****     if (v <= 5243)     // if below 8% of max
  36              		.loc 1 47 43 view .LVU3
  37 0002 10B5     		push	{r4, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 48 8 view .LVU4
  42 0004 9842     		cmp	r0, r3
  43 0006 04D8     		bhi	.L2
  49:quantum/backlight/backlight_chibios.c ****         return v / 9;  // same as dividing by 900%
  44              		.loc 1 49 9 is_stmt 1 view .LVU5
  45              		.loc 1 49 18 is_stmt 0 view .LVU6
  46 0008 0921     		movs	r1, #9
  47 000a FFF7FEFF 		bl	__aeabi_uidiv
  48              	.LVL1:
  49              	.L5:
  50              	.LBB60:
  51              	.LBB61:
  50:quantum/backlight/backlight_chibios.c ****     else {
  51:quantum/backlight/backlight_chibios.c ****         uint32_t y = (((uint32_t)v + 10486) << 8) / (10486 + 0xFFFFUL);  // add 16% of max and comp
  52:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  53:quantum/backlight/backlight_chibios.c ****         // and revert what we've done again after squaring.
  54:quantum/backlight/backlight_chibios.c ****         y = y * y * y >> 8;
  55:quantum/backlight/backlight_chibios.c ****         if (y > 0xFFFFUL)  // prevent overflow
  56:quantum/backlight/backlight_chibios.c ****             return 0xFFFFU;
  57:quantum/backlight/backlight_chibios.c ****         else
  58:quantum/backlight/backlight_chibios.c ****             return (uint16_t)y;
  52              		.loc 1 58 13 is_stmt 1 view .LVU7
  53              		.loc 1 58 20 is_stmt 0 view .LVU8
  54 000e 80B2     		uxth	r0, r0
  55              	.L3:
  56              	.LBE61:
  57              	.LBE60:
  59:quantum/backlight/backlight_chibios.c ****     }
  60:quantum/backlight/backlight_chibios.c **** }
  58              		.loc 1 60 1 view .LVU9
  59              		@ sp needed
  60 0010 10BD     		pop	{r4, pc}
  61              	.LVL2:
  62              	.L2:
  63              	.LBB63:
  64              	.LBI60:
  47:quantum/backlight/backlight_chibios.c ****     if (v <= 5243)     // if below 8% of max
  65              		.loc 1 47 17 is_stmt 1 view .LVU10
  66              	.LBB62:
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  67              		.loc 1 51 9 view .LVU11
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  68              		.loc 1 51 36 is_stmt 0 view .LVU12
  69 0012 094B     		ldr	r3, .L6+4
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  70              		.loc 1 51 18 view .LVU13
  71 0014 0949     		ldr	r1, .L6+8
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  72              		.loc 1 51 36 view .LVU14
  73 0016 C018     		adds	r0, r0, r3
  74              	.LVL3:
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  75              		.loc 1 51 45 view .LVU15
  76 0018 0002     		lsls	r0, r0, #8
  51:quantum/backlight/backlight_chibios.c ****         // to get a useful result with integer division, we shift left in the expression above
  77              		.loc 1 51 18 view .LVU16
  78 001a FFF7FEFF 		bl	__aeabi_uidiv
  79              	.LVL4:
  54:quantum/backlight/backlight_chibios.c ****         if (y > 0xFFFFUL)  // prevent overflow
  80              		.loc 1 54 9 is_stmt 1 view .LVU17
  54:quantum/backlight/backlight_chibios.c ****         if (y > 0xFFFFUL)  // prevent overflow
  81              		.loc 1 54 15 is_stmt 0 view .LVU18
  82 001e 0300     		movs	r3, r0
  83 0020 4343     		muls	r3, r0
  54:quantum/backlight/backlight_chibios.c ****         if (y > 0xFFFFUL)  // prevent overflow
  84              		.loc 1 54 19 view .LVU19
  85 0022 5843     		muls	r0, r3
  86              	.LVL5:
  55:quantum/backlight/backlight_chibios.c ****             return 0xFFFFU;
  87              		.loc 1 55 12 view .LVU20
  88 0024 8023     		movs	r3, #128
  54:quantum/backlight/backlight_chibios.c ****         if (y > 0xFFFFUL)  // prevent overflow
  89              		.loc 1 54 11 view .LVU21
  90 0026 000A     		lsrs	r0, r0, #8
  91              	.LVL6:
  55:quantum/backlight/backlight_chibios.c ****             return 0xFFFFU;
  92              		.loc 1 55 9 is_stmt 1 view .LVU22
  55:quantum/backlight/backlight_chibios.c ****             return 0xFFFFU;
  93              		.loc 1 55 12 is_stmt 0 view .LVU23
  94 0028 5B02     		lsls	r3, r3, #9
  95 002a 9842     		cmp	r0, r3
  96 002c EFD1     		bne	.L5
  56:quantum/backlight/backlight_chibios.c ****         else
  97              		.loc 1 56 20 view .LVU24
  98 002e 0448     		ldr	r0, .L6+12
  99              	.LVL7:
  56:quantum/backlight/backlight_chibios.c ****         else
 100              		.loc 1 56 20 view .LVU25
 101 0030 EEE7     		b	.L3
 102              	.L7:
 103 0032 C046     		.align	2
 104              	.L6:
 105 0034 7B140000 		.word	5243
 106 0038 F6280000 		.word	10486
 107 003c F5280100 		.word	76021
 108 0040 FFFF0000 		.word	65535
 109              	.LBE62:
 110              	.LBE63:
 111              		.cfi_endproc
 112              	.LFE194:
 114              		.section	.text.backlight_set,"ax",%progbits
 115              		.align	1
 116              		.global	backlight_set
 117              		.syntax unified
 118              		.code	16
 119              		.thumb_func
 120              		.fpu softvfp
 122              	backlight_set:
 123              	.LVL8:
 124              	.LFB196:
  61:quantum/backlight/backlight_chibios.c **** 
  62:quantum/backlight/backlight_chibios.c **** void backlight_init_ports(void) {
  63:quantum/backlight/backlight_chibios.c ****     // printf("backlight_init_ports()\n");
  64:quantum/backlight/backlight_chibios.c **** 
  65:quantum/backlight/backlight_chibios.c **** #    ifdef USE_GPIOV1
  66:quantum/backlight/backlight_chibios.c ****     palSetPadMode(PAL_PORT(BACKLIGHT_PIN), PAL_PAD(BACKLIGHT_PIN), PAL_MODE_STM32_ALTERNATE_PUSHPUL
  67:quantum/backlight/backlight_chibios.c **** #    else
  68:quantum/backlight/backlight_chibios.c ****     palSetPadMode(PAL_PORT(BACKLIGHT_PIN), PAL_PAD(BACKLIGHT_PIN), PAL_MODE_ALTERNATE(BACKLIGHT_PAL
  69:quantum/backlight/backlight_chibios.c **** #    endif
  70:quantum/backlight/backlight_chibios.c **** 
  71:quantum/backlight/backlight_chibios.c ****     pwmCFG.channels[BACKLIGHT_PWM_CHANNEL - 1].mode           = PWM_OUTPUT_ACTIVE_HIGH;
  72:quantum/backlight/backlight_chibios.c ****     pwmCFG_breathing.channels[BACKLIGHT_PWM_CHANNEL - 1].mode = PWM_OUTPUT_ACTIVE_HIGH;
  73:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
  74:quantum/backlight/backlight_chibios.c **** 
  75:quantum/backlight/backlight_chibios.c ****     backlight_set(get_backlight_level());
  76:quantum/backlight/backlight_chibios.c ****     if (is_backlight_breathing()) {
  77:quantum/backlight/backlight_chibios.c ****         breathing_enable();
  78:quantum/backlight/backlight_chibios.c ****     }
  79:quantum/backlight/backlight_chibios.c **** }
  80:quantum/backlight/backlight_chibios.c **** 
  81:quantum/backlight/backlight_chibios.c **** void backlight_set(uint8_t level) {
 125              		.loc 1 81 35 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
  82:quantum/backlight/backlight_chibios.c ****     // printf("backlight_set(%d)\n", level);
  83:quantum/backlight/backlight_chibios.c ****     if (level == 0) {
 129              		.loc 1 83 5 view .LVU27
  81:quantum/backlight/backlight_chibios.c ****     // printf("backlight_set(%d)\n", level);
 130              		.loc 1 81 35 is_stmt 0 view .LVU28
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 135 0002 0F4C     		ldr	r4, .L11
 136              		.loc 1 83 8 view .LVU29
 137 0004 0028     		cmp	r0, #0
 138 0006 04D1     		bne	.L9
 139              	.LBB72:
 140              	.LBI72:
  81:quantum/backlight/backlight_chibios.c ****     // printf("backlight_set(%d)\n", level);
 141              		.loc 1 81 6 is_stmt 1 view .LVU30
 142              	.LVL9:
 143              	.LBB73:
  84:quantum/backlight/backlight_chibios.c ****         // Turn backlight off
  85:quantum/backlight/backlight_chibios.c ****         pwmDisableChannel(&BACKLIGHT_PWM_DRIVER, BACKLIGHT_PWM_CHANNEL - 1);
 144              		.loc 1 85 9 view .LVU31
 145 0008 0100     		movs	r1, r0
 146 000a 2000     		movs	r0, r4
 147              	.LVL10:
 148              		.loc 1 85 9 is_stmt 0 view .LVU32
 149 000c FFF7FEFF 		bl	pwmDisableChannel
 150              	.LVL11:
 151              	.L8:
 152              		.loc 1 85 9 view .LVU33
 153              	.LBE73:
 154              	.LBE72:
  86:quantum/backlight/backlight_chibios.c ****     } else {
  87:quantum/backlight/backlight_chibios.c ****         // Turn backlight on
  88:quantum/backlight/backlight_chibios.c ****         if (!is_breathing()) {
  89:quantum/backlight/backlight_chibios.c ****             uint32_t duty = (uint32_t)(cie_lightness(0xFFFF * (uint32_t)level / BACKLIGHT_LEVELS));
  90:quantum/backlight/backlight_chibios.c ****             // printf("duty: (%d)\n", duty);
  91:quantum/backlight/backlight_chibios.c ****             pwmEnableChannel(&BACKLIGHT_PWM_DRIVER, BACKLIGHT_PWM_CHANNEL - 1, PWM_FRACTION_TO_WIDT
  92:quantum/backlight/backlight_chibios.c ****         }
  93:quantum/backlight/backlight_chibios.c ****     }
  94:quantum/backlight/backlight_chibios.c **** }
 155              		.loc 1 94 1 view .LVU34
 156              		@ sp needed
 157 0010 10BD     		pop	{r4, pc}
 158              	.LVL12:
 159              	.L9:
  88:quantum/backlight/backlight_chibios.c ****             uint32_t duty = (uint32_t)(cie_lightness(0xFFFF * (uint32_t)level / BACKLIGHT_LEVELS));
 160              		.loc 1 88 9 is_stmt 1 view .LVU35
 161              	.LBB74:
 162              	.LBI74:
  95:quantum/backlight/backlight_chibios.c **** 
  96:quantum/backlight/backlight_chibios.c **** uint8_t backlight_tick = 0;
  97:quantum/backlight/backlight_chibios.c **** 
  98:quantum/backlight/backlight_chibios.c **** void backlight_task(void) {}
  99:quantum/backlight/backlight_chibios.c **** 
 100:quantum/backlight/backlight_chibios.c **** #    define BREATHING_NO_HALT 0
 101:quantum/backlight/backlight_chibios.c **** #    define BREATHING_HALT_OFF 1
 102:quantum/backlight/backlight_chibios.c **** #    define BREATHING_HALT_ON 2
 103:quantum/backlight/backlight_chibios.c **** #    define BREATHING_STEPS 128
 104:quantum/backlight/backlight_chibios.c **** 
 105:quantum/backlight/backlight_chibios.c **** static uint8_t  breathing_halt    = BREATHING_NO_HALT;
 106:quantum/backlight/backlight_chibios.c **** static uint16_t breathing_counter = 0;
 107:quantum/backlight/backlight_chibios.c **** 
 108:quantum/backlight/backlight_chibios.c **** bool is_breathing(void) { return BACKLIGHT_PWM_DRIVER.config == &pwmCFG_breathing; }
 163              		.loc 1 108 6 view .LVU36
 164              	.LBB75:
 165              		.loc 1 108 27 view .LVU37
 166              	.LBE75:
 167              	.LBE74:
  88:quantum/backlight/backlight_chibios.c ****             uint32_t duty = (uint32_t)(cie_lightness(0xFFFF * (uint32_t)level / BACKLIGHT_LEVELS));
 168              		.loc 1 88 12 is_stmt 0 view .LVU38
 169 0012 0C4B     		ldr	r3, .L11+4
 170 0014 6268     		ldr	r2, [r4, #4]
 171 0016 9A42     		cmp	r2, r3
 172 0018 FAD0     		beq	.L8
 173              	.LBB76:
  89:quantum/backlight/backlight_chibios.c ****             // printf("duty: (%d)\n", duty);
 174              		.loc 1 89 13 is_stmt 1 view .LVU39
  89:quantum/backlight/backlight_chibios.c ****             // printf("duty: (%d)\n", duty);
 175              		.loc 1 89 61 is_stmt 0 view .LVU40
 176 001a 0104     		lsls	r1, r0, #16
 177 001c 081A     		subs	r0, r1, r0
 178              	.LVL13:
  89:quantum/backlight/backlight_chibios.c ****             // printf("duty: (%d)\n", duty);
 179              		.loc 1 89 79 view .LVU41
 180 001e 0621     		movs	r1, #6
 181 0020 FFF7FEFF 		bl	__aeabi_uidiv
 182              	.LVL14:
  89:quantum/backlight/backlight_chibios.c ****             // printf("duty: (%d)\n", duty);
 183              		.loc 1 89 40 view .LVU42
 184 0024 80B2     		uxth	r0, r0
 185 0026 FFF7FEFF 		bl	cie_lightness
 186              	.LVL15:
  91:quantum/backlight/backlight_chibios.c ****         }
 187              		.loc 1 91 13 is_stmt 1 view .LVU43
  91:quantum/backlight/backlight_chibios.c ****         }
 188              		.loc 1 91 80 is_stmt 0 view .LVU44
 189 002a A368     		ldr	r3, [r4, #8]
  91:quantum/backlight/backlight_chibios.c ****         }
 190              		.loc 1 91 13 view .LVU45
 191 002c 0649     		ldr	r1, .L11+8
  91:quantum/backlight/backlight_chibios.c ****         }
 192              		.loc 1 91 80 view .LVU46
 193 002e 5843     		muls	r0, r3
 194              	.LVL16:
  91:quantum/backlight/backlight_chibios.c ****         }
 195              		.loc 1 91 13 view .LVU47
 196 0030 FFF7FEFF 		bl	__aeabi_uidiv
 197              	.LVL17:
 198 0034 0021     		movs	r1, #0
 199 0036 0200     		movs	r2, r0
 200 0038 2000     		movs	r0, r4
 201 003a FFF7FEFF 		bl	pwmEnableChannel
 202              	.LVL18:
 203              	.LBE76:
  94:quantum/backlight/backlight_chibios.c **** 
 204              		.loc 1 94 1 view .LVU48
 205 003e E7E7     		b	.L8
 206              	.L12:
 207              		.align	2
 208              	.L11:
 209 0040 00000000 		.word	PWMD3
 210 0044 00000000 		.word	.LANCHOR0
 211 0048 FFFF0000 		.word	65535
 212              		.cfi_endproc
 213              	.LFE196:
 215              		.section	.text.backlight_task,"ax",%progbits
 216              		.align	1
 217              		.global	backlight_task
 218              		.syntax unified
 219              		.code	16
 220              		.thumb_func
 221              		.fpu softvfp
 223              	backlight_task:
 224              	.LFB197:
  98:quantum/backlight/backlight_chibios.c **** 
 225              		.loc 1 98 27 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
  98:quantum/backlight/backlight_chibios.c **** 
 230              		.loc 1 98 28 view .LVU50
  98:quantum/backlight/backlight_chibios.c **** 
 231              		.loc 1 98 1 is_stmt 0 view .LVU51
 232              		@ sp needed
 233 0000 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE197:
 237              		.section	.text.is_breathing,"ax",%progbits
 238              		.align	1
 239              		.global	is_breathing
 240              		.syntax unified
 241              		.code	16
 242              		.thumb_func
 243              		.fpu softvfp
 245              	is_breathing:
 246              	.LFB198:
 247              		.loc 1 108 25 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              		.loc 1 108 27 view .LVU53
 253              		.loc 1 108 62 is_stmt 0 view .LVU54
 254 0000 034B     		ldr	r3, .L15
 255              		.loc 1 108 1 view .LVU55
 256              		@ sp needed
 257              		.loc 1 108 62 view .LVU56
 258 0002 5868     		ldr	r0, [r3, #4]
 259 0004 034B     		ldr	r3, .L15+4
 260 0006 C01A     		subs	r0, r0, r3
 261 0008 4342     		rsbs	r3, r0, #0
 262 000a 5841     		adcs	r0, r0, r3
 263 000c C0B2     		uxtb	r0, r0
 264              		.loc 1 108 1 view .LVU57
 265 000e 7047     		bx	lr
 266              	.L16:
 267              		.align	2
 268              	.L15:
 269 0010 00000000 		.word	PWMD3
 270 0014 00000000 		.word	.LANCHOR0
 271              		.cfi_endproc
 272              	.LFE198:
 274              		.section	.text.breathing_interrupt_enable,"ax",%progbits
 275              		.align	1
 276              		.global	breathing_interrupt_enable
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 280              		.fpu softvfp
 282              	breathing_interrupt_enable:
 283              	.LFB201:
 109:quantum/backlight/backlight_chibios.c **** 
 110:quantum/backlight/backlight_chibios.c **** static inline void breathing_min(void) { breathing_counter = 0; }
 111:quantum/backlight/backlight_chibios.c **** 
 112:quantum/backlight/backlight_chibios.c **** static inline void breathing_max(void) { breathing_counter = get_breathing_period() * 256 / 2; }
 113:quantum/backlight/backlight_chibios.c **** 
 114:quantum/backlight/backlight_chibios.c **** void breathing_interrupt_enable(void) {
 284              		.loc 1 114 39 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 115:quantum/backlight/backlight_chibios.c ****     pwmStop(&BACKLIGHT_PWM_DRIVER);
 288              		.loc 1 115 5 view .LVU59
 114:quantum/backlight/backlight_chibios.c ****     pwmStop(&BACKLIGHT_PWM_DRIVER);
 289              		.loc 1 114 39 is_stmt 0 view .LVU60
 290 0000 10B5     		push	{r4, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 4, -8
 293              		.cfi_offset 14, -4
 294              		.loc 1 115 5 view .LVU61
 295 0002 0E4C     		ldr	r4, .L18
 296 0004 2000     		movs	r0, r4
 297 0006 FFF7FEFF 		bl	pwmStop
 298              	.LVL19:
 116:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG_breathing);
 299              		.loc 1 116 5 is_stmt 1 view .LVU62
 300 000a 0D49     		ldr	r1, .L18+4
 301 000c 2000     		movs	r0, r4
 302 000e FFF7FEFF 		bl	pwmStart
 303              	.LVL20:
 117:quantum/backlight/backlight_chibios.c ****     chSysLockFromISR();
 304              		.loc 1 117 5 view .LVU63
 305              	.LBB77:
 306              	.LBI77:
 307              		.file 2 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 308              		.loc 2 393 20 view .LVU64
 309              	.LBE77:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 310              		.loc 2 395 3 view .LVU65
 311              	.LBB85:
 312              	.LBB78:
 313              	.LBI78:
 314              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock_from_isr(void) {
 315              		.loc 3 406 20 view .LVU66
 316              	.LBE78:
 317              	.LBE85:
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_lock();
 318              		.loc 3 408 3 view .LVU67
 319              	.LBB86:
 320              	.LBB83:
 321              	.LBB79:
 322              	.LBI79:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323              		.loc 3 387 20 view .LVU68
 324              	.LBE79:
 325              	.LBE83:
 326              	.LBE86:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 327              		.loc 3 389 3 view .LVU69
 328              	.LBB87:
 329              	.LBB84:
 330              	.LBB82:
 331              	.LBB80:
 332              	.LBI80:
 333              		.file 4 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 334              		.loc 4 140 27 view .LVU70
 335              	.LBB81:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 336              		.loc 4 142 3 view .LVU71
 337              		.syntax divided
 338              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 339 0012 72B6     		cpsid i
 340              	@ 0 "" 2
 341              		.thumb
 342              		.syntax unified
 343              	.LBE81:
 344              	.LBE80:
 345              	.LBE82:
 346              	.LBE84:
 347              	.LBE87:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 348              		.loc 2 396 34 view .LVU72
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 349              		.loc 2 397 29 view .LVU73
 118:quantum/backlight/backlight_chibios.c ****     pwmEnablePeriodicNotification(&BACKLIGHT_PWM_DRIVER);
 350              		.loc 1 118 5 view .LVU74
 351 0014 2000     		movs	r0, r4
 352 0016 FFF7FEFF 		bl	pwmEnablePeriodicNotification
 353              	.LVL21:
 119:quantum/backlight/backlight_chibios.c ****     pwmEnableChannelI(&BACKLIGHT_PWM_DRIVER, BACKLIGHT_PWM_CHANNEL - 1, PWM_FRACTION_TO_WIDTH(&BACK
 354              		.loc 1 119 5 view .LVU75
 355              		.loc 1 119 5 view .LVU76
 356 001a 0123     		movs	r3, #1
 357 001c E268     		ldr	r2, [r4, #12]
 358 001e 0949     		ldr	r1, .L18+8
 359 0020 1343     		orrs	r3, r2
 360 0022 E360     		str	r3, [r4, #12]
 361              		.loc 1 119 5 view .LVU77
 362 0024 A368     		ldr	r3, [r4, #8]
 363 0026 1804     		lsls	r0, r3, #16
 364 0028 C01A     		subs	r0, r0, r3
 365 002a FFF7FEFF 		bl	__aeabi_uidiv
 366              	.LVL22:
 367 002e 0021     		movs	r1, #0
 368 0030 0200     		movs	r2, r0
 369 0032 2000     		movs	r0, r4
 370 0034 FFF7FEFF 		bl	pwm_lld_enable_channel
 371              	.LVL23:
 120:quantum/backlight/backlight_chibios.c ****     chSysUnlockFromISR();
 372              		.loc 1 120 5 view .LVU78
 373              	.LBB88:
 374              	.LBI88:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 375              		.loc 2 413 20 view .LVU79
 376              	.LBE88:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 377              		.loc 2 415 31 view .LVU80
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 378              		.loc 2 416 33 view .LVU81
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 379              		.loc 2 417 3 view .LVU82
 380              	.LBB96:
 381              	.LBB89:
 382              	.LBI89:
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock_from_isr(void) {
 383              		.loc 3 416 20 view .LVU83
 384              	.LBE89:
 385              	.LBE96:
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_unlock();
 386              		.loc 3 418 3 view .LVU84
 387              	.LBB97:
 388              	.LBB94:
 389              	.LBB90:
 390              	.LBI90:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 391              		.loc 3 396 20 view .LVU85
 392              	.LBE90:
 393              	.LBE94:
 394              	.LBE97:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 395              		.loc 3 398 3 view .LVU86
 396              	.LBB98:
 397              	.LBB95:
 398              	.LBB93:
 399              	.LBB91:
 400              	.LBI91:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 401              		.loc 4 129 27 view .LVU87
 402              	.LBB92:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 403              		.loc 4 131 3 view .LVU88
 404              		.syntax divided
 405              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 406 0038 62B6     		cpsie i
 407              	@ 0 "" 2
 408              		.thumb
 409              		.syntax unified
 410              	.LBE92:
 411              	.LBE91:
 412              	.LBE93:
 413              	.LBE95:
 414              	.LBE98:
 121:quantum/backlight/backlight_chibios.c **** }
 415              		.loc 1 121 1 is_stmt 0 view .LVU89
 416              		@ sp needed
 417 003a 10BD     		pop	{r4, pc}
 418              	.L19:
 419              		.align	2
 420              	.L18:
 421 003c 00000000 		.word	PWMD3
 422 0040 00000000 		.word	.LANCHOR0
 423 0044 FFFF0000 		.word	65535
 424              		.cfi_endproc
 425              	.LFE201:
 427              		.section	.text.breathing_interrupt_disable,"ax",%progbits
 428              		.align	1
 429              		.global	breathing_interrupt_disable
 430              		.syntax unified
 431              		.code	16
 432              		.thumb_func
 433              		.fpu softvfp
 435              	breathing_interrupt_disable:
 436              	.LFB202:
 122:quantum/backlight/backlight_chibios.c **** 
 123:quantum/backlight/backlight_chibios.c **** void breathing_interrupt_disable(void) {
 437              		.loc 1 123 40 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 124:quantum/backlight/backlight_chibios.c ****     pwmStop(&BACKLIGHT_PWM_DRIVER);
 441              		.loc 1 124 5 view .LVU91
 123:quantum/backlight/backlight_chibios.c ****     pwmStop(&BACKLIGHT_PWM_DRIVER);
 442              		.loc 1 123 40 is_stmt 0 view .LVU92
 443 0000 10B5     		push	{r4, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 447              		.loc 1 124 5 view .LVU93
 448 0002 044C     		ldr	r4, .L21
 125:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 126:quantum/backlight/backlight_chibios.c **** }
 449              		.loc 1 126 1 view .LVU94
 450              		@ sp needed
 124:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 451              		.loc 1 124 5 view .LVU95
 452 0004 2000     		movs	r0, r4
 453 0006 FFF7FEFF 		bl	pwmStop
 454              	.LVL24:
 125:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 455              		.loc 1 125 5 is_stmt 1 view .LVU96
 456 000a 0349     		ldr	r1, .L21+4
 457 000c 2000     		movs	r0, r4
 458 000e FFF7FEFF 		bl	pwmStart
 459              	.LVL25:
 460              		.loc 1 126 1 is_stmt 0 view .LVU97
 461 0012 10BD     		pop	{r4, pc}
 462              	.L22:
 463              		.align	2
 464              	.L21:
 465 0014 00000000 		.word	PWMD3
 466 0018 00000000 		.word	.LANCHOR1
 467              		.cfi_endproc
 468              	.LFE202:
 470              		.global	__aeabi_uidivmod
 471              		.global	__aeabi_idivmod
 472              		.section	.text.breathing_callback,"ax",%progbits
 473              		.align	1
 474              		.syntax unified
 475              		.code	16
 476              		.thumb_func
 477              		.fpu softvfp
 479              	breathing_callback:
 480              	.LVL26:
 481              	.LFB208:
 127:quantum/backlight/backlight_chibios.c **** 
 128:quantum/backlight/backlight_chibios.c **** void breathing_enable(void) {
 129:quantum/backlight/backlight_chibios.c ****     breathing_counter = 0;
 130:quantum/backlight/backlight_chibios.c ****     breathing_halt    = BREATHING_NO_HALT;
 131:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 132:quantum/backlight/backlight_chibios.c **** }
 133:quantum/backlight/backlight_chibios.c **** 
 134:quantum/backlight/backlight_chibios.c **** void breathing_pulse(void) {
 135:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 136:quantum/backlight/backlight_chibios.c ****         breathing_min();
 137:quantum/backlight/backlight_chibios.c ****     else
 138:quantum/backlight/backlight_chibios.c ****         breathing_max();
 139:quantum/backlight/backlight_chibios.c ****     breathing_halt = BREATHING_HALT_ON;
 140:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 141:quantum/backlight/backlight_chibios.c **** }
 142:quantum/backlight/backlight_chibios.c **** 
 143:quantum/backlight/backlight_chibios.c **** void breathing_disable(void) {
 144:quantum/backlight/backlight_chibios.c ****     // printf("breathing_disable()\n");
 145:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_disable();
 146:quantum/backlight/backlight_chibios.c ****     // Restore backlight level
 147:quantum/backlight/backlight_chibios.c ****     backlight_set(get_backlight_level());
 148:quantum/backlight/backlight_chibios.c **** }
 149:quantum/backlight/backlight_chibios.c **** 
 150:quantum/backlight/backlight_chibios.c **** void breathing_self_disable(void) {
 151:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 152:quantum/backlight/backlight_chibios.c ****         breathing_halt = BREATHING_HALT_OFF;
 153:quantum/backlight/backlight_chibios.c ****     else
 154:quantum/backlight/backlight_chibios.c ****         breathing_halt = BREATHING_HALT_ON;
 155:quantum/backlight/backlight_chibios.c **** }
 156:quantum/backlight/backlight_chibios.c **** 
 157:quantum/backlight/backlight_chibios.c **** /* To generate breathing curve in python:
 158:quantum/backlight/backlight_chibios.c ****  * from math import sin, pi; [int(sin(x/128.0*pi)**4*255) for x in range(128)]
 159:quantum/backlight/backlight_chibios.c ****  */
 160:quantum/backlight/backlight_chibios.c **** static const uint8_t breathing_table[BREATHING_STEPS] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 
 161:quantum/backlight/backlight_chibios.c **** 
 162:quantum/backlight/backlight_chibios.c **** // Use this before the cie_lightness function.
 163:quantum/backlight/backlight_chibios.c **** static inline uint16_t scale_backlight(uint16_t v) { return v / BACKLIGHT_LEVELS * get_backlight_le
 164:quantum/backlight/backlight_chibios.c **** 
 165:quantum/backlight/backlight_chibios.c **** static void breathing_callback(PWMDriver *pwmp) {
 482              		.loc 1 165 49 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 166:quantum/backlight/backlight_chibios.c ****     (void)pwmp;
 486              		.loc 1 166 5 view .LVU99
 167:quantum/backlight/backlight_chibios.c ****     uint8_t  breathing_period = get_breathing_period();
 487              		.loc 1 167 5 view .LVU100
 165:quantum/backlight/backlight_chibios.c ****     (void)pwmp;
 488              		.loc 1 165 49 is_stmt 0 view .LVU101
 489 0000 70B5     		push	{r4, r5, r6, lr}
 490              		.cfi_def_cfa_offset 16
 491              		.cfi_offset 4, -16
 492              		.cfi_offset 5, -12
 493              		.cfi_offset 6, -8
 494              		.cfi_offset 14, -4
 495              		.loc 1 167 33 view .LVU102
 496 0002 FFF7FEFF 		bl	get_breathing_period
 497              	.LVL27:
 498              		.loc 1 167 33 view .LVU103
 499 0006 0400     		movs	r4, r0
 500              	.LVL28:
 168:quantum/backlight/backlight_chibios.c ****     uint16_t interval         = (uint16_t)breathing_period * 256 / BREATHING_STEPS;
 501              		.loc 1 168 5 is_stmt 1 view .LVU104
 169:quantum/backlight/backlight_chibios.c ****     // resetting after one period to prevent ugly reset at overflow.
 170:quantum/backlight/backlight_chibios.c ****     breathing_counter = (breathing_counter + 1) % (breathing_period * 256);
 502              		.loc 1 170 5 view .LVU105
 503              		.loc 1 170 44 is_stmt 0 view .LVU106
 504 0008 1C4D     		ldr	r5, .L30
 505              		.loc 1 170 69 view .LVU107
 506 000a 2102     		lsls	r1, r4, #8
 507              		.loc 1 170 44 view .LVU108
 508 000c 2888     		ldrh	r0, [r5]
 168:quantum/backlight/backlight_chibios.c ****     uint16_t interval         = (uint16_t)breathing_period * 256 / BREATHING_STEPS;
 509              		.loc 1 168 14 view .LVU109
 510 000e 6400     		lsls	r4, r4, #1
 511              	.LVL29:
 512              		.loc 1 170 44 view .LVU110
 513 0010 0130     		adds	r0, r0, #1
 514              		.loc 1 170 49 view .LVU111
 515 0012 FFF7FEFF 		bl	__aeabi_idivmod
 516              	.LVL30:
 517              		.loc 1 170 23 view .LVU112
 518 0016 88B2     		uxth	r0, r1
 519 0018 2880     		strh	r0, [r5]
 171:quantum/backlight/backlight_chibios.c ****     uint8_t index     = breathing_counter / interval % BREATHING_STEPS;
 520              		.loc 1 171 5 is_stmt 1 view .LVU113
 521              		.loc 1 171 54 is_stmt 0 view .LVU114
 522 001a A1B2     		uxth	r1, r4
 523 001c FFF7FEFF 		bl	__aeabi_uidiv
 524              	.LVL31:
 525              		.loc 1 171 13 view .LVU115
 526 0020 7F24     		movs	r4, #127
 172:quantum/backlight/backlight_chibios.c **** 
 173:quantum/backlight/backlight_chibios.c ****     if (((breathing_halt == BREATHING_HALT_ON) && (index == BREATHING_STEPS / 2)) || ((breathing_ha
 527              		.loc 1 173 26 view .LVU116
 528 0022 174B     		ldr	r3, .L30+4
 171:quantum/backlight/backlight_chibios.c ****     uint8_t index     = breathing_counter / interval % BREATHING_STEPS;
 529              		.loc 1 171 13 view .LVU117
 530 0024 0440     		ands	r4, r0
 531              	.LVL32:
 532              		.loc 1 173 5 is_stmt 1 view .LVU118
 533              		.loc 1 173 26 is_stmt 0 view .LVU119
 534 0026 1B78     		ldrb	r3, [r3]
 535              		.loc 1 173 8 view .LVU120
 536 0028 022B     		cmp	r3, #2
 537 002a 04D1     		bne	.L24
 538              		.loc 1 173 48 discriminator 1 view .LVU121
 539 002c 402C     		cmp	r4, #64
 540 002e 06D1     		bne	.L26
 541              	.L25:
 174:quantum/backlight/backlight_chibios.c ****         breathing_interrupt_disable();
 542              		.loc 1 174 9 is_stmt 1 view .LVU122
 543 0030 FFF7FEFF 		bl	breathing_interrupt_disable
 544              	.LVL33:
 545 0034 03E0     		b	.L26
 546              	.L24:
 173:quantum/backlight/backlight_chibios.c ****         breathing_interrupt_disable();
 547              		.loc 1 173 83 is_stmt 0 discriminator 3 view .LVU123
 548 0036 012B     		cmp	r3, #1
 549 0038 01D1     		bne	.L26
 173:quantum/backlight/backlight_chibios.c ****         breathing_interrupt_disable();
 550              		.loc 1 173 126 discriminator 4 view .LVU124
 551 003a 7F2C     		cmp	r4, #127
 552 003c F8D0     		beq	.L25
 553              	.L26:
 175:quantum/backlight/backlight_chibios.c ****     }
 176:quantum/backlight/backlight_chibios.c **** 
 177:quantum/backlight/backlight_chibios.c ****     uint32_t duty = cie_lightness(scale_backlight(breathing_table[index] * 256));
 554              		.loc 1 177 5 is_stmt 1 view .LVU125
 555              	.LVL34:
 556              	.LBB111:
 557              	.LBI111:
 163:quantum/backlight/backlight_chibios.c **** 
 558              		.loc 1 163 24 view .LVU126
 559              	.LBB112:
 163:quantum/backlight/backlight_chibios.c **** 
 560              		.loc 1 163 54 view .LVU127
 561              	.LBE112:
 562              	.LBE111:
 563              		.loc 1 177 66 is_stmt 0 view .LVU128
 564 003e 114B     		ldr	r3, .L30+8
 565              	.LBB115:
 566              	.LBB113:
 163:quantum/backlight/backlight_chibios.c **** 
 567              		.loc 1 163 82 view .LVU129
 568 0040 0621     		movs	r1, #6
 569              	.LBE113:
 570              	.LBE115:
 571              		.loc 1 177 21 view .LVU130
 572 0042 185D     		ldrb	r0, [r3, r4]
 573              	.LBB116:
 574              	.LBB114:
 163:quantum/backlight/backlight_chibios.c **** 
 575              		.loc 1 163 82 view .LVU131
 576 0044 0002     		lsls	r0, r0, #8
 577 0046 FFF7FEFF 		bl	__aeabi_uidiv
 578              	.LVL35:
 579 004a 84B2     		uxth	r4, r0
 580              	.LVL36:
 163:quantum/backlight/backlight_chibios.c **** 
 581              		.loc 1 163 84 view .LVU132
 582 004c FFF7FEFF 		bl	get_backlight_level
 583              	.LVL37:
 163:quantum/backlight/backlight_chibios.c **** 
 584              		.loc 1 163 82 view .LVU133
 585 0050 6043     		muls	r0, r4
 586              	.LBE114:
 587              	.LBE116:
 588              		.loc 1 177 21 view .LVU134
 589 0052 80B2     		uxth	r0, r0
 590 0054 FFF7FEFF 		bl	cie_lightness
 591              	.LVL38:
 178:quantum/backlight/backlight_chibios.c **** 
 179:quantum/backlight/backlight_chibios.c ****     chSysLockFromISR();
 592              		.loc 1 179 5 is_stmt 1 view .LVU135
 593              	.LBB117:
 594              	.LBI117:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 595              		.loc 2 393 20 view .LVU136
 596              	.LBE117:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 597              		.loc 2 395 3 view .LVU137
 598              	.LBB125:
 599              	.LBB118:
 600              	.LBI118:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 601              		.loc 3 406 20 view .LVU138
 602              	.LBE118:
 603              	.LBE125:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 604              		.loc 3 408 3 view .LVU139
 605              	.LBB126:
 606              	.LBB123:
 607              	.LBB119:
 608              	.LBI119:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 609              		.loc 3 387 20 view .LVU140
 610              	.LBE119:
 611              	.LBE123:
 612              	.LBE126:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 613              		.loc 3 389 3 view .LVU141
 614              	.LBB127:
 615              	.LBB124:
 616              	.LBB122:
 617              	.LBB120:
 618              	.LBI120:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 619              		.loc 4 140 27 view .LVU142
 620              	.LBB121:
 621              		.loc 4 142 3 view .LVU143
 622              		.syntax divided
 623              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 624 0058 72B6     		cpsid i
 625              	@ 0 "" 2
 626              		.thumb
 627              		.syntax unified
 628              	.LBE121:
 629              	.LBE120:
 630              	.LBE122:
 631              	.LBE124:
 632              	.LBE127:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 633              		.loc 2 396 34 view .LVU144
 397:./lib/chibios/os/rt/include/chsys.h **** }
 634              		.loc 2 397 29 view .LVU145
 180:quantum/backlight/backlight_chibios.c ****     pwmEnableChannelI(&BACKLIGHT_PWM_DRIVER, BACKLIGHT_PWM_CHANNEL - 1, PWM_FRACTION_TO_WIDTH(&BACK
 635              		.loc 1 180 5 view .LVU146
 636              		.loc 1 180 5 view .LVU147
 637 005a 0123     		movs	r3, #1
 638 005c 0A4C     		ldr	r4, .L30+12
 639 005e 0B49     		ldr	r1, .L30+16
 640 0060 E268     		ldr	r2, [r4, #12]
 641 0062 1343     		orrs	r3, r2
 642 0064 E360     		str	r3, [r4, #12]
 643              		.loc 1 180 5 view .LVU148
 644 0066 A368     		ldr	r3, [r4, #8]
 645 0068 5843     		muls	r0, r3
 646              	.LVL39:
 647              		.loc 1 180 5 is_stmt 0 view .LVU149
 648 006a FFF7FEFF 		bl	__aeabi_uidiv
 649              	.LVL40:
 650 006e 0021     		movs	r1, #0
 651 0070 0200     		movs	r2, r0
 652 0072 2000     		movs	r0, r4
 653 0074 FFF7FEFF 		bl	pwm_lld_enable_channel
 654              	.LVL41:
 181:quantum/backlight/backlight_chibios.c ****     chSysUnlockFromISR();
 655              		.loc 1 181 5 is_stmt 1 view .LVU150
 656              	.LBB128:
 657              	.LBI128:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 658              		.loc 2 413 20 view .LVU151
 659              	.LBE128:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 660              		.loc 2 415 31 view .LVU152
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 661              		.loc 2 416 33 view .LVU153
 662              		.loc 2 417 3 view .LVU154
 663              	.LBB136:
 664              	.LBB129:
 665              	.LBI129:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 666              		.loc 3 416 20 view .LVU155
 667              	.LBE129:
 668              	.LBE136:
 669              		.loc 3 418 3 view .LVU156
 670              	.LBB137:
 671              	.LBB134:
 672              	.LBB130:
 673              	.LBI130:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 674              		.loc 3 396 20 view .LVU157
 675              	.LBE130:
 676              	.LBE134:
 677              	.LBE137:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 678              		.loc 3 398 3 view .LVU158
 679              	.LBB138:
 680              	.LBB135:
 681              	.LBB133:
 682              	.LBB131:
 683              	.LBI131:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 684              		.loc 4 129 27 view .LVU159
 685              	.LBB132:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 686              		.loc 4 131 3 view .LVU160
 687              		.syntax divided
 688              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 689 0078 62B6     		cpsie i
 690              	@ 0 "" 2
 691              		.thumb
 692              		.syntax unified
 693              	.LBE132:
 694              	.LBE131:
 695              	.LBE133:
 696              	.LBE135:
 697              	.LBE138:
 182:quantum/backlight/backlight_chibios.c **** }
 698              		.loc 1 182 1 is_stmt 0 view .LVU161
 699              		@ sp needed
 700 007a 70BD     		pop	{r4, r5, r6, pc}
 701              	.L31:
 702              		.align	2
 703              	.L30:
 704 007c 00000000 		.word	.LANCHOR2
 705 0080 00000000 		.word	.LANCHOR3
 706 0084 00000000 		.word	breathing_table
 707 0088 00000000 		.word	PWMD3
 708 008c FFFF0000 		.word	65535
 709              		.cfi_endproc
 710              	.LFE208:
 712              		.section	.text.breathing_enable,"ax",%progbits
 713              		.align	1
 714              		.global	breathing_enable
 715              		.syntax unified
 716              		.code	16
 717              		.thumb_func
 718              		.fpu softvfp
 720              	breathing_enable:
 721              	.LFB203:
 128:quantum/backlight/backlight_chibios.c ****     breathing_counter = 0;
 722              		.loc 1 128 29 is_stmt 1 view -0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 129:quantum/backlight/backlight_chibios.c ****     breathing_halt    = BREATHING_NO_HALT;
 726              		.loc 1 129 5 view .LVU163
 129:quantum/backlight/backlight_chibios.c ****     breathing_halt    = BREATHING_NO_HALT;
 727              		.loc 1 129 23 is_stmt 0 view .LVU164
 728 0000 0023     		movs	r3, #0
 128:quantum/backlight/backlight_chibios.c ****     breathing_counter = 0;
 729              		.loc 1 128 29 view .LVU165
 730 0002 10B5     		push	{r4, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 4, -8
 733              		.cfi_offset 14, -4
 129:quantum/backlight/backlight_chibios.c ****     breathing_halt    = BREATHING_NO_HALT;
 734              		.loc 1 129 23 view .LVU166
 735 0004 034A     		ldr	r2, .L33
 132:quantum/backlight/backlight_chibios.c **** 
 736              		.loc 1 132 1 view .LVU167
 737              		@ sp needed
 129:quantum/backlight/backlight_chibios.c ****     breathing_halt    = BREATHING_NO_HALT;
 738              		.loc 1 129 23 view .LVU168
 739 0006 1380     		strh	r3, [r2]
 130:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 740              		.loc 1 130 5 is_stmt 1 view .LVU169
 130:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 741              		.loc 1 130 23 is_stmt 0 view .LVU170
 742 0008 034A     		ldr	r2, .L33+4
 743 000a 1370     		strb	r3, [r2]
 131:quantum/backlight/backlight_chibios.c **** }
 744              		.loc 1 131 5 is_stmt 1 view .LVU171
 745 000c FFF7FEFF 		bl	breathing_interrupt_enable
 746              	.LVL42:
 132:quantum/backlight/backlight_chibios.c **** 
 747              		.loc 1 132 1 is_stmt 0 view .LVU172
 748 0010 10BD     		pop	{r4, pc}
 749              	.L34:
 750 0012 C046     		.align	2
 751              	.L33:
 752 0014 00000000 		.word	.LANCHOR2
 753 0018 00000000 		.word	.LANCHOR3
 754              		.cfi_endproc
 755              	.LFE203:
 757              		.section	.text.backlight_init_ports,"ax",%progbits
 758              		.align	1
 759              		.global	backlight_init_ports
 760              		.syntax unified
 761              		.code	16
 762              		.thumb_func
 763              		.fpu softvfp
 765              	backlight_init_ports:
 766              	.LFB195:
  62:quantum/backlight/backlight_chibios.c ****     // printf("backlight_init_ports()\n");
 767              		.loc 1 62 33 is_stmt 1 view -0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
  68:quantum/backlight/backlight_chibios.c **** #    endif
 771              		.loc 1 68 5 view .LVU174
 772 0000 9020     		movs	r0, #144
  62:quantum/backlight/backlight_chibios.c ****     // printf("backlight_init_ports()\n");
 773              		.loc 1 62 33 is_stmt 0 view .LVU175
 774 0002 10B5     		push	{r4, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 4, -8
 777              		.cfi_offset 14, -4
  68:quantum/backlight/backlight_chibios.c **** #    endif
 778              		.loc 1 68 5 view .LVU176
 779 0004 8222     		movs	r2, #130
 780 0006 4021     		movs	r1, #64
 781 0008 C005     		lsls	r0, r0, #23
 782 000a FFF7FEFF 		bl	_pal_lld_setgroupmode
 783              	.LVL43:
  71:quantum/backlight/backlight_chibios.c ****     pwmCFG_breathing.channels[BACKLIGHT_PWM_CHANNEL - 1].mode = PWM_OUTPUT_ACTIVE_HIGH;
 784              		.loc 1 71 5 is_stmt 1 view .LVU177
  71:quantum/backlight/backlight_chibios.c ****     pwmCFG_breathing.channels[BACKLIGHT_PWM_CHANNEL - 1].mode = PWM_OUTPUT_ACTIVE_HIGH;
 785              		.loc 1 71 63 is_stmt 0 view .LVU178
 786 000e 0123     		movs	r3, #1
 787 0010 0849     		ldr	r1, .L40
  72:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 788              		.loc 1 72 63 view .LVU179
 789 0012 094A     		ldr	r2, .L40+4
  71:quantum/backlight/backlight_chibios.c ****     pwmCFG_breathing.channels[BACKLIGHT_PWM_CHANNEL - 1].mode = PWM_OUTPUT_ACTIVE_HIGH;
 790              		.loc 1 71 63 view .LVU180
 791 0014 CB60     		str	r3, [r1, #12]
  72:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 792              		.loc 1 72 5 is_stmt 1 view .LVU181
  72:quantum/backlight/backlight_chibios.c ****     pwmStart(&BACKLIGHT_PWM_DRIVER, &pwmCFG);
 793              		.loc 1 72 63 is_stmt 0 view .LVU182
 794 0016 D360     		str	r3, [r2, #12]
  73:quantum/backlight/backlight_chibios.c **** 
 795              		.loc 1 73 5 is_stmt 1 view .LVU183
 796 0018 0848     		ldr	r0, .L40+8
 797 001a FFF7FEFF 		bl	pwmStart
 798              	.LVL44:
  75:quantum/backlight/backlight_chibios.c ****     if (is_backlight_breathing()) {
 799              		.loc 1 75 5 view .LVU184
 800 001e FFF7FEFF 		bl	get_backlight_level
 801              	.LVL45:
 802 0022 FFF7FEFF 		bl	backlight_set
 803              	.LVL46:
  76:quantum/backlight/backlight_chibios.c ****         breathing_enable();
 804              		.loc 1 76 5 view .LVU185
  76:quantum/backlight/backlight_chibios.c ****         breathing_enable();
 805              		.loc 1 76 9 is_stmt 0 view .LVU186
 806 0026 FFF7FEFF 		bl	is_backlight_breathing
 807              	.LVL47:
  76:quantum/backlight/backlight_chibios.c ****         breathing_enable();
 808              		.loc 1 76 8 view .LVU187
 809 002a 0028     		cmp	r0, #0
 810 002c 01D0     		beq	.L35
  77:quantum/backlight/backlight_chibios.c ****     }
 811              		.loc 1 77 9 is_stmt 1 view .LVU188
 812 002e FFF7FEFF 		bl	breathing_enable
 813              	.LVL48:
 814              	.L35:
  79:quantum/backlight/backlight_chibios.c **** 
 815              		.loc 1 79 1 is_stmt 0 view .LVU189
 816              		@ sp needed
 817 0032 10BD     		pop	{r4, pc}
 818              	.L41:
 819              		.align	2
 820              	.L40:
 821 0034 00000000 		.word	.LANCHOR1
 822 0038 00000000 		.word	.LANCHOR0
 823 003c 00000000 		.word	PWMD3
 824              		.cfi_endproc
 825              	.LFE195:
 827              		.section	.text.breathing_pulse,"ax",%progbits
 828              		.align	1
 829              		.global	breathing_pulse
 830              		.syntax unified
 831              		.code	16
 832              		.thumb_func
 833              		.fpu softvfp
 835              	breathing_pulse:
 836              	.LFB204:
 134:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 837              		.loc 1 134 28 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 135:quantum/backlight/backlight_chibios.c ****         breathing_min();
 841              		.loc 1 135 5 view .LVU191
 134:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 842              		.loc 1 134 28 is_stmt 0 view .LVU192
 843 0000 10B5     		push	{r4, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 4, -8
 846              		.cfi_offset 14, -4
 135:quantum/backlight/backlight_chibios.c ****         breathing_min();
 847              		.loc 1 135 9 view .LVU193
 848 0002 FFF7FEFF 		bl	get_backlight_level
 849              	.LVL49:
 850 0006 074C     		ldr	r4, .L46
 135:quantum/backlight/backlight_chibios.c ****         breathing_min();
 851              		.loc 1 135 8 view .LVU194
 852 0008 0028     		cmp	r0, #0
 853 000a 06D1     		bne	.L43
 854              	.L45:
 139:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 855              		.loc 1 139 20 view .LVU195
 856 000c 0222     		movs	r2, #2
 857 000e 064B     		ldr	r3, .L46+4
 858              	.LBB143:
 859              	.LBB144:
 112:quantum/backlight/backlight_chibios.c **** 
 860              		.loc 1 112 60 view .LVU196
 861 0010 2080     		strh	r0, [r4]
 862              	.LBE144:
 863              	.LBE143:
 139:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 864              		.loc 1 139 5 is_stmt 1 view .LVU197
 139:quantum/backlight/backlight_chibios.c ****     breathing_interrupt_enable();
 865              		.loc 1 139 20 is_stmt 0 view .LVU198
 866 0012 1A70     		strb	r2, [r3]
 140:quantum/backlight/backlight_chibios.c **** }
 867              		.loc 1 140 5 is_stmt 1 view .LVU199
 141:quantum/backlight/backlight_chibios.c **** 
 868              		.loc 1 141 1 is_stmt 0 view .LVU200
 869              		@ sp needed
 140:quantum/backlight/backlight_chibios.c **** }
 870              		.loc 1 140 5 view .LVU201
 871 0014 FFF7FEFF 		bl	breathing_interrupt_enable
 872              	.LVL50:
 141:quantum/backlight/backlight_chibios.c **** 
 873              		.loc 1 141 1 view .LVU202
 874 0018 10BD     		pop	{r4, pc}
 875              	.L43:
 138:quantum/backlight/backlight_chibios.c ****     breathing_halt = BREATHING_HALT_ON;
 876              		.loc 1 138 9 is_stmt 1 view .LVU203
 877              	.LBB146:
 878              	.LBI143:
 112:quantum/backlight/backlight_chibios.c **** 
 879              		.loc 1 112 20 view .LVU204
 880              	.LBB145:
 112:quantum/backlight/backlight_chibios.c **** 
 881              		.loc 1 112 42 view .LVU205
 112:quantum/backlight/backlight_chibios.c **** 
 882              		.loc 1 112 62 is_stmt 0 view .LVU206
 883 001a FFF7FEFF 		bl	get_breathing_period
 884              	.LVL51:
 112:quantum/backlight/backlight_chibios.c **** 
 885              		.loc 1 112 60 view .LVU207
 886 001e C001     		lsls	r0, r0, #7
 887 0020 F4E7     		b	.L45
 888              	.L47:
 889 0022 C046     		.align	2
 890              	.L46:
 891 0024 00000000 		.word	.LANCHOR2
 892 0028 00000000 		.word	.LANCHOR3
 893              	.LBE145:
 894              	.LBE146:
 895              		.cfi_endproc
 896              	.LFE204:
 898              		.section	.text.breathing_disable,"ax",%progbits
 899              		.align	1
 900              		.global	breathing_disable
 901              		.syntax unified
 902              		.code	16
 903              		.thumb_func
 904              		.fpu softvfp
 906              	breathing_disable:
 907              	.LFB205:
 143:quantum/backlight/backlight_chibios.c ****     // printf("breathing_disable()\n");
 908              		.loc 1 143 30 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 145:quantum/backlight/backlight_chibios.c ****     // Restore backlight level
 912              		.loc 1 145 5 view .LVU209
 143:quantum/backlight/backlight_chibios.c ****     // printf("breathing_disable()\n");
 913              		.loc 1 143 30 is_stmt 0 view .LVU210
 914 0000 10B5     		push	{r4, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
 145:quantum/backlight/backlight_chibios.c ****     // Restore backlight level
 918              		.loc 1 145 5 view .LVU211
 919 0002 FFF7FEFF 		bl	breathing_interrupt_disable
 920              	.LVL52:
 147:quantum/backlight/backlight_chibios.c **** }
 921              		.loc 1 147 5 is_stmt 1 view .LVU212
 922 0006 FFF7FEFF 		bl	get_backlight_level
 923              	.LVL53:
 924 000a FFF7FEFF 		bl	backlight_set
 925              	.LVL54:
 148:quantum/backlight/backlight_chibios.c **** 
 926              		.loc 1 148 1 is_stmt 0 view .LVU213
 927              		@ sp needed
 928 000e 10BD     		pop	{r4, pc}
 929              		.cfi_endproc
 930              	.LFE205:
 932              		.section	.text.breathing_self_disable,"ax",%progbits
 933              		.align	1
 934              		.global	breathing_self_disable
 935              		.syntax unified
 936              		.code	16
 937              		.thumb_func
 938              		.fpu softvfp
 940              	breathing_self_disable:
 941              	.LFB206:
 150:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 942              		.loc 1 150 35 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 151:quantum/backlight/backlight_chibios.c ****         breathing_halt = BREATHING_HALT_OFF;
 946              		.loc 1 151 5 view .LVU215
 150:quantum/backlight/backlight_chibios.c ****     if (get_backlight_level() == 0)
 947              		.loc 1 150 35 is_stmt 0 view .LVU216
 948 0000 10B5     		push	{r4, lr}
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 4, -8
 951              		.cfi_offset 14, -4
 151:quantum/backlight/backlight_chibios.c ****         breathing_halt = BREATHING_HALT_OFF;
 952              		.loc 1 151 9 view .LVU217
 953 0002 FFF7FEFF 		bl	get_backlight_level
 954              	.LVL55:
 154:quantum/backlight/backlight_chibios.c **** }
 955              		.loc 1 154 24 view .LVU218
 956 0006 431E     		subs	r3, r0, #1
 957 0008 9841     		sbcs	r0, r0, r3
 958 000a 024B     		ldr	r3, .L52
 959 000c 0130     		adds	r0, r0, #1
 960 000e 1870     		strb	r0, [r3]
 155:quantum/backlight/backlight_chibios.c **** 
 961              		.loc 1 155 1 view .LVU219
 962              		@ sp needed
 963 0010 10BD     		pop	{r4, pc}
 964              	.L53:
 965 0012 C046     		.align	2
 966              	.L52:
 967 0014 00000000 		.word	.LANCHOR3
 968              		.cfi_endproc
 969              	.LFE206:
 971              		.global	backlight_tick
 972              		.section	.bss.backlight_tick,"aw",%nobits
 975              	backlight_tick:
 976 0000 00       		.space	1
 977              		.section	.bss.breathing_counter,"aw",%nobits
 978              		.align	1
 979              		.set	.LANCHOR2,. + 0
 982              	breathing_counter:
 983 0000 0000     		.space	2
 984              		.section	.bss.breathing_halt,"aw",%nobits
 985              		.set	.LANCHOR3,. + 0
 988              	breathing_halt:
 989 0000 00       		.space	1
 990              		.section	.data.pwmCFG,"aw"
 991              		.align	2
 992              		.set	.LANCHOR1,. + 0
 995              	pwmCFG:
 996 0000 FFFF0000 		.word	65535
 997 0004 00010000 		.word	256
 998 0008 00000000 		.word	0
 999 000c 00000000 		.word	0
 1000 0010 00000000 		.word	0
 1001 0014 00000000 		.word	0
 1002 0018 00000000 		.word	0
 1003 001c 00000000 		.word	0
 1004 0020 00000000 		.word	0
 1005 0024 00000000 		.word	0
 1006 0028 00000000 		.word	0
 1007 002c 00000000 		.word	0
 1008 0030 00000000 		.word	0
 1009              		.section	.data.pwmCFG_breathing,"aw"
 1010              		.align	2
 1011              		.set	.LANCHOR0,. + 0
 1014              	pwmCFG_breathing:
 1015 0000 FFFF0000 		.word	65535
 1016 0004 00010000 		.word	256
 1017 0008 00000000 		.word	breathing_callback
 1018 000c 00000000 		.word	0
 1019 0010 00000000 		.word	0
 1020 0014 00000000 		.word	0
 1021 0018 00000000 		.word	0
 1022 001c 00000000 		.word	0
 1023 0020 00000000 		.word	0
 1024 0024 00000000 		.word	0
 1025 0028 00000000 		.word	0
 1026 002c 00000000 		.word	0
 1027 0030 00000000 		.word	0
 1028              		.section	.rodata.breathing_table,"a"
 1031              	breathing_table:
 1032 0000 00       		.byte	0
 1033 0001 00       		.byte	0
 1034 0002 00       		.byte	0
 1035 0003 00       		.byte	0
 1036 0004 00       		.byte	0
 1037 0005 00       		.byte	0
 1038 0006 00       		.byte	0
 1039 0007 00       		.byte	0
 1040 0008 00       		.byte	0
 1041 0009 00       		.byte	0
 1042 000a 00       		.byte	0
 1043 000b 01       		.byte	1
 1044 000c 01       		.byte	1
 1045 000d 02       		.byte	2
 1046 000e 03       		.byte	3
 1047 000f 04       		.byte	4
 1048 0010 05       		.byte	5
 1049 0011 06       		.byte	6
 1050 0012 08       		.byte	8
 1051 0013 0A       		.byte	10
 1052 0014 0C       		.byte	12
 1053 0015 0F       		.byte	15
 1054 0016 11       		.byte	17
 1055 0017 14       		.byte	20
 1056 0018 18       		.byte	24
 1057 0019 1C       		.byte	28
 1058 001a 20       		.byte	32
 1059 001b 24       		.byte	36
 1060 001c 29       		.byte	41
 1061 001d 2E       		.byte	46
 1062 001e 33       		.byte	51
 1063 001f 39       		.byte	57
 1064 0020 3F       		.byte	63
 1065 0021 46       		.byte	70
 1066 0022 4C       		.byte	76
 1067 0023 53       		.byte	83
 1068 0024 5B       		.byte	91
 1069 0025 62       		.byte	98
 1070 0026 6A       		.byte	106
 1071 0027 71       		.byte	113
 1072 0028 79       		.byte	121
 1073 0029 81       		.byte	-127
 1074 002a 8A       		.byte	-118
 1075 002b 92       		.byte	-110
 1076 002c 9A       		.byte	-102
 1077 002d A2       		.byte	-94
 1078 002e AA       		.byte	-86
 1079 002f B2       		.byte	-78
 1080 0030 B9       		.byte	-71
 1081 0031 C1       		.byte	-63
 1082 0032 C8       		.byte	-56
 1083 0033 CF       		.byte	-49
 1084 0034 D5       		.byte	-43
 1085 0035 DC       		.byte	-36
 1086 0036 E1       		.byte	-31
 1087 0037 E7       		.byte	-25
 1088 0038 EB       		.byte	-21
 1089 0039 F0       		.byte	-16
 1090 003a F4       		.byte	-12
 1091 003b F7       		.byte	-9
 1092 003c FA       		.byte	-6
 1093 003d FC       		.byte	-4
 1094 003e FD       		.byte	-3
 1095 003f FE       		.byte	-2
 1096 0040 FF       		.byte	-1
 1097 0041 FE       		.byte	-2
 1098 0042 FD       		.byte	-3
 1099 0043 FC       		.byte	-4
 1100 0044 FA       		.byte	-6
 1101 0045 F7       		.byte	-9
 1102 0046 F4       		.byte	-12
 1103 0047 F0       		.byte	-16
 1104 0048 EB       		.byte	-21
 1105 0049 E7       		.byte	-25
 1106 004a E1       		.byte	-31
 1107 004b DC       		.byte	-36
 1108 004c D5       		.byte	-43
 1109 004d CF       		.byte	-49
 1110 004e C8       		.byte	-56
 1111 004f C1       		.byte	-63
 1112 0050 B9       		.byte	-71
 1113 0051 B2       		.byte	-78
 1114 0052 AA       		.byte	-86
 1115 0053 A2       		.byte	-94
 1116 0054 9A       		.byte	-102
 1117 0055 92       		.byte	-110
 1118 0056 8A       		.byte	-118
 1119 0057 81       		.byte	-127
 1120 0058 79       		.byte	121
 1121 0059 71       		.byte	113
 1122 005a 6A       		.byte	106
 1123 005b 62       		.byte	98
 1124 005c 5B       		.byte	91
 1125 005d 53       		.byte	83
 1126 005e 4C       		.byte	76
 1127 005f 46       		.byte	70
 1128 0060 3F       		.byte	63
 1129 0061 39       		.byte	57
 1130 0062 33       		.byte	51
 1131 0063 2E       		.byte	46
 1132 0064 29       		.byte	41
 1133 0065 24       		.byte	36
 1134 0066 20       		.byte	32
 1135 0067 1C       		.byte	28
 1136 0068 18       		.byte	24
 1137 0069 14       		.byte	20
 1138 006a 11       		.byte	17
 1139 006b 0F       		.byte	15
 1140 006c 0C       		.byte	12
 1141 006d 0A       		.byte	10
 1142 006e 08       		.byte	8
 1143 006f 06       		.byte	6
 1144 0070 05       		.byte	5
 1145 0071 04       		.byte	4
 1146 0072 03       		.byte	3
 1147 0073 02       		.byte	2
 1148 0074 01       		.byte	1
 1149 0075 01       		.byte	1
 1150 0076 00       		.byte	0
 1151 0077 00       		.byte	0
 1152 0078 00       		.byte	0
 1153 0079 00       		.byte	0
 1154 007a 00       		.byte	0
 1155 007b 00       		.byte	0
 1156 007c 00       		.byte	0
 1157 007d 00       		.byte	0
 1158 007e 00       		.byte	0
 1159 007f 00       		.byte	0
 1160              		.text
 1161              	.Letext0:
 1162              		.file 5 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 1163              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1164              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1165              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 1166              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1167              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 1168              		.file 11 "./lib/chibios/os/rt/include/chschd.h"
 1169              		.file 12 "./lib/chibios/os/rt/include/chtime.h"
 1170              		.file 13 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1171              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 1172              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1173              		.file 16 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1174              		.file 17 "./lib/chibios/os/rt/include/chsem.h"
 1175              		.file 18 "./lib/chibios/os/rt/include/chmtx.h"
 1176              		.file 19 "./lib/chibios/os/rt/include/chregistry.h"
 1177              		.file 20 "./lib/chibios/os/oslib/include/chmemcore.h"
 1178              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1179              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 1180              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1181              		.file 24 "./lib/chibios/os/hal/include/hal_i2c.h"
 1182              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1183              		.file 26 "./lib/chibios/os/hal/include/hal_pwm.h"
 1184              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1185              		.file 28 "./lib/chibios/os/hal/include/hal_spi.h"
 1186              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 1187              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 1188              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1189              		.file 32 "tmk_core/common/action.h"
 1190              		.file 33 "tmk_core/common/report.h"
 1191              		.file 34 "tmk_core/common/host.h"
 1192              		.file 35 "tmk_core/common/debug.h"
 1193              		.file 36 "quantum/keycode_config.h"
 1194              		.file 37 "quantum/keymap.h"
 1195              		.file 38 "./quantum/color.h"
 1196              		.file 39 "quantum/rgblight.h"
 1197              		.file 40 "tmk_core/common/action_layer.h"
 1198              		.file 41 "tmk_core/common/timer.h"
 1199              		.file 42 "tmk_core/common/action_util.h"
 1200              		.file 43 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 1201              		.file 44 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 1202              		.file 45 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 1203              		.file 46 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdlib.h"
 1204              		.file 47 "quantum/quantum.h"
 1205              		.file 48 "quantum/backlight/backlight.h"
DEFINED SYMBOLS
                            *ABS*:00000000 backlight_chibios.c
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:18     .text.cie_lightness:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:25     .text.cie_lightness:00000000 cie_lightness
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:105    .text.cie_lightness:00000034 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:115    .text.backlight_set:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:122    .text.backlight_set:00000000 backlight_set
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:209    .text.backlight_set:00000040 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:216    .text.backlight_task:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:223    .text.backlight_task:00000000 backlight_task
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:238    .text.is_breathing:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:245    .text.is_breathing:00000000 is_breathing
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:269    .text.is_breathing:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:275    .text.breathing_interrupt_enable:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:282    .text.breathing_interrupt_enable:00000000 breathing_interrupt_enable
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:421    .text.breathing_interrupt_enable:0000003c $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:428    .text.breathing_interrupt_disable:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:435    .text.breathing_interrupt_disable:00000000 breathing_interrupt_disable
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:465    .text.breathing_interrupt_disable:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:473    .text.breathing_callback:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:479    .text.breathing_callback:00000000 breathing_callback
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:704    .text.breathing_callback:0000007c $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:1031   .rodata.breathing_table:00000000 breathing_table
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:713    .text.breathing_enable:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:720    .text.breathing_enable:00000000 breathing_enable
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:752    .text.breathing_enable:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:758    .text.backlight_init_ports:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:765    .text.backlight_init_ports:00000000 backlight_init_ports
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:821    .text.backlight_init_ports:00000034 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:828    .text.breathing_pulse:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:835    .text.breathing_pulse:00000000 breathing_pulse
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:891    .text.breathing_pulse:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:899    .text.breathing_disable:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:906    .text.breathing_disable:00000000 breathing_disable
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:933    .text.breathing_self_disable:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:940    .text.breathing_self_disable:00000000 breathing_self_disable
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:967    .text.breathing_self_disable:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:975    .bss.backlight_tick:00000000 backlight_tick
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:976    .bss.backlight_tick:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:978    .bss.breathing_counter:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:982    .bss.breathing_counter:00000000 breathing_counter
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:988    .bss.breathing_halt:00000000 breathing_halt
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:989    .bss.breathing_halt:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:991    .data.pwmCFG:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:995    .data.pwmCFG:00000000 pwmCFG
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:1010   .data.pwmCFG_breathing:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccCu5q5T.s:1014   .data.pwmCFG_breathing:00000000 pwmCFG_breathing

UNDEFINED SYMBOLS
__aeabi_uidiv
__aeabi_idiv
pwmDisableChannel
pwmEnableChannel
PWMD3
pwmStop
pwmStart
pwmEnablePeriodicNotification
pwm_lld_enable_channel
__aeabi_uidivmod
__aeabi_idivmod
get_breathing_period
get_backlight_level
_pal_lld_setgroupmode
is_backlight_breathing
