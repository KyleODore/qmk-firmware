   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"keymap_common.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.action_get_macro,"ax",%progbits
  16              		.align	1
  17              		.weak	action_get_macro
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	action_get_macro:
  25              	.LVL0:
  26              	.LFB195:
  27              		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     (void)action_layer;
  55:quantum/keymap_common.c ****     (void)when;
  56:quantum/keymap_common.c ****     (void)mod;
  57:quantum/keymap_common.c **** 
  58:quantum/keymap_common.c ****     switch (keycode) {
  59:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  60:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  61:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  64:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  65:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  66:quantum/keymap_common.c ****             break;
  67:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  68:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  69:quantum/keymap_common.c ****             break;
  70:quantum/keymap_common.c **** #endif
  71:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  72:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  73:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  74:quantum/keymap_common.c ****             break;
  75:quantum/keymap_common.c **** #endif
  76:quantum/keymap_common.c ****         case KC_TRNS:
  77:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  80:quantum/keymap_common.c ****             // Has a modifier
  81:quantum/keymap_common.c ****             // Split it up
  82:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  85:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  86:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  89:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  90:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  91:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c **** #endif
  94:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  95:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  96:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  97:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  98:quantum/keymap_common.c ****             else
  99:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c **** #endif
 102:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 103:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 104:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 107:quantum/keymap_common.c ****             // Layer set "GOTO"
 108:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 110:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 113:quantum/keymap_common.c ****             // Momentary action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 118:quantum/keymap_common.c ****             // Set default action_layer
 119:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 123:quantum/keymap_common.c ****             // Set toggle
 124:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 125:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c **** #endif
 128:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 129:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 130:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 131:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 132:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 135:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 136:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 137:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 138:quantum/keymap_common.c ****             break;
 139:quantum/keymap_common.c **** #endif
 140:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 141:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 142:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 145:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 146:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 147:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c **** #endif
 150:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 151:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 152:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 153:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  28              		.loc 1 174 101 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 174 103 view .LVU1
  34              		.loc 1 174 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		.loc 1 174 1 view .LVU3
  38              		@ sp needed
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE195:
  43              		.section	.text.action_function,"ax",%progbits
  44              		.align	1
  45              		.weak	action_function
  46              		.syntax unified
  47              		.code	16
  48              		.thumb_func
  49              		.fpu softvfp
  51              	action_function:
  52              	.LVL2:
  53              	.LFB196:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  54              		.loc 1 177 90 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              		.loc 1 177 91 view .LVU5
  60              		.loc 1 177 1 is_stmt 0 view .LVU6
  61              		@ sp needed
  62 0000 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE196:
  66              		.section	.text.keymap_key_to_keycode,"ax",%progbits
  67              		.align	1
  68              		.weak	keymap_key_to_keycode
  69              		.syntax unified
  70              		.code	16
  71              		.thumb_func
  72              		.fpu softvfp
  74              	keymap_key_to_keycode:
  75              	.LVL3:
  76              	.LFB197:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  77              		.loc 1 180 83 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  82              		.loc 1 182 5 view .LVU8
  83              		.loc 1 182 12 is_stmt 0 view .LVU9
  84 0000 0523     		movs	r3, #5
  85 0002 4343     		muls	r3, r0
 180:quantum/keymap_common.c ****     // Read entire word (16bits)
  86              		.loc 1 180 83 view .LVU10
  87 0004 0A04     		lsls	r2, r1, #16
  88              		.loc 1 182 12 view .LVU11
  89 0006 120E     		lsrs	r2, r2, #24
  90 0008 9B18     		adds	r3, r3, r2
  91 000a C9B2     		uxtb	r1, r1
  92 000c 1B01     		lsls	r3, r3, #4
  93 000e 5B18     		adds	r3, r3, r1
  94 0010 024A     		ldr	r2, .L4
  95 0012 5B00     		lsls	r3, r3, #1
  96 0014 D05A     		ldrh	r0, [r2, r3]
  97              	.LVL4:
 180:quantum/keymap_common.c ****     // Read entire word (16bits)
  98              		.loc 1 180 83 view .LVU12
  99 0016 82B0     		sub	sp, sp, #8
 100              		.cfi_def_cfa_offset 8
 183:quantum/keymap_common.c **** }
 101              		.loc 1 183 1 view .LVU13
 102 0018 02B0     		add	sp, sp, #8
 103              		@ sp needed
 104 001a 7047     		bx	lr
 105              	.L5:
 106              		.align	2
 107              	.L4:
 108 001c 00000000 		.word	keymaps
 109              		.cfi_endproc
 110              	.LFE197:
 112              		.section	.text.keymap_function_id_to_action,"ax",%progbits
 113              		.align	1
 114              		.weak	keymap_function_id_to_action
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	keymap_function_id_to_action:
 121              	.LVL5:
 122              	.LFB198:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 123              		.loc 1 186 83 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 128              		.loc 1 193 5 view .LVU15
 129              		.loc 1 193 12 is_stmt 0 view .LVU16
 130 0000 014B     		ldr	r3, .L7
 131 0002 4000     		lsls	r0, r0, #1
 132              	.LVL6:
 133              		.loc 1 193 12 view .LVU17
 134 0004 185A     		ldrh	r0, [r3, r0]
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 135              		.loc 1 195 1 view .LVU18
 136              		@ sp needed
 137 0006 7047     		bx	lr
 138              	.L8:
 139              		.align	2
 140              	.L7:
 141 0008 00000000 		.word	fn_actions
 142              		.cfi_endproc
 143              	.LFE198:
 145              		.section	.text.action_for_key,"ax",%progbits
 146              		.align	1
 147              		.global	action_for_key
 148              		.syntax unified
 149              		.code	16
 150              		.thumb_func
 151              		.fpu softvfp
 153              	action_for_key:
 154              	.LVL7:
 155              	.LFB194:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 156              		.loc 1 44 54 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 0, uses_anonymous_args = 0
  46:quantum/keymap_common.c **** 
 160              		.loc 1 46 5 view .LVU20
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 161              		.loc 1 44 54 is_stmt 0 view .LVU21
 162 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 163              		.cfi_def_cfa_offset 24
 164              		.cfi_offset 0, -24
 165              		.cfi_offset 1, -20
 166              		.cfi_offset 2, -16
 167              		.cfi_offset 4, -12
 168              		.cfi_offset 5, -8
 169              		.cfi_offset 14, -4
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 170              		.loc 1 44 54 view .LVU22
 171 0002 01AB     		add	r3, sp, #4
 172 0004 1980     		strh	r1, [r3]
  46:quantum/keymap_common.c **** 
 173              		.loc 1 46 24 view .LVU23
 174 0006 0199     		ldr	r1, [sp, #4]
 175 0008 FFF7FEFF 		bl	keymap_key_to_keycode
 176              	.LVL8:
  49:quantum/keymap_common.c **** 
 177              		.loc 1 49 5 is_stmt 1 view .LVU24
  49:quantum/keymap_common.c **** 
 178              		.loc 1 49 15 is_stmt 0 view .LVU25
 179 000c FFF7FEFF 		bl	keycode_config
 180              	.LVL9:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 181              		.loc 1 58 5 view .LVU26
 182 0010 624B     		ldr	r3, .L57
  49:quantum/keymap_common.c **** 
 183              		.loc 1 49 15 view .LVU27
 184 0012 0400     		movs	r4, r0
 185              	.LVL10:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 186              		.loc 1 51 5 is_stmt 1 view .LVU28
  52:quantum/keymap_common.c **** 
 187              		.loc 1 52 5 view .LVU29
  54:quantum/keymap_common.c ****     (void)when;
 188              		.loc 1 54 5 view .LVU30
  55:quantum/keymap_common.c ****     (void)mod;
 189              		.loc 1 55 5 view .LVU31
  56:quantum/keymap_common.c **** 
 190              		.loc 1 56 5 view .LVU32
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 191              		.loc 1 58 5 view .LVU33
 192 0014 9842     		cmp	r0, r3
 193 0016 33D8     		bhi	.L10
 194 0018 8023     		movs	r3, #128
 195 001a DB01     		lsls	r3, r3, #7
 196 001c 9842     		cmp	r0, r3
 197 001e 00D3     		bcc	.LCB132
 198 0020 90E0     		b	.L11	@long jump
 199              	.LCB132:
 200 0022 E728     		cmp	r0, #231
 201 0024 19D8     		bhi	.L12
 202 0026 E028     		cmp	r0, #224
 203 0028 22D2     		bcs	.L13
 204 002a A728     		cmp	r0, #167
 205 002c 0BD8     		bhi	.L14
 206 002e A528     		cmp	r0, #165
 207 0030 00D3     		bcc	.LCB140
 208 0032 6BE0     		b	.L15	@long jump
 209              	.LCB140:
 210 0034 0128     		cmp	r0, #1
 211 0036 1BD0     		beq	.L13
 212 0038 03B2     		sxth	r3, r0
 213 003a 002B     		cmp	r3, #0
 214 003c 01D0     		beq	.L41
 215 003e 0428     		cmp	r0, #4
 216 0040 16D2     		bcs	.L13
 217              	.L41:
 163:quantum/keymap_common.c ****             break;
 218              		.loc 1 163 25 is_stmt 0 view .LVU34
 219 0042 0024     		movs	r4, #0
 220 0044 14E0     		b	.L13
 221              	.L14:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 222              		.loc 1 58 5 view .LVU35
 223 0046 BE28     		cmp	r0, #190
 224 0048 66D9     		bls	.L16
 225 004a C028     		cmp	r0, #192
 226 004c F9D3     		bcc	.L41
  86:quantum/keymap_common.c ****             break;
 227              		.loc 1 86 13 is_stmt 1 view .LVU36
  86:quantum/keymap_common.c ****             break;
 228              		.loc 1 86 27 is_stmt 0 view .LVU37
 229 004e C038     		subs	r0, r0, #192
 230              	.LVL11:
  86:quantum/keymap_common.c ****             break;
 231              		.loc 1 86 27 view .LVU38
 232 0050 80B2     		uxth	r0, r0
 233              	.L55:
  91:quantum/keymap_common.c ****             break;
 234              		.loc 1 91 27 view .LVU39
 235 0052 FFF7FEFF 		bl	keymap_function_id_to_action
 236              	.LVL12:
 237 0056 0400     		movs	r4, r0
 238              	.LVL13:
  92:quantum/keymap_common.c **** #endif
 239              		.loc 1 92 13 is_stmt 1 view .LVU40
 240 0058 0AE0     		b	.L13
 241              	.LVL14:
 242              	.L12:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 243              		.loc 1 58 5 is_stmt 0 view .LVU41
 244 005a 514B     		ldr	r3, .L57+4
 245 005c 9842     		cmp	r0, r3
 246 005e 09D8     		bhi	.L18
 247 0060 FF28     		cmp	r0, #255
 248 0062 62D8     		bhi	.L19
 249 0064 F028     		cmp	r0, #240
 250 0066 ECD3     		bcc	.L41
  73:quantum/keymap_common.c ****             break;
 251              		.loc 1 73 13 is_stmt 1 view .LVU42
  73:quantum/keymap_common.c ****             break;
 252              		.loc 1 73 25 is_stmt 0 view .LVU43
 253 0068 A020     		movs	r0, #160
 254              	.LVL15:
  73:quantum/keymap_common.c ****             break;
 255              		.loc 1 73 25 view .LVU44
 256 006a C001     		lsls	r0, r0, #7
 257              	.LVL16:
 258              	.L54:
  82:quantum/keymap_common.c ****             break;
 259              		.loc 1 82 27 view .LVU45
 260 006c 0443     		orrs	r4, r0
 261 006e A4B2     		uxth	r4, r4
 262              	.LVL17:
  83:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
 263              		.loc 1 83 13 is_stmt 1 view .LVU46
 264              	.L13:
 166:quantum/keymap_common.c **** }
 265              		.loc 1 166 5 view .LVU47
 167:quantum/keymap_common.c **** 
 266              		.loc 1 167 1 is_stmt 0 view .LVU48
 267 0070 201C     		adds	r0, r4, #0
 268              		@ sp needed
 269 0072 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 270              	.LVL18:
 271              	.L18:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 272              		.loc 1 58 5 view .LVU49
 273 0074 4B4B     		ldr	r3, .L57+8
 274 0076 9842     		cmp	r0, r3
 275 0078 5CD8     		bhi	.L47
  88:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
 276              		.loc 1 88 46 is_stmt 1 view .LVU50
  91:quantum/keymap_common.c ****             break;
 277              		.loc 1 91 13 view .LVU51
  91:quantum/keymap_common.c ****             break;
 278              		.loc 1 91 27 is_stmt 0 view .LVU52
 279 007a 0005     		lsls	r0, r0, #20
 280              	.LVL19:
  91:quantum/keymap_common.c ****             break;
 281              		.loc 1 91 27 view .LVU53
 282 007c 000D     		lsrs	r0, r0, #20
 283 007e E8E7     		b	.L55
 284              	.LVL20:
 285              	.L10:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 286              		.loc 1 58 5 view .LVU54
 287 0080 494B     		ldr	r3, .L57+12
 288 0082 9842     		cmp	r0, r3
 289 0084 19D8     		bhi	.L23
 290 0086 A822     		movs	r2, #168
 291 0088 C3B2     		uxtb	r3, r0
 292 008a D201     		lsls	r2, r2, #7
 293 008c 9042     		cmp	r0, r2
 294 008e 75D2     		bcs	.L24
 295 0090 464A     		ldr	r2, .L57+16
 296 0092 9042     		cmp	r0, r2
 297 0094 05D8     		bhi	.L25
 298 0096 FF3A     		subs	r2, r2, #255
 299 0098 9042     		cmp	r0, r2
 300 009a 58D3     		bcc	.L48
 112:quantum/keymap_common.c ****             // Momentary action_layer
 301              		.loc 1 112 48 is_stmt 1 view .LVU55
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 302              		.loc 1 114 13 view .LVU56
 303              	.LVL21:
 115:quantum/keymap_common.c ****             break;
 304              		.loc 1 115 13 view .LVU57
 115:quantum/keymap_common.c ****             break;
 305              		.loc 1 115 28 is_stmt 0 view .LVU58
 306 009c 1C02     		lsls	r4, r3, #8
 307 009e 4448     		ldr	r0, .L57+20
 308              	.LVL22:
 115:quantum/keymap_common.c ****             break;
 309              		.loc 1 115 28 view .LVU59
 310 00a0 41E0     		b	.L53
 311              	.LVL23:
 312              	.L25:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 313              		.loc 1 58 5 view .LVU60
 314 00a2 444A     		ldr	r2, .L57+24
 315 00a4 9042     		cmp	r0, r2
 316 00a6 60D8     		bhi	.L49
 117:quantum/keymap_common.c ****             // Set default action_layer
 317              		.loc 1 117 48 is_stmt 1 view .LVU61
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 318              		.loc 1 119 13 view .LVU62
 319              	.LVL24:
 120:quantum/keymap_common.c ****             break;
 320              		.loc 1 120 13 view .LVU63
 120:quantum/keymap_common.c ****             break;
 321              		.loc 1 120 28 is_stmt 0 view .LVU64
 322 00a8 0324     		movs	r4, #3
 323 00aa 9808     		lsrs	r0, r3, #2
 324              	.LVL25:
 120:quantum/keymap_common.c ****             break;
 325              		.loc 1 120 28 view .LVU65
 326 00ac 2340     		ands	r3, r4
 327              	.LVL26:
 120:quantum/keymap_common.c ****             break;
 328              		.loc 1 120 28 view .LVU66
 329 00ae 023C     		subs	r4, r4, #2
 330 00b0 9C40     		lsls	r4, r4, r3
 331 00b2 4001     		lsls	r0, r0, #5
 332 00b4 2043     		orrs	r0, r4
 333 00b6 404C     		ldr	r4, .L57+28
 334 00b8 D8E7     		b	.L54
 335              	.LVL27:
 336              	.L23:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 337              		.loc 1 58 5 view .LVU67
 338 00ba 404B     		ldr	r3, .L57+32
 339 00bc 9842     		cmp	r0, r3
 340 00be 0FD8     		bhi	.L30
 341 00c0 FF3B     		subs	r3, r3, #255
 342 00c2 9842     		cmp	r0, r3
 343 00c4 5DD2     		bcs	.L31
 344 00c6 3E4B     		ldr	r3, .L57+36
 345 00c8 9842     		cmp	r0, r3
 346 00ca BAD8     		bhi	.L41
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 347              		.loc 1 134 54 is_stmt 1 view .LVU68
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 348              		.loc 1 136 13 view .LVU69
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 349              		.loc 1 136 27 is_stmt 0 view .LVU70
 350 00cc C0B2     		uxtb	r0, r0
 351              	.LVL28:
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 352              		.loc 1 136 27 view .LVU71
 353 00ce FFF7FEFF 		bl	mod_config
 354              	.LVL29:
 137:quantum/keymap_common.c ****             break;
 355              		.loc 1 137 13 is_stmt 1 view .LVU72
 137:quantum/keymap_common.c ****             break;
 356              		.loc 1 137 27 is_stmt 0 view .LVU73
 357 00d2 F824     		movs	r4, #248
 358              	.LVL30:
 137:quantum/keymap_common.c ****             break;
 359              		.loc 1 137 27 view .LVU74
 360 00d4 0002     		lsls	r0, r0, #8
 361              	.LVL31:
 137:quantum/keymap_common.c ****             break;
 362              		.loc 1 137 27 view .LVU75
 363 00d6 6401     		lsls	r4, r4, #5
 364 00d8 2040     		ands	r0, r4
 365 00da 0134     		adds	r4, r4, #1
 366 00dc FF34     		adds	r4, r4, #255
 367 00de 22E0     		b	.L53
 368              	.LVL32:
 369              	.L30:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 370              		.loc 1 58 5 view .LVU76
 371 00e0 384B     		ldr	r3, .L57+40
 372 00e2 9842     		cmp	r0, r3
 373 00e4 50D9     		bls	.L33
 374 00e6 384B     		ldr	r3, .L57+44
 375 00e8 2D4A     		ldr	r2, .L57+4
 376 00ea C318     		adds	r3, r0, r3
 377 00ec 9BB2     		uxth	r3, r3
 378 00ee 9342     		cmp	r3, r2
 379 00f0 A7D8     		bhi	.L41
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 380              		.loc 1 152 13 is_stmt 1 view .LVU77
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 381              		.loc 1 152 27 is_stmt 0 view .LVU78
 382 00f2 C004     		lsls	r0, r0, #19
 383              	.LVL33:
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 384              		.loc 1 152 27 view .LVU79
 385 00f4 C00E     		lsrs	r0, r0, #27
 386 00f6 FFF7FEFF 		bl	mod_config
 387              	.LVL34:
 153:quantum/keymap_common.c ****             break;
 388              		.loc 1 153 13 is_stmt 1 view .LVU80
 153:quantum/keymap_common.c ****             break;
 389              		.loc 1 153 27 is_stmt 0 view .LVU81
 390 00fa F823     		movs	r3, #248
 391 00fc 0002     		lsls	r0, r0, #8
 392              	.LVL35:
 153:quantum/keymap_common.c ****             break;
 393              		.loc 1 153 27 view .LVU82
 394 00fe 5B01     		lsls	r3, r3, #5
 395 0100 1840     		ands	r0, r3
 396 0102 E4B2     		uxtb	r4, r4
 397              	.LVL36:
 153:quantum/keymap_common.c ****             break;
 398              		.loc 1 153 27 view .LVU83
 399 0104 0443     		orrs	r4, r0
 400 0106 8020     		movs	r0, #128
 401 0108 8001     		lsls	r0, r0, #6
 402 010a 0CE0     		b	.L53
 403              	.LVL37:
 404              	.L15:
  65:quantum/keymap_common.c ****             break;
 405              		.loc 1 65 13 is_stmt 1 view .LVU84
 406              	.LBB6:
 407              	.LBI6:
 408              		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO
  33:tmk_core/common/report.h **** };
  34:tmk_core/common/report.h **** 
  35:tmk_core/common/report.h **** /* Mouse buttons */
  36:tmk_core/common/report.h **** enum mouse_buttons {
  37:tmk_core/common/report.h ****     MOUSE_BTN1 = (1 << 0),
  38:tmk_core/common/report.h ****     MOUSE_BTN2 = (1 << 1),
  39:tmk_core/common/report.h ****     MOUSE_BTN3 = (1 << 2),
  40:tmk_core/common/report.h ****     MOUSE_BTN4 = (1 << 3),
  41:tmk_core/common/report.h ****     MOUSE_BTN5 = (1 << 4)
  42:tmk_core/common/report.h **** };
  43:tmk_core/common/report.h **** 
  44:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  45:tmk_core/common/report.h ****  *
  46:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  47:tmk_core/common/report.h ****  */
  48:tmk_core/common/report.h **** enum consumer_usages {
  49:tmk_core/common/report.h ****     // 15.5 Display Controls (https://www.usb.org/sites/default/files/hutrr41_0.pdf)
  50:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F,
  51:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  52:tmk_core/common/report.h ****     // 15.7 Transport Controls
  53:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  54:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  55:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  56:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  57:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  58:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  59:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  60:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  61:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  62:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  63:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  64:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  65:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  66:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  67:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  68:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  69:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  70:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  71:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  72:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  73:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  74:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
  75:tmk_core/common/report.h ****     AC_HOME                = 0x223,
  76:tmk_core/common/report.h ****     AC_BACK                = 0x224,
  77:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
  78:tmk_core/common/report.h ****     AC_STOP                = 0x226,
  79:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
  80:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
  81:tmk_core/common/report.h **** };
  82:tmk_core/common/report.h **** 
  83:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
  84:tmk_core/common/report.h ****  *
  85:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
  86:tmk_core/common/report.h ****  */
  87:tmk_core/common/report.h **** enum desktop_usages {
  88:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
  89:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN = 0x81,
  90:tmk_core/common/report.h ****     SYSTEM_SLEEP      = 0x82,
  91:tmk_core/common/report.h ****     SYSTEM_WAKE_UP    = 0x83
  92:tmk_core/common/report.h **** };
  93:tmk_core/common/report.h **** 
  94:tmk_core/common/report.h **** // clang-format on
  95:tmk_core/common/report.h **** 
  96:tmk_core/common/report.h **** #define NKRO_SHARED_EP
  97:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
  98:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
  99:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 100:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 101:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 102:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 103:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 104:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 105:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 106:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 107:tmk_core/common/report.h **** #    else
 108:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 109:tmk_core/common/report.h **** #    endif
 110:tmk_core/common/report.h **** #endif
 111:tmk_core/common/report.h **** 
 112:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 113:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 114:tmk_core/common/report.h **** #else
 115:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 116:tmk_core/common/report.h **** #endif
 117:tmk_core/common/report.h **** 
 118:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 119:tmk_core/common/report.h **** 
 120:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 121:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 122:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 123:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 124:tmk_core/common/report.h **** #endif
 125:tmk_core/common/report.h **** 
 126:tmk_core/common/report.h **** #ifdef __cplusplus
 127:tmk_core/common/report.h **** extern "C" {
 128:tmk_core/common/report.h **** #endif
 129:tmk_core/common/report.h **** 
 130:tmk_core/common/report.h **** /*
 131:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 132:tmk_core/common/report.h ****  *
 133:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 134:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 135:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 136:tmk_core/common/report.h ****  *
 137:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 138:tmk_core/common/report.h ****  *
 139:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 140:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 141:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 142:tmk_core/common/report.h ****  *
 143:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 144:tmk_core/common/report.h ****  *
 145:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 146:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 147:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 148:tmk_core/common/report.h ****  *
 149:tmk_core/common/report.h ****  */
 150:tmk_core/common/report.h **** typedef union {
 151:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 152:tmk_core/common/report.h ****     struct {
 153:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 154:tmk_core/common/report.h ****         uint8_t report_id;
 155:tmk_core/common/report.h **** #endif
 156:tmk_core/common/report.h ****         uint8_t mods;
 157:tmk_core/common/report.h ****         uint8_t reserved;
 158:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 159:tmk_core/common/report.h ****     };
 160:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 161:tmk_core/common/report.h ****     struct nkro_report {
 162:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 163:tmk_core/common/report.h ****         uint8_t report_id;
 164:tmk_core/common/report.h **** #    endif
 165:tmk_core/common/report.h ****         uint8_t mods;
 166:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 167:tmk_core/common/report.h ****     } nkro;
 168:tmk_core/common/report.h **** #endif
 169:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 170:tmk_core/common/report.h **** 
 171:tmk_core/common/report.h **** typedef struct {
 172:tmk_core/common/report.h ****     uint8_t  report_id;
 173:tmk_core/common/report.h ****     uint16_t usage;
 174:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 175:tmk_core/common/report.h **** 
 176:tmk_core/common/report.h **** typedef struct {
 177:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 178:tmk_core/common/report.h ****     uint8_t report_id;
 179:tmk_core/common/report.h **** #endif
 180:tmk_core/common/report.h ****     uint8_t buttons;
 181:tmk_core/common/report.h ****     int8_t  x;
 182:tmk_core/common/report.h ****     int8_t  y;
 183:tmk_core/common/report.h ****     int8_t  v;
 184:tmk_core/common/report.h ****     int8_t  h;
 185:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 186:tmk_core/common/report.h **** 
 187:tmk_core/common/report.h **** /* keycode to system usage */
 188:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 409              		.loc 2 188 24 view .LVU85
 410              	.LBE6:
 189:tmk_core/common/report.h ****     switch (key) {
 411              		.loc 2 189 5 view .LVU86
  65:quantum/keymap_common.c ****             break;
 412              		.loc 1 65 25 is_stmt 0 view .LVU87
 413 010c 5B34     		adds	r4, r4, #91
 414 010e 2F4A     		ldr	r2, .L57+48
 415 0110 E4B2     		uxtb	r4, r4
 416 0112 145D     		ldrb	r4, [r2, r4]
 417              	.L52:
  97:quantum/keymap_common.c ****             else
 418              		.loc 1 97 31 view .LVU88
 419 0114 1C43     		orrs	r4, r3
 420              	.LVL38:
  97:quantum/keymap_common.c ****             else
 421              		.loc 1 97 31 view .LVU89
 422 0116 ABE7     		b	.L13
 423              	.LVL39:
 424              	.L16:
  68:quantum/keymap_common.c ****             break;
 425              		.loc 1 68 13 is_stmt 1 view .LVU90
 426              	.LBB7:
 427              	.LBI7:
 190:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 191:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 192:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 193:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 194:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 195:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 196:tmk_core/common/report.h ****         default:
 197:tmk_core/common/report.h ****             return 0;
 198:tmk_core/common/report.h ****     }
 199:tmk_core/common/report.h **** }
 200:tmk_core/common/report.h **** 
 201:tmk_core/common/report.h **** /* keycode to consumer usage */
 202:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 428              		.loc 2 202 24 view .LVU91
 429              	.LBE7:
 203:tmk_core/common/report.h ****     switch (key) {
 430              		.loc 2 203 5 view .LVU92
  68:quantum/keymap_common.c ****             break;
 431              		.loc 1 68 25 is_stmt 0 view .LVU93
 432 0118 5834     		adds	r4, r4, #88
 433 011a E4B2     		uxtb	r4, r4
 434 011c 2C4B     		ldr	r3, .L57+52
 435 011e 6400     		lsls	r4, r4, #1
 436 0120 E05A     		ldrh	r0, [r4, r3]
 437              	.LVL40:
  68:quantum/keymap_common.c ****             break;
 438              		.loc 1 68 25 view .LVU94
 439 0122 8824     		movs	r4, #136
 440 0124 E401     		lsls	r4, r4, #7
 441              	.L53:
 104:quantum/keymap_common.c ****             break;
 442              		.loc 1 104 27 view .LVU95
 443 0126 0443     		orrs	r4, r0
 444              	.LVL41:
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 445              		.loc 1 105 13 is_stmt 1 view .LVU96
 446 0128 A2E7     		b	.L13
 447              	.LVL42:
 448              	.L19:
  79:quantum/keymap_common.c ****             // Has a modifier
 449              		.loc 1 79 38 view .LVU97
  82:quantum/keymap_common.c ****             break;
 450              		.loc 1 82 13 view .LVU98
  82:quantum/keymap_common.c ****             break;
 451              		.loc 1 82 27 is_stmt 0 view .LVU99
 452 012a 000A     		lsrs	r0, r0, #8
 453              	.LVL43:
  82:quantum/keymap_common.c ****             break;
 454              		.loc 1 82 27 view .LVU100
 455 012c 80B2     		uxth	r0, r0
 456 012e 0002     		lsls	r0, r0, #8
 457 0130 E4B2     		uxtb	r4, r4
 458              	.LVL44:
  82:quantum/keymap_common.c ****             break;
 459              		.loc 1 82 27 view .LVU101
 460 0132 9BE7     		b	.L54
 461              	.LVL45:
 462              	.L47:
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 463              		.loc 1 96 13 is_stmt 1 view .LVU102
 464 0134 C3B2     		uxtb	r3, r0
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 465              		.loc 1 96 16 is_stmt 0 view .LVU103
 466 0136 0205     		lsls	r2, r0, #20
 467 0138 02D5     		bpl	.L35
  97:quantum/keymap_common.c ****             else
 468              		.loc 1 97 17 is_stmt 1 view .LVU104
  97:quantum/keymap_common.c ****             else
 469              		.loc 1 97 31 is_stmt 0 view .LVU105
 470 013a C824     		movs	r4, #200
 471              	.L56:
 472 013c 2402     		lsls	r4, r4, #8
 473 013e E9E7     		b	.L52
 474              	.L35:
  99:quantum/keymap_common.c ****             break;
 475              		.loc 1 99 17 is_stmt 1 view .LVU106
  99:quantum/keymap_common.c ****             break;
 476              		.loc 1 99 31 is_stmt 0 view .LVU107
 477 0140 C024     		movs	r4, #192
 478 0142 FBE7     		b	.L56
 479              	.L11:
 104:quantum/keymap_common.c ****             break;
 480              		.loc 1 104 13 is_stmt 1 view .LVU108
 104:quantum/keymap_common.c ****             break;
 481              		.loc 1 104 27 is_stmt 0 view .LVU109
 482 0144 2348     		ldr	r0, .L57+56
 483              	.LVL46:
 104:quantum/keymap_common.c ****             break;
 484              		.loc 1 104 27 view .LVU110
 485 0146 0440     		ands	r4, r0
 486              	.LVL47:
 104:quantum/keymap_common.c ****             break;
 487              		.loc 1 104 27 view .LVU111
 488 0148 A020     		movs	r0, #160
 489 014a 0002     		lsls	r0, r0, #8
 490 014c EBE7     		b	.L53
 491              	.LVL48:
 492              	.L48:
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 493              		.loc 1 106 34 is_stmt 1 view .LVU112
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 494              		.loc 1 108 13 view .LVU113
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 495              		.loc 1 109 13 view .LVU114
 110:quantum/keymap_common.c ****             break;
 496              		.loc 1 110 13 view .LVU115
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 497              		.loc 1 108 45 is_stmt 0 view .LVU116
 498 014e 0409     		lsrs	r4, r0, #4
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 499              		.loc 1 108 26 view .LVU117
 500 0150 0320     		movs	r0, #3
 501              	.LVL49:
 110:quantum/keymap_common.c ****             break;
 502              		.loc 1 110 28 view .LVU118
 503 0152 9A08     		lsrs	r2, r3, #2
 504 0154 0440     		ands	r4, r0
 505 0156 0240     		ands	r2, r0
 506 0158 0340     		ands	r3, r0
 507              	.LVL50:
 110:quantum/keymap_common.c ****             break;
 508              		.loc 1 110 28 view .LVU119
 509 015a 0238     		subs	r0, r0, #2
 510 015c 9840     		lsls	r0, r0, r3
 511 015e 2402     		lsls	r4, r4, #8
 512 0160 5201     		lsls	r2, r2, #5
 513 0162 1443     		orrs	r4, r2
 514 0164 0443     		orrs	r4, r0
 515 0166 1448     		ldr	r0, .L57+28
 516 0168 80E7     		b	.L54
 517              	.LVL51:
 518              	.L49:
 122:quantum/keymap_common.c ****             // Set toggle
 519              		.loc 1 122 54 is_stmt 1 view .LVU120
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 520              		.loc 1 124 13 view .LVU121
 125:quantum/keymap_common.c ****             break;
 521              		.loc 1 125 13 view .LVU122
 125:quantum/keymap_common.c ****             break;
 522              		.loc 1 125 28 is_stmt 0 view .LVU123
 523 016a 0324     		movs	r4, #3
 524 016c 9808     		lsrs	r0, r3, #2
 525              	.LVL52:
 125:quantum/keymap_common.c ****             break;
 526              		.loc 1 125 28 view .LVU124
 527 016e 2340     		ands	r3, r4
 528              	.LVL53:
 125:quantum/keymap_common.c ****             break;
 529              		.loc 1 125 28 view .LVU125
 530 0170 023C     		subs	r4, r4, #2
 531 0172 9C40     		lsls	r4, r4, r3
 532 0174 4001     		lsls	r0, r0, #5
 533 0176 2043     		orrs	r0, r4
 534 0178 174C     		ldr	r4, .L57+60
 535 017a 77E7     		b	.L54
 536              	.LVL54:
 537              	.L24:
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 538              		.loc 1 129 58 is_stmt 1 view .LVU126
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 539              		.loc 1 131 13 view .LVU127
 132:quantum/keymap_common.c ****             break;
 540              		.loc 1 132 13 view .LVU128
 132:quantum/keymap_common.c ****             break;
 541              		.loc 1 132 28 is_stmt 0 view .LVU129
 542 017c 1B02     		lsls	r3, r3, #8
 543 017e 174C     		ldr	r4, .L57+64
 544 0180 C8E7     		b	.L52
 545              	.LVL55:
 546              	.L31:
 142:quantum/keymap_common.c ****             break;
 547              		.loc 1 142 13 is_stmt 1 view .LVU130
 142:quantum/keymap_common.c ****             break;
 548              		.loc 1 142 27 is_stmt 0 view .LVU131
 549 0182 0002     		lsls	r0, r0, #8
 550              	.LVL56:
 142:quantum/keymap_common.c ****             break;
 551              		.loc 1 142 27 view .LVU132
 552 0184 164C     		ldr	r4, .L57+68
 553              	.LVL57:
 142:quantum/keymap_common.c ****             break;
 554              		.loc 1 142 27 view .LVU133
 555 0186 71E7     		b	.L54
 556              	.LVL58:
 557              	.L33:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 558              		.loc 1 145 13 is_stmt 1 view .LVU134
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 559              		.loc 1 145 28 is_stmt 0 view .LVU135
 560 0188 0F25     		movs	r5, #15
 561 018a 2840     		ands	r0, r5
 562              	.LVL59:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 563              		.loc 1 145 28 view .LVU136
 564 018c FFF7FEFF 		bl	mod_config
 565              	.LVL60:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 566              		.loc 1 146 13 is_stmt 1 view .LVU137
 147:quantum/keymap_common.c ****             break;
 567              		.loc 1 147 13 view .LVU138
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 568              		.loc 1 146 43 is_stmt 0 view .LVU139
 569 0190 2409     		lsrs	r4, r4, #4
 570              	.LVL61:
 147:quantum/keymap_common.c ****             break;
 571              		.loc 1 147 28 view .LVU140
 572 0192 2C40     		ands	r4, r5
 573 0194 2402     		lsls	r4, r4, #8
 574 0196 0443     		orrs	r4, r0
 575 0198 1248     		ldr	r0, .L57+72
 576              	.LVL62:
 147:quantum/keymap_common.c ****             break;
 577              		.loc 1 147 28 view .LVU141
 578 019a 67E7     		b	.L54
 579              	.L58:
 580              		.align	2
 581              	.L57:
 582 019c FF4F0000 		.word	20479
 583 01a0 FF1F0000 		.word	8191
 584 01a4 FF2F0000 		.word	12287
 585 01a8 FF540000 		.word	21759
 586 01ac FF510000 		.word	20991
 587 01b0 F1A00000 		.word	41201
 588 01b4 FF520000 		.word	21247
 589 01b8 008CFFFF 		.word	-29696
 590 01bc FF580000 		.word	22783
 591 01c0 FF550000 		.word	22015
 592 01c4 FF590000 		.word	23039
 593 01c8 00A0FFFF 		.word	-24576
 594 01cc 00000000 		.word	.LANCHOR0
 595 01d0 00000000 		.word	.LANCHOR1
 596 01d4 FF0F0000 		.word	4095
 597 01d8 008AFFFF 		.word	-30208
 598 01dc F4A00000 		.word	41204
 599 01e0 F0A0FFFF 		.word	-24336
 600 01e4 0090FFFF 		.word	-28672
 601              		.cfi_endproc
 602              	.LFE194:
 604              		.weak	fn_actions
 605              		.section	.rodata.CSWTCH.5,"a"
 606              		.set	.LANCHOR0,. + 0
 609              	CSWTCH.5:
 610 0000 81       		.byte	-127
 611 0001 82       		.byte	-126
 612 0002 83       		.byte	-125
 613              		.section	.rodata.CSWTCH.6,"a"
 614              		.align	1
 615              		.set	.LANCHOR1,. + 0
 618              	CSWTCH.6:
 619 0000 E200     		.short	226
 620 0002 E900     		.short	233
 621 0004 EA00     		.short	234
 622 0006 B500     		.short	181
 623 0008 B600     		.short	182
 624 000a B700     		.short	183
 625 000c CD00     		.short	205
 626 000e 8301     		.short	387
 627 0010 CC00     		.short	204
 628 0012 8A01     		.short	394
 629 0014 9201     		.short	402
 630 0016 9401     		.short	404
 631 0018 2102     		.short	545
 632 001a 2302     		.short	547
 633 001c 2402     		.short	548
 634 001e 2502     		.short	549
 635 0020 2602     		.short	550
 636 0022 2702     		.short	551
 637 0024 2A02     		.short	554
 638 0026 B300     		.short	179
 639 0028 B400     		.short	180
 640 002a 6F00     		.short	111
 641 002c 7000     		.short	112
 642              		.section	.rodata.fn_actions,"a"
 643              		.align	1
 646              	fn_actions:
 647              		.text
 648              	.Letext0:
 649              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 650              		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 651              		.file 5 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 652              		.file 6 "tmk_core/common/keyboard.h"
 653              		.file 7 "tmk_core/common/keycode.h"
 654              		.file 8 "tmk_core/common/action_code.h"
 655              		.file 9 "tmk_core/common/action_macro.h"
 656              		.file 10 "tmk_core/common/action.h"
 657              		.file 11 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\i
 658              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 659              		.file 13 "./lib/chibios/os/rt/include/chsystypes.h"
 660              		.file 14 "./lib/chibios/os/rt/include/chschd.h"
 661              		.file 15 "./lib/chibios/os/rt/include/chtime.h"
 662              		.file 16 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 663              		.file 17 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 664              		.file 18 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 665              		.file 19 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
 666              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 667              		.file 21 "./lib/chibios/os/rt/include/chsem.h"
 668              		.file 22 "./lib/chibios/os/rt/include/chmtx.h"
 669              		.file 23 "./lib/chibios/os/rt/include/chsys.h"
 670              		.file 24 "./lib/chibios/os/rt/include/chregistry.h"
 671              		.file 25 "./lib/chibios/os/oslib/include/chmemcore.h"
 672              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 673              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 674              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 675              		.file 29 "./lib/chibios/os/hal/include/hal_i2c.h"
 676              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 677              		.file 31 "./lib/chibios/os/hal/include/hal_pwm.h"
 678              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 679              		.file 33 "./lib/chibios/os/hal/include/hal_spi.h"
 680              		.file 34 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 681              		.file 35 "./lib/chibios/os/hal/include/hal_usb.h"
 682              		.file 36 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 683              		.file 37 "tmk_core/common/host.h"
 684              		.file 38 "tmk_core/common/debug.h"
 685              		.file 39 "quantum/keycode_config.h"
 686              		.file 40 "quantum/quantum_keycodes.h"
 687              		.file 41 "quantum/keymap.h"
 688              		.file 42 "tmk_core/common/action_layer.h"
 689              		.file 43 "./quantum/color.h"
 690              		.file 44 "quantum/rgblight.h"
 691              		.file 45 "tmk_core/common/timer.h"
 692              		.file 46 "tmk_core/common/action_util.h"
 693              		.file 47 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 694              		.file 48 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 695              		.file 49 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 696              		.file 50 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdlib.h"
 697              		.file 51 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_common.c
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:16     .text.action_get_macro:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:24     .text.action_get_macro:00000000 action_get_macro
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:44     .text.action_function:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:51     .text.action_function:00000000 action_function
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:67     .text.keymap_key_to_keycode:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:74     .text.keymap_key_to_keycode:00000000 keymap_key_to_keycode
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:108    .text.keymap_key_to_keycode:0000001c $d
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:113    .text.keymap_function_id_to_action:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:120    .text.keymap_function_id_to_action:00000000 keymap_function_id_to_action
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:141    .text.keymap_function_id_to_action:00000008 $d
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:646    .rodata.fn_actions:00000000 fn_actions
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:146    .text.action_for_key:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:153    .text.action_for_key:00000000 action_for_key
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:582    .text.action_for_key:0000019c $d
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:609    .rodata.CSWTCH.5:00000000 CSWTCH.5
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:614    .rodata.CSWTCH.6:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccxnZvby.s:618    .rodata.CSWTCH.6:00000000 CSWTCH.6

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
