   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"usb_main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.kbd_in_cb,"ax",%progbits
  16              		.align	1
  17              		.global	kbd_in_cb
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	kbd_in_cb:
  25              	.LVL0:
  26              	.LFB195:
  27              		.file 1 "tmk_core/protocol/chibios/usb_main.c"
   1:tmk_core/protocol/chibios/usb_main.c **** /*
   2:tmk_core/protocol/chibios/usb_main.c ****  * (c) 2015 flabberast <s3+flabbergast@sdfeu.org>
   3:tmk_core/protocol/chibios/usb_main.c ****  *
   4:tmk_core/protocol/chibios/usb_main.c ****  * Based on the following work:
   5:tmk_core/protocol/chibios/usb_main.c ****  *  - Guillaume Duc's raw hid example (MIT License)
   6:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/guiduc/usb-hid-chibios-example
   7:tmk_core/protocol/chibios/usb_main.c ****  *  - PJRC Teensy examples (MIT License)
   8:tmk_core/protocol/chibios/usb_main.c ****  *    https://www.pjrc.com/teensy/usb_keyboard.html
   9:tmk_core/protocol/chibios/usb_main.c ****  *  - hasu's TMK keyboard code (GPL v2 and some code Modified BSD)
  10:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/tmk/tmk_keyboard/
  11:tmk_core/protocol/chibios/usb_main.c ****  *  - ChibiOS demo code (Apache 2.0 License)
  12:tmk_core/protocol/chibios/usb_main.c ****  *    http://www.chibios.org
  13:tmk_core/protocol/chibios/usb_main.c ****  *
  14:tmk_core/protocol/chibios/usb_main.c ****  * Since some GPL'd code is used, this work is licensed under
  15:tmk_core/protocol/chibios/usb_main.c ****  * GPL v2 or later.
  16:tmk_core/protocol/chibios/usb_main.c ****  */
  17:tmk_core/protocol/chibios/usb_main.c **** 
  18:tmk_core/protocol/chibios/usb_main.c **** /*
  19:tmk_core/protocol/chibios/usb_main.c ****  * Implementation notes:
  20:tmk_core/protocol/chibios/usb_main.c ****  *
  21:tmk_core/protocol/chibios/usb_main.c ****  * USBEndpointConfig - Configured using explicit order instead of struct member name.
  22:tmk_core/protocol/chibios/usb_main.c ****  *   This is due to ChibiOS hal LLD differences, which is dependent on hardware,
  23:tmk_core/protocol/chibios/usb_main.c ****  *   "USBv1" devices have `ep_buffers` and "OTGv1" have `in_multiplier`.
  24:tmk_core/protocol/chibios/usb_main.c ****  *   Given `USBv1/hal_usb_lld.h` marks the field as "not currently used" this code file
  25:tmk_core/protocol/chibios/usb_main.c ****  *   makes the assumption this is safe to avoid littering with preprocessor directives.
  26:tmk_core/protocol/chibios/usb_main.c ****  */
  27:tmk_core/protocol/chibios/usb_main.c **** 
  28:tmk_core/protocol/chibios/usb_main.c **** #include "ch.h"
  29:tmk_core/protocol/chibios/usb_main.c **** #include "hal.h"
  30:tmk_core/protocol/chibios/usb_main.c **** 
  31:tmk_core/protocol/chibios/usb_main.c **** #include "usb_main.h"
  32:tmk_core/protocol/chibios/usb_main.c **** 
  33:tmk_core/protocol/chibios/usb_main.c **** #include "host.h"
  34:tmk_core/protocol/chibios/usb_main.c **** #include "debug.h"
  35:tmk_core/protocol/chibios/usb_main.c **** #include "suspend.h"
  36:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
  37:tmk_core/protocol/chibios/usb_main.c **** #    include "sleep_led.h"
  38:tmk_core/protocol/chibios/usb_main.c **** #    include "led.h"
  39:tmk_core/protocol/chibios/usb_main.c **** #endif
  40:tmk_core/protocol/chibios/usb_main.c **** #include "wait.h"
  41:tmk_core/protocol/chibios/usb_main.c **** #include "usb_descriptor.h"
  42:tmk_core/protocol/chibios/usb_main.c **** #include "usb_driver.h"
  43:tmk_core/protocol/chibios/usb_main.c **** 
  44:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
  45:tmk_core/protocol/chibios/usb_main.c **** #    include "keycode_config.h"
  46:tmk_core/protocol/chibios/usb_main.c **** 
  47:tmk_core/protocol/chibios/usb_main.c **** extern keymap_config_t keymap_config;
  48:tmk_core/protocol/chibios/usb_main.c **** #endif
  49:tmk_core/protocol/chibios/usb_main.c **** 
  50:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  51:tmk_core/protocol/chibios/usb_main.c ****  *       Global interface variables and declarations
  52:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  53:tmk_core/protocol/chibios/usb_main.c ****  */
  54:tmk_core/protocol/chibios/usb_main.c **** 
  55:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_connect_bus
  56:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_connect_bus(usbp)
  57:tmk_core/protocol/chibios/usb_main.c **** #endif
  58:tmk_core/protocol/chibios/usb_main.c **** 
  59:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_disconnect_bus
  60:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_disconnect_bus(usbp)
  61:tmk_core/protocol/chibios/usb_main.c **** #endif
  62:tmk_core/protocol/chibios/usb_main.c **** 
  63:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_idle __attribute__((aligned(2)))     = 0;
  64:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_protocol __attribute__((aligned(2))) = 1;
  65:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_led_stats                            = 0;
  66:tmk_core/protocol/chibios/usb_main.c **** volatile uint16_t      keyboard_idle_count                           = 0;
  67:tmk_core/protocol/chibios/usb_main.c **** static virtual_timer_t keyboard_idle_timer;
  68:tmk_core/protocol/chibios/usb_main.c **** static void            keyboard_idle_timer_cb(void *arg);
  69:tmk_core/protocol/chibios/usb_main.c **** 
  70:tmk_core/protocol/chibios/usb_main.c **** report_keyboard_t keyboard_report_sent = {{0}};
  71:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
  72:tmk_core/protocol/chibios/usb_main.c **** report_mouse_t mouse_report_blank = {0};
  73:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
  74:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
  75:tmk_core/protocol/chibios/usb_main.c **** uint8_t extra_report_blank[3] = {0};
  76:tmk_core/protocol/chibios/usb_main.c **** #endif /* EXTRAKEY_ENABLE */
  77:tmk_core/protocol/chibios/usb_main.c **** 
  78:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  79:tmk_core/protocol/chibios/usb_main.c ****  *            Descriptors and USB driver objects
  80:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  81:tmk_core/protocol/chibios/usb_main.c ****  */
  82:tmk_core/protocol/chibios/usb_main.c **** 
  83:tmk_core/protocol/chibios/usb_main.c **** /* HID specific constants */
  84:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_REPORT 0x01
  85:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_IDLE 0x02
  86:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_PROTOCOL 0x03
  87:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_REPORT 0x09
  88:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_IDLE 0x0A
  89:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_PROTOCOL 0x0B
  90:tmk_core/protocol/chibios/usb_main.c **** 
  91:tmk_core/protocol/chibios/usb_main.c **** /*
  92:tmk_core/protocol/chibios/usb_main.c ****  * Handles the GET_DESCRIPTOR callback
  93:tmk_core/protocol/chibios/usb_main.c ****  *
  94:tmk_core/protocol/chibios/usb_main.c ****  * Returns the proper descriptor
  95:tmk_core/protocol/chibios/usb_main.c ****  */
  96:tmk_core/protocol/chibios/usb_main.c **** static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype, uint8_t dindex, u
  97:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  98:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
  99:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
 100:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
 101:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 102:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 103:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 104:tmk_core/protocol/chibios/usb_main.c ****     else
 105:tmk_core/protocol/chibios/usb_main.c ****         return &desc;
 106:tmk_core/protocol/chibios/usb_main.c **** }
 107:tmk_core/protocol/chibios/usb_main.c **** 
 108:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 109:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint state structure */
 110:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState kbd_ep_state;
 111:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file *
 112:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig kbd_ep_config = {
 113:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 114:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 115:tmk_core/protocol/chibios/usb_main.c ****     kbd_in_cb,             /* IN notification callback */
 116:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 117:tmk_core/protocol/chibios/usb_main.c ****     KEYBOARD_EPSIZE,       /* IN maximum packet size */
 118:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 119:tmk_core/protocol/chibios/usb_main.c ****     &kbd_ep_state,         /* IN Endpoint state */
 120:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 121:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 122:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 123:tmk_core/protocol/chibios/usb_main.c **** };
 124:tmk_core/protocol/chibios/usb_main.c **** #endif
 125:tmk_core/protocol/chibios/usb_main.c **** 
 126:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 127:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint state structure */
 128:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState mouse_ep_state;
 129:tmk_core/protocol/chibios/usb_main.c **** 
 130:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 131:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig mouse_ep_config = {
 132:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 133:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 134:tmk_core/protocol/chibios/usb_main.c ****     mouse_in_cb,           /* IN notification callback */
 135:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 136:tmk_core/protocol/chibios/usb_main.c ****     MOUSE_EPSIZE,          /* IN maximum packet size */
 137:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 138:tmk_core/protocol/chibios/usb_main.c ****     &mouse_ep_state,       /* IN Endpoint state */
 139:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 140:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 141:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 142:tmk_core/protocol/chibios/usb_main.c **** };
 143:tmk_core/protocol/chibios/usb_main.c **** #endif
 144:tmk_core/protocol/chibios/usb_main.c **** 
 145:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 146:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint state structure */
 147:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState shared_ep_state;
 148:tmk_core/protocol/chibios/usb_main.c **** 
 149:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 150:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig shared_ep_config = {
 151:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 152:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 153:tmk_core/protocol/chibios/usb_main.c ****     shared_in_cb,          /* IN notification callback */
 154:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 155:tmk_core/protocol/chibios/usb_main.c ****     SHARED_EPSIZE,         /* IN maximum packet size */
 156:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 157:tmk_core/protocol/chibios/usb_main.c ****     &shared_ep_state,      /* IN Endpoint state */
 158:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 159:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 160:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 161:tmk_core/protocol/chibios/usb_main.c **** };
 162:tmk_core/protocol/chibios/usb_main.c **** #endif
 163:tmk_core/protocol/chibios/usb_main.c **** 
 164:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 165:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_in;
 166:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_out;
 167:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  in_ep_state;
 168:tmk_core/protocol/chibios/usb_main.c ****     USBOutEndpointState out_ep_state;
 169:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  int_ep_state;
 170:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   in_ep_config;
 171:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   out_ep_config;
 172:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   int_ep_config;
 173:tmk_core/protocol/chibios/usb_main.c ****     const QMKUSBConfig  config;
 174:tmk_core/protocol/chibios/usb_main.c ****     QMKUSBDriver        driver;
 175:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_config_t;
 176:tmk_core/protocol/chibios/usb_main.c **** 
 177:tmk_core/protocol/chibios/usb_main.c **** /* Reusable initialization structure - see USBEndpointConfig comment at top of file */
 178:tmk_core/protocol/chibios/usb_main.c **** #define QMK_USB_DRIVER_CONFIG(stream, notification, fixedsize)                                     
 179:tmk_core/protocol/chibios/usb_main.c ****     {                                                                                              
 180:tmk_core/protocol/chibios/usb_main.c ****         .queue_capacity_in = stream##_IN_CAPACITY, .queue_capacity_out = stream##_OUT_CAPACITY,    
 181:tmk_core/protocol/chibios/usb_main.c ****         .in_ep_config =                                                                            
 182:tmk_core/protocol/chibios/usb_main.c ****             {                                                                                      
 183:tmk_core/protocol/chibios/usb_main.c ****                 stream##_IN_MODE,      /* Interrupt EP */                                          
 184:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                  /* SETUP packet notification callback */                    
 185:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbDataTransmitted, /* IN notification callback */                              
 186:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                  /* OUT notification callback */                             
 187:tmk_core/protocol/chibios/usb_main.c ****                 stream##_EPSIZE,       /* IN maximum packet size */                                
 188:tmk_core/protocol/chibios/usb_main.c ****                 0,                     /* OUT maximum packet size */                               
 189:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                  /* IN Endpoint state */                                     
 190:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                  /* OUT endpoint state */                                    
 191:tmk_core/protocol/chibios/usb_main.c ****                 2,                     /* IN multiplier */                                         
 192:tmk_core/protocol/chibios/usb_main.c ****                 NULL                   /* SETUP buffer (not a SETUP endpoint) */                   
 193:tmk_core/protocol/chibios/usb_main.c ****             },                                                                                     
 194:tmk_core/protocol/chibios/usb_main.c ****         .out_ep_config =                                                                           
 195:tmk_core/protocol/chibios/usb_main.c ****             {                                                                                      
 196:tmk_core/protocol/chibios/usb_main.c ****                 stream##_OUT_MODE,  /* Interrupt EP */                                             
 197:tmk_core/protocol/chibios/usb_main.c ****                 NULL,               /* SETUP packet notification callback */                       
 198:tmk_core/protocol/chibios/usb_main.c ****                 NULL,               /* IN notification callback */                                 
 199:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbDataReceived, /* OUT notification callback */                                
 200:tmk_core/protocol/chibios/usb_main.c ****                 0,                  /* IN maximum packet size */                                   
 201:tmk_core/protocol/chibios/usb_main.c ****                 stream##_EPSIZE,    /* OUT maximum packet size */                                  
 202:tmk_core/protocol/chibios/usb_main.c ****                 NULL,               /* IN Endpoint state */                                        
 203:tmk_core/protocol/chibios/usb_main.c ****                 NULL,               /* OUT endpoint state */                                       
 204:tmk_core/protocol/chibios/usb_main.c ****                 2,                  /* IN multiplier */                                            
 205:tmk_core/protocol/chibios/usb_main.c ****                 NULL,               /* SETUP buffer (not a SETUP endpoint) */                      
 206:tmk_core/protocol/chibios/usb_main.c ****             },                                                                                     
 207:tmk_core/protocol/chibios/usb_main.c ****         .int_ep_config =                                                                           
 208:tmk_core/protocol/chibios/usb_main.c ****             {                                                                                      
 209:tmk_core/protocol/chibios/usb_main.c ****                 USB_EP_MODE_TYPE_INTR,      /* Interrupt EP */                                     
 210:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                       /* SETUP packet notification callback */               
 211:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbInterruptTransmitted, /* IN notification callback */                         
 212:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                       /* OUT notification callback */                        
 213:tmk_core/protocol/chibios/usb_main.c ****                 CDC_NOTIFICATION_EPSIZE,    /* IN maximum packet size */                           
 214:tmk_core/protocol/chibios/usb_main.c ****                 0,                          /* OUT maximum packet size */                          
 215:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                       /* IN Endpoint state */                                
 216:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                       /* OUT endpoint state */                               
 217:tmk_core/protocol/chibios/usb_main.c ****                 2,                          /* IN multiplier */                                    
 218:tmk_core/protocol/chibios/usb_main.c ****                 NULL,                       /* SETUP buffer (not a SETUP endpoint) */              
 219:tmk_core/protocol/chibios/usb_main.c ****             },                                                                                     
 220:tmk_core/protocol/chibios/usb_main.c ****         .config = {                                                                                
 221:tmk_core/protocol/chibios/usb_main.c ****             .usbp        = &USB_DRIVER,                                                            
 222:tmk_core/protocol/chibios/usb_main.c ****             .bulk_in     = stream##_IN_EPNUM,                                                      
 223:tmk_core/protocol/chibios/usb_main.c ****             .bulk_out    = stream##_OUT_EPNUM,                                                     
 224:tmk_core/protocol/chibios/usb_main.c ****             .int_in      = notification,                                                           
 225:tmk_core/protocol/chibios/usb_main.c ****             .in_buffers  = stream##_IN_CAPACITY,                                                   
 226:tmk_core/protocol/chibios/usb_main.c ****             .out_buffers = stream##_OUT_CAPACITY,                                                  
 227:tmk_core/protocol/chibios/usb_main.c ****             .in_size     = stream##_EPSIZE,                                                        
 228:tmk_core/protocol/chibios/usb_main.c ****             .out_size    = stream##_EPSIZE,                                                        
 229:tmk_core/protocol/chibios/usb_main.c ****             .fixed_size  = fixedsize,                                                              
 230:tmk_core/protocol/chibios/usb_main.c ****             .ib          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_IN_CAPACITY
 231:tmk_core/protocol/chibios/usb_main.c ****             .ob          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_OUT_CAPACIT
 232:tmk_core/protocol/chibios/usb_main.c ****         }                                                                                          
 233:tmk_core/protocol/chibios/usb_main.c ****     }
 234:tmk_core/protocol/chibios/usb_main.c **** 
 235:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 236:tmk_core/protocol/chibios/usb_main.c ****     union {
 237:tmk_core/protocol/chibios/usb_main.c ****         struct {
 238:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 239:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t console_driver;
 240:tmk_core/protocol/chibios/usb_main.c **** #endif
 241:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 242:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t raw_driver;
 243:tmk_core/protocol/chibios/usb_main.c **** #endif
 244:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 245:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t midi_driver;
 246:tmk_core/protocol/chibios/usb_main.c **** #endif
 247:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 248:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t serial_driver;
 249:tmk_core/protocol/chibios/usb_main.c **** #endif
 250:tmk_core/protocol/chibios/usb_main.c ****         };
 251:tmk_core/protocol/chibios/usb_main.c ****         usb_driver_config_t array[0];
 252:tmk_core/protocol/chibios/usb_main.c ****     };
 253:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_configs_t;
 254:tmk_core/protocol/chibios/usb_main.c **** 
 255:tmk_core/protocol/chibios/usb_main.c **** static usb_driver_configs_t drivers = {
 256:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 257:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_CAPACITY 4
 258:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_CAPACITY 4
 259:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_MODE USB_EP_MODE_TYPE_INTR
 260:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_MODE USB_EP_MODE_TYPE_INTR
 261:tmk_core/protocol/chibios/usb_main.c ****     .console_driver = QMK_USB_DRIVER_CONFIG(CONSOLE, 0, true),
 262:tmk_core/protocol/chibios/usb_main.c **** #endif
 263:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 264:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_CAPACITY 4
 265:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_CAPACITY 4
 266:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_MODE USB_EP_MODE_TYPE_INTR
 267:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_MODE USB_EP_MODE_TYPE_INTR
 268:tmk_core/protocol/chibios/usb_main.c ****     .raw_driver = QMK_USB_DRIVER_CONFIG(RAW, 0, false),
 269:tmk_core/protocol/chibios/usb_main.c **** #endif
 270:tmk_core/protocol/chibios/usb_main.c **** 
 271:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 272:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_CAPACITY 4
 273:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_CAPACITY 4
 274:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_MODE USB_EP_MODE_TYPE_BULK
 275:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_MODE USB_EP_MODE_TYPE_BULK
 276:tmk_core/protocol/chibios/usb_main.c ****     .midi_driver = QMK_USB_DRIVER_CONFIG(MIDI_STREAM, 0, false),
 277:tmk_core/protocol/chibios/usb_main.c **** #endif
 278:tmk_core/protocol/chibios/usb_main.c **** 
 279:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 280:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_CAPACITY 4
 281:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_CAPACITY 4
 282:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_MODE USB_EP_MODE_TYPE_BULK
 283:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_MODE USB_EP_MODE_TYPE_BULK
 284:tmk_core/protocol/chibios/usb_main.c ****     .serial_driver = QMK_USB_DRIVER_CONFIG(CDC, CDC_NOTIFICATION_EPNUM, false),
 285:tmk_core/protocol/chibios/usb_main.c **** #endif
 286:tmk_core/protocol/chibios/usb_main.c **** };
 287:tmk_core/protocol/chibios/usb_main.c **** 
 288:tmk_core/protocol/chibios/usb_main.c **** #define NUM_USB_DRIVERS (sizeof(drivers) / sizeof(usb_driver_config_t))
 289:tmk_core/protocol/chibios/usb_main.c **** 
 290:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 291:tmk_core/protocol/chibios/usb_main.c ****  *                  USB driver functions
 292:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 293:tmk_core/protocol/chibios/usb_main.c ****  */
 294:tmk_core/protocol/chibios/usb_main.c **** 
 295:tmk_core/protocol/chibios/usb_main.c **** /* Handles the USB driver global events
 296:tmk_core/protocol/chibios/usb_main.c ****  * TODO: maybe disable some things when connection is lost? */
 297:tmk_core/protocol/chibios/usb_main.c **** static void usb_event_cb(USBDriver *usbp, usbevent_t event) {
 298:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 299:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 300:tmk_core/protocol/chibios/usb_main.c ****             return;
 301:tmk_core/protocol/chibios/usb_main.c **** 
 302:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_CONFIGURED:
 303:tmk_core/protocol/chibios/usb_main.c ****             osalSysLockFromISR();
 304:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 305:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 306:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, KEYBOARD_IN_EPNUM, &kbd_ep_config);
 307:tmk_core/protocol/chibios/usb_main.c **** #endif
 308:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 309:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, MOUSE_IN_EPNUM, &mouse_ep_config);
 310:tmk_core/protocol/chibios/usb_main.c **** #endif
 311:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 312:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, SHARED_IN_EPNUM, &shared_ep_config);
 313:tmk_core/protocol/chibios/usb_main.c **** #endif
 314:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 315:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].in_ep_con
 316:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 317:tmk_core/protocol/chibios/usb_main.c ****                 if (drivers.array[i].config.int_in) {
 318:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 319:tmk_core/protocol/chibios/usb_main.c ****                 }
 320:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbConfigureHookI(&drivers.array[i].driver);
 321:tmk_core/protocol/chibios/usb_main.c ****             }
 322:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlockFromISR();
 323:tmk_core/protocol/chibios/usb_main.c ****             return;
 324:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_SUSPEND:
 325:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 326:tmk_core/protocol/chibios/usb_main.c ****             sleep_led_enable();
 327:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 328:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 329:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_UNCONFIGURED:
 330:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 331:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_RESET:
 332:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 333:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 334:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 335:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbSuspendHookI(&drivers.array[i].driver);
 336:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 337:tmk_core/protocol/chibios/usb_main.c ****             }
 338:tmk_core/protocol/chibios/usb_main.c ****             return;
 339:tmk_core/protocol/chibios/usb_main.c **** 
 340:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_WAKEUP:
 341:tmk_core/protocol/chibios/usb_main.c ****             // TODO: from ISR! print("[W]");
 342:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 343:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 344:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 345:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbWakeupHookI(&drivers.array[i].driver);
 346:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 347:tmk_core/protocol/chibios/usb_main.c ****             }
 348:tmk_core/protocol/chibios/usb_main.c ****             suspend_wakeup_init();
 349:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 350:tmk_core/protocol/chibios/usb_main.c ****             sleep_led_disable();
 351:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: converters may not accept this
 352:tmk_core/protocol/chibios/usb_main.c ****             led_set(host_keyboard_leds());
 353:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 354:tmk_core/protocol/chibios/usb_main.c ****             return;
 355:tmk_core/protocol/chibios/usb_main.c **** 
 356:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_STALLED:
 357:tmk_core/protocol/chibios/usb_main.c ****             return;
 358:tmk_core/protocol/chibios/usb_main.c ****     }
 359:tmk_core/protocol/chibios/usb_main.c **** }
 360:tmk_core/protocol/chibios/usb_main.c **** 
 361:tmk_core/protocol/chibios/usb_main.c **** /* Function used locally in os/hal/src/usb.c for getting descriptors
 362:tmk_core/protocol/chibios/usb_main.c ****  * need it here for HID descriptor */
 363:tmk_core/protocol/chibios/usb_main.c **** static uint16_t get_hword(uint8_t *p) {
 364:tmk_core/protocol/chibios/usb_main.c ****     uint16_t hw;
 365:tmk_core/protocol/chibios/usb_main.c **** 
 366:tmk_core/protocol/chibios/usb_main.c ****     hw = (uint16_t)*p++;
 367:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 368:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 369:tmk_core/protocol/chibios/usb_main.c **** }
 370:tmk_core/protocol/chibios/usb_main.c **** 
 371:tmk_core/protocol/chibios/usb_main.c **** /*
 372:tmk_core/protocol/chibios/usb_main.c ****  * Appendix G: HID Request Support Requirements
 373:tmk_core/protocol/chibios/usb_main.c ****  *
 374:tmk_core/protocol/chibios/usb_main.c ****  * The following table enumerates the requests that need to be supported by various types of HID cl
 375:tmk_core/protocol/chibios/usb_main.c ****  * Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 376:tmk_core/protocol/chibios/usb_main.c ****  * ------------------------------------------------------------------------------------------
 377:tmk_core/protocol/chibios/usb_main.c ****  * Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 378:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 379:tmk_core/protocol/chibios/usb_main.c ****  * Boot Keyboard   Required    Optional    Required    Required    Required    Required
 380:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 381:tmk_core/protocol/chibios/usb_main.c ****  * Other Device    Required    Optional    Optional    Optional    Optional    Optional
 382:tmk_core/protocol/chibios/usb_main.c ****  */
 383:tmk_core/protocol/chibios/usb_main.c **** 
 384:tmk_core/protocol/chibios/usb_main.c **** static uint8_t set_report_buf[2] __attribute__((aligned(2)));
 385:tmk_core/protocol/chibios/usb_main.c **** static void    set_led_transfer_cb(USBDriver *usbp) {
 386:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 387:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 388:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 389:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_stats = set_report_buf[1];
 390:tmk_core/protocol/chibios/usb_main.c ****         }
 391:tmk_core/protocol/chibios/usb_main.c ****     } else {
 392:tmk_core/protocol/chibios/usb_main.c ****         keyboard_led_stats = set_report_buf[0];
 393:tmk_core/protocol/chibios/usb_main.c ****     }
 394:tmk_core/protocol/chibios/usb_main.c **** }
 395:tmk_core/protocol/chibios/usb_main.c **** 
 396:tmk_core/protocol/chibios/usb_main.c **** /* Callback for SETUP request on the endpoint 0 (control) */
 397:tmk_core/protocol/chibios/usb_main.c **** static bool usb_request_hook_cb(USBDriver *usbp) {
 398:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 399:tmk_core/protocol/chibios/usb_main.c **** 
 400:tmk_core/protocol/chibios/usb_main.c ****     /* usbp->setup fields:
 401:tmk_core/protocol/chibios/usb_main.c ****      *  0:   bmRequestType (bitmask)
 402:tmk_core/protocol/chibios/usb_main.c ****      *  1:   bRequest
 403:tmk_core/protocol/chibios/usb_main.c ****      *  2,3: (LSB,MSB) wValue
 404:tmk_core/protocol/chibios/usb_main.c ****      *  4,5: (LSB,MSB) wIndex
 405:tmk_core/protocol/chibios/usb_main.c ****      *  6,7: (LSB,MSB) wLength (number of bytes to transfer if there is a data phase) */
 406:tmk_core/protocol/chibios/usb_main.c **** 
 407:tmk_core/protocol/chibios/usb_main.c ****     /* Handle HID class specific requests */
 408:tmk_core/protocol/chibios/usb_main.c ****     if (((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) && ((usbp->setup[0] & USB_
 409:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 410:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 411:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 412:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 413:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 414:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 415:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&keyboard_report_sent, sizeof(key
 416:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 417:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 418:tmk_core/protocol/chibios/usb_main.c **** 
 419:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 420:tmk_core/protocol/chibios/usb_main.c ****                             case MOUSE_INTERFACE:
 421:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&mouse_report_blank, sizeof(mouse
 422:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 423:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 424:tmk_core/protocol/chibios/usb_main.c **** #endif
 425:tmk_core/protocol/chibios/usb_main.c **** 
 426:tmk_core/protocol/chibios/usb_main.c ****                             default:
 427:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, NULL, 0, NULL);
 428:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 429:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 430:tmk_core/protocol/chibios/usb_main.c ****                         }
 431:tmk_core/protocol/chibios/usb_main.c ****                         break;
 432:tmk_core/protocol/chibios/usb_main.c **** 
 433:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_PROTOCOL:
 434:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 435:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 436:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 437:tmk_core/protocol/chibios/usb_main.c ****                         }
 438:tmk_core/protocol/chibios/usb_main.c ****                         break;
 439:tmk_core/protocol/chibios/usb_main.c **** 
 440:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_IDLE:
 441:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, &keyboard_idle, 1, NULL);
 442:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 443:tmk_core/protocol/chibios/usb_main.c ****                         break;
 444:tmk_core/protocol/chibios/usb_main.c ****                 }
 445:tmk_core/protocol/chibios/usb_main.c ****                 break;
 446:tmk_core/protocol/chibios/usb_main.c **** 
 447:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_HOST2DEV:
 448:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 449:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 450:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 451:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 452:tmk_core/protocol/chibios/usb_main.c **** #if defined(SHARED_EP_ENABLE) && !defined(KEYBOARD_SHARED_EP)
 453:tmk_core/protocol/chibios/usb_main.c ****                             case SHARED_INTERFACE:
 454:tmk_core/protocol/chibios/usb_main.c **** #endif
 455:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, set_report_buf, sizeof(set_report_buf), set_
 456:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 457:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 458:tmk_core/protocol/chibios/usb_main.c ****                         }
 459:tmk_core/protocol/chibios/usb_main.c ****                         break;
 460:tmk_core/protocol/chibios/usb_main.c **** 
 461:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_PROTOCOL:
 462:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 463:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 464:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 465:tmk_core/protocol/chibios/usb_main.c ****                             keymap_config.nkro = !!keyboard_protocol;
 466:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 467:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 468:tmk_core/protocol/chibios/usb_main.c ****                             if (keyboard_idle) {
 469:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 470:tmk_core/protocol/chibios/usb_main.c ****                                 /* arm the idle timer if boot protocol & idle */
 471:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysLockFromISR();
 472:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 473:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 474:tmk_core/protocol/chibios/usb_main.c ****                             }
 475:tmk_core/protocol/chibios/usb_main.c ****                         }
 476:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 477:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 478:tmk_core/protocol/chibios/usb_main.c ****                         break;
 479:tmk_core/protocol/chibios/usb_main.c **** 
 480:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_IDLE:
 481:tmk_core/protocol/chibios/usb_main.c ****                         keyboard_idle = usbp->setup[3]; /* MSB(wValue) */
 482:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 483:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 484:tmk_core/protocol/chibios/usb_main.c ****                         if (!keymap_config.nkro && keyboard_idle) {
 485:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 486:tmk_core/protocol/chibios/usb_main.c ****                         if (keyboard_idle) {
 487:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 488:tmk_core/protocol/chibios/usb_main.c ****                             osalSysLockFromISR();
 489:tmk_core/protocol/chibios/usb_main.c ****                             chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_i
 490:tmk_core/protocol/chibios/usb_main.c ****                             osalSysUnlockFromISR();
 491:tmk_core/protocol/chibios/usb_main.c ****                         }
 492:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 493:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 494:tmk_core/protocol/chibios/usb_main.c ****                         break;
 495:tmk_core/protocol/chibios/usb_main.c ****                 }
 496:tmk_core/protocol/chibios/usb_main.c ****                 break;
 497:tmk_core/protocol/chibios/usb_main.c ****         }
 498:tmk_core/protocol/chibios/usb_main.c ****     }
 499:tmk_core/protocol/chibios/usb_main.c **** 
 500:tmk_core/protocol/chibios/usb_main.c ****     /* Handle the Get_Descriptor Request for HID class (not handled by the default hook) */
 501:tmk_core/protocol/chibios/usb_main.c ****     if ((usbp->setup[0] == 0x81) && (usbp->setup[1] == USB_REQ_GET_DESCRIPTOR)) {
 502:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 503:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 504:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 505:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 506:tmk_core/protocol/chibios/usb_main.c ****     }
 507:tmk_core/protocol/chibios/usb_main.c **** 
 508:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 509:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 510:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 511:tmk_core/protocol/chibios/usb_main.c ****             return qmkusbRequestsHook(usbp);
 512:tmk_core/protocol/chibios/usb_main.c ****         }
 513:tmk_core/protocol/chibios/usb_main.c ****     }
 514:tmk_core/protocol/chibios/usb_main.c **** 
 515:tmk_core/protocol/chibios/usb_main.c ****     return FALSE;
 516:tmk_core/protocol/chibios/usb_main.c **** }
 517:tmk_core/protocol/chibios/usb_main.c **** 
 518:tmk_core/protocol/chibios/usb_main.c **** /* Start-of-frame callback */
 519:tmk_core/protocol/chibios/usb_main.c **** static void usb_sof_cb(USBDriver *usbp) {
 520:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 521:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 522:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 523:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 524:tmk_core/protocol/chibios/usb_main.c ****     }
 525:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 526:tmk_core/protocol/chibios/usb_main.c **** }
 527:tmk_core/protocol/chibios/usb_main.c **** 
 528:tmk_core/protocol/chibios/usb_main.c **** /* USB driver configuration */
 529:tmk_core/protocol/chibios/usb_main.c **** static const USBConfig usbcfg = {
 530:tmk_core/protocol/chibios/usb_main.c ****     usb_event_cb,          /* USB events callback */
 531:tmk_core/protocol/chibios/usb_main.c ****     usb_get_descriptor_cb, /* Device GET_DESCRIPTOR request callback */
 532:tmk_core/protocol/chibios/usb_main.c ****     usb_request_hook_cb,   /* Requests hook callback */
 533:tmk_core/protocol/chibios/usb_main.c ****     usb_sof_cb             /* Start Of Frame callback */
 534:tmk_core/protocol/chibios/usb_main.c **** };
 535:tmk_core/protocol/chibios/usb_main.c **** 
 536:tmk_core/protocol/chibios/usb_main.c **** /*
 537:tmk_core/protocol/chibios/usb_main.c ****  * Initialize the USB driver
 538:tmk_core/protocol/chibios/usb_main.c ****  */
 539:tmk_core/protocol/chibios/usb_main.c **** void init_usb_driver(USBDriver *usbp) {
 540:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 541:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                     = &drivers.array[i].driver;
 542:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 543:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 544:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 545:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 546:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 547:tmk_core/protocol/chibios/usb_main.c ****     }
 548:tmk_core/protocol/chibios/usb_main.c **** 
 549:tmk_core/protocol/chibios/usb_main.c ****     /*
 550:tmk_core/protocol/chibios/usb_main.c ****      * Activates the USB driver and then the USB bus pull-up on D+.
 551:tmk_core/protocol/chibios/usb_main.c ****      * Note, a delay is inserted in order to not have to disconnect the cable
 552:tmk_core/protocol/chibios/usb_main.c ****      * after a reset.
 553:tmk_core/protocol/chibios/usb_main.c ****      */
 554:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 555:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 556:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 557:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 558:tmk_core/protocol/chibios/usb_main.c **** 
 559:tmk_core/protocol/chibios/usb_main.c ****     chVTObjectInit(&keyboard_idle_timer);
 560:tmk_core/protocol/chibios/usb_main.c **** }
 561:tmk_core/protocol/chibios/usb_main.c **** 
 562:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 563:tmk_core/protocol/chibios/usb_main.c ****  *                  Keyboard functions
 564:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 565:tmk_core/protocol/chibios/usb_main.c ****  */
 566:tmk_core/protocol/chibios/usb_main.c **** /* keyboard IN callback hander (a kbd report has made it IN) */
 567:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 568:tmk_core/protocol/chibios/usb_main.c **** void kbd_in_cb(USBDriver *usbp, usbep_t ep) {
  28              		.loc 1 568 45 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 569:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 570:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  33              		.loc 1 570 5 view .LVU1
 571:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
  34              		.loc 1 571 5 view .LVU2
 572:tmk_core/protocol/chibios/usb_main.c **** }
  35              		.loc 1 572 1 is_stmt 0 view .LVU3
  36              		@ sp needed
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE195:
  41              		.section	.text.usb_get_descriptor_cb,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.code	16
  45              		.thumb_func
  46              		.fpu softvfp
  48              	usb_get_descriptor_cb:
  49              	.LVL1:
  50              	.LFB188:
  96:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  51              		.loc 1 96 116 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  97:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
  55              		.loc 1 97 5 view .LVU5
  98:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
  56              		.loc 1 98 5 view .LVU6
  99:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
  57              		.loc 1 99 5 view .LVU7
  96:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  58              		.loc 1 96 116 is_stmt 0 view .LVU8
  59 0000 70B5     		push	{r4, r5, r6, lr}
  60              		.cfi_def_cfa_offset 16
  61              		.cfi_offset 4, -16
  62              		.cfi_offset 5, -12
  63              		.cfi_offset 6, -8
  64              		.cfi_offset 14, -4
  96:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  65              		.loc 1 96 116 view .LVU9
  66 0002 0D00     		movs	r5, r1
  67              	.LVL2:
 100:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
  68              		.loc 1 100 5 is_stmt 1 view .LVU10
  99:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
  69              		.loc 1 99 52 is_stmt 0 view .LVU11
  70 0004 2D02     		lsls	r5, r5, #8
  71              	.LVL3:
 100:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
  72              		.loc 1 100 33 view .LVU12
  73 0006 0021     		movs	r1, #0
  74              	.LVL4:
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  75              		.loc 1 101 35 view .LVU13
  76 0008 2800     		movs	r0, r5
  77              	.LVL5:
 100:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
  78              		.loc 1 100 33 view .LVU14
  79 000a 074C     		ldr	r4, .L7
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  80              		.loc 1 101 35 view .LVU15
  81 000c 1043     		orrs	r0, r2
  82 000e 261D     		adds	r6, r4, #4
 100:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
  83              		.loc 1 100 33 view .LVU16
  84 0010 6160     		str	r1, [r4, #4]
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  85              		.loc 1 101 5 is_stmt 1 view .LVU17
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  86              		.loc 1 101 35 is_stmt 0 view .LVU18
  87 0012 3200     		movs	r2, r6
  88              	.LVL6:
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  89              		.loc 1 101 35 view .LVU19
  90 0014 1900     		movs	r1, r3
  91 0016 FFF7FEFF 		bl	get_usb_descriptor
  92              	.LVL7:
 101:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
  93              		.loc 1 101 35 view .LVU20
  94 001a 2060     		str	r0, [r4]
 102:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
  95              		.loc 1 102 5 is_stmt 1 view .LVU21
 102:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
  96              		.loc 1 102 13 is_stmt 0 view .LVU22
  97 001c 6068     		ldr	r0, [r4, #4]
 102:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
  98              		.loc 1 102 8 view .LVU23
  99 001e 0028     		cmp	r0, #0
 100 0020 00D0     		beq	.L2
 105:tmk_core/protocol/chibios/usb_main.c **** }
 101              		.loc 1 105 16 view .LVU24
 102 0022 2000     		movs	r0, r4
 103              	.L2:
 106:tmk_core/protocol/chibios/usb_main.c **** 
 104              		.loc 1 106 1 view .LVU25
 105              		@ sp needed
 106 0024 70BD     		pop	{r4, r5, r6, pc}
 107              	.L8:
 108 0026 C046     		.align	2
 109              	.L7:
 110 0028 00000000 		.word	.LANCHOR0
 111              		.cfi_endproc
 112              	.LFE188:
 114              		.section	.text.set_led_transfer_cb,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.code	16
 118              		.thumb_func
 119              		.fpu softvfp
 121              	set_led_transfer_cb:
 122              	.LVL8:
 123              	.LFB191:
 385:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 124              		.loc 1 385 53 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 386:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 129              		.loc 1 386 5 view .LVU27
 386:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 130              		.loc 1 386 20 is_stmt 0 view .LVU28
 131 0000 7A30     		adds	r0, r0, #122
 132              	.LVL9:
 386:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 133              		.loc 1 386 20 view .LVU29
 134 0002 084A     		ldr	r2, .L12
 386:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 135              		.loc 1 386 8 view .LVU30
 136 0004 0178     		ldrb	r1, [r0]
 137 0006 1378     		ldrb	r3, [r2]
 138 0008 0229     		cmp	r1, #2
 139 000a 07D1     		bne	.L10
 140              	.LBB323:
 141              	.LBI323:
 385:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 142              		.loc 1 385 16 is_stmt 1 view .LVU31
 143              	.LVL10:
 144              	.LBB324:
 387:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 145              		.loc 1 387 9 view .LVU32
 388:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_stats = set_report_buf[1];
 146              		.loc 1 388 9 view .LVU33
 388:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_stats = set_report_buf[1];
 147              		.loc 1 388 12 is_stmt 0 view .LVU34
 148 000c 0231     		adds	r1, r1, #2
 149 000e 8B43     		bics	r3, r1
 150 0010 012B     		cmp	r3, #1
 151 0012 02D1     		bne	.L9
 389:tmk_core/protocol/chibios/usb_main.c ****         }
 152              		.loc 1 389 13 is_stmt 1 view .LVU35
 389:tmk_core/protocol/chibios/usb_main.c ****         }
 153              		.loc 1 389 32 is_stmt 0 view .LVU36
 154 0014 5278     		ldrb	r2, [r2, #1]
 155 0016 044B     		ldr	r3, .L12+4
 156 0018 1A70     		strb	r2, [r3]
 157              	.LVL11:
 158              	.L9:
 389:tmk_core/protocol/chibios/usb_main.c ****         }
 159              		.loc 1 389 32 view .LVU37
 160              	.LBE324:
 161              	.LBE323:
 394:tmk_core/protocol/chibios/usb_main.c **** 
 162              		.loc 1 394 1 view .LVU38
 163              		@ sp needed
 164 001a 7047     		bx	lr
 165              	.L10:
 392:tmk_core/protocol/chibios/usb_main.c ****     }
 166              		.loc 1 392 9 is_stmt 1 view .LVU39
 392:tmk_core/protocol/chibios/usb_main.c ****     }
 167              		.loc 1 392 28 is_stmt 0 view .LVU40
 168 001c 024A     		ldr	r2, .L12+4
 169 001e 1370     		strb	r3, [r2]
 394:tmk_core/protocol/chibios/usb_main.c **** 
 170              		.loc 1 394 1 view .LVU41
 171 0020 FBE7     		b	.L9
 172              	.L13:
 173 0022 C046     		.align	2
 174              	.L12:
 175 0024 00000000 		.word	.LANCHOR1
 176 0028 00000000 		.word	.LANCHOR2
 177              		.cfi_endproc
 178              	.LFE191:
 180              		.section	.text.usb_event_cb,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.code	16
 184              		.thumb_func
 185              		.fpu softvfp
 187              	usb_event_cb:
 188              	.LVL12:
 189              	.LFB189:
 297:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 190              		.loc 1 297 61 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 298:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 194              		.loc 1 298 5 view .LVU43
 297:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 195              		.loc 1 297 61 is_stmt 0 view .LVU44
 196 0000 70B5     		push	{r4, r5, r6, lr}
 197              		.cfi_def_cfa_offset 16
 198              		.cfi_offset 4, -16
 199              		.cfi_offset 5, -12
 200              		.cfi_offset 6, -8
 201              		.cfi_offset 14, -4
 297:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 202              		.loc 1 297 61 view .LVU45
 203 0002 0400     		movs	r4, r0
 298:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 204              		.loc 1 298 5 view .LVU46
 205 0004 0529     		cmp	r1, #5
 206 0006 2BD8     		bhi	.L14
 207 0008 0800     		movs	r0, r1
 208              	.LVL13:
 298:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 209              		.loc 1 298 5 view .LVU47
 210 000a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 211              	.L17:
 212 000e 2C       		.byte	(.L19-.L17)/2
 213 000f 29       		.byte	(.L14-.L17)/2
 214 0010 03       		.byte	(.L20-.L17)/2
 215 0011 2C       		.byte	(.L19-.L17)/2
 216 0012 2A       		.byte	(.L18-.L17)/2
 217 0013 31       		.byte	(.L16-.L17)/2
 218              		.p2align 1
 219              	.L20:
 220              	.LVL14:
 221              	.LBB384:
 222              	.LBI384:
 297:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 223              		.loc 1 297 13 is_stmt 1 view .LVU48
 224              	.LBB385:
 303:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 225              		.loc 1 303 13 view .LVU49
 226              	.LBB386:
 227              	.LBI386:
 228              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 229              		.loc 2 531 20 view .LVU50
 230              	.LBE386:
 231              	.LBE385:
 232              	.LBE384:
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 233              		.loc 2 533 3 view .LVU51
 234              	.LBB428:
 235              	.LBB419:
 236              	.LBB398:
 237              	.LBB387:
 238              	.LBI387:
 239              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 240              		.loc 3 393 20 view .LVU52
 241              	.LBE387:
 242              	.LBE398:
 243              	.LBE419:
 244              	.LBE428:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 245              		.loc 3 395 3 view .LVU53
 246              	.LBB429:
 247              	.LBB420:
 248              	.LBB399:
 249              	.LBB395:
 250              	.LBB388:
 251              	.LBI388:
 252              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock_from_isr(void) {
 253              		.loc 4 406 20 view .LVU54
 254              	.LBE388:
 255              	.LBE395:
 256              	.LBE399:
 257              	.LBE420:
 258              	.LBE429:
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_lock();
 259              		.loc 4 408 3 view .LVU55
 260              	.LBB430:
 261              	.LBB421:
 262              	.LBB400:
 263              	.LBB396:
 264              	.LBB393:
 265              	.LBB389:
 266              	.LBI389:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 267              		.loc 4 387 20 view .LVU56
 268              	.LBE389:
 269              	.LBE393:
 270              	.LBE396:
 271              	.LBE400:
 272              	.LBE421:
 273              	.LBE430:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 274              		.loc 4 389 3 view .LVU57
 275              	.LBB431:
 276              	.LBB422:
 277              	.LBB401:
 278              	.LBB397:
 279              	.LBB394:
 280              	.LBB392:
 281              	.LBB390:
 282              	.LBI390:
 283              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 284              		.loc 5 140 27 view .LVU58
 285              	.LBB391:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 286              		.loc 5 142 3 view .LVU59
 287              		.syntax divided
 288              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 289 0014 72B6     		cpsid i
 290              	@ 0 "" 2
 291              		.thumb
 292              		.syntax unified
 293              	.LBE391:
 294              	.LBE390:
 295              	.LBE392:
 296              	.LBE394:
 297              	.LBE397:
 298              	.LBE401:
 299              	.LBE422:
 300              	.LBE431:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 301              		.loc 3 396 34 view .LVU60
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 302              		.loc 3 397 29 view .LVU61
 303              	.LBB432:
 304              	.LBB423:
 306:tmk_core/protocol/chibios/usb_main.c **** #endif
 305              		.loc 1 306 13 view .LVU62
 306 0016 1D4A     		ldr	r2, .L26
 307 0018 0121     		movs	r1, #1
 308              	.LVL15:
 306:tmk_core/protocol/chibios/usb_main.c **** #endif
 309              		.loc 1 306 13 is_stmt 0 view .LVU63
 310 001a 2000     		movs	r0, r4
 311 001c FFF7FEFF 		bl	usbInitEndpointI
 312              	.LVL16:
 312:tmk_core/protocol/chibios/usb_main.c **** #endif
 313              		.loc 1 312 13 is_stmt 1 view .LVU64
 314 0020 1B4A     		ldr	r2, .L26+4
 315 0022 0221     		movs	r1, #2
 316 0024 2000     		movs	r0, r4
 317 0026 FFF7FEFF 		bl	usbInitEndpointI
 318              	.LVL17:
 314:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].in_ep_con
 319              		.loc 1 314 13 view .LVU65
 320              	.LBB402:
 314:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].in_ep_con
 321              		.loc 1 314 18 view .LVU66
 315:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 322              		.loc 1 315 17 view .LVU67
 323 002a 1A4D     		ldr	r5, .L26+8
 324 002c 1A4A     		ldr	r2, .L26+12
 325 002e 2B00     		movs	r3, r5
 326 0030 B433     		adds	r3, r3, #180
 327 0032 1978     		ldrb	r1, [r3]
 328 0034 2000     		movs	r0, r4
 329 0036 FFF7FEFF 		bl	usbInitEndpointI
 330              	.LVL18:
 316:tmk_core/protocol/chibios/usb_main.c ****                 if (drivers.array[i].config.int_in) {
 331              		.loc 1 316 17 view .LVU68
 332 003a 2B00     		movs	r3, r5
 333 003c B533     		adds	r3, r3, #181
 334 003e 1978     		ldrb	r1, [r3]
 335 0040 164A     		ldr	r2, .L26+16
 336 0042 2000     		movs	r0, r4
 317:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 337              		.loc 1 317 44 is_stmt 0 view .LVU69
 338 0044 B635     		adds	r5, r5, #182
 316:tmk_core/protocol/chibios/usb_main.c ****                 if (drivers.array[i].config.int_in) {
 339              		.loc 1 316 17 view .LVU70
 340 0046 FFF7FEFF 		bl	usbInitEndpointI
 341              	.LVL19:
 317:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 342              		.loc 1 317 17 is_stmt 1 view .LVU71
 317:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 343              		.loc 1 317 44 is_stmt 0 view .LVU72
 344 004a 2978     		ldrb	r1, [r5]
 317:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 345              		.loc 1 317 20 view .LVU73
 346 004c 0029     		cmp	r1, #0
 347 004e 03D0     		beq	.L21
 318:tmk_core/protocol/chibios/usb_main.c ****                 }
 348              		.loc 1 318 21 is_stmt 1 view .LVU74
 349 0050 134A     		ldr	r2, .L26+20
 350 0052 2000     		movs	r0, r4
 351 0054 FFF7FEFF 		bl	usbInitEndpointI
 352              	.LVL20:
 353              	.L21:
 320:tmk_core/protocol/chibios/usb_main.c ****             }
 354              		.loc 1 320 17 view .LVU75
 355 0058 1248     		ldr	r0, .L26+24
 356 005a FFF7FEFF 		bl	qmkusbConfigureHookI
 357              	.LVL21:
 320:tmk_core/protocol/chibios/usb_main.c ****             }
 358              		.loc 1 320 17 is_stmt 0 view .LVU76
 359              	.LBE402:
 322:tmk_core/protocol/chibios/usb_main.c ****             return;
 360              		.loc 1 322 13 is_stmt 1 view .LVU77
 361              	.LBB403:
 362              	.LBI403:
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 363              		.loc 2 542 20 view .LVU78
 364              	.LBE403:
 365              	.LBE423:
 366              	.LBE432:
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 367              		.loc 2 544 3 view .LVU79
 368              	.LBB433:
 369              	.LBB424:
 370              	.LBB415:
 371              	.LBB404:
 372              	.LBI404:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 373              		.loc 3 413 20 view .LVU80
 374              	.LBE404:
 375              	.LBE415:
 376              	.LBE424:
 377              	.LBE433:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 378              		.loc 3 415 31 view .LVU81
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 379              		.loc 3 416 33 view .LVU82
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 380              		.loc 3 417 3 view .LVU83
 381              	.LBB434:
 382              	.LBB425:
 383              	.LBB416:
 384              	.LBB412:
 385              	.LBB405:
 386              	.LBI405:
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock_from_isr(void) {
 387              		.loc 4 416 20 view .LVU84
 388              	.LBE405:
 389              	.LBE412:
 390              	.LBE416:
 391              	.LBE425:
 392              	.LBE434:
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_unlock();
 393              		.loc 4 418 3 view .LVU85
 394              	.LBB435:
 395              	.LBB426:
 396              	.LBB417:
 397              	.LBB413:
 398              	.LBB410:
 399              	.LBB406:
 400              	.LBI406:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401              		.loc 4 396 20 view .LVU86
 402              	.LBE406:
 403              	.LBE410:
 404              	.LBE413:
 405              	.LBE417:
 406              	.LBE426:
 407              	.LBE435:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 408              		.loc 4 398 3 view .LVU87
 409              	.LBB436:
 410              	.LBB427:
 411              	.LBB418:
 412              	.LBB414:
 413              	.LBB411:
 414              	.LBB409:
 415              	.LBB407:
 416              	.LBI407:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 417              		.loc 5 129 27 view .LVU88
 418              	.LBB408:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 419              		.loc 5 131 3 view .LVU89
 420              	.L25:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 421              		.loc 5 131 3 is_stmt 0 view .LVU90
 422              	.LBE408:
 423              	.LBE407:
 424              	.LBE409:
 425              	.LBE411:
 426              	.LBE414:
 427              	.LBE418:
 428              	.LBE427:
 429              	.LBE436:
 430              	.LBB437:
 336:tmk_core/protocol/chibios/usb_main.c ****             }
 431              		.loc 1 336 17 is_stmt 1 view .LVU91
 432              	.LBB438:
 433              	.LBI438:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 434              		.loc 3 413 20 view .LVU92
 435              	.LBE438:
 436              	.LBE437:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 437              		.loc 3 415 31 view .LVU93
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 438              		.loc 3 416 33 view .LVU94
 439              		.loc 3 417 3 view .LVU95
 440              	.LBB460:
 441              	.LBB446:
 442              	.LBB439:
 443              	.LBI439:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 444              		.loc 4 416 20 view .LVU96
 445              	.LBE439:
 446              	.LBE446:
 447              	.LBE460:
 448              		.loc 4 418 3 view .LVU97
 449              	.LBB461:
 450              	.LBB447:
 451              	.LBB444:
 452              	.LBB440:
 453              	.LBI440:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 454              		.loc 4 396 20 view .LVU98
 455              	.LBE440:
 456              	.LBE444:
 457              	.LBE447:
 458              	.LBE461:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 459              		.loc 4 398 3 view .LVU99
 460              	.LBB462:
 461              	.LBB448:
 462              	.LBB445:
 463              	.LBB443:
 464              	.LBB441:
 465              	.LBI441:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 466              		.loc 5 129 27 view .LVU100
 467              	.LBB442:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468              		.loc 5 131 3 view .LVU101
 469              		.syntax divided
 470              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 471 005e 62B6     		cpsie i
 472              	@ 0 "" 2
 473              	.LVL22:
 474              		.thumb
 475              		.syntax unified
 476              	.L14:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 477              		.loc 5 131 3 is_stmt 0 view .LVU102
 478              	.LBE442:
 479              	.LBE441:
 480              	.LBE443:
 481              	.LBE445:
 482              	.LBE448:
 483              	.LBE462:
 359:tmk_core/protocol/chibios/usb_main.c **** 
 484              		.loc 1 359 1 view .LVU103
 485              		@ sp needed
 486              	.LVL23:
 359:tmk_core/protocol/chibios/usb_main.c **** 
 487              		.loc 1 359 1 view .LVU104
 488 0060 70BD     		pop	{r4, r5, r6, pc}
 489              	.LVL24:
 490              	.L18:
 326:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 491              		.loc 1 326 13 is_stmt 1 view .LVU105
 492 0062 FFF7FEFF 		bl	sleep_led_enable
 493              	.LVL25:
 494              	.L19:
 495              	.LBB463:
 333:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 496              		.loc 1 333 17 view .LVU106
 497              	.LBB449:
 498              	.LBI449:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 499              		.loc 3 393 20 view .LVU107
 500              	.LBE449:
 501              	.LBE463:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 502              		.loc 3 395 3 view .LVU108
 503              	.LBB464:
 504              	.LBB457:
 505              	.LBB450:
 506              	.LBI450:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 507              		.loc 4 406 20 view .LVU109
 508              	.LBE450:
 509              	.LBE457:
 510              	.LBE464:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 511              		.loc 4 408 3 view .LVU110
 512              	.LBB465:
 513              	.LBB458:
 514              	.LBB455:
 515              	.LBB451:
 516              	.LBI451:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 517              		.loc 4 387 20 view .LVU111
 518              	.LBE451:
 519              	.LBE455:
 520              	.LBE458:
 521              	.LBE465:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 522              		.loc 4 389 3 view .LVU112
 523              	.LBB466:
 524              	.LBB459:
 525              	.LBB456:
 526              	.LBB454:
 527              	.LBB452:
 528              	.LBI452:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 529              		.loc 5 140 27 view .LVU113
 530              	.LBB453:
 531              		.loc 5 142 3 view .LVU114
 532              		.syntax divided
 533              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 534 0066 72B6     		cpsid i
 535              	@ 0 "" 2
 536              		.thumb
 537              		.syntax unified
 538              	.LBE453:
 539              	.LBE452:
 540              	.LBE454:
 541              	.LBE456:
 542              	.LBE459:
 543              	.LBE466:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 544              		.loc 3 396 34 view .LVU115
 397:./lib/chibios/os/rt/include/chsys.h **** }
 545              		.loc 3 397 29 view .LVU116
 546              	.LBB467:
 335:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 547              		.loc 1 335 17 view .LVU117
 548 0068 0E48     		ldr	r0, .L26+24
 549 006a FFF7FEFF 		bl	qmkusbSuspendHookI
 550              	.LVL26:
 551 006e F6E7     		b	.L25
 552              	.LVL27:
 553              	.L16:
 335:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 554              		.loc 1 335 17 is_stmt 0 view .LVU118
 555              	.LBE467:
 556              	.LBB468:
 343:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 557              		.loc 1 343 17 is_stmt 1 discriminator 1 view .LVU119
 558              	.LBB469:
 559              	.LBI469:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 560              		.loc 3 393 20 discriminator 1 view .LVU120
 561              	.LBE469:
 562              	.LBE468:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 563              		.loc 3 395 3 discriminator 1 view .LVU121
 564              	.LBB491:
 565              	.LBB477:
 566              	.LBB470:
 567              	.LBI470:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 568              		.loc 4 406 20 discriminator 1 view .LVU122
 569              	.LBE470:
 570              	.LBE477:
 571              	.LBE491:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 572              		.loc 4 408 3 discriminator 1 view .LVU123
 573              	.LBB492:
 574              	.LBB478:
 575              	.LBB475:
 576              	.LBB471:
 577              	.LBI471:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 578              		.loc 4 387 20 discriminator 1 view .LVU124
 579              	.LBE471:
 580              	.LBE475:
 581              	.LBE478:
 582              	.LBE492:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 583              		.loc 4 389 3 discriminator 1 view .LVU125
 584              	.LBB493:
 585              	.LBB479:
 586              	.LBB476:
 587              	.LBB474:
 588              	.LBB472:
 589              	.LBI472:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 590              		.loc 5 140 27 discriminator 1 view .LVU126
 591              	.LBB473:
 592              		.loc 5 142 3 discriminator 1 view .LVU127
 593              		.syntax divided
 594              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 595 0070 72B6     		cpsid i
 596              	@ 0 "" 2
 597              		.thumb
 598              		.syntax unified
 599              	.LBE473:
 600              	.LBE472:
 601              	.LBE474:
 602              	.LBE476:
 603              	.LBE479:
 604              	.LBE493:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 605              		.loc 3 396 34 discriminator 1 view .LVU128
 397:./lib/chibios/os/rt/include/chsys.h **** }
 606              		.loc 3 397 29 discriminator 1 view .LVU129
 607              	.LBB494:
 345:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 608              		.loc 1 345 17 discriminator 1 view .LVU130
 609 0072 0C48     		ldr	r0, .L26+24
 610 0074 FFF7FEFF 		bl	qmkusbWakeupHookI
 611              	.LVL28:
 346:tmk_core/protocol/chibios/usb_main.c ****             }
 612              		.loc 1 346 17 discriminator 1 view .LVU131
 613              	.LBB480:
 614              	.LBI480:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 615              		.loc 3 413 20 discriminator 1 view .LVU132
 616              	.LBE480:
 617              	.LBE494:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 618              		.loc 3 415 31 discriminator 1 view .LVU133
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 619              		.loc 3 416 33 discriminator 1 view .LVU134
 620              		.loc 3 417 3 discriminator 1 view .LVU135
 621              	.LBB495:
 622              	.LBB488:
 623              	.LBB481:
 624              	.LBI481:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 625              		.loc 4 416 20 discriminator 1 view .LVU136
 626              	.LBE481:
 627              	.LBE488:
 628              	.LBE495:
 629              		.loc 4 418 3 discriminator 1 view .LVU137
 630              	.LBB496:
 631              	.LBB489:
 632              	.LBB486:
 633              	.LBB482:
 634              	.LBI482:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 635              		.loc 4 396 20 discriminator 1 view .LVU138
 636              	.LBE482:
 637              	.LBE486:
 638              	.LBE489:
 639              	.LBE496:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 640              		.loc 4 398 3 discriminator 1 view .LVU139
 641              	.LBB497:
 642              	.LBB490:
 643              	.LBB487:
 644              	.LBB485:
 645              	.LBB483:
 646              	.LBI483:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 647              		.loc 5 129 27 discriminator 1 view .LVU140
 648              	.LBB484:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 649              		.loc 5 131 3 discriminator 1 view .LVU141
 650              		.syntax divided
 651              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 652 0078 62B6     		cpsie i
 653              	@ 0 "" 2
 654              	.LVL29:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 655              		.loc 5 131 3 is_stmt 0 discriminator 1 view .LVU142
 656              		.thumb
 657              		.syntax unified
 658              	.LBE484:
 659              	.LBE483:
 660              	.LBE485:
 661              	.LBE487:
 662              	.LBE490:
 663              	.LBE497:
 348:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 664              		.loc 1 348 13 is_stmt 1 discriminator 1 view .LVU143
 665 007a FFF7FEFF 		bl	suspend_wakeup_init
 666              	.LVL30:
 350:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: converters may not accept this
 667              		.loc 1 350 13 discriminator 1 view .LVU144
 668 007e FFF7FEFF 		bl	sleep_led_disable
 669              	.LVL31:
 352:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 670              		.loc 1 352 13 discriminator 1 view .LVU145
 671 0082 FFF7FEFF 		bl	host_keyboard_leds
 672              	.LVL32:
 673 0086 FFF7FEFF 		bl	led_set
 674              	.LVL33:
 354:tmk_core/protocol/chibios/usb_main.c **** 
 675              		.loc 1 354 13 discriminator 1 view .LVU146
 676 008a E9E7     		b	.L14
 677              	.L27:
 678              		.align	2
 679              	.L26:
 680 008c 00000000 		.word	.LANCHOR3
 681 0090 00000000 		.word	.LANCHOR4
 682 0094 00000000 		.word	drivers
 683 0098 44000000 		.word	drivers+68
 684 009c 68000000 		.word	drivers+104
 685 00a0 8C000000 		.word	drivers+140
 686 00a4 D4000000 		.word	drivers+212
 687              		.cfi_endproc
 688              	.LFE189:
 690              		.section	.text.usb_sof_cb,"ax",%progbits
 691              		.align	1
 692              		.syntax unified
 693              		.code	16
 694              		.thumb_func
 695              		.fpu softvfp
 697              	usb_sof_cb:
 698              	.LVL34:
 699              	.LFB193:
 519:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 700              		.loc 1 519 41 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 520:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 704              		.loc 1 520 5 view .LVU148
 573:tmk_core/protocol/chibios/usb_main.c **** #endif
 574:tmk_core/protocol/chibios/usb_main.c **** 
 575:tmk_core/protocol/chibios/usb_main.c **** /* start-of-frame handler
 576:tmk_core/protocol/chibios/usb_main.c ****  * TODO: i guess it would be better to re-implement using timers,
 577:tmk_core/protocol/chibios/usb_main.c ****  *  so that this is not going to have to be checked every 1ms */
 578:tmk_core/protocol/chibios/usb_main.c **** void kbd_sof_cb(USBDriver *usbp) { (void)usbp; }
 705              		.loc 1 578 36 view .LVU149
 521:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 706              		.loc 1 521 5 view .LVU150
 707              	.LBB519:
 708              	.LBI519:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 709              		.loc 2 531 20 view .LVU151
 710              	.LBE519:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 711              		.loc 2 533 3 view .LVU152
 712              	.LBB536:
 713              	.LBB520:
 714              	.LBI520:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 715              		.loc 3 393 20 view .LVU153
 716              	.LBE520:
 717              	.LBE536:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 718              		.loc 3 395 3 view .LVU154
 719              	.LBB537:
 720              	.LBB532:
 721              	.LBB521:
 722              	.LBI521:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 723              		.loc 4 406 20 view .LVU155
 724              	.LBE521:
 725              	.LBE532:
 726              	.LBE537:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 727              		.loc 4 408 3 view .LVU156
 728              	.LBB538:
 729              	.LBB533:
 730              	.LBB529:
 731              	.LBB522:
 732              	.LBI522:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 733              		.loc 4 387 20 view .LVU157
 734              	.LBE522:
 735              	.LBE529:
 736              	.LBE533:
 737              	.LBE538:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 738              		.loc 4 389 3 view .LVU158
 739              	.LBB539:
 740              	.LBB534:
 741              	.LBB530:
 742              	.LBB527:
 743              	.LBB523:
 744              	.LBI523:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 745              		.loc 5 140 27 view .LVU159
 746              	.LBB524:
 747              		.loc 5 142 3 view .LVU160
 748              	.LBE524:
 749              	.LBE523:
 750              	.LBE527:
 751              	.LBE530:
 752              	.LBE534:
 753              	.LBE539:
 519:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 754              		.loc 1 519 41 is_stmt 0 view .LVU161
 755 0000 10B5     		push	{r4, lr}
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759              	.LBB540:
 760              	.LBB535:
 761              	.LBB531:
 762              	.LBB528:
 763              	.LBB526:
 764              	.LBB525:
 765              		.loc 5 142 3 view .LVU162
 766              		.syntax divided
 767              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 768 0002 72B6     		cpsid i
 769              	@ 0 "" 2
 770              		.thumb
 771              		.syntax unified
 772              	.LBE525:
 773              	.LBE526:
 774              	.LBE528:
 775              	.LBE531:
 776              	.LBE535:
 777              	.LBE540:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 778              		.loc 3 396 34 is_stmt 1 view .LVU163
 397:./lib/chibios/os/rt/include/chsys.h **** }
 779              		.loc 3 397 29 view .LVU164
 522:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 780              		.loc 1 522 5 view .LVU165
 522:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 781              		.loc 1 522 10 view .LVU166
 782              	.LVL35:
 783              	.LBB541:
 784              	.LBI541:
 519:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 785              		.loc 1 519 13 view .LVU167
 786              	.LBB542:
 523:tmk_core/protocol/chibios/usb_main.c ****     }
 787              		.loc 1 523 9 view .LVU168
 788 0004 0248     		ldr	r0, .L29
 789              	.LVL36:
 523:tmk_core/protocol/chibios/usb_main.c ****     }
 790              		.loc 1 523 9 is_stmt 0 view .LVU169
 791 0006 FFF7FEFF 		bl	qmkusbSOFHookI
 792              	.LVL37:
 523:tmk_core/protocol/chibios/usb_main.c ****     }
 793              		.loc 1 523 9 view .LVU170
 794              	.LBE542:
 795              	.LBE541:
 525:tmk_core/protocol/chibios/usb_main.c **** }
 796              		.loc 1 525 5 is_stmt 1 view .LVU171
 797              	.LBB559:
 798              	.LBB543:
 799              	.LBI543:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 800              		.loc 2 542 20 view .LVU172
 801              	.LBE543:
 802              	.LBE559:
 803              		.loc 2 544 3 view .LVU173
 804              	.LBB560:
 805              	.LBB555:
 806              	.LBB544:
 807              	.LBI544:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 808              		.loc 3 413 20 view .LVU174
 809              	.LBE544:
 810              	.LBE555:
 811              	.LBE560:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 812              		.loc 3 415 31 view .LVU175
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 813              		.loc 3 416 33 view .LVU176
 814              		.loc 3 417 3 view .LVU177
 815              	.LBB561:
 816              	.LBB556:
 817              	.LBB552:
 818              	.LBB545:
 819              	.LBI545:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 820              		.loc 4 416 20 view .LVU178
 821              	.LBE545:
 822              	.LBE552:
 823              	.LBE556:
 824              	.LBE561:
 825              		.loc 4 418 3 view .LVU179
 826              	.LBB562:
 827              	.LBB557:
 828              	.LBB553:
 829              	.LBB550:
 830              	.LBB546:
 831              	.LBI546:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 832              		.loc 4 396 20 view .LVU180
 833              	.LBE546:
 834              	.LBE550:
 835              	.LBE553:
 836              	.LBE557:
 837              	.LBE562:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 838              		.loc 4 398 3 view .LVU181
 839              	.LBB563:
 840              	.LBB558:
 841              	.LBB554:
 842              	.LBB551:
 843              	.LBB549:
 844              	.LBB547:
 845              	.LBI547:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 846              		.loc 5 129 27 view .LVU182
 847              	.LBB548:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 848              		.loc 5 131 3 view .LVU183
 849              		.syntax divided
 850              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 851 000a 62B6     		cpsie i
 852              	@ 0 "" 2
 853              	.LVL38:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 854              		.loc 5 131 3 is_stmt 0 view .LVU184
 855              		.thumb
 856              		.syntax unified
 857              	.LBE548:
 858              	.LBE547:
 859              	.LBE549:
 860              	.LBE551:
 861              	.LBE554:
 862              	.LBE558:
 863              	.LBE563:
 526:tmk_core/protocol/chibios/usb_main.c **** 
 864              		.loc 1 526 1 view .LVU185
 865              		@ sp needed
 866 000c 10BD     		pop	{r4, pc}
 867              	.L30:
 868 000e C046     		.align	2
 869              	.L29:
 870 0010 D4000000 		.word	drivers+212
 871              		.cfi_endproc
 872              	.LFE193:
 874              		.section	.text.chVTSetI.constprop.8,"ax",%progbits
 875              		.align	1
 876              		.syntax unified
 877              		.code	16
 878              		.thumb_func
 879              		.fpu softvfp
 881              	chVTSetI.constprop.8:
 882              	.LVL39:
 883              	.LFB220:
 884              		.file 6 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  79:./lib/chibios/os/rt/include/chvt.h **** }
  80:./lib/chibios/os/rt/include/chvt.h **** #endif
  81:./lib/chibios/os/rt/include/chvt.h **** 
  82:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  83:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  84:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chvt.h **** 
  86:./lib/chibios/os/rt/include/chvt.h **** /**
  87:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  88:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  89:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  90:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  91:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  92:./lib/chibios/os/rt/include/chvt.h ****  *
  93:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  94:./lib/chibios/os/rt/include/chvt.h ****  *
  95:./lib/chibios/os/rt/include/chvt.h ****  * @init
  96:./lib/chibios/os/rt/include/chvt.h ****  */
  97:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  98:./lib/chibios/os/rt/include/chvt.h **** 
  99:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 100:./lib/chibios/os/rt/include/chvt.h **** }
 101:./lib/chibios/os/rt/include/chvt.h **** 
 102:./lib/chibios/os/rt/include/chvt.h **** /**
 103:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 104:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 105:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 106:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 108:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 109:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 110:./lib/chibios/os/rt/include/chvt.h ****  *
 111:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 112:./lib/chibios/os/rt/include/chvt.h ****  *
 113:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 114:./lib/chibios/os/rt/include/chvt.h ****  */
 115:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 116:./lib/chibios/os/rt/include/chvt.h **** 
 117:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 118:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 119:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 120:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 121:./lib/chibios/os/rt/include/chvt.h **** #endif /* CH_CFG_ST_TIMEDELTA > 0 */
 122:./lib/chibios/os/rt/include/chvt.h **** }
 123:./lib/chibios/os/rt/include/chvt.h **** 
 124:./lib/chibios/os/rt/include/chvt.h **** /**
 125:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 126:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 127:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 128:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 129:./lib/chibios/os/rt/include/chvt.h ****  *
 130:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 131:./lib/chibios/os/rt/include/chvt.h ****  *
 132:./lib/chibios/os/rt/include/chvt.h ****  * @api
 133:./lib/chibios/os/rt/include/chvt.h ****  */
 134:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTime(void) {
 135:./lib/chibios/os/rt/include/chvt.h ****   systime_t systime;
 136:./lib/chibios/os/rt/include/chvt.h **** 
 137:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 138:./lib/chibios/os/rt/include/chvt.h ****   systime = chVTGetSystemTimeX();
 139:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 140:./lib/chibios/os/rt/include/chvt.h **** 
 141:./lib/chibios/os/rt/include/chvt.h ****   return systime;
 142:./lib/chibios/os/rt/include/chvt.h **** }
 143:./lib/chibios/os/rt/include/chvt.h **** 
 144:./lib/chibios/os/rt/include/chvt.h **** /**
 145:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the elapsed time since the specified start time.
 146:./lib/chibios/os/rt/include/chvt.h ****  *
 147:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     start time
 148:./lib/chibios/os/rt/include/chvt.h ****  * @return              The elapsed time.
 149:./lib/chibios/os/rt/include/chvt.h ****  *
 150:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 151:./lib/chibios/os/rt/include/chvt.h ****  */
 152:./lib/chibios/os/rt/include/chvt.h **** static inline sysinterval_t chVTTimeElapsedSinceX(systime_t start) {
 153:./lib/chibios/os/rt/include/chvt.h **** 
 154:./lib/chibios/os/rt/include/chvt.h ****   return chTimeDiffX(start, chVTGetSystemTimeX());
 155:./lib/chibios/os/rt/include/chvt.h **** }
 156:./lib/chibios/os/rt/include/chvt.h **** 
 157:./lib/chibios/os/rt/include/chvt.h **** /**
 158:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 159:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 160:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always true because the
 161:./lib/chibios/os/rt/include/chvt.h ****  *          whole time range is specified.
 162:./lib/chibios/os/rt/include/chvt.h ****  *
 163:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 164:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 165:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 166:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 167:./lib/chibios/os/rt/include/chvt.h ****  *
 168:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 169:./lib/chibios/os/rt/include/chvt.h ****  */
 170:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithinX(systime_t start, systime_t end) {
 171:./lib/chibios/os/rt/include/chvt.h **** 
 172:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTimeX(), start, end);
 173:./lib/chibios/os/rt/include/chvt.h **** }
 174:./lib/chibios/os/rt/include/chvt.h **** 
 175:./lib/chibios/os/rt/include/chvt.h **** /**
 176:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 177:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 178:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always true because the
 179:./lib/chibios/os/rt/include/chvt.h ****  *          whole time range is specified.
 180:./lib/chibios/os/rt/include/chvt.h ****  *
 181:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 182:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 183:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 184:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 185:./lib/chibios/os/rt/include/chvt.h ****  *
 186:./lib/chibios/os/rt/include/chvt.h ****  * @api
 187:./lib/chibios/os/rt/include/chvt.h ****  */
 188:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithin(systime_t start, systime_t end) {
 189:./lib/chibios/os/rt/include/chvt.h **** 
 190:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTime(), start, end);
 191:./lib/chibios/os/rt/include/chvt.h **** }
 192:./lib/chibios/os/rt/include/chvt.h **** 
 193:./lib/chibios/os/rt/include/chvt.h **** /**
 194:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the time interval until the next timer event.
 195:./lib/chibios/os/rt/include/chvt.h ****  * @note    The return value is not perfectly accurate and can report values
 196:./lib/chibios/os/rt/include/chvt.h ****  *          in excess of @p CH_CFG_ST_TIMEDELTA ticks.
 197:./lib/chibios/os/rt/include/chvt.h ****  * @note    The interval returned by this function is only meaningful if
 198:./lib/chibios/os/rt/include/chvt.h ****  *          more timers are not added to the list until the returned time.
 199:./lib/chibios/os/rt/include/chvt.h ****  *
 200:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] timep    pointer to a variable that will contain the time
 201:./lib/chibios/os/rt/include/chvt.h ****  *                      interval until the next timer elapses. This pointer
 202:./lib/chibios/os/rt/include/chvt.h ****  *                      can be @p NULL if the information is not required.
 203:./lib/chibios/os/rt/include/chvt.h ****  * @return              The time, in ticks, until next time event.
 204:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        if the timers list is empty.
 205:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         if the timers list contains at least one timer.
 206:./lib/chibios/os/rt/include/chvt.h ****  *
 207:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 208:./lib/chibios/os/rt/include/chvt.h ****  */
 209:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTGetTimersStateI(sysinterval_t *timep) {
 210:./lib/chibios/os/rt/include/chvt.h **** 
 211:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 212:./lib/chibios/os/rt/include/chvt.h **** 
 213:./lib/chibios/os/rt/include/chvt.h ****   if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 214:./lib/chibios/os/rt/include/chvt.h ****     return false;
 215:./lib/chibios/os/rt/include/chvt.h ****   }
 216:./lib/chibios/os/rt/include/chvt.h **** 
 217:./lib/chibios/os/rt/include/chvt.h ****   if (timep != NULL) {
 218:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 219:./lib/chibios/os/rt/include/chvt.h ****     *timep = ch.vtlist.next->delta;
 220:./lib/chibios/os/rt/include/chvt.h **** #else
 221:./lib/chibios/os/rt/include/chvt.h ****     *timep = (ch.vtlist.next->delta + (sysinterval_t)CH_CFG_ST_TIMEDELTA) -
 222:./lib/chibios/os/rt/include/chvt.h ****              chTimeDiffX(ch.vtlist.lasttime, chVTGetSystemTimeX());
 223:./lib/chibios/os/rt/include/chvt.h **** #endif
 224:./lib/chibios/os/rt/include/chvt.h ****   }
 225:./lib/chibios/os/rt/include/chvt.h **** 
 226:./lib/chibios/os/rt/include/chvt.h ****   return true;
 227:./lib/chibios/os/rt/include/chvt.h **** }
 228:./lib/chibios/os/rt/include/chvt.h **** 
 229:./lib/chibios/os/rt/include/chvt.h **** /**
 230:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 231:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 232:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 233:./lib/chibios/os/rt/include/chvt.h ****  *
 234:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 235:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 236:./lib/chibios/os/rt/include/chvt.h ****  *
 237:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 238:./lib/chibios/os/rt/include/chvt.h ****  */
 239:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmedI(const virtual_timer_t *vtp) {
 240:./lib/chibios/os/rt/include/chvt.h **** 
 241:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 242:./lib/chibios/os/rt/include/chvt.h **** 
 243:./lib/chibios/os/rt/include/chvt.h ****   return (bool)(vtp->func != NULL);
 244:./lib/chibios/os/rt/include/chvt.h **** }
 245:./lib/chibios/os/rt/include/chvt.h **** 
 246:./lib/chibios/os/rt/include/chvt.h **** /**
 247:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 248:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 249:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 250:./lib/chibios/os/rt/include/chvt.h ****  *
 251:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 252:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 253:./lib/chibios/os/rt/include/chvt.h ****  *
 254:./lib/chibios/os/rt/include/chvt.h ****  * @api
 255:./lib/chibios/os/rt/include/chvt.h ****  */
 256:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmed(const virtual_timer_t *vtp) {
 257:./lib/chibios/os/rt/include/chvt.h ****   bool b;
 258:./lib/chibios/os/rt/include/chvt.h **** 
 259:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 260:./lib/chibios/os/rt/include/chvt.h ****   b = chVTIsArmedI(vtp);
 261:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 262:./lib/chibios/os/rt/include/chvt.h **** 
 263:./lib/chibios/os/rt/include/chvt.h ****   return b;
 264:./lib/chibios/os/rt/include/chvt.h **** }
 265:./lib/chibios/os/rt/include/chvt.h **** 
 266:./lib/chibios/os/rt/include/chvt.h **** /**
 267:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 268:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 269:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 270:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 271:./lib/chibios/os/rt/include/chvt.h ****  *
 272:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 273:./lib/chibios/os/rt/include/chvt.h ****  *
 274:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 275:./lib/chibios/os/rt/include/chvt.h ****  */
 276:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTResetI(virtual_timer_t *vtp) {
 277:./lib/chibios/os/rt/include/chvt.h **** 
 278:./lib/chibios/os/rt/include/chvt.h ****   if (chVTIsArmedI(vtp)) {
 279:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 280:./lib/chibios/os/rt/include/chvt.h ****   }
 281:./lib/chibios/os/rt/include/chvt.h **** }
 282:./lib/chibios/os/rt/include/chvt.h **** 
 283:./lib/chibios/os/rt/include/chvt.h **** /**
 284:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 285:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 286:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 287:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 288:./lib/chibios/os/rt/include/chvt.h ****  *
 289:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 290:./lib/chibios/os/rt/include/chvt.h ****  *
 291:./lib/chibios/os/rt/include/chvt.h ****  * @api
 292:./lib/chibios/os/rt/include/chvt.h ****  */
 293:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTReset(virtual_timer_t *vtp) {
 294:./lib/chibios/os/rt/include/chvt.h **** 
 295:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 296:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 297:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 298:./lib/chibios/os/rt/include/chvt.h **** }
 299:./lib/chibios/os/rt/include/chvt.h **** 
 300:./lib/chibios/os/rt/include/chvt.h **** /**
 301:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Enables a virtual timer.
 302:./lib/chibios/os/rt/include/chvt.h ****  * @details If the virtual timer was already enabled then it is re-enabled
 303:./lib/chibios/os/rt/include/chvt.h ****  *          using the new parameters.
 304:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 305:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 306:./lib/chibios/os/rt/include/chvt.h ****  *
 307:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 308:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] delay     the number of ticks before the operation timeouts, the
 309:./lib/chibios/os/rt/include/chvt.h ****  *                      special values are handled as follow:
 310:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 311:./lib/chibios/os/rt/include/chvt.h ****  *                        normal time specification.
 312:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 313:./lib/chibios/os/rt/include/chvt.h ****  *                      .
 314:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtfunc    the timer callback function. After invoking the
 315:./lib/chibios/os/rt/include/chvt.h ****  *                      callback the timer is disabled and the structure can
 316:./lib/chibios/os/rt/include/chvt.h ****  *                      be disposed or reused.
 317:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] par       a parameter that will be passed to the callback
 318:./lib/chibios/os/rt/include/chvt.h ****  *                      function
 319:./lib/chibios/os/rt/include/chvt.h ****  *
 320:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 321:./lib/chibios/os/rt/include/chvt.h ****  */
 322:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTSetI(virtual_timer_t *vtp, sysinterval_t delay,
 885              		.loc 6 322 20 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 323:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 324:./lib/chibios/os/rt/include/chvt.h **** 
 325:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 889              		.loc 6 325 3 view .LVU187
 890              	.LBB566:
 891              	.LBI566:
 276:./lib/chibios/os/rt/include/chvt.h **** 
 892              		.loc 6 276 20 view .LVU188
 893              	.LBB567:
 278:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 894              		.loc 6 278 3 view .LVU189
 278:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 895              		.loc 6 278 3 is_stmt 0 view .LVU190
 896              	.LBE567:
 897              	.LBE566:
 241:./lib/chibios/os/rt/include/chvt.h **** 
 898              		.loc 6 241 21 is_stmt 1 view .LVU191
 243:./lib/chibios/os/rt/include/chvt.h **** }
 899              		.loc 6 243 3 view .LVU192
 322:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 900              		.loc 6 322 20 is_stmt 0 view .LVU193
 901 0000 70B5     		push	{r4, r5, r6, lr}
 902              		.cfi_def_cfa_offset 16
 903              		.cfi_offset 4, -16
 904              		.cfi_offset 5, -12
 905              		.cfi_offset 6, -8
 906              		.cfi_offset 14, -4
 907              	.LBB571:
 908              	.LBB568:
 278:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 909              		.loc 6 278 7 view .LVU194
 910 0002 084C     		ldr	r4, .L36
 911              	.LBE568:
 912              	.LBE571:
 322:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 913              		.loc 6 322 20 view .LVU195
 914 0004 0500     		movs	r5, r0
 915              	.LBB572:
 916              	.LBB569:
 278:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 917              		.loc 6 278 6 view .LVU196
 918 0006 E368     		ldr	r3, [r4, #12]
 919              	.LBE569:
 920              	.LBE572:
 322:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 921              		.loc 6 322 20 view .LVU197
 922 0008 0E00     		movs	r6, r1
 923              	.LBB573:
 924              	.LBB570:
 278:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 925              		.loc 6 278 6 view .LVU198
 926 000a 002B     		cmp	r3, #0
 927 000c 02D0     		beq	.L32
 279:./lib/chibios/os/rt/include/chvt.h ****   }
 928              		.loc 6 279 5 is_stmt 1 view .LVU199
 929 000e 2000     		movs	r0, r4
 930              	.LVL40:
 279:./lib/chibios/os/rt/include/chvt.h ****   }
 931              		.loc 6 279 5 is_stmt 0 view .LVU200
 932 0010 FFF7FEFF 		bl	chVTDoResetI
 933              	.LVL41:
 934              	.L32:
 279:./lib/chibios/os/rt/include/chvt.h ****   }
 935              		.loc 6 279 5 view .LVU201
 936              	.LBE570:
 937              	.LBE573:
 326:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 938              		.loc 6 326 3 is_stmt 1 view .LVU202
 939 0014 3300     		movs	r3, r6
 940 0016 2900     		movs	r1, r5
 941 0018 034A     		ldr	r2, .L36+4
 942 001a 2000     		movs	r0, r4
 943 001c FFF7FEFF 		bl	chVTDoSetI
 944              	.LVL42:
 327:./lib/chibios/os/rt/include/chvt.h **** }
 945              		.loc 6 327 1 is_stmt 0 view .LVU203
 946              		@ sp needed
 947              	.LVL43:
 948              	.LVL44:
 949              		.loc 6 327 1 view .LVU204
 950 0020 70BD     		pop	{r4, r5, r6, pc}
 951              	.L37:
 952 0022 C046     		.align	2
 953              	.L36:
 954 0024 00000000 		.word	.LANCHOR5
 955 0028 00000000 		.word	keyboard_idle_timer_cb
 956              		.cfi_endproc
 957              	.LFE220:
 959              		.global	__aeabi_lmul
 960              		.global	__aeabi_uldivmod
 961              		.global	__aeabi_ldivmod
 962              		.section	.text.keyboard_idle_timer_cb,"ax",%progbits
 963              		.align	1
 964              		.syntax unified
 965              		.code	16
 966              		.thumb_func
 967              		.fpu softvfp
 969              	keyboard_idle_timer_cb:
 970              	.LVL45:
 971              	.LFB197:
 579:tmk_core/protocol/chibios/usb_main.c **** 
 580:tmk_core/protocol/chibios/usb_main.c **** /* Idle requests timer code
 581:tmk_core/protocol/chibios/usb_main.c ****  * callback (called from ISR, unlocked state) */
 582:tmk_core/protocol/chibios/usb_main.c **** static void keyboard_idle_timer_cb(void *arg) {
 972              		.loc 1 582 47 is_stmt 1 view -0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 583:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 976              		.loc 1 583 5 view .LVU206
 584:tmk_core/protocol/chibios/usb_main.c **** 
 585:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 977              		.loc 1 585 5 view .LVU207
 978              	.LBB606:
 979              	.LBI606:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 980              		.loc 2 531 20 view .LVU208
 981              	.LBE606:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 982              		.loc 2 533 3 view .LVU209
 983              	.LBB623:
 984              	.LBB607:
 985              	.LBI607:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 986              		.loc 3 393 20 view .LVU210
 987              	.LBE607:
 988              	.LBE623:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 989              		.loc 3 395 3 view .LVU211
 990              	.LBB624:
 991              	.LBB619:
 992              	.LBB608:
 993              	.LBI608:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 994              		.loc 4 406 20 view .LVU212
 995              	.LBE608:
 996              	.LBE619:
 997              	.LBE624:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 998              		.loc 4 408 3 view .LVU213
 999              	.LBB625:
 1000              	.LBB620:
 1001              	.LBB616:
 1002              	.LBB609:
 1003              	.LBI609:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1004              		.loc 4 387 20 view .LVU214
 1005              	.LBE609:
 1006              	.LBE616:
 1007              	.LBE620:
 1008              	.LBE625:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1009              		.loc 4 389 3 view .LVU215
 1010              	.LBB626:
 1011              	.LBB621:
 1012              	.LBB617:
 1013              	.LBB614:
 1014              	.LBB610:
 1015              	.LBI610:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1016              		.loc 5 140 27 view .LVU216
 1017              	.LBB611:
 1018              		.loc 5 142 3 view .LVU217
 1019              	.LBE611:
 1020              	.LBE610:
 1021              	.LBE614:
 1022              	.LBE617:
 1023              	.LBE621:
 1024              	.LBE626:
 582:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 1025              		.loc 1 582 47 is_stmt 0 view .LVU218
 1026 0000 70B5     		push	{r4, r5, r6, lr}
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -16
 1029              		.cfi_offset 5, -12
 1030              		.cfi_offset 6, -8
 1031              		.cfi_offset 14, -4
 582:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 1032              		.loc 1 582 47 view .LVU219
 1033 0002 0400     		movs	r4, r0
 1034              	.LBB627:
 1035              	.LBB622:
 1036              	.LBB618:
 1037              	.LBB615:
 1038              	.LBB613:
 1039              	.LBB612:
 1040              		.loc 5 142 3 view .LVU220
 1041              		.syntax divided
 1042              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1043 0004 72B6     		cpsid i
 1044              	@ 0 "" 2
 1045              		.thumb
 1046              		.syntax unified
 1047              	.LBE612:
 1048              	.LBE613:
 1049              	.LBE615:
 1050              	.LBE618:
 1051              	.LBE622:
 1052              	.LBE627:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1053              		.loc 3 396 34 is_stmt 1 view .LVU221
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1054              		.loc 3 397 29 view .LVU222
 586:tmk_core/protocol/chibios/usb_main.c **** 
 587:tmk_core/protocol/chibios/usb_main.c ****     /* check that the states of things are as they're supposed to */
 588:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(usbp) != USB_ACTIVE) {
 1055              		.loc 1 588 5 view .LVU223
 1056              		.loc 1 588 8 is_stmt 0 view .LVU224
 1057 0006 0378     		ldrb	r3, [r0]
 1058 0008 042B     		cmp	r3, #4
 1059 000a 01D0     		beq	.L39
 1060              	.LVL46:
 1061              	.L41:
 1062              	.LBB628:
 1063              	.LBB629:
 589:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 590:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlockFromISR();
 591:tmk_core/protocol/chibios/usb_main.c ****         return;
 592:tmk_core/protocol/chibios/usb_main.c ****     }
 593:tmk_core/protocol/chibios/usb_main.c **** 
 594:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 595:tmk_core/protocol/chibios/usb_main.c ****     if (!keymap_config.nkro && keyboard_idle && keyboard_protocol) {
 596:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 597:tmk_core/protocol/chibios/usb_main.c ****     if (keyboard_idle && keyboard_protocol) {
 598:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 599:tmk_core/protocol/chibios/usb_main.c ****         /* TODO: are we sure we want the KBD_ENDPOINT? */
 600:tmk_core/protocol/chibios/usb_main.c ****         if (!usbGetTransmitStatusI(usbp, KEYBOARD_IN_EPNUM)) {
 601:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 602:tmk_core/protocol/chibios/usb_main.c ****         }
 603:tmk_core/protocol/chibios/usb_main.c ****         /* rearm the timer */
 604:tmk_core/protocol/chibios/usb_main.c ****         chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_idle_timer_cb, (void 
 605:tmk_core/protocol/chibios/usb_main.c ****     }
 606:tmk_core/protocol/chibios/usb_main.c **** 
 607:tmk_core/protocol/chibios/usb_main.c ****     /* do not rearm the timer if the condition above fails
 608:tmk_core/protocol/chibios/usb_main.c ****      * it should be enabled again on either IDLE or SET_PROTOCOL requests */
 609:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 1064              		.loc 1 609 5 is_stmt 1 view .LVU225
 1065              	.LBB630:
 1066              	.LBI630:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1067              		.loc 2 542 20 view .LVU226
 1068              	.LBE630:
 1069              	.LBE629:
 1070              	.LBE628:
 1071              		.loc 2 544 3 view .LVU227
 1072              	.LBB651:
 1073              	.LBB646:
 1074              	.LBB642:
 1075              	.LBB631:
 1076              	.LBI631:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1077              		.loc 3 413 20 view .LVU228
 1078              	.LBE631:
 1079              	.LBE642:
 1080              	.LBE646:
 1081              	.LBE651:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1082              		.loc 3 415 31 view .LVU229
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1083              		.loc 3 416 33 view .LVU230
 1084              		.loc 3 417 3 view .LVU231
 1085              	.LBB652:
 1086              	.LBB647:
 1087              	.LBB643:
 1088              	.LBB639:
 1089              	.LBB632:
 1090              	.LBI632:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1091              		.loc 4 416 20 view .LVU232
 1092              	.LBE632:
 1093              	.LBE639:
 1094              	.LBE643:
 1095              	.LBE647:
 1096              	.LBE652:
 1097              		.loc 4 418 3 view .LVU233
 1098              	.LBB653:
 1099              	.LBB648:
 1100              	.LBB644:
 1101              	.LBB640:
 1102              	.LBB637:
 1103              	.LBB633:
 1104              	.LBI633:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1105              		.loc 4 396 20 view .LVU234
 1106              	.LBE633:
 1107              	.LBE637:
 1108              	.LBE640:
 1109              	.LBE644:
 1110              	.LBE648:
 1111              	.LBE653:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1112              		.loc 4 398 3 view .LVU235
 1113              	.LBB654:
 1114              	.LBB649:
 1115              	.LBB645:
 1116              	.LBB641:
 1117              	.LBB638:
 1118              	.LBB636:
 1119              	.LBB634:
 1120              	.LBI634:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1121              		.loc 5 129 27 view .LVU236
 1122              	.LBB635:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1123              		.loc 5 131 3 view .LVU237
 1124              		.syntax divided
 1125              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1126 000c 62B6     		cpsie i
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
 1130              	.LBE635:
 1131              	.LBE634:
 1132              	.LBE636:
 1133              	.LBE638:
 1134              	.LBE641:
 1135              	.LBE645:
 1136              	.LBE649:
 1137              	.LBE654:
 610:tmk_core/protocol/chibios/usb_main.c **** }
 1138              		.loc 1 610 1 is_stmt 0 view .LVU238
 1139              		@ sp needed
 1140              	.LVL47:
 1141              		.loc 1 610 1 view .LVU239
 1142 000e 70BD     		pop	{r4, r5, r6, pc}
 1143              	.LVL48:
 1144              	.L39:
 1145              	.LBB655:
 1146              	.LBI628:
 582:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 1147              		.loc 1 582 13 is_stmt 1 view .LVU240
 1148              	.LBB650:
 595:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1149              		.loc 1 595 5 view .LVU241
 595:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1150              		.loc 1 595 23 is_stmt 0 view .LVU242
 1151 0010 134B     		ldr	r3, .L49
 1152 0012 1B78     		ldrb	r3, [r3]
 595:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1153              		.loc 1 595 8 view .LVU243
 1154 0014 DB09     		lsrs	r3, r3, #7
 1155 0016 F9D1     		bne	.L41
 595:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1156              		.loc 1 595 29 view .LVU244
 1157 0018 124D     		ldr	r5, .L49+4
 1158 001a 2B78     		ldrb	r3, [r5]
 1159 001c 002B     		cmp	r3, #0
 1160 001e F5D0     		beq	.L41
 595:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1161              		.loc 1 595 46 view .LVU245
 1162 0020 114B     		ldr	r3, .L49+8
 1163 0022 1B78     		ldrb	r3, [r3]
 1164 0024 002B     		cmp	r3, #0
 1165 0026 F1D0     		beq	.L41
 600:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 1166              		.loc 1 600 9 is_stmt 1 view .LVU246
 600:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 1167              		.loc 1 600 12 is_stmt 0 view .LVU247
 1168 0028 0389     		ldrh	r3, [r0, #8]
 1169 002a 9B07     		lsls	r3, r3, #30
 1170 002c 04D4     		bmi	.L42
 601:tmk_core/protocol/chibios/usb_main.c ****         }
 1171              		.loc 1 601 13 is_stmt 1 view .LVU248
 1172 002e 0823     		movs	r3, #8
 1173 0030 0E4A     		ldr	r2, .L49+12
 1174 0032 0121     		movs	r1, #1
 1175 0034 FFF7FEFF 		bl	usbStartTransmitI
 1176              	.LVL49:
 1177              	.L42:
 604:tmk_core/protocol/chibios/usb_main.c ****     }
 1178              		.loc 1 604 9 view .LVU249
 604:tmk_core/protocol/chibios/usb_main.c ****     }
 1179              		.loc 1 604 44 is_stmt 0 view .LVU250
 1180 0038 2878     		ldrb	r0, [r5]
 1181 003a 0D4A     		ldr	r2, .L49+16
 1182 003c 0023     		movs	r3, #0
 1183 003e 0021     		movs	r1, #0
 1184 0040 FFF7FEFF 		bl	__aeabi_lmul
 1185              	.LVL50:
 1186 0044 0023     		movs	r3, #0
 1187 0046 0B4A     		ldr	r2, .L49+20
 1188 0048 8018     		adds	r0, r0, r2
 1189 004a 5941     		adcs	r1, r1, r3
 1190 004c FA22     		movs	r2, #250
 1191 004e 0023     		movs	r3, #0
 1192 0050 9200     		lsls	r2, r2, #2
 1193 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 1194              	.LVL51:
 604:tmk_core/protocol/chibios/usb_main.c ****     }
 1195              		.loc 1 604 9 view .LVU251
 1196 0056 2100     		movs	r1, r4
 1197 0058 8000     		lsls	r0, r0, #2
 1198 005a FFF7FEFF 		bl	chVTSetI.constprop.8
 1199              	.LVL52:
 1200 005e D5E7     		b	.L41
 1201              	.L50:
 1202              		.align	2
 1203              	.L49:
 1204 0060 00000000 		.word	keymap_config
 1205 0064 00000000 		.word	.LANCHOR6
 1206 0068 00000000 		.word	.LANCHOR7
 1207 006c 00000000 		.word	.LANCHOR8
 1208 0070 10270000 		.word	10000
 1209 0074 E7030000 		.word	999
 1210              	.LBE650:
 1211              	.LBE655:
 1212              		.cfi_endproc
 1213              	.LFE197:
 1215              		.section	.text.usb_request_hook_cb,"ax",%progbits
 1216              		.align	1
 1217              		.syntax unified
 1218              		.code	16
 1219              		.thumb_func
 1220              		.fpu softvfp
 1222              	usb_request_hook_cb:
 1223              	.LVL53:
 1224              	.LFB192:
 397:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 1225              		.loc 1 397 50 is_stmt 1 view -0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 398:tmk_core/protocol/chibios/usb_main.c **** 
 1229              		.loc 1 398 5 view .LVU253
 408:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 1230              		.loc 1 408 5 view .LVU254
 408:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 1231              		.loc 1 408 22 is_stmt 0 view .LVU255
 1232 0000 0200     		movs	r2, r0
 397:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 1233              		.loc 1 397 50 view .LVU256
 1234 0002 70B5     		push	{r4, r5, r6, lr}
 1235              		.cfi_def_cfa_offset 16
 1236              		.cfi_offset 4, -16
 1237              		.cfi_offset 5, -12
 1238              		.cfi_offset 6, -8
 1239              		.cfi_offset 14, -4
 408:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 1240              		.loc 1 408 22 view .LVU257
 1241 0004 7432     		adds	r2, r2, #116
 1242 0006 1178     		ldrb	r1, [r2]
 397:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 1243              		.loc 1 397 50 view .LVU258
 1244 0008 0400     		movs	r4, r0
 408:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 1245              		.loc 1 408 8 view .LVU259
 1246 000a 0B00     		movs	r3, r1
 1247 000c 7F20     		movs	r0, #127
 1248              	.LVL54:
 408:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 1249              		.loc 1 408 8 view .LVU260
 1250 000e 0340     		ands	r3, r0
 1251 0010 212B     		cmp	r3, #33
 1252 0012 00D0     		beq	.LCB1052
 1253 0014 7EE0     		b	.L52	@long jump
 1254              	.LCB1052:
 409:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 1255              		.loc 1 409 9 is_stmt 1 view .LVU261
 1256 0016 8143     		bics	r1, r0
 1257 0018 2AD0     		beq	.L53
 1258 001a 8029     		cmp	r1, #128
 1259 001c 00D0     		beq	.LCB1059
 1260 001e 79E0     		b	.L52	@long jump
 1261              	.LCB1059:
 411:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 1262              		.loc 1 411 17 view .LVU262
 411:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 1263              		.loc 1 411 36 is_stmt 0 view .LVU263
 1264 0020 2300     		movs	r3, r4
 1265 0022 7533     		adds	r3, r3, #117
 1266 0024 1878     		ldrb	r0, [r3]
 1267 0026 0228     		cmp	r0, #2
 1268 0028 1CD0     		beq	.L54
 1269 002a 0328     		cmp	r0, #3
 1270 002c 10D0     		beq	.L55
 1271 002e 0128     		cmp	r0, #1
 1272 0030 00D0     		beq	.LCB1069
 1273 0032 6FE0     		b	.L52	@long jump
 1274              	.LCB1069:
 413:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1275              		.loc 1 413 25 is_stmt 1 view .LVU264
 413:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1276              		.loc 1 413 44 is_stmt 0 view .LVU265
 1277 0034 0333     		adds	r3, r3, #3
 413:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1278              		.loc 1 413 25 view .LVU266
 1279 0036 1B78     		ldrb	r3, [r3]
 1280 0038 002B     		cmp	r3, #0
 1281 003a 05D1     		bne	.L56
 415:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1282              		.loc 1 415 33 is_stmt 1 view .LVU267
 1283 003c 494A     		ldr	r2, .L80
 1284 003e A266     		str	r2, [r4, #104]
 415:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1285              		.loc 1 415 33 view .LVU268
 1286 0040 2022     		movs	r2, #32
 1287 0042 E266     		str	r2, [r4, #108]
 415:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1288              		.loc 1 415 33 view .LVU269
 1289              	.L76:
 427:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1290              		.loc 1 427 33 view .LVU270
 1291 0044 2367     		str	r3, [r4, #112]
 427:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1292              		.loc 1 427 70 view .LVU271
 428:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 1293              		.loc 1 428 33 view .LVU272
 1294              	.L57:
 516:tmk_core/protocol/chibios/usb_main.c **** 
 1295              		.loc 1 516 1 is_stmt 0 view .LVU273
 1296              		@ sp needed
 1297              	.LVL55:
 516:tmk_core/protocol/chibios/usb_main.c **** 
 1298              		.loc 1 516 1 view .LVU274
 1299 0046 70BD     		pop	{r4, r5, r6, pc}
 1300              	.LVL56:
 1301              	.L56:
 417:tmk_core/protocol/chibios/usb_main.c **** 
 1302              		.loc 1 417 33 is_stmt 1 view .LVU275
 427:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1303              		.loc 1 427 33 view .LVU276
 1304 0048 0023     		movs	r3, #0
 1305 004a A366     		str	r3, [r4, #104]
 427:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1306              		.loc 1 427 33 view .LVU277
 1307 004c E366     		str	r3, [r4, #108]
 1308 004e F9E7     		b	.L76
 1309              	.L55:
 429:tmk_core/protocol/chibios/usb_main.c ****                         }
 1310              		.loc 1 429 33 view .LVU278
 431:tmk_core/protocol/chibios/usb_main.c **** 
 1311              		.loc 1 431 25 view .LVU279
 434:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 1312              		.loc 1 434 25 view .LVU280
 434:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 1313              		.loc 1 434 68 is_stmt 0 view .LVU281
 1314 0050 2300     		movs	r3, r4
 1315 0052 7833     		adds	r3, r3, #120
 434:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 1316              		.loc 1 434 28 view .LVU282
 1317 0054 1B88     		ldrh	r3, [r3]
 1318 0056 002B     		cmp	r3, #0
 1319 0058 5CD1     		bne	.L52
 435:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 1320              		.loc 1 435 29 is_stmt 1 view .LVU283
 1321 005a 0120     		movs	r0, #1
 1322 005c 424A     		ldr	r2, .L80+4
 1323 005e E066     		str	r0, [r4, #108]
 1324 0060 A266     		str	r2, [r4, #104]
 435:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 1325              		.loc 1 435 29 view .LVU284
 435:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 1326              		.loc 1 435 29 view .LVU285
 1327 0062 EFE7     		b	.L76
 1328              	.L54:
 441:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1329              		.loc 1 441 25 view .LVU286
 1330 0064 0120     		movs	r0, #1
 1331 0066 414B     		ldr	r3, .L80+8
 1332 0068 E066     		str	r0, [r4, #108]
 1333 006a A366     		str	r3, [r4, #104]
 441:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1334              		.loc 1 441 25 view .LVU287
 441:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1335              		.loc 1 441 25 view .LVU288
 1336 006c 0023     		movs	r3, #0
 1337 006e E9E7     		b	.L76
 1338              	.L53:
 448:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 1339              		.loc 1 448 17 view .LVU289
 448:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 1340              		.loc 1 448 36 is_stmt 0 view .LVU290
 1341 0070 2300     		movs	r3, r4
 1342 0072 7533     		adds	r3, r3, #117
 1343 0074 1B78     		ldrb	r3, [r3]
 1344 0076 0A2B     		cmp	r3, #10
 1345 0078 42D0     		beq	.L58
 1346 007a 0B2B     		cmp	r3, #11
 1347 007c 0ED0     		beq	.L59
 1348 007e 092B     		cmp	r3, #9
 1349 0080 48D1     		bne	.L52
 450:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1350              		.loc 1 450 25 is_stmt 1 discriminator 1 view .LVU291
 450:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1351              		.loc 1 450 44 is_stmt 0 discriminator 1 view .LVU292
 1352 0082 2300     		movs	r3, r4
 1353 0084 7833     		adds	r3, r3, #120
 1354 0086 1B78     		ldrb	r3, [r3]
 1355 0088 012B     		cmp	r3, #1
 1356 008a 43D8     		bhi	.L52
 455:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1357              		.loc 1 455 33 is_stmt 1 view .LVU293
 1358 008c 384B     		ldr	r3, .L80+12
 1359 008e A366     		str	r3, [r4, #104]
 455:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1360              		.loc 1 455 33 view .LVU294
 1361 0090 0223     		movs	r3, #2
 1362 0092 E366     		str	r3, [r4, #108]
 455:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1363              		.loc 1 455 33 view .LVU295
 1364 0094 374B     		ldr	r3, .L80+16
 1365              	.L77:
 504:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1366              		.loc 1 504 9 is_stmt 0 view .LVU296
 1367 0096 2367     		str	r3, [r4, #112]
 504:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1368              		.loc 1 504 76 is_stmt 1 view .LVU297
 505:tmk_core/protocol/chibios/usb_main.c ****     }
 1369              		.loc 1 505 9 view .LVU298
 505:tmk_core/protocol/chibios/usb_main.c ****     }
 1370              		.loc 1 505 16 is_stmt 0 view .LVU299
 1371 0098 0120     		movs	r0, #1
 1372 009a D4E7     		b	.L57
 1373              	.L59:
 462:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 1374              		.loc 1 462 25 is_stmt 1 view .LVU300
 462:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 1375              		.loc 1 462 68 is_stmt 0 view .LVU301
 1376 009c 2300     		movs	r3, r4
 1377 009e 7833     		adds	r3, r3, #120
 462:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 1378              		.loc 1 462 28 view .LVU302
 1379 00a0 1B88     		ldrh	r3, [r3]
 1380 00a2 002B     		cmp	r3, #0
 1381 00a4 28D1     		bne	.L61
 463:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1382              		.loc 1 463 29 is_stmt 1 view .LVU303
 463:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1383              		.loc 1 463 62 is_stmt 0 view .LVU304
 1384 00a6 2300     		movs	r3, r4
 1385 00a8 7633     		adds	r3, r3, #118
 1386 00aa 1978     		ldrb	r1, [r3]
 465:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 1387              		.loc 1 465 48 view .LVU305
 1388 00ac 324D     		ldr	r5, .L80+20
 463:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1389              		.loc 1 463 67 view .LVU306
 1390 00ae 0A00     		movs	r2, r1
 1391 00b0 531E     		subs	r3, r2, #1
 1392 00b2 9A41     		sbcs	r2, r2, r3
 1393 00b4 D3B2     		uxtb	r3, r2
 463:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1394              		.loc 1 463 47 view .LVU307
 1395 00b6 2C4A     		ldr	r2, .L80+4
 1396 00b8 1370     		strb	r3, [r2]
 465:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 1397              		.loc 1 465 29 is_stmt 1 view .LVU308
 465:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 1398              		.loc 1 465 48 is_stmt 0 view .LVU309
 1399 00ba 2A78     		ldrb	r2, [r5]
 1400 00bc DB01     		lsls	r3, r3, #7
 1401 00be 0240     		ands	r2, r0
 1402 00c0 1343     		orrs	r3, r2
 1403 00c2 2B70     		strb	r3, [r5]
 466:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1404              		.loc 1 466 29 is_stmt 1 view .LVU310
 466:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1405              		.loc 1 466 32 is_stmt 0 view .LVU311
 1406 00c4 0029     		cmp	r1, #0
 1407 00c6 17D1     		bne	.L61
 466:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1408              		.loc 1 466 53 discriminator 1 view .LVU312
 1409 00c8 284B     		ldr	r3, .L80+8
 1410 00ca 1A78     		ldrb	r2, [r3]
 1411              	.L79:
 466:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1412              		.loc 1 466 53 discriminator 1 view .LVU313
 1413 00cc 002A     		cmp	r2, #0
 1414 00ce 13D0     		beq	.L61
 471:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 1415              		.loc 1 471 33 is_stmt 1 view .LVU314
 1416              	.LBB656:
 1417              	.LBI656:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1418              		.loc 2 531 20 view .LVU315
 1419              	.LBE656:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1420              		.loc 2 533 3 view .LVU316
 1421              	.LBB668:
 1422              	.LBB657:
 1423              	.LBI657:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1424              		.loc 3 393 20 view .LVU317
 1425              	.LBE657:
 1426              	.LBE668:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1427              		.loc 3 395 3 view .LVU318
 1428              	.LBB669:
 1429              	.LBB665:
 1430              	.LBB658:
 1431              	.LBI658:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1432              		.loc 4 406 20 view .LVU319
 1433              	.LBE658:
 1434              	.LBE665:
 1435              	.LBE669:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1436              		.loc 4 408 3 view .LVU320
 1437              	.LBB670:
 1438              	.LBB666:
 1439              	.LBB663:
 1440              	.LBB659:
 1441              	.LBI659:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1442              		.loc 4 387 20 view .LVU321
 1443              	.LBE659:
 1444              	.LBE663:
 1445              	.LBE666:
 1446              	.LBE670:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1447              		.loc 4 389 3 view .LVU322
 1448              	.LBB671:
 1449              	.LBB667:
 1450              	.LBB664:
 1451              	.LBB662:
 1452              	.LBB660:
 1453              	.LBI660:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1454              		.loc 5 140 27 view .LVU323
 1455              	.LBB661:
 1456              		.loc 5 142 3 view .LVU324
 1457              		.syntax divided
 1458              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1459 00d0 72B6     		cpsid i
 1460              	@ 0 "" 2
 1461              		.thumb
 1462              		.syntax unified
 1463              	.LBE661:
 1464              	.LBE660:
 1465              	.LBE662:
 1466              	.LBE664:
 1467              	.LBE667:
 1468              	.LBE671:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1469              		.loc 3 396 34 view .LVU325
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1470              		.loc 3 397 29 view .LVU326
 472:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1471              		.loc 1 472 33 view .LVU327
 472:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1472              		.loc 1 472 68 is_stmt 0 view .LVU328
 1473 00d2 2A4A     		ldr	r2, .L80+24
 1474 00d4 1878     		ldrb	r0, [r3]
 1475 00d6 0023     		movs	r3, #0
 1476 00d8 FFF7FEFF 		bl	__aeabi_lmul
 1477              	.LVL57:
 1478 00dc 0023     		movs	r3, #0
 1479 00de 284A     		ldr	r2, .L80+28
 1480 00e0 8018     		adds	r0, r0, r2
 1481 00e2 5941     		adcs	r1, r1, r3
 1482 00e4 FA22     		movs	r2, #250
 1483 00e6 0023     		movs	r3, #0
 1484 00e8 9200     		lsls	r2, r2, #2
 1485 00ea FFF7FEFF 		bl	__aeabi_uldivmod
 1486              	.LVL58:
 472:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1487              		.loc 1 472 33 view .LVU329
 1488 00ee 2100     		movs	r1, r4
 1489 00f0 8000     		lsls	r0, r0, #2
 1490 00f2 FFF7FEFF 		bl	chVTSetI.constprop.8
 1491              	.LVL59:
 473:tmk_core/protocol/chibios/usb_main.c ****                             }
 1492              		.loc 1 473 33 is_stmt 1 view .LVU330
 1493              	.LBB672:
 1494              	.LBI672:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1495              		.loc 2 542 20 view .LVU331
 1496              	.LBE672:
 1497              		.loc 2 544 3 view .LVU332
 1498              	.LBB684:
 1499              	.LBB673:
 1500              	.LBI673:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1501              		.loc 3 413 20 view .LVU333
 1502              	.LBE673:
 1503              	.LBE684:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1504              		.loc 3 415 31 view .LVU334
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1505              		.loc 3 416 33 view .LVU335
 1506              		.loc 3 417 3 view .LVU336
 1507              	.LBB685:
 1508              	.LBB681:
 1509              	.LBB674:
 1510              	.LBI674:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1511              		.loc 4 416 20 view .LVU337
 1512              	.LBE674:
 1513              	.LBE681:
 1514              	.LBE685:
 1515              		.loc 4 418 3 view .LVU338
 1516              	.LBB686:
 1517              	.LBB682:
 1518              	.LBB679:
 1519              	.LBB675:
 1520              	.LBI675:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1521              		.loc 4 396 20 view .LVU339
 1522              	.LBE675:
 1523              	.LBE679:
 1524              	.LBE682:
 1525              	.LBE686:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1526              		.loc 4 398 3 view .LVU340
 1527              	.LBB687:
 1528              	.LBB683:
 1529              	.LBB680:
 1530              	.LBB678:
 1531              	.LBB676:
 1532              	.LBI676:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1533              		.loc 5 129 27 view .LVU341
 1534              	.LBB677:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1535              		.loc 5 131 3 view .LVU342
 1536              		.syntax divided
 1537              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1538 00f6 62B6     		cpsie i
 1539              	@ 0 "" 2
 1540              		.thumb
 1541              		.syntax unified
 1542              	.L61:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1543              		.loc 5 131 3 is_stmt 0 view .LVU343
 1544              	.LBE677:
 1545              	.LBE676:
 1546              	.LBE678:
 1547              	.LBE680:
 1548              	.LBE683:
 1549              	.LBE687:
 476:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1550              		.loc 1 476 25 is_stmt 1 view .LVU344
 1551 00f8 0023     		movs	r3, #0
 1552 00fa A366     		str	r3, [r4, #104]
 476:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1553              		.loc 1 476 25 view .LVU345
 1554 00fc E366     		str	r3, [r4, #108]
 476:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1555              		.loc 1 476 25 view .LVU346
 1556 00fe CAE7     		b	.L77
 1557              	.L58:
 478:tmk_core/protocol/chibios/usb_main.c **** 
 1558              		.loc 1 478 25 view .LVU347
 481:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1559              		.loc 1 481 25 view .LVU348
 481:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1560              		.loc 1 481 52 is_stmt 0 view .LVU349
 1561 0100 2300     		movs	r3, r4
 484:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1562              		.loc 1 484 43 view .LVU350
 1563 0102 1D49     		ldr	r1, .L80+20
 481:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1564              		.loc 1 481 52 view .LVU351
 1565 0104 7733     		adds	r3, r3, #119
 1566 0106 1A78     		ldrb	r2, [r3]
 484:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1567              		.loc 1 484 43 view .LVU352
 1568 0108 0978     		ldrb	r1, [r1]
 481:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1569              		.loc 1 481 39 view .LVU353
 1570 010a 184B     		ldr	r3, .L80+8
 484:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1571              		.loc 1 484 28 view .LVU354
 1572 010c C909     		lsrs	r1, r1, #7
 481:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1573              		.loc 1 481 39 view .LVU355
 1574 010e 1A70     		strb	r2, [r3]
 484:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1575              		.loc 1 484 25 is_stmt 1 view .LVU356
 484:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1576              		.loc 1 484 28 is_stmt 0 view .LVU357
 1577 0110 F2D1     		bne	.L61
 1578 0112 DBE7     		b	.L79
 1579              	.L52:
 501:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1580              		.loc 1 501 5 is_stmt 1 view .LVU358
 501:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1581              		.loc 1 501 8 is_stmt 0 view .LVU359
 1582 0114 1B4B     		ldr	r3, .L80+32
 1583 0116 1288     		ldrh	r2, [r2]
 1584 0118 9A42     		cmp	r2, r3
 1585 011a 1AD1     		bne	.L63
 502:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1586              		.loc 1 502 9 is_stmt 1 view .LVU360
 1587              	.LVL60:
 1588              	.LBB688:
 1589              	.LBI688:
 363:tmk_core/protocol/chibios/usb_main.c ****     uint16_t hw;
 1590              		.loc 1 363 17 view .LVU361
 1591              	.LBB689:
 364:tmk_core/protocol/chibios/usb_main.c **** 
 1592              		.loc 1 364 5 view .LVU362
 366:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 1593              		.loc 1 366 5 view .LVU363
 367:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1594              		.loc 1 367 5 view .LVU364
 368:tmk_core/protocol/chibios/usb_main.c **** }
 1595              		.loc 1 368 5 view .LVU365
 367:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1596              		.loc 1 367 21 is_stmt 0 view .LVU366
 1597 011c 2300     		movs	r3, r4
 1598 011e 7933     		adds	r3, r3, #121
 367:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1599              		.loc 1 367 11 view .LVU367
 1600 0120 1A78     		ldrb	r2, [r3]
 366:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 1601              		.loc 1 366 20 view .LVU368
 1602 0122 013B     		subs	r3, r3, #1
 367:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1603              		.loc 1 367 8 view .LVU369
 1604 0124 1B78     		ldrb	r3, [r3]
 367:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1605              		.loc 1 367 24 view .LVU370
 1606 0126 1202     		lsls	r2, r2, #8
 1607              	.LBE689:
 1608              	.LBE688:
 502:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1609              		.loc 1 502 14 view .LVU371
 1610 0128 1343     		orrs	r3, r2
 1611 012a 2100     		movs	r1, r4
 1612 012c 2200     		movs	r2, r4
 502:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1613              		.loc 1 502 26 view .LVU372
 1614 012e 6068     		ldr	r0, [r4, #4]
 502:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1615              		.loc 1 502 14 view .LVU373
 1616 0130 7632     		adds	r2, r2, #118
 1617 0132 7731     		adds	r1, r1, #119
 1618 0134 4568     		ldr	r5, [r0, #4]
 1619 0136 1278     		ldrb	r2, [r2]
 1620 0138 0978     		ldrb	r1, [r1]
 1621 013a 2000     		movs	r0, r4
 1622 013c A847     		blx	r5
 1623              	.LVL61:
 503:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1624              		.loc 1 503 9 is_stmt 1 view .LVU374
 503:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1625              		.loc 1 503 12 is_stmt 0 view .LVU375
 1626 013e 0028     		cmp	r0, #0
 1627 0140 01D1     		bne	.L64
 1628              	.LVL62:
 1629              	.L65:
 503:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1630              		.loc 1 503 32 view .LVU376
 1631 0142 0020     		movs	r0, #0
 1632 0144 7FE7     		b	.L57
 1633              	.LVL63:
 1634              	.L64:
 504:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1635              		.loc 1 504 9 is_stmt 1 view .LVU377
 1636 0146 4368     		ldr	r3, [r0, #4]
 1637 0148 A366     		str	r3, [r4, #104]
 504:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1638              		.loc 1 504 9 view .LVU378
 504:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1639              		.loc 1 504 9 view .LVU379
 1640 014a 0368     		ldr	r3, [r0]
 1641 014c E366     		str	r3, [r4, #108]
 1642 014e 0023     		movs	r3, #0
 1643 0150 A1E7     		b	.L77
 1644              	.LVL64:
 1645              	.L63:
 1646              	.LBB690:
 509:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1647              		.loc 1 509 9 view .LVU380
 509:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1648              		.loc 1 509 36 is_stmt 0 view .LVU381
 1649 0152 0D4B     		ldr	r3, .L80+36
 1650 0154 B633     		adds	r3, r3, #182
 509:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1651              		.loc 1 509 12 view .LVU382
 1652 0156 1B78     		ldrb	r3, [r3]
 1653 0158 002B     		cmp	r3, #0
 1654 015a F2D0     		beq	.L65
 511:tmk_core/protocol/chibios/usb_main.c ****         }
 1655              		.loc 1 511 13 is_stmt 1 view .LVU383
 511:tmk_core/protocol/chibios/usb_main.c ****         }
 1656              		.loc 1 511 20 is_stmt 0 view .LVU384
 1657 015c 2000     		movs	r0, r4
 1658 015e FFF7FEFF 		bl	qmkusbRequestsHook
 1659              	.LVL65:
 1660 0162 70E7     		b	.L57
 1661              	.L81:
 1662              		.align	2
 1663              	.L80:
 1664 0164 00000000 		.word	.LANCHOR8
 1665 0168 00000000 		.word	.LANCHOR7
 1666 016c 00000000 		.word	.LANCHOR6
 1667 0170 00000000 		.word	.LANCHOR1
 1668 0174 00000000 		.word	set_led_transfer_cb
 1669 0178 00000000 		.word	keymap_config
 1670 017c 10270000 		.word	10000
 1671 0180 E7030000 		.word	999
 1672 0184 81060000 		.word	1665
 1673 0188 00000000 		.word	drivers
 1674              	.LBE690:
 1675              		.cfi_endproc
 1676              	.LFE192:
 1678              		.section	.text.shared_in_cb,"ax",%progbits
 1679              		.align	1
 1680              		.global	shared_in_cb
 1681              		.syntax unified
 1682              		.code	16
 1683              		.thumb_func
 1684              		.fpu softvfp
 1686              	shared_in_cb:
 1687              	.LFB218:
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              		@ link register save eliminated.
 1692              		@ sp needed
 1693 0000 7047     		bx	lr
 1694              		.cfi_endproc
 1695              	.LFE218:
 1697              		.section	.text.init_usb_driver,"ax",%progbits
 1698              		.align	1
 1699              		.global	init_usb_driver
 1700              		.syntax unified
 1701              		.code	16
 1702              		.thumb_func
 1703              		.fpu softvfp
 1705              	init_usb_driver:
 1706              	.LVL66:
 1707              	.LFB194:
 539:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1708              		.loc 1 539 39 is_stmt 1 view -0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 540:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                     = &drivers.array[i].driver;
 1712              		.loc 1 540 5 view .LVU386
 1713              	.LBB691:
 540:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                     = &drivers.array[i].driver;
 1714              		.loc 1 540 10 view .LVU387
 1715              	.LBB692:
 541:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 1716              		.loc 1 541 9 view .LVU388
 542:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 1717              		.loc 1 542 9 view .LVU389
 1718              	.LBE692:
 1719              	.LBE691:
 539:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1720              		.loc 1 539 39 is_stmt 0 view .LVU390
 1721 0000 70B5     		push	{r4, r5, r6, lr}
 1722              		.cfi_def_cfa_offset 16
 1723              		.cfi_offset 4, -16
 1724              		.cfi_offset 5, -12
 1725              		.cfi_offset 6, -8
 1726              		.cfi_offset 14, -4
 539:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 1727              		.loc 1 539 39 view .LVU391
 1728 0002 0500     		movs	r5, r0
 1729              	.LBB695:
 1730              	.LBB693:
 542:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 1731              		.loc 1 542 50 view .LVU392
 1732 0004 134B     		ldr	r3, .L84
 1733 0006 144A     		ldr	r2, .L84+4
 543:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1734              		.loc 1 543 50 view .LVU393
 1735 0008 1449     		ldr	r1, .L84+8
 542:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 1736              		.loc 1 542 50 view .LVU394
 1737 000a 9A65     		str	r2, [r3, #88]
 543:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1738              		.loc 1 543 9 is_stmt 1 view .LVU395
 543:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1739              		.loc 1 543 50 is_stmt 0 view .LVU396
 1740 000c 1A1D     		adds	r2, r3, #4
 545:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1741              		.loc 1 545 9 view .LVU397
 1742 000e 144E     		ldr	r6, .L84+12
 1743 0010 144C     		ldr	r4, .L84+16
 1744              	.LVL67:
 543:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 1745              		.loc 1 543 50 view .LVU398
 1746 0012 D167     		str	r1, [r2, #124]
 544:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 1747              		.loc 1 544 9 is_stmt 1 view .LVU399
 544:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 1748              		.loc 1 544 50 is_stmt 0 view .LVU400
 1749 0014 144A     		ldr	r2, .L84+20
 1750 0016 A033     		adds	r3, r3, #160
 1751 0018 1A60     		str	r2, [r3]
 545:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1752              		.loc 1 545 9 is_stmt 1 view .LVU401
 1753 001a 3100     		movs	r1, r6
 1754 001c 2000     		movs	r0, r4
 1755              	.LVL68:
 545:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 1756              		.loc 1 545 9 is_stmt 0 view .LVU402
 1757 001e FFF7FEFF 		bl	qmkusbObjectInit
 1758              	.LVL69:
 546:tmk_core/protocol/chibios/usb_main.c ****     }
 1759              		.loc 1 546 9 is_stmt 1 view .LVU403
 1760 0022 2000     		movs	r0, r4
 1761              	.LBE693:
 1762              	.LBE695:
 554:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1763              		.loc 1 554 5 is_stmt 0 view .LVU404
 1764 0024 114C     		ldr	r4, .L84+24
 1765              	.LVL70:
 1766              	.LBB696:
 1767              	.LBB694:
 546:tmk_core/protocol/chibios/usb_main.c ****     }
 1768              		.loc 1 546 9 view .LVU405
 1769 0026 3100     		movs	r1, r6
 1770 0028 FFF7FEFF 		bl	qmkusbStart
 1771              	.LVL71:
 546:tmk_core/protocol/chibios/usb_main.c ****     }
 1772              		.loc 1 546 9 view .LVU406
 1773              	.LBE694:
 1774              	.LBE696:
 554:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1775              		.loc 1 554 5 is_stmt 1 view .LVU407
 1776 002c A36D     		ldr	r3, [r4, #88]
 1777 002e 104A     		ldr	r2, .L84+28
 555:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1778              		.loc 1 555 5 is_stmt 0 view .LVU408
 1779 0030 1048     		ldr	r0, .L84+32
 554:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 1780              		.loc 1 554 5 view .LVU409
 1781 0032 1340     		ands	r3, r2
 1782 0034 A365     		str	r3, [r4, #88]
 555:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1783              		.loc 1 555 5 is_stmt 1 view .LVU410
 555:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1784              		.loc 1 555 5 view .LVU411
 555:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 1785              		.loc 1 555 5 view .LVU412
 1786 0036 FFF7FEFF 		bl	chThdSleep
 1787              	.LVL72:
 556:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 1788              		.loc 1 556 5 view .LVU413
 1789 003a 2800     		movs	r0, r5
 1790 003c 0E49     		ldr	r1, .L84+36
 1791 003e FFF7FEFF 		bl	usbStart
 1792              	.LVL73:
 557:tmk_core/protocol/chibios/usb_main.c **** 
 1793              		.loc 1 557 5 view .LVU414
 1794 0042 8023     		movs	r3, #128
 1795 0044 A26D     		ldr	r2, [r4, #88]
 1796 0046 1B02     		lsls	r3, r3, #8
 1797 0048 1343     		orrs	r3, r2
 1798              	.LBB697:
 1799              	.LBB698:
  99:./lib/chibios/os/rt/include/chvt.h **** }
 1800              		.loc 6 99 13 is_stmt 0 view .LVU415
 1801 004a 0022     		movs	r2, #0
 1802              	.LBE698:
 1803              	.LBE697:
 557:tmk_core/protocol/chibios/usb_main.c **** 
 1804              		.loc 1 557 5 view .LVU416
 1805 004c A365     		str	r3, [r4, #88]
 559:tmk_core/protocol/chibios/usb_main.c **** }
 1806              		.loc 1 559 5 is_stmt 1 view .LVU417
 1807              	.LBB701:
 1808              	.LBI697:
  97:./lib/chibios/os/rt/include/chvt.h **** 
 1809              		.loc 6 97 20 view .LVU418
 1810              	.LVL74:
 1811              	.LBB699:
  99:./lib/chibios/os/rt/include/chvt.h **** }
 1812              		.loc 6 99 3 view .LVU419
  99:./lib/chibios/os/rt/include/chvt.h **** }
 1813              		.loc 6 99 13 is_stmt 0 view .LVU420
 1814 004e 0B4B     		ldr	r3, .L84+40
 1815              	.LBE699:
 1816              	.LBE701:
 560:tmk_core/protocol/chibios/usb_main.c **** 
 1817              		.loc 1 560 1 view .LVU421
 1818              		@ sp needed
 1819              	.LBB702:
 1820              	.LBB700:
  99:./lib/chibios/os/rt/include/chvt.h **** }
 1821              		.loc 6 99 13 view .LVU422
 1822 0050 DA60     		str	r2, [r3, #12]
 1823              	.LVL75:
  99:./lib/chibios/os/rt/include/chvt.h **** }
 1824              		.loc 6 99 13 view .LVU423
 1825              	.LBE700:
 1826              	.LBE702:
 560:tmk_core/protocol/chibios/usb_main.c **** 
 1827              		.loc 1 560 1 view .LVU424
 1828 0052 70BD     		pop	{r4, r5, r6, pc}
 1829              	.L85:
 1830              		.align	2
 1831              	.L84:
 1832 0054 00000000 		.word	drivers
 1833 0058 08000000 		.word	drivers+8
 1834 005c 1C000000 		.word	drivers+28
 1835 0060 B0000000 		.word	drivers+176
 1836 0064 D4000000 		.word	drivers+212
 1837 0068 30000000 		.word	drivers+48
 1838 006c 005C0040 		.word	1073765376
 1839 0070 FF7FFFFF 		.word	-32769
 1840 0074 983A0000 		.word	15000
 1841 0078 00000000 		.word	.LANCHOR9
 1842 007c 00000000 		.word	.LANCHOR5
 1843              		.cfi_endproc
 1844              	.LFE194:
 1846              		.section	.text.kbd_sof_cb,"ax",%progbits
 1847              		.align	1
 1848              		.global	kbd_sof_cb
 1849              		.syntax unified
 1850              		.code	16
 1851              		.thumb_func
 1852              		.fpu softvfp
 1854              	kbd_sof_cb:
 1855              	.LVL76:
 1856              	.LFB196:
 578:tmk_core/protocol/chibios/usb_main.c **** 
 1857              		.loc 1 578 34 is_stmt 1 view -0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 578:tmk_core/protocol/chibios/usb_main.c **** 
 1862              		.loc 1 578 36 view .LVU426
 578:tmk_core/protocol/chibios/usb_main.c **** 
 1863              		.loc 1 578 1 is_stmt 0 view .LVU427
 1864              		@ sp needed
 1865 0000 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE196:
 1869              		.section	.text.keyboard_leds,"ax",%progbits
 1870              		.align	1
 1871              		.global	keyboard_leds
 1872              		.syntax unified
 1873              		.code	16
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	keyboard_leds:
 1878              	.LFB198:
 611:tmk_core/protocol/chibios/usb_main.c **** 
 612:tmk_core/protocol/chibios/usb_main.c **** /* LED status */
 613:tmk_core/protocol/chibios/usb_main.c **** uint8_t keyboard_leds(void) { return keyboard_led_stats; }
 1879              		.loc 1 613 29 is_stmt 1 view -0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883              		@ link register save eliminated.
 1884              		.loc 1 613 31 view .LVU429
 1885              		.loc 1 613 38 is_stmt 0 view .LVU430
 1886 0000 014B     		ldr	r3, .L88
 1887              		.loc 1 613 1 view .LVU431
 1888              		@ sp needed
 1889              		.loc 1 613 38 view .LVU432
 1890 0002 1878     		ldrb	r0, [r3]
 1891              		.loc 1 613 1 view .LVU433
 1892 0004 7047     		bx	lr
 1893              	.L89:
 1894 0006 C046     		.align	2
 1895              	.L88:
 1896 0008 00000000 		.word	.LANCHOR2
 1897              		.cfi_endproc
 1898              	.LFE198:
 1900              		.section	.text.send_keyboard,"ax",%progbits
 1901              		.align	1
 1902              		.global	send_keyboard
 1903              		.syntax unified
 1904              		.code	16
 1905              		.thumb_func
 1906              		.fpu softvfp
 1908              	send_keyboard:
 1909              	.LVL77:
 1910              	.LFB199:
 614:tmk_core/protocol/chibios/usb_main.c **** 
 615:tmk_core/protocol/chibios/usb_main.c **** /* prepare and start sending a report IN
 616:tmk_core/protocol/chibios/usb_main.c ****  * not callable from ISR or locked state */
 617:tmk_core/protocol/chibios/usb_main.c **** void send_keyboard(report_keyboard_t *report) {
 1911              		.loc 1 617 47 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 618:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 1915              		.loc 1 618 5 view .LVU435
 1916              	.LBB719:
 1917              	.LBI719:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1918              		.loc 2 509 20 view .LVU436
 1919              	.LBE719:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1920              		.loc 2 511 3 view .LVU437
 1921              	.LBB731:
 1922              	.LBB720:
 1923              	.LBI720:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1924              		.loc 3 353 20 view .LVU438
 1925              	.LBE720:
 1926              	.LBE731:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1927              		.loc 3 355 3 view .LVU439
 1928              	.LBB732:
 1929              	.LBB728:
 1930              	.LBB721:
 1931              	.LBI721:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1932              		.loc 4 387 20 view .LVU440
 1933              	.LBE721:
 1934              	.LBE728:
 1935              	.LBE732:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1936              		.loc 4 389 3 view .LVU441
 1937              	.LBB733:
 1938              	.LBB729:
 1939              	.LBB726:
 1940              	.LBB722:
 1941              	.LBI722:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1942              		.loc 5 140 27 view .LVU442
 1943              	.LBB723:
 1944              		.loc 5 142 3 view .LVU443
 1945              	.LBE723:
 1946              	.LBE722:
 1947              	.LBE726:
 1948              	.LBE729:
 1949              	.LBE733:
 617:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 1950              		.loc 1 617 47 is_stmt 0 view .LVU444
 1951 0000 70B5     		push	{r4, r5, r6, lr}
 1952              		.cfi_def_cfa_offset 16
 1953              		.cfi_offset 4, -16
 1954              		.cfi_offset 5, -12
 1955              		.cfi_offset 6, -8
 1956              		.cfi_offset 14, -4
 617:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 1957              		.loc 1 617 47 view .LVU445
 1958 0002 0500     		movs	r5, r0
 1959              	.LBB734:
 1960              	.LBB730:
 1961              	.LBB727:
 1962              	.LBB725:
 1963              	.LBB724:
 1964              		.loc 5 142 3 view .LVU446
 1965              		.syntax divided
 1966              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1967 0004 72B6     		cpsid i
 1968              	@ 0 "" 2
 1969              		.thumb
 1970              		.syntax unified
 1971              	.LBE724:
 1972              	.LBE725:
 1973              	.LBE727:
 1974              	.LBE730:
 1975              	.LBE734:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1976              		.loc 3 356 34 is_stmt 1 view .LVU447
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1977              		.loc 3 357 20 view .LVU448
 619:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 1978              		.loc 1 619 5 view .LVU449
 1979              		.loc 1 619 9 is_stmt 0 view .LVU450
 1980 0006 1C4C     		ldr	r4, .L107
 1981              		.loc 1 619 8 view .LVU451
 1982 0008 2278     		ldrb	r2, [r4]
 1983 000a 042A     		cmp	r2, #4
 1984 000c 20D1     		bne	.L92
 620:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 621:tmk_core/protocol/chibios/usb_main.c ****     }
 622:tmk_core/protocol/chibios/usb_main.c **** 
 623:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 624:tmk_core/protocol/chibios/usb_main.c ****     if (keymap_config.nkro && keyboard_protocol) { /* NKRO protocol */
 1985              		.loc 1 624 5 is_stmt 1 view .LVU452
 1986              		.loc 1 624 9 is_stmt 0 view .LVU453
 1987 000e 1B49     		ldr	r1, .L107+4
 1988 0010 2389     		ldrh	r3, [r4, #8]
 1989              		.loc 1 624 8 view .LVU454
 1990 0012 0978     		ldrb	r1, [r1]
 1991 0014 7F29     		cmp	r1, #127
 1992 0016 1DD9     		bls	.L93
 1993              		.loc 1 624 28 discriminator 1 view .LVU455
 1994 0018 1949     		ldr	r1, .L107+8
 1995 001a 0978     		ldrb	r1, [r1]
 1996 001c 0029     		cmp	r1, #0
 1997 001e 19D0     		beq	.L93
 625:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 626:tmk_core/protocol/chibios/usb_main.c ****         /* can rewrite this using the synchronous API, then would wait
 627:tmk_core/protocol/chibios/usb_main.c ****          * until *after* the packet has been transmitted. I think
 628:tmk_core/protocol/chibios/usb_main.c ****          * this is more efficient */
 629:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 630:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, SHARED_IN_EPNUM)) {
 1998              		.loc 1 630 9 is_stmt 1 view .LVU456
 1999              		.loc 1 630 12 is_stmt 0 view .LVU457
 2000 0020 1342     		tst	r3, r2
 2001 0022 0BD1     		bne	.L94
 2002              	.LVL78:
 2003              	.L97:
 631:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 632:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 633:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 634:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 635:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[SHARED_IN_EPNUM]->in_state->thread);
 636:tmk_core/protocol/chibios/usb_main.c **** 
 637:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 638:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 639:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 640:tmk_core/protocol/chibios/usb_main.c ****             }
 641:tmk_core/protocol/chibios/usb_main.c ****         }
 642:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)report, sizeof(struct nkro_repor
 2004              		.loc 1 642 9 is_stmt 1 view .LVU458
 2005 0024 2023     		movs	r3, #32
 2006 0026 2A00     		movs	r2, r5
 2007 0028 0221     		movs	r1, #2
 2008              	.LVL79:
 2009              	.L106:
 2010              	.LBB735:
 643:tmk_core/protocol/chibios/usb_main.c ****     } else
 644:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 645:tmk_core/protocol/chibios/usb_main.c ****     {  /* regular protocol */
 646:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 647:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 648:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, KEYBOARD_IN_EPNUM)) {
 649:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 650:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 651:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 652:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 653:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[KEYBOARD_IN_EPNUM]->in_state->thread);
 654:tmk_core/protocol/chibios/usb_main.c **** 
 655:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 656:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 657:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 658:tmk_core/protocol/chibios/usb_main.c ****             }
 659:tmk_core/protocol/chibios/usb_main.c ****         }
 660:tmk_core/protocol/chibios/usb_main.c ****         uint8_t *data, size;
 661:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 662:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 663:tmk_core/protocol/chibios/usb_main.c ****             size = KEYBOARD_REPORT_SIZE;
 664:tmk_core/protocol/chibios/usb_main.c ****         } else { /* boot protocol */
 665:tmk_core/protocol/chibios/usb_main.c ****             data = &report->mods;
 666:tmk_core/protocol/chibios/usb_main.c ****             size = 8;
 667:tmk_core/protocol/chibios/usb_main.c ****         }
 668:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, KEYBOARD_IN_EPNUM, data, size);
 2011              		.loc 1 668 9 is_stmt 0 view .LVU459
 2012 002a 2000     		movs	r0, r4
 2013 002c FFF7FEFF 		bl	usbStartTransmitI
 2014              	.LVL80:
 2015              		.loc 1 668 9 view .LVU460
 2016              	.LBE735:
 669:tmk_core/protocol/chibios/usb_main.c ****     }
 670:tmk_core/protocol/chibios/usb_main.c ****     keyboard_report_sent = *report;
 2017              		.loc 1 670 5 is_stmt 1 view .LVU461
 2018              		.loc 1 670 26 is_stmt 0 view .LVU462
 2019 0030 2022     		movs	r2, #32
 2020 0032 2900     		movs	r1, r5
 2021 0034 1348     		ldr	r0, .L107+12
 2022 0036 FFF7FEFF 		bl	memcpy
 2023              	.LVL81:
 2024 003a 09E0     		b	.L92
 2025              	.LVL82:
 2026              	.L94:
 635:tmk_core/protocol/chibios/usb_main.c **** 
 2027              		.loc 1 635 13 is_stmt 1 view .LVU463
 2028              	.LBB742:
 2029              	.LBI742:
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 2030              		.loc 2 733 21 view .LVU464
 2031              	.LBB743:
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 2032              		.loc 2 735 3 view .LVU465
 2033              		.loc 2 735 10 is_stmt 0 view .LVU466
 2034 003c 0121     		movs	r1, #1
 2035              	.LBE743:
 2036              	.LBE742:
 635:tmk_core/protocol/chibios/usb_main.c **** 
 2037              		.loc 1 635 68 view .LVU467
 2038 003e 6369     		ldr	r3, [r4, #20]
 2039              	.LBB746:
 2040              	.LBB744:
 2041              		.loc 2 735 10 view .LVU468
 2042 0040 4942     		rsbs	r1, r1, #0
 2043              	.LBE744:
 2044              	.LBE746:
 635:tmk_core/protocol/chibios/usb_main.c **** 
 2045              		.loc 1 635 13 view .LVU469
 2046 0042 5869     		ldr	r0, [r3, #20]
 2047              	.LVL83:
 635:tmk_core/protocol/chibios/usb_main.c **** 
 2048              		.loc 1 635 13 view .LVU470
 2049 0044 0C30     		adds	r0, r0, #12
 2050              	.LBB747:
 2051              	.LBB745:
 2052              		.loc 2 735 10 view .LVU471
 2053 0046 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2054              	.LVL84:
 2055              		.loc 2 735 10 view .LVU472
 2056              	.LBE745:
 2057              	.LBE747:
 638:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2058              		.loc 1 638 13 is_stmt 1 view .LVU473
 638:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2059              		.loc 1 638 16 is_stmt 0 view .LVU474
 2060 004a 2378     		ldrb	r3, [r4]
 2061 004c 042B     		cmp	r3, #4
 2062 004e E9D0     		beq	.L97
 2063              	.L92:
 671:tmk_core/protocol/chibios/usb_main.c **** 
 672:tmk_core/protocol/chibios/usb_main.c **** unlock:
 673:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2064              		.loc 1 673 5 is_stmt 1 view .LVU475
 2065              	.LBB748:
 2066              	.LBI748:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2067              		.loc 2 520 20 view .LVU476
 2068              	.LBE748:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2069              		.loc 2 522 3 view .LVU477
 2070              	.LBB757:
 2071              	.LBB749:
 2072              	.LBI749:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2073              		.loc 3 365 20 view .LVU478
 2074              	.LBB750:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2075              		.loc 3 367 22 view .LVU479
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2076              		.loc 3 368 33 view .LVU480
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2077              		.loc 3 374 3 view .LVU481
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2078              		.loc 3 374 3 view .LVU482
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2079              		.loc 3 378 3 view .LVU483
 2080              	.LBB751:
 2081              	.LBI751:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2082              		.loc 4 396 20 view .LVU484
 2083              	.LBE751:
 2084              	.LBE750:
 2085              	.LBE749:
 2086              	.LBE757:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2087              		.loc 4 398 3 view .LVU485
 2088              	.LBB758:
 2089              	.LBB756:
 2090              	.LBB755:
 2091              	.LBB754:
 2092              	.LBB752:
 2093              	.LBI752:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2094              		.loc 5 129 27 view .LVU486
 2095              	.LBB753:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2096              		.loc 5 131 3 view .LVU487
 2097              		.syntax divided
 2098              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2099 0050 62B6     		cpsie i
 2100              	@ 0 "" 2
 2101              		.thumb
 2102              		.syntax unified
 2103              	.LBE753:
 2104              	.LBE752:
 2105              	.LBE754:
 2106              	.LBE755:
 2107              	.LBE756:
 2108              	.LBE758:
 674:tmk_core/protocol/chibios/usb_main.c **** }
 2109              		.loc 1 674 1 is_stmt 0 view .LVU488
 2110              		@ sp needed
 2111              	.LVL85:
 2112              		.loc 1 674 1 view .LVU489
 2113 0052 70BD     		pop	{r4, r5, r6, pc}
 2114              	.LVL86:
 2115              	.L93:
 2116              	.LBB759:
 648:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2117              		.loc 1 648 9 is_stmt 1 view .LVU490
 648:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2118              		.loc 1 648 12 is_stmt 0 view .LVU491
 2119 0054 9B07     		lsls	r3, r3, #30
 2120 0056 03D4     		bmi	.L98
 2121              	.LVL87:
 2122              	.L101:
 660:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 2123              		.loc 1 660 9 is_stmt 1 view .LVU492
 661:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 2124              		.loc 1 661 9 view .LVU493
 668:tmk_core/protocol/chibios/usb_main.c ****     }
 2125              		.loc 1 668 9 view .LVU494
 2126 0058 0823     		movs	r3, #8
 2127 005a 2A00     		movs	r2, r5
 2128 005c 0121     		movs	r1, #1
 2129 005e E4E7     		b	.L106
 2130              	.LVL88:
 2131              	.L98:
 653:tmk_core/protocol/chibios/usb_main.c **** 
 2132              		.loc 1 653 13 view .LVU495
 2133              	.LBB736:
 2134              	.LBI736:
 733:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2135              		.loc 2 733 21 view .LVU496
 2136              	.LBB737:
 2137              		.loc 2 735 3 view .LVU497
 2138              		.loc 2 735 10 is_stmt 0 view .LVU498
 2139 0060 0121     		movs	r1, #1
 2140              	.LBE737:
 2141              	.LBE736:
 653:tmk_core/protocol/chibios/usb_main.c **** 
 2142              		.loc 1 653 70 view .LVU499
 2143 0062 2369     		ldr	r3, [r4, #16]
 2144              	.LBB740:
 2145              	.LBB738:
 2146              		.loc 2 735 10 view .LVU500
 2147 0064 4942     		rsbs	r1, r1, #0
 2148              	.LBE738:
 2149              	.LBE740:
 653:tmk_core/protocol/chibios/usb_main.c **** 
 2150              		.loc 1 653 13 view .LVU501
 2151 0066 5869     		ldr	r0, [r3, #20]
 2152              	.LVL89:
 653:tmk_core/protocol/chibios/usb_main.c **** 
 2153              		.loc 1 653 13 view .LVU502
 2154 0068 0C30     		adds	r0, r0, #12
 2155              	.LBB741:
 2156              	.LBB739:
 2157              		.loc 2 735 10 view .LVU503
 2158 006a FFF7FEFF 		bl	chThdSuspendTimeoutS
 2159              	.LVL90:
 2160              		.loc 2 735 10 view .LVU504
 2161              	.LBE739:
 2162              	.LBE741:
 656:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2163              		.loc 1 656 13 is_stmt 1 view .LVU505
 656:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2164              		.loc 1 656 16 is_stmt 0 view .LVU506
 2165 006e 2378     		ldrb	r3, [r4]
 2166 0070 042B     		cmp	r3, #4
 2167 0072 EDD1     		bne	.L92
 2168 0074 F0E7     		b	.L101
 2169              	.L108:
 2170 0076 C046     		.align	2
 2171              	.L107:
 2172 0078 00000000 		.word	USBD1
 2173 007c 00000000 		.word	keymap_config
 2174 0080 00000000 		.word	.LANCHOR7
 2175 0084 00000000 		.word	.LANCHOR8
 2176              	.LBE759:
 2177              		.cfi_endproc
 2178              	.LFE199:
 2180              		.section	.text.send_mouse,"ax",%progbits
 2181              		.align	1
 2182              		.global	send_mouse
 2183              		.syntax unified
 2184              		.code	16
 2185              		.thumb_func
 2186              		.fpu softvfp
 2188              	send_mouse:
 2189              	.LVL91:
 2190              	.LFB200:
 675:tmk_core/protocol/chibios/usb_main.c **** 
 676:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 677:tmk_core/protocol/chibios/usb_main.c ****  *                     Mouse functions
 678:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 679:tmk_core/protocol/chibios/usb_main.c ****  */
 680:tmk_core/protocol/chibios/usb_main.c **** 
 681:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
 682:tmk_core/protocol/chibios/usb_main.c **** 
 683:tmk_core/protocol/chibios/usb_main.c **** #    ifndef MOUSE_SHARED_EP
 684:tmk_core/protocol/chibios/usb_main.c **** /* mouse IN callback hander (a mouse report has made it IN) */
 685:tmk_core/protocol/chibios/usb_main.c **** void mouse_in_cb(USBDriver *usbp, usbep_t ep) {
 686:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 687:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 688:tmk_core/protocol/chibios/usb_main.c **** }
 689:tmk_core/protocol/chibios/usb_main.c **** #    endif
 690:tmk_core/protocol/chibios/usb_main.c **** 
 691:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) {
 2191              		.loc 1 691 41 is_stmt 1 view -0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 692:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2195              		.loc 1 692 5 view .LVU508
 2196              	.LBB760:
 2197              	.LBI760:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2198              		.loc 2 509 20 view .LVU509
 2199              	.LBE760:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2200              		.loc 2 511 3 view .LVU510
 2201              	.LBB772:
 2202              	.LBB761:
 2203              	.LBI761:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2204              		.loc 3 353 20 view .LVU511
 2205              	.LBE761:
 2206              	.LBE772:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2207              		.loc 3 355 3 view .LVU512
 2208              	.LBB773:
 2209              	.LBB769:
 2210              	.LBB762:
 2211              	.LBI762:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2212              		.loc 4 387 20 view .LVU513
 2213              	.LBE762:
 2214              	.LBE769:
 2215              	.LBE773:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2216              		.loc 4 389 3 view .LVU514
 2217              	.LBB774:
 2218              	.LBB770:
 2219              	.LBB767:
 2220              	.LBB763:
 2221              	.LBI763:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2222              		.loc 5 140 27 view .LVU515
 2223              	.LBB764:
 2224              		.loc 5 142 3 view .LVU516
 2225              	.LBE764:
 2226              	.LBE763:
 2227              	.LBE767:
 2228              	.LBE770:
 2229              	.LBE774:
 691:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2230              		.loc 1 691 41 is_stmt 0 view .LVU517
 2231 0000 70B5     		push	{r4, r5, r6, lr}
 2232              		.cfi_def_cfa_offset 16
 2233              		.cfi_offset 4, -16
 2234              		.cfi_offset 5, -12
 2235              		.cfi_offset 6, -8
 2236              		.cfi_offset 14, -4
 691:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2237              		.loc 1 691 41 view .LVU518
 2238 0002 0500     		movs	r5, r0
 2239              	.LBB775:
 2240              	.LBB771:
 2241              	.LBB768:
 2242              	.LBB766:
 2243              	.LBB765:
 2244              		.loc 5 142 3 view .LVU519
 2245              		.syntax divided
 2246              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2247 0004 72B6     		cpsid i
 2248              	@ 0 "" 2
 2249              		.thumb
 2250              		.syntax unified
 2251              	.LBE765:
 2252              	.LBE766:
 2253              	.LBE768:
 2254              	.LBE771:
 2255              	.LBE775:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2256              		.loc 3 356 34 is_stmt 1 view .LVU520
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2257              		.loc 3 357 20 view .LVU521
 693:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2258              		.loc 1 693 5 view .LVU522
 2259              		.loc 1 693 9 is_stmt 0 view .LVU523
 2260 0006 0C4C     		ldr	r4, .L117
 2261              		.loc 1 693 8 view .LVU524
 2262 0008 2378     		ldrb	r3, [r4]
 2263 000a 042B     		cmp	r3, #4
 2264 000c 01D0     		beq	.L110
 2265              	.LVL92:
 2266              	.L116:
 694:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 695:tmk_core/protocol/chibios/usb_main.c ****         return;
 696:tmk_core/protocol/chibios/usb_main.c ****     }
 697:tmk_core/protocol/chibios/usb_main.c **** 
 698:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetTransmitStatusI(&USB_DRIVER, MOUSE_IN_EPNUM)) {
 699:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 700:tmk_core/protocol/chibios/usb_main.c ****          * every iteration - otherwise the system will remain locked,
 701:tmk_core/protocol/chibios/usb_main.c ****          * no interrupts served, so USB not going through as well.
 702:tmk_core/protocol/chibios/usb_main.c ****          * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 703:tmk_core/protocol/chibios/usb_main.c ****         if (osalThreadSuspendTimeoutS(&(&USB_DRIVER)->epc[MOUSE_IN_EPNUM]->in_state->thread, TIME_M
 704:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 705:tmk_core/protocol/chibios/usb_main.c ****             return;
 706:tmk_core/protocol/chibios/usb_main.c ****         }
 707:tmk_core/protocol/chibios/usb_main.c ****     }
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, MOUSE_IN_EPNUM, (uint8_t *)report, sizeof(report_mouse_t));
 709:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2267              		.loc 1 709 5 is_stmt 1 view .LVU525
 2268              	.LBB776:
 2269              	.LBI776:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2270              		.loc 2 520 20 view .LVU526
 2271              	.LBE776:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2272              		.loc 2 522 3 view .LVU527
 2273              	.LBB785:
 2274              	.LBB777:
 2275              	.LBI777:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2276              		.loc 3 365 20 view .LVU528
 2277              	.LBB778:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2278              		.loc 3 367 22 view .LVU529
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2279              		.loc 3 368 33 view .LVU530
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2280              		.loc 3 374 3 view .LVU531
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2281              		.loc 3 374 3 view .LVU532
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2282              		.loc 3 378 3 view .LVU533
 2283              	.LBB779:
 2284              	.LBI779:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2285              		.loc 4 396 20 view .LVU534
 2286              	.LBE779:
 2287              	.LBE778:
 2288              	.LBE777:
 2289              	.LBE785:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2290              		.loc 4 398 3 view .LVU535
 2291              	.LBB786:
 2292              	.LBB784:
 2293              	.LBB783:
 2294              	.LBB782:
 2295              	.LBB780:
 2296              	.LBI780:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2297              		.loc 5 129 27 view .LVU536
 2298              	.LBB781:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2299              		.loc 5 131 3 view .LVU537
 2300              		.syntax divided
 2301              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2302 000e 62B6     		cpsie i
 2303              	@ 0 "" 2
 2304              		.thumb
 2305              		.syntax unified
 2306              	.LBE781:
 2307              	.LBE780:
 2308              	.LBE782:
 2309              	.LBE783:
 2310              	.LBE784:
 2311              	.LBE786:
 710:tmk_core/protocol/chibios/usb_main.c **** }
 2312              		.loc 1 710 1 is_stmt 0 view .LVU538
 2313              		@ sp needed
 2314              	.LVL93:
 2315              		.loc 1 710 1 view .LVU539
 2316 0010 70BD     		pop	{r4, r5, r6, pc}
 2317              	.LVL94:
 2318              	.L110:
 698:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 2319              		.loc 1 698 5 is_stmt 1 view .LVU540
 698:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 2320              		.loc 1 698 8 is_stmt 0 view .LVU541
 2321 0012 2289     		ldrh	r2, [r4, #8]
 2322 0014 1A42     		tst	r2, r3
 2323 0016 07D0     		beq	.L112
 703:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2324              		.loc 1 703 9 is_stmt 1 view .LVU542
 2325              	.LVL95:
 2326              	.LBB787:
 2327              	.LBI787:
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 2328              		.loc 2 757 21 view .LVU543
 2329              	.LBB788:
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 2330              		.loc 2 760 3 view .LVU544
 2331              	.LBE788:
 2332              	.LBE787:
 703:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2333              		.loc 1 703 74 is_stmt 0 view .LVU545
 2334 0018 6369     		ldr	r3, [r4, #20]
 2335              	.LBB791:
 2336              	.LBB789:
 2337              		.loc 2 760 10 view .LVU546
 2338 001a 6421     		movs	r1, #100
 2339              	.LBE789:
 2340              	.LBE791:
 703:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2341              		.loc 1 703 13 view .LVU547
 2342 001c 5869     		ldr	r0, [r3, #20]
 2343              	.LVL96:
 703:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2344              		.loc 1 703 13 view .LVU548
 2345 001e 0C30     		adds	r0, r0, #12
 2346              	.LBB792:
 2347              	.LBB790:
 2348              		.loc 2 760 10 view .LVU549
 2349 0020 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2350              	.LVL97:
 2351              		.loc 2 760 10 view .LVU550
 2352              	.LBE790:
 2353              	.LBE792:
 703:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 2354              		.loc 1 703 12 view .LVU551
 2355 0024 431C     		adds	r3, r0, #1
 2356 0026 F2D0     		beq	.L116
 2357              	.L112:
 708:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2358              		.loc 1 708 5 is_stmt 1 view .LVU552
 2359 0028 0623     		movs	r3, #6
 2360 002a 2A00     		movs	r2, r5
 2361 002c 0221     		movs	r1, #2
 2362 002e 2000     		movs	r0, r4
 2363 0030 FFF7FEFF 		bl	usbStartTransmitI
 2364              	.LVL98:
 2365 0034 EBE7     		b	.L116
 2366              	.L118:
 2367 0036 C046     		.align	2
 2368              	.L117:
 2369 0038 00000000 		.word	USBD1
 2370              		.cfi_endproc
 2371              	.LFE200:
 2373              		.section	.text.send_system,"ax",%progbits
 2374              		.align	1
 2375              		.global	send_system
 2376              		.syntax unified
 2377              		.code	16
 2378              		.thumb_func
 2379              		.fpu softvfp
 2381              	send_system:
 2382              	.LVL99:
 2383              	.LFB203:
 711:tmk_core/protocol/chibios/usb_main.c **** 
 712:tmk_core/protocol/chibios/usb_main.c **** #else  /* MOUSE_ENABLE */
 713:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) { (void)report; }
 714:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
 715:tmk_core/protocol/chibios/usb_main.c **** 
 716:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 717:tmk_core/protocol/chibios/usb_main.c ****  *                   Shared EP functions
 718:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 719:tmk_core/protocol/chibios/usb_main.c ****  */
 720:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 721:tmk_core/protocol/chibios/usb_main.c **** /* shared IN callback hander */
 722:tmk_core/protocol/chibios/usb_main.c **** void shared_in_cb(USBDriver *usbp, usbep_t ep) {
 723:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 724:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 725:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 726:tmk_core/protocol/chibios/usb_main.c **** }
 727:tmk_core/protocol/chibios/usb_main.c **** #endif
 728:tmk_core/protocol/chibios/usb_main.c **** 
 729:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 730:tmk_core/protocol/chibios/usb_main.c ****  *                   Extrakey functions
 731:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 732:tmk_core/protocol/chibios/usb_main.c ****  */
 733:tmk_core/protocol/chibios/usb_main.c **** 
 734:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 735:tmk_core/protocol/chibios/usb_main.c **** static void send_extra(uint8_t report_id, uint16_t data) {
 736:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 737:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 738:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 739:tmk_core/protocol/chibios/usb_main.c ****         return;
 740:tmk_core/protocol/chibios/usb_main.c ****     }
 741:tmk_core/protocol/chibios/usb_main.c **** 
 742:tmk_core/protocol/chibios/usb_main.c ****     report_extra_t report = {.report_id = report_id, .usage = data};
 743:tmk_core/protocol/chibios/usb_main.c **** 
 744:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)&report, sizeof(report_extra_t));
 745:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 746:tmk_core/protocol/chibios/usb_main.c **** }
 747:tmk_core/protocol/chibios/usb_main.c **** #endif
 748:tmk_core/protocol/chibios/usb_main.c **** 
 749:tmk_core/protocol/chibios/usb_main.c **** void send_system(uint16_t data) {
 2384              		.loc 1 749 33 view -0
 2385              		.cfi_startproc
 2386              		@ args = 0, pretend = 0, frame = 8
 2387              		@ frame_needed = 0, uses_anonymous_args = 0
 750:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 751:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_SYSTEM, data);
 2388              		.loc 1 751 5 view .LVU554
 2389              	.LBB825:
 2390              	.LBI825:
 735:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2391              		.loc 1 735 13 view .LVU555
 2392              	.LBB826:
 736:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2393              		.loc 1 736 5 view .LVU556
 2394              	.LBB827:
 2395              	.LBI827:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2396              		.loc 2 509 20 view .LVU557
 2397              	.LBE827:
 2398              	.LBE826:
 2399              	.LBE825:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2400              		.loc 2 511 3 view .LVU558
 2401              	.LBB870:
 2402              	.LBB862:
 2403              	.LBB839:
 2404              	.LBB828:
 2405              	.LBI828:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2406              		.loc 3 353 20 view .LVU559
 2407              	.LBE828:
 2408              	.LBE839:
 2409              	.LBE862:
 2410              	.LBE870:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2411              		.loc 3 355 3 view .LVU560
 2412              	.LBB871:
 2413              	.LBB863:
 2414              	.LBB840:
 2415              	.LBB836:
 2416              	.LBB829:
 2417              	.LBI829:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2418              		.loc 4 387 20 view .LVU561
 2419              	.LBE829:
 2420              	.LBE836:
 2421              	.LBE840:
 2422              	.LBE863:
 2423              	.LBE871:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2424              		.loc 4 389 3 view .LVU562
 2425              	.LBB872:
 2426              	.LBB864:
 2427              	.LBB841:
 2428              	.LBB837:
 2429              	.LBB834:
 2430              	.LBB830:
 2431              	.LBI830:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2432              		.loc 5 140 27 view .LVU563
 2433              	.LBB831:
 2434              		.loc 5 142 3 view .LVU564
 2435              	.LBE831:
 2436              	.LBE830:
 2437              	.LBE834:
 2438              	.LBE837:
 2439              	.LBE841:
 2440              	.LBE864:
 2441              	.LBE872:
 749:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 2442              		.loc 1 749 33 is_stmt 0 view .LVU565
 2443 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2444              		.cfi_def_cfa_offset 24
 2445              		.cfi_offset 0, -24
 2446              		.cfi_offset 1, -20
 2447              		.cfi_offset 2, -16
 2448              		.cfi_offset 4, -12
 2449              		.cfi_offset 5, -8
 2450              		.cfi_offset 14, -4
 2451              	.LBB873:
 2452              	.LBB865:
 2453              	.LBB842:
 2454              	.LBB838:
 2455              	.LBB835:
 2456              	.LBB833:
 2457              	.LBB832:
 2458              		.loc 5 142 3 view .LVU566
 2459              		.syntax divided
 2460              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2461 0002 72B6     		cpsid i
 2462              	@ 0 "" 2
 2463              		.thumb
 2464              		.syntax unified
 2465              	.LBE832:
 2466              	.LBE833:
 2467              	.LBE835:
 2468              	.LBE838:
 2469              	.LBE842:
 2470              	.LBE865:
 2471              	.LBE873:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2472              		.loc 3 356 34 is_stmt 1 view .LVU567
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2473              		.loc 3 357 20 view .LVU568
 2474              	.LBB874:
 2475              	.LBB866:
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2476              		.loc 1 737 5 view .LVU569
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2477              		.loc 1 737 9 is_stmt 0 view .LVU570
 2478 0004 084C     		ldr	r4, .L123
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2479              		.loc 1 737 8 view .LVU571
 2480 0006 2378     		ldrb	r3, [r4]
 2481 0008 042B     		cmp	r3, #4
 2482 000a 01D0     		beq	.L120
 2483              	.LVL100:
 2484              	.L122:
 2485              	.LBB843:
 2486              	.LBB844:
 745:tmk_core/protocol/chibios/usb_main.c **** }
 2487              		.loc 1 745 5 is_stmt 1 view .LVU572
 2488              	.LBB845:
 2489              	.LBI845:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2490              		.loc 2 520 20 view .LVU573
 2491              	.LBE845:
 2492              	.LBE844:
 2493              	.LBE843:
 2494              	.LBE866:
 2495              	.LBE874:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2496              		.loc 2 522 3 view .LVU574
 2497              	.LBB875:
 2498              	.LBB867:
 2499              	.LBB859:
 2500              	.LBB856:
 2501              	.LBB854:
 2502              	.LBB846:
 2503              	.LBI846:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2504              		.loc 3 365 20 view .LVU575
 2505              	.LBB847:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2506              		.loc 3 367 22 view .LVU576
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2507              		.loc 3 368 33 view .LVU577
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2508              		.loc 3 374 3 view .LVU578
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2509              		.loc 3 374 3 view .LVU579
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2510              		.loc 3 378 3 view .LVU580
 2511              	.LBB848:
 2512              	.LBI848:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2513              		.loc 4 396 20 view .LVU581
 2514              	.LBE848:
 2515              	.LBE847:
 2516              	.LBE846:
 2517              	.LBE854:
 2518              	.LBE856:
 2519              	.LBE859:
 2520              	.LBE867:
 2521              	.LBE875:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2522              		.loc 4 398 3 view .LVU582
 2523              	.LBB876:
 2524              	.LBB868:
 2525              	.LBB860:
 2526              	.LBB857:
 2527              	.LBB855:
 2528              	.LBB853:
 2529              	.LBB852:
 2530              	.LBB851:
 2531              	.LBB849:
 2532              	.LBI849:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2533              		.loc 5 129 27 view .LVU583
 2534              	.LBB850:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2535              		.loc 5 131 3 view .LVU584
 2536              		.syntax divided
 2537              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2538 000c 62B6     		cpsie i
 2539              	@ 0 "" 2
 2540              	.LVL101:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2541              		.loc 5 131 3 is_stmt 0 view .LVU585
 2542              		.thumb
 2543              		.syntax unified
 2544              	.LBE850:
 2545              	.LBE849:
 2546              	.LBE851:
 2547              	.LBE852:
 2548              	.LBE853:
 2549              	.LBE855:
 2550              	.LBE857:
 2551              	.LBE860:
 2552              	.LBE868:
 2553              	.LBE876:
 752:tmk_core/protocol/chibios/usb_main.c **** #endif
 753:tmk_core/protocol/chibios/usb_main.c **** }
 2554              		.loc 1 753 1 view .LVU586
 2555              		@ sp needed
 2556 000e 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 2557              	.LVL102:
 2558              	.L120:
 2559              	.LBB877:
 2560              	.LBB869:
 2561              	.LBB861:
 2562              	.LBI843:
 735:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2563              		.loc 1 735 13 is_stmt 1 view .LVU587
 2564              	.LBB858:
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2565              		.loc 1 742 5 view .LVU588
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2566              		.loc 1 742 20 is_stmt 0 view .LVU589
 2567 0010 6946     		mov	r1, sp
 2568 0012 0323     		movs	r3, #3
 2569 0014 4871     		strb	r0, [r1, #5]
 2570 0016 000A     		lsrs	r0, r0, #8
 2571              	.LVL103:
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2572              		.loc 1 742 20 view .LVU590
 2573 0018 01AA     		add	r2, sp, #4
 2574 001a 8871     		strb	r0, [r1, #6]
 744:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2575              		.loc 1 744 5 is_stmt 1 view .LVU591
 2576 001c 0221     		movs	r1, #2
 2577 001e 2000     		movs	r0, r4
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2578              		.loc 1 742 20 is_stmt 0 view .LVU592
 2579 0020 1370     		strb	r3, [r2]
 744:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2580              		.loc 1 744 5 view .LVU593
 2581 0022 FFF7FEFF 		bl	usbStartTransmitI
 2582              	.LVL104:
 2583 0026 F1E7     		b	.L122
 2584              	.L124:
 2585              		.align	2
 2586              	.L123:
 2587 0028 00000000 		.word	USBD1
 2588              	.LBE858:
 2589              	.LBE861:
 2590              	.LBE869:
 2591              	.LBE877:
 2592              		.cfi_endproc
 2593              	.LFE203:
 2595              		.section	.text.send_consumer,"ax",%progbits
 2596              		.align	1
 2597              		.global	send_consumer
 2598              		.syntax unified
 2599              		.code	16
 2600              		.thumb_func
 2601              		.fpu softvfp
 2603              	send_consumer:
 2604              	.LVL105:
 2605              	.LFB204:
 754:tmk_core/protocol/chibios/usb_main.c **** 
 755:tmk_core/protocol/chibios/usb_main.c **** void send_consumer(uint16_t data) {
 2606              		.loc 1 755 35 is_stmt 1 view -0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 8
 2609              		@ frame_needed = 0, uses_anonymous_args = 0
 756:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 757:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_CONSUMER, data);
 2610              		.loc 1 757 5 view .LVU595
 2611              	.LBB910:
 2612              	.LBI910:
 735:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2613              		.loc 1 735 13 view .LVU596
 2614              	.LBB911:
 736:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2615              		.loc 1 736 5 view .LVU597
 2616              	.LBB912:
 2617              	.LBI912:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2618              		.loc 2 509 20 view .LVU598
 2619              	.LBE912:
 2620              	.LBE911:
 2621              	.LBE910:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2622              		.loc 2 511 3 view .LVU599
 2623              	.LBB955:
 2624              	.LBB947:
 2625              	.LBB924:
 2626              	.LBB913:
 2627              	.LBI913:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2628              		.loc 3 353 20 view .LVU600
 2629              	.LBE913:
 2630              	.LBE924:
 2631              	.LBE947:
 2632              	.LBE955:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2633              		.loc 3 355 3 view .LVU601
 2634              	.LBB956:
 2635              	.LBB948:
 2636              	.LBB925:
 2637              	.LBB921:
 2638              	.LBB914:
 2639              	.LBI914:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2640              		.loc 4 387 20 view .LVU602
 2641              	.LBE914:
 2642              	.LBE921:
 2643              	.LBE925:
 2644              	.LBE948:
 2645              	.LBE956:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2646              		.loc 4 389 3 view .LVU603
 2647              	.LBB957:
 2648              	.LBB949:
 2649              	.LBB926:
 2650              	.LBB922:
 2651              	.LBB919:
 2652              	.LBB915:
 2653              	.LBI915:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2654              		.loc 5 140 27 view .LVU604
 2655              	.LBB916:
 2656              		.loc 5 142 3 view .LVU605
 2657              	.LBE916:
 2658              	.LBE915:
 2659              	.LBE919:
 2660              	.LBE922:
 2661              	.LBE926:
 2662              	.LBE949:
 2663              	.LBE957:
 755:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 2664              		.loc 1 755 35 is_stmt 0 view .LVU606
 2665 0000 13B5     		push	{r0, r1, r4, lr}
 2666              		.cfi_def_cfa_offset 16
 2667              		.cfi_offset 0, -16
 2668              		.cfi_offset 1, -12
 2669              		.cfi_offset 4, -8
 2670              		.cfi_offset 14, -4
 2671              	.LBB958:
 2672              	.LBB950:
 2673              	.LBB927:
 2674              	.LBB923:
 2675              	.LBB920:
 2676              	.LBB918:
 2677              	.LBB917:
 2678              		.loc 5 142 3 view .LVU607
 2679              		.syntax divided
 2680              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2681 0002 72B6     		cpsid i
 2682              	@ 0 "" 2
 2683              		.thumb
 2684              		.syntax unified
 2685              	.LBE917:
 2686              	.LBE918:
 2687              	.LBE920:
 2688              	.LBE923:
 2689              	.LBE927:
 2690              	.LBE950:
 2691              	.LBE958:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2692              		.loc 3 356 34 is_stmt 1 view .LVU608
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2693              		.loc 3 357 20 view .LVU609
 2694              	.LBB959:
 2695              	.LBB951:
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2696              		.loc 1 737 5 view .LVU610
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2697              		.loc 1 737 9 is_stmt 0 view .LVU611
 2698 0004 084C     		ldr	r4, .L129
 737:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2699              		.loc 1 737 8 view .LVU612
 2700 0006 2378     		ldrb	r3, [r4]
 2701 0008 042B     		cmp	r3, #4
 2702 000a 01D0     		beq	.L126
 2703              	.LVL106:
 2704              	.L128:
 2705              	.LBB928:
 2706              	.LBB929:
 745:tmk_core/protocol/chibios/usb_main.c **** }
 2707              		.loc 1 745 5 is_stmt 1 view .LVU613
 2708              	.LBB930:
 2709              	.LBI930:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 2710              		.loc 2 520 20 view .LVU614
 2711              	.LBE930:
 2712              	.LBE929:
 2713              	.LBE928:
 2714              	.LBE951:
 2715              	.LBE959:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 2716              		.loc 2 522 3 view .LVU615
 2717              	.LBB960:
 2718              	.LBB952:
 2719              	.LBB944:
 2720              	.LBB941:
 2721              	.LBB939:
 2722              	.LBB931:
 2723              	.LBI931:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2724              		.loc 3 365 20 view .LVU616
 2725              	.LBB932:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2726              		.loc 3 367 22 view .LVU617
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2727              		.loc 3 368 33 view .LVU618
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2728              		.loc 3 374 3 view .LVU619
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2729              		.loc 3 374 3 view .LVU620
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2730              		.loc 3 378 3 view .LVU621
 2731              	.LBB933:
 2732              	.LBI933:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 2733              		.loc 4 396 20 view .LVU622
 2734              	.LBE933:
 2735              	.LBE932:
 2736              	.LBE931:
 2737              	.LBE939:
 2738              	.LBE941:
 2739              	.LBE944:
 2740              	.LBE952:
 2741              	.LBE960:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 2742              		.loc 4 398 3 view .LVU623
 2743              	.LBB961:
 2744              	.LBB953:
 2745              	.LBB945:
 2746              	.LBB942:
 2747              	.LBB940:
 2748              	.LBB938:
 2749              	.LBB937:
 2750              	.LBB936:
 2751              	.LBB934:
 2752              	.LBI934:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2753              		.loc 5 129 27 view .LVU624
 2754              	.LBB935:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2755              		.loc 5 131 3 view .LVU625
 2756              		.syntax divided
 2757              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2758 000c 62B6     		cpsie i
 2759              	@ 0 "" 2
 2760              	.LVL107:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 2761              		.loc 5 131 3 is_stmt 0 view .LVU626
 2762              		.thumb
 2763              		.syntax unified
 2764              	.LBE935:
 2765              	.LBE934:
 2766              	.LBE936:
 2767              	.LBE937:
 2768              	.LBE938:
 2769              	.LBE940:
 2770              	.LBE942:
 2771              	.LBE945:
 2772              	.LBE953:
 2773              	.LBE961:
 758:tmk_core/protocol/chibios/usb_main.c **** #endif
 759:tmk_core/protocol/chibios/usb_main.c **** }
 2774              		.loc 1 759 1 view .LVU627
 2775              		@ sp needed
 2776 000e 13BD     		pop	{r0, r1, r4, pc}
 2777              	.LVL108:
 2778              	.L126:
 2779              	.LBB962:
 2780              	.LBB954:
 2781              	.LBB946:
 2782              	.LBI928:
 735:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2783              		.loc 1 735 13 is_stmt 1 view .LVU628
 2784              	.LBB943:
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2785              		.loc 1 742 5 view .LVU629
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2786              		.loc 1 742 20 is_stmt 0 view .LVU630
 2787 0010 01AA     		add	r2, sp, #4
 2788 0012 1370     		strb	r3, [r2]
 2789 0014 6B46     		mov	r3, sp
 2790 0016 5871     		strb	r0, [r3, #5]
 2791 0018 000A     		lsrs	r0, r0, #8
 2792              	.LVL109:
 742:tmk_core/protocol/chibios/usb_main.c **** 
 2793              		.loc 1 742 20 view .LVU631
 2794 001a 9871     		strb	r0, [r3, #6]
 744:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 2795              		.loc 1 744 5 is_stmt 1 view .LVU632
 2796 001c 0221     		movs	r1, #2
 2797 001e 0323     		movs	r3, #3
 2798 0020 2000     		movs	r0, r4
 2799 0022 FFF7FEFF 		bl	usbStartTransmitI
 2800              	.LVL110:
 2801 0026 F1E7     		b	.L128
 2802              	.L130:
 2803              		.align	2
 2804              	.L129:
 2805 0028 00000000 		.word	USBD1
 2806              	.LBE943:
 2807              	.LBE946:
 2808              	.LBE954:
 2809              	.LBE962:
 2810              		.cfi_endproc
 2811              	.LFE204:
 2813              		.section	.text.sendchar,"ax",%progbits
 2814              		.align	1
 2815              		.global	sendchar
 2816              		.syntax unified
 2817              		.code	16
 2818              		.thumb_func
 2819              		.fpu softvfp
 2821              	sendchar:
 2822              	.LVL111:
 2823              	.LFB205:
 760:tmk_core/protocol/chibios/usb_main.c **** 
 761:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 762:tmk_core/protocol/chibios/usb_main.c ****  *                   Console functions
 763:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 764:tmk_core/protocol/chibios/usb_main.c ****  */
 765:tmk_core/protocol/chibios/usb_main.c **** 
 766:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 767:tmk_core/protocol/chibios/usb_main.c **** 
 768:tmk_core/protocol/chibios/usb_main.c **** int8_t sendchar(uint8_t c) {
 2824              		.loc 1 768 28 view -0
 2825              		.cfi_startproc
 2826              		@ args = 0, pretend = 0, frame = 8
 2827              		@ frame_needed = 0, uses_anonymous_args = 0
 769:tmk_core/protocol/chibios/usb_main.c ****     // The previous implmentation had timeouts, but I think it's better to just slow down
 770:tmk_core/protocol/chibios/usb_main.c ****     // and make sure that everything is transferred, rather than dropping stuff
 771:tmk_core/protocol/chibios/usb_main.c ****     return chnWrite(&drivers.console_driver.driver, &c, 1);
 2828              		.loc 1 771 5 view .LVU634
 768:tmk_core/protocol/chibios/usb_main.c ****     // The previous implmentation had timeouts, but I think it's better to just slow down
 2829              		.loc 1 768 28 is_stmt 0 view .LVU635
 2830 0000 07B5     		push	{r0, r1, r2, lr}
 2831              		.cfi_def_cfa_offset 16
 2832              		.cfi_offset 0, -16
 2833              		.cfi_offset 1, -12
 2834              		.cfi_offset 2, -8
 2835              		.cfi_offset 14, -4
 768:tmk_core/protocol/chibios/usb_main.c ****     // The previous implmentation had timeouts, but I think it's better to just slow down
 2836              		.loc 1 768 28 view .LVU636
 2837 0002 6B46     		mov	r3, sp
 2838 0004 D91D     		adds	r1, r3, #7
 2839 0006 0870     		strb	r0, [r1]
 2840              		.loc 1 771 12 view .LVU637
 2841 0008 0348     		ldr	r0, .L132
 2842              	.LVL112:
 2843              		.loc 1 771 12 view .LVU638
 2844 000a 0122     		movs	r2, #1
 2845 000c 0368     		ldr	r3, [r0]
 772:tmk_core/protocol/chibios/usb_main.c **** }
 2846              		.loc 1 772 1 view .LVU639
 2847              		@ sp needed
 771:tmk_core/protocol/chibios/usb_main.c **** }
 2848              		.loc 1 771 12 view .LVU640
 2849 000e 5B68     		ldr	r3, [r3, #4]
 2850 0010 9847     		blx	r3
 2851              	.LVL113:
 771:tmk_core/protocol/chibios/usb_main.c **** }
 2852              		.loc 1 771 12 view .LVU641
 2853 0012 40B2     		sxtb	r0, r0
 2854              		.loc 1 772 1 view .LVU642
 2855 0014 0EBD     		pop	{r1, r2, r3, pc}
 2856              	.L133:
 2857 0016 C046     		.align	2
 2858              	.L132:
 2859 0018 D4000000 		.word	drivers+212
 2860              		.cfi_endproc
 2861              	.LFE205:
 2863              		.section	.text.console_task,"ax",%progbits
 2864              		.align	1
 2865              		.global	console_task
 2866              		.syntax unified
 2867              		.code	16
 2868              		.thumb_func
 2869              		.fpu softvfp
 2871              	console_task:
 2872              	.LFB207:
 773:tmk_core/protocol/chibios/usb_main.c **** 
 774:tmk_core/protocol/chibios/usb_main.c **** // Just a dummy function for now, this could be exposed as a weak function
 775:tmk_core/protocol/chibios/usb_main.c **** // Or connected to the actual QMK console
 776:tmk_core/protocol/chibios/usb_main.c **** static void console_receive(uint8_t *data, uint8_t length) {
 777:tmk_core/protocol/chibios/usb_main.c ****     (void)data;
 778:tmk_core/protocol/chibios/usb_main.c ****     (void)length;
 779:tmk_core/protocol/chibios/usb_main.c **** }
 780:tmk_core/protocol/chibios/usb_main.c **** 
 781:tmk_core/protocol/chibios/usb_main.c **** void console_task(void) {
 2873              		.loc 1 781 25 is_stmt 1 view -0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 32
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 782:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2877              		.loc 1 782 5 view .LVU644
 783:tmk_core/protocol/chibios/usb_main.c ****     size_t  size = 0;
 2878              		.loc 1 783 5 view .LVU645
 2879              	.LVL114:
 784:tmk_core/protocol/chibios/usb_main.c ****     do {
 2880              		.loc 1 784 5 view .LVU646
 2881              	.LBB963:
 785:tmk_core/protocol/chibios/usb_main.c ****         size_t size = chnReadTimeout(&drivers.console_driver.driver, buffer, sizeof(buffer), TIME_I
 2882              		.loc 1 785 9 view .LVU647
 2883              	.LBE963:
 781:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2884              		.loc 1 781 25 is_stmt 0 view .LVU648
 2885 0000 10B5     		push	{r4, lr}
 2886              		.cfi_def_cfa_offset 8
 2887              		.cfi_offset 4, -8
 2888              		.cfi_offset 14, -4
 2889              	.LBB964:
 2890              		.loc 1 785 23 view .LVU649
 2891 0002 0548     		ldr	r0, .L135
 2892              	.LBE964:
 781:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 2893              		.loc 1 781 25 view .LVU650
 2894 0004 88B0     		sub	sp, sp, #32
 2895              		.cfi_def_cfa_offset 40
 2896              	.LBB965:
 2897              		.loc 1 785 23 view .LVU651
 2898 0006 0368     		ldr	r3, [r0]
 2899 0008 2022     		movs	r2, #32
 2900 000a 1C6A     		ldr	r4, [r3, #32]
 2901 000c 6946     		mov	r1, sp
 2902 000e 0023     		movs	r3, #0
 2903 0010 A047     		blx	r4
 2904              	.LVL115:
 786:tmk_core/protocol/chibios/usb_main.c ****         if (size > 0) {
 2905              		.loc 1 786 9 is_stmt 1 view .LVU652
 2906              	.LBE965:
 787:tmk_core/protocol/chibios/usb_main.c ****             console_receive(buffer, size);
 788:tmk_core/protocol/chibios/usb_main.c ****         }
 789:tmk_core/protocol/chibios/usb_main.c ****     } while (size > 0);
 790:tmk_core/protocol/chibios/usb_main.c **** }
 2907              		.loc 1 790 1 is_stmt 0 view .LVU653
 2908 0012 08B0     		add	sp, sp, #32
 2909              		@ sp needed
 2910 0014 10BD     		pop	{r4, pc}
 2911              	.L136:
 2912 0016 C046     		.align	2
 2913              	.L135:
 2914 0018 D4000000 		.word	drivers+212
 2915              		.cfi_endproc
 2916              	.LFE207:
 2918              		.section	.text.sendchar_pf,"ax",%progbits
 2919              		.align	1
 2920              		.global	sendchar_pf
 2921              		.syntax unified
 2922              		.code	16
 2923              		.thumb_func
 2924              		.fpu softvfp
 2926              	sendchar_pf:
 2927              	.LVL116:
 2928              	.LFB208:
 791:tmk_core/protocol/chibios/usb_main.c **** 
 792:tmk_core/protocol/chibios/usb_main.c **** #else  /* CONSOLE_ENABLE */
 793:tmk_core/protocol/chibios/usb_main.c **** int8_t sendchar(uint8_t c) {
 794:tmk_core/protocol/chibios/usb_main.c ****     (void)c;
 795:tmk_core/protocol/chibios/usb_main.c ****     return 0;
 796:tmk_core/protocol/chibios/usb_main.c **** }
 797:tmk_core/protocol/chibios/usb_main.c **** #endif /* CONSOLE_ENABLE */
 798:tmk_core/protocol/chibios/usb_main.c **** 
 799:tmk_core/protocol/chibios/usb_main.c **** void sendchar_pf(void *p, char c) {
 2929              		.loc 1 799 35 is_stmt 1 view -0
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 0
 2932              		@ frame_needed = 0, uses_anonymous_args = 0
 800:tmk_core/protocol/chibios/usb_main.c ****     (void)p;
 2933              		.loc 1 800 5 view .LVU655
 801:tmk_core/protocol/chibios/usb_main.c ****     sendchar((uint8_t)c);
 2934              		.loc 1 801 5 view .LVU656
 799:tmk_core/protocol/chibios/usb_main.c ****     (void)p;
 2935              		.loc 1 799 35 is_stmt 0 view .LVU657
 2936 0000 10B5     		push	{r4, lr}
 2937              		.cfi_def_cfa_offset 8
 2938              		.cfi_offset 4, -8
 2939              		.cfi_offset 14, -4
 2940              		.loc 1 801 5 view .LVU658
 2941 0002 0800     		movs	r0, r1
 2942              	.LVL117:
 2943              		.loc 1 801 5 view .LVU659
 2944 0004 FFF7FEFF 		bl	sendchar
 2945              	.LVL118:
 802:tmk_core/protocol/chibios/usb_main.c **** }
 2946              		.loc 1 802 1 view .LVU660
 2947              		@ sp needed
 2948 0008 10BD     		pop	{r4, pc}
 2949              		.cfi_endproc
 2950              	.LFE208:
 2952              		.global	extra_report_blank
 2953              		.global	mouse_report_blank
 2954              		.global	keyboard_report_sent
 2955              		.global	keyboard_idle_count
 2956              		.global	keyboard_led_stats
 2957              		.global	keyboard_protocol
 2958              		.global	keyboard_idle
 2959              		.section	.bss.__compound_literal.0,"aw",%nobits
 2960              		.align	2
 2963              	__compound_literal.0:
 2964 0000 00000000 		.space	144
 2964      00000000 
 2964      00000000 
 2964      00000000 
 2964      00000000 
 2965              		.section	.bss.__compound_literal.1,"aw",%nobits
 2966              		.align	2
 2969              	__compound_literal.1:
 2970 0000 00000000 		.space	144
 2970      00000000 
 2970      00000000 
 2970      00000000 
 2970      00000000 
 2971              		.section	.bss.desc.8382,"aw",%nobits
 2972              		.align	2
 2973              		.set	.LANCHOR0,. + 0
 2976              	desc.8382:
 2977 0000 00000000 		.space	8
 2977      00000000 
 2978              		.section	.bss.extra_report_blank,"aw",%nobits
 2981              	extra_report_blank:
 2982 0000 000000   		.space	3
 2983              		.section	.bss.kbd_ep_state,"aw",%nobits
 2984              		.align	2
 2987              	kbd_ep_state:
 2988 0000 00000000 		.space	20
 2988      00000000 
 2988      00000000 
 2988      00000000 
 2988      00000000 
 2989              		.section	.bss.keyboard_idle,"aw",%nobits
 2990              		.align	1
 2991              		.set	.LANCHOR6,. + 0
 2994              	keyboard_idle:
 2995 0000 00       		.space	1
 2996              		.section	.bss.keyboard_idle_count,"aw",%nobits
 2997              		.align	1
 3000              	keyboard_idle_count:
 3001 0000 0000     		.space	2
 3002              		.section	.bss.keyboard_idle_timer,"aw",%nobits
 3003              		.align	2
 3004              		.set	.LANCHOR5,. + 0
 3007              	keyboard_idle_timer:
 3008 0000 00000000 		.space	20
 3008      00000000 
 3008      00000000 
 3008      00000000 
 3008      00000000 
 3009              		.section	.bss.keyboard_led_stats,"aw",%nobits
 3010              		.set	.LANCHOR2,. + 0
 3013              	keyboard_led_stats:
 3014 0000 00       		.space	1
 3015              		.section	.bss.keyboard_report_sent,"aw",%nobits
 3016              		.set	.LANCHOR8,. + 0
 3019              	keyboard_report_sent:
 3020 0000 00000000 		.space	32
 3020      00000000 
 3020      00000000 
 3020      00000000 
 3020      00000000 
 3021              		.section	.bss.mouse_report_blank,"aw",%nobits
 3024              	mouse_report_blank:
 3025 0000 00000000 		.space	6
 3025      0000
 3026              		.section	.bss.set_report_buf,"aw",%nobits
 3027              		.align	1
 3028              		.set	.LANCHOR1,. + 0
 3031              	set_report_buf:
 3032 0000 0000     		.space	2
 3033              		.section	.bss.shared_ep_state,"aw",%nobits
 3034              		.align	2
 3037              	shared_ep_state:
 3038 0000 00000000 		.space	20
 3038      00000000 
 3038      00000000 
 3038      00000000 
 3038      00000000 
 3039              		.section	.data.drivers,"aw"
 3040              		.align	2
 3043              	drivers:
 3044 0000 04000000 		.word	4
 3045 0004 04000000 		.word	4
 3046 0008 00000000 		.space	60
 3046      00000000 
 3046      00000000 
 3046      00000000 
 3046      00000000 
 3047 0044 03000000 		.word	3
 3048 0048 00000000 		.word	0
 3049 004c 00000000 		.word	qmkusbDataTransmitted
 3050 0050 00000000 		.word	0
 3051 0054 2000     		.short	32
 3052 0056 0000     		.short	0
 3053 0058 00000000 		.word	0
 3054 005c 00000000 		.word	0
 3055 0060 0200     		.short	2
 3056 0062 0000     		.space	2
 3057 0064 00000000 		.word	0
 3058 0068 03000000 		.word	3
 3059 006c 00000000 		.word	0
 3060 0070 00000000 		.word	0
 3061 0074 00000000 		.word	qmkusbDataReceived
 3062 0078 0000     		.short	0
 3063 007a 2000     		.short	32
 3064 007c 00000000 		.word	0
 3065 0080 00000000 		.word	0
 3066 0084 0200     		.short	2
 3067 0086 0000     		.space	2
 3068 0088 00000000 		.word	0
 3069 008c 03000000 		.word	3
 3070 0090 00000000 		.word	0
 3071 0094 00000000 		.word	qmkusbInterruptTransmitted
 3072 0098 00000000 		.word	0
 3073 009c 0800     		.short	8
 3074 009e 0000     		.short	0
 3075 00a0 00000000 		.word	0
 3076 00a4 00000000 		.word	0
 3077 00a8 0200     		.short	2
 3078 00aa 0000     		.space	2
 3079 00ac 00000000 		.word	0
 3080 00b0 00000000 		.word	USBD1
 3081 00b4 03       		.byte	3
 3082 00b5 04       		.byte	4
 3083 00b6 00       		.byte	0
 3084 00b7 00       		.space	1
 3085 00b8 04000000 		.word	4
 3086 00bc 04000000 		.word	4
 3087 00c0 20000000 		.word	32
 3088 00c4 20000000 		.word	32
 3089 00c8 01       		.byte	1
 3090 00c9 000000   		.space	3
 3091 00cc 00000000 		.word	__compound_literal.0
 3092 00d0 00000000 		.word	__compound_literal.1
 3093 00d4 00000000 		.space	128
 3093      00000000 
 3093      00000000 
 3093      00000000 
 3093      00000000 
 3094              		.section	.data.keyboard_protocol,"aw"
 3095              		.align	1
 3096              		.set	.LANCHOR7,. + 0
 3099              	keyboard_protocol:
 3100 0000 01       		.byte	1
 3101              		.section	.rodata.kbd_ep_config,"a"
 3102              		.align	2
 3103              		.set	.LANCHOR3,. + 0
 3106              	kbd_ep_config:
 3107 0000 03000000 		.word	3
 3108 0004 00000000 		.word	0
 3109 0008 00000000 		.word	kbd_in_cb
 3110 000c 00000000 		.word	0
 3111 0010 0800     		.short	8
 3112 0012 0000     		.short	0
 3113 0014 00000000 		.word	kbd_ep_state
 3114 0018 00000000 		.word	0
 3115 001c 0200     		.short	2
 3116 001e 0000     		.space	2
 3117 0020 00000000 		.word	0
 3118              		.section	.rodata.shared_ep_config,"a"
 3119              		.align	2
 3120              		.set	.LANCHOR4,. + 0
 3123              	shared_ep_config:
 3124 0000 03000000 		.word	3
 3125 0004 00000000 		.word	0
 3126 0008 00000000 		.word	shared_in_cb
 3127 000c 00000000 		.word	0
 3128 0010 2000     		.short	32
 3129 0012 0000     		.short	0
 3130 0014 00000000 		.word	shared_ep_state
 3131 0018 00000000 		.word	0
 3132 001c 0200     		.short	2
 3133 001e 0000     		.space	2
 3134 0020 00000000 		.word	0
 3135              		.section	.rodata.usbcfg,"a"
 3136              		.align	2
 3137              		.set	.LANCHOR9,. + 0
 3140              	usbcfg:
 3141 0000 00000000 		.word	usb_event_cb
 3142 0004 00000000 		.word	usb_get_descriptor_cb
 3143 0008 00000000 		.word	usb_request_hook_cb
 3144 000c 00000000 		.word	usb_sof_cb
 3145              		.text
 3146              	.Letext0:
 3147              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 3148              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 3149              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 3150              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 3151              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 3152              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 3153              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 3154              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 3155              		.file 15 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 3156              		.file 16 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 3157              		.file 17 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 3158              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 3159              		.file 19 "./lib/chibios/os/rt/include/chsem.h"
 3160              		.file 20 "./lib/chibios/os/rt/include/chmtx.h"
 3161              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 3162              		.file 22 "./lib/chibios/os/rt/include/chevents.h"
 3163              		.file 23 "./lib/chibios/os/oslib/include/chmemcore.h"
 3164              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 3165              		.file 25 "./lib/chibios/os/hal/include/hal_buffers.h"
 3166              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 3167              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 3168              		.file 28 "./lib/chibios/os/hal/include/hal_i2c.h"
 3169              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 3170              		.file 30 "./lib/chibios/os/hal/include/hal_pwm.h"
 3171              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 3172              		.file 32 "./lib/chibios/os/hal/include/hal_spi.h"
 3173              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 3174              		.file 34 "./lib/chibios/os/hal/include/hal_usb.h"
 3175              		.file 35 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 3176              		.file 36 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/stm32_usb.h"
 3177              		.file 37 "tmk_core/common/report.h"
 3178              		.file 38 "tmk_core/protocol/usb_descriptor.h"
 3179              		.file 39 "tmk_core/common/host.h"
 3180              		.file 40 "tmk_core/common/debug.h"
 3181              		.file 41 "tmk_core/protocol/chibios/usb_driver.h"
 3182              		.file 42 "quantum/keycode_config.h"
 3183              		.file 43 "./lib/chibios/os/rt/include/chthreads.h"
 3184              		.file 44 "tmk_core/common/sleep_led.h"
 3185              		.file 45 "tmk_core/common/suspend.h"
 3186              		.file 46 "tmk_core/common/led.h"
 3187              		.file 47 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 usb_main.c
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:16     .text.kbd_in_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:24     .text.kbd_in_cb:00000000 kbd_in_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:42     .text.usb_get_descriptor_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:48     .text.usb_get_descriptor_cb:00000000 usb_get_descriptor_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:110    .text.usb_get_descriptor_cb:00000028 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:115    .text.set_led_transfer_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:121    .text.set_led_transfer_cb:00000000 set_led_transfer_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:175    .text.set_led_transfer_cb:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:181    .text.usb_event_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:187    .text.usb_event_cb:00000000 usb_event_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:212    .text.usb_event_cb:0000000e $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:218    .text.usb_event_cb:00000014 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:680    .text.usb_event_cb:0000008c $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3043   .data.drivers:00000000 drivers
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:691    .text.usb_sof_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:697    .text.usb_sof_cb:00000000 usb_sof_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:870    .text.usb_sof_cb:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:875    .text.chVTSetI.constprop.8:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:881    .text.chVTSetI.constprop.8:00000000 chVTSetI.constprop.8
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:954    .text.chVTSetI.constprop.8:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:969    .text.keyboard_idle_timer_cb:00000000 keyboard_idle_timer_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:963    .text.keyboard_idle_timer_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1204   .text.keyboard_idle_timer_cb:00000060 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1216   .text.usb_request_hook_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1222   .text.usb_request_hook_cb:00000000 usb_request_hook_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1664   .text.usb_request_hook_cb:00000164 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1679   .text.shared_in_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1686   .text.shared_in_cb:00000000 shared_in_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1698   .text.init_usb_driver:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1705   .text.init_usb_driver:00000000 init_usb_driver
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1832   .text.init_usb_driver:00000054 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1847   .text.kbd_sof_cb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1854   .text.kbd_sof_cb:00000000 kbd_sof_cb
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1870   .text.keyboard_leds:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1877   .text.keyboard_leds:00000000 keyboard_leds
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1896   .text.keyboard_leds:00000008 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1901   .text.send_keyboard:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:1908   .text.send_keyboard:00000000 send_keyboard
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2172   .text.send_keyboard:00000078 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2181   .text.send_mouse:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2188   .text.send_mouse:00000000 send_mouse
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2369   .text.send_mouse:00000038 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2374   .text.send_system:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2381   .text.send_system:00000000 send_system
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2587   .text.send_system:00000028 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2596   .text.send_consumer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2603   .text.send_consumer:00000000 send_consumer
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2805   .text.send_consumer:00000028 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2814   .text.sendchar:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2821   .text.sendchar:00000000 sendchar
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2859   .text.sendchar:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2864   .text.console_task:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2871   .text.console_task:00000000 console_task
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2914   .text.console_task:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2919   .text.sendchar_pf:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2926   .text.sendchar_pf:00000000 sendchar_pf
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2981   .bss.extra_report_blank:00000000 extra_report_blank
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3024   .bss.mouse_report_blank:00000000 mouse_report_blank
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3019   .bss.keyboard_report_sent:00000000 keyboard_report_sent
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3000   .bss.keyboard_idle_count:00000000 keyboard_idle_count
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3013   .bss.keyboard_led_stats:00000000 keyboard_led_stats
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3099   .data.keyboard_protocol:00000000 keyboard_protocol
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2994   .bss.keyboard_idle:00000000 keyboard_idle
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2960   .bss.__compound_literal.0:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2963   .bss.__compound_literal.0:00000000 __compound_literal.0
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2966   .bss.__compound_literal.1:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2969   .bss.__compound_literal.1:00000000 __compound_literal.1
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2972   .bss.desc.8382:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2976   .bss.desc.8382:00000000 desc.8382
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2982   .bss.extra_report_blank:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2984   .bss.kbd_ep_state:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2987   .bss.kbd_ep_state:00000000 kbd_ep_state
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2990   .bss.keyboard_idle:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:2997   .bss.keyboard_idle_count:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3003   .bss.keyboard_idle_timer:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3007   .bss.keyboard_idle_timer:00000000 keyboard_idle_timer
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3014   .bss.keyboard_led_stats:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3020   .bss.keyboard_report_sent:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3025   .bss.mouse_report_blank:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3027   .bss.set_report_buf:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3031   .bss.set_report_buf:00000000 set_report_buf
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3034   .bss.shared_ep_state:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3037   .bss.shared_ep_state:00000000 shared_ep_state
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3040   .data.drivers:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3095   .data.keyboard_protocol:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3102   .rodata.kbd_ep_config:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3106   .rodata.kbd_ep_config:00000000 kbd_ep_config
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3119   .rodata.shared_ep_config:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3123   .rodata.shared_ep_config:00000000 shared_ep_config
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3136   .rodata.usbcfg:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccjRmyQb.s:3140   .rodata.usbcfg:00000000 usbcfg

UNDEFINED SYMBOLS
get_usb_descriptor
__gnu_thumb1_case_uqi
usbInitEndpointI
qmkusbConfigureHookI
sleep_led_enable
qmkusbSuspendHookI
qmkusbWakeupHookI
suspend_wakeup_init
sleep_led_disable
host_keyboard_leds
led_set
qmkusbSOFHookI
chVTDoResetI
chVTDoSetI
__aeabi_lmul
__aeabi_uldivmod
__aeabi_ldivmod
usbStartTransmitI
keymap_config
qmkusbRequestsHook
qmkusbObjectInit
qmkusbStart
chThdSleep
usbStart
memcpy
chThdSuspendTimeoutS
USBD1
qmkusbDataTransmitted
qmkusbDataReceived
qmkusbInterruptTransmitted
