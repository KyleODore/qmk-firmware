   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"usb_driver.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.obnotify,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	obnotify:
  24              	.LVL0:
  25              	.LFB196:
  26              		.file 1 "tmk_core/protocol/chibios/usb_driver.c"
   1:tmk_core/protocol/chibios/usb_driver.c **** /*
   2:tmk_core/protocol/chibios/usb_driver.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:tmk_core/protocol/chibios/usb_driver.c **** 
   4:tmk_core/protocol/chibios/usb_driver.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:tmk_core/protocol/chibios/usb_driver.c ****     you may not use this file except in compliance with the License.
   6:tmk_core/protocol/chibios/usb_driver.c ****     You may obtain a copy of the License at
   7:tmk_core/protocol/chibios/usb_driver.c **** 
   8:tmk_core/protocol/chibios/usb_driver.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:tmk_core/protocol/chibios/usb_driver.c **** 
  10:tmk_core/protocol/chibios/usb_driver.c ****     Unless required by applicable law or agreed to in writing, software
  11:tmk_core/protocol/chibios/usb_driver.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:tmk_core/protocol/chibios/usb_driver.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:tmk_core/protocol/chibios/usb_driver.c ****     See the License for the specific language governing permissions and
  14:tmk_core/protocol/chibios/usb_driver.c ****     limitations under the License.
  15:tmk_core/protocol/chibios/usb_driver.c **** */
  16:tmk_core/protocol/chibios/usb_driver.c **** 
  17:tmk_core/protocol/chibios/usb_driver.c **** /**
  18:tmk_core/protocol/chibios/usb_driver.c ****  * @file    hal_serial_usb.c
  19:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial over USB Driver code.
  20:tmk_core/protocol/chibios/usb_driver.c ****  *
  21:tmk_core/protocol/chibios/usb_driver.c ****  * @addtogroup SERIAL_USB
  22:tmk_core/protocol/chibios/usb_driver.c ****  * @{
  23:tmk_core/protocol/chibios/usb_driver.c ****  */
  24:tmk_core/protocol/chibios/usb_driver.c **** 
  25:tmk_core/protocol/chibios/usb_driver.c **** #include "hal.h"
  26:tmk_core/protocol/chibios/usb_driver.c **** #include "usb_driver.h"
  27:tmk_core/protocol/chibios/usb_driver.c **** #include <string.h>
  28:tmk_core/protocol/chibios/usb_driver.c **** 
  29:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  30:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local definitions.                                                 */
  31:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  32:tmk_core/protocol/chibios/usb_driver.c **** 
  33:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  34:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported variables.                                                */
  35:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  36:tmk_core/protocol/chibios/usb_driver.c **** 
  37:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  38:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local variables and types.                                         */
  39:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  40:tmk_core/protocol/chibios/usb_driver.c **** 
  41:tmk_core/protocol/chibios/usb_driver.c **** /*
  42:tmk_core/protocol/chibios/usb_driver.c ****  * Current Line Coding.
  43:tmk_core/protocol/chibios/usb_driver.c ****  */
  44:tmk_core/protocol/chibios/usb_driver.c **** static cdc_linecoding_t linecoding = {{0x00, 0x96, 0x00, 0x00}, /* 38400.                          
  45:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_STOP_1,
  46:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_PARITY_NONE,
  47:tmk_core/protocol/chibios/usb_driver.c ****                                       8};
  48:tmk_core/protocol/chibios/usb_driver.c **** 
  49:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  50:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local functions.                                                   */
  51:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  52:tmk_core/protocol/chibios/usb_driver.c **** 
  53:tmk_core/protocol/chibios/usb_driver.c **** static bool qmkusb_start_receive(QMKUSBDriver *qmkusbp) {
  54:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
  55:tmk_core/protocol/chibios/usb_driver.c **** 
  56:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
  57:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
  58:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  59:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  60:tmk_core/protocol/chibios/usb_driver.c ****     }
  61:tmk_core/protocol/chibios/usb_driver.c **** 
  62:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
  63:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetReceiveStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  64:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  65:tmk_core/protocol/chibios/usb_driver.c ****     }
  66:tmk_core/protocol/chibios/usb_driver.c **** 
  67:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for incoming data.*/
  68:tmk_core/protocol/chibios/usb_driver.c ****     buf = ibqGetEmptyBufferI(&qmkusbp->ibqueue);
  69:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
  70:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  71:tmk_core/protocol/chibios/usb_driver.c ****     }
  72:tmk_core/protocol/chibios/usb_driver.c **** 
  73:tmk_core/protocol/chibios/usb_driver.c ****     /* Buffer found, starting a new transaction.*/
  74:tmk_core/protocol/chibios/usb_driver.c ****     usbStartReceiveI(qmkusbp->config->usbp, qmkusbp->config->bulk_out, buf, qmkusbp->ibqueue.bsize 
  75:tmk_core/protocol/chibios/usb_driver.c **** 
  76:tmk_core/protocol/chibios/usb_driver.c ****     return false;
  77:tmk_core/protocol/chibios/usb_driver.c **** }
  78:tmk_core/protocol/chibios/usb_driver.c **** 
  79:tmk_core/protocol/chibios/usb_driver.c **** /*
  80:tmk_core/protocol/chibios/usb_driver.c ****  * Interface implementation.
  81:tmk_core/protocol/chibios/usb_driver.c ****  */
  82:tmk_core/protocol/chibios/usb_driver.c **** 
  83:tmk_core/protocol/chibios/usb_driver.c **** static size_t _write(void *ip, const uint8_t *bp, size_t n) { return obqWriteTimeout(&((QMKUSBDrive
  84:tmk_core/protocol/chibios/usb_driver.c **** 
  85:tmk_core/protocol/chibios/usb_driver.c **** static size_t _read(void *ip, uint8_t *bp, size_t n) { return ibqReadTimeout(&((QMKUSBDriver *)ip)-
  86:tmk_core/protocol/chibios/usb_driver.c **** 
  87:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _put(void *ip, uint8_t b) { return obqPutTimeout(&((QMKUSBDriver *)ip)->obqueue, b, TI
  88:tmk_core/protocol/chibios/usb_driver.c **** 
  89:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _get(void *ip) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->ibqueue, TIME_INFINITE); 
  90:tmk_core/protocol/chibios/usb_driver.c **** 
  91:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _putt(void *ip, uint8_t b, sysinterval_t timeout) { return obqPutTimeout(&((QMKUSBDriv
  92:tmk_core/protocol/chibios/usb_driver.c **** 
  93:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _gett(void *ip, sysinterval_t timeout) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->i
  94:tmk_core/protocol/chibios/usb_driver.c **** 
  95:tmk_core/protocol/chibios/usb_driver.c **** static size_t _writet(void *ip, const uint8_t *bp, size_t n, sysinterval_t timeout) { return obqWri
  96:tmk_core/protocol/chibios/usb_driver.c **** 
  97:tmk_core/protocol/chibios/usb_driver.c **** static size_t _readt(void *ip, uint8_t *bp, size_t n, sysinterval_t timeout) { return ibqReadTimeou
  98:tmk_core/protocol/chibios/usb_driver.c **** 
  99:tmk_core/protocol/chibios/usb_driver.c **** static const struct QMKUSBDriverVMT vmt = {0, _write, _read, _put, _get, _putt, _gett, _writet, _re
 100:tmk_core/protocol/chibios/usb_driver.c **** 
 101:tmk_core/protocol/chibios/usb_driver.c **** /**
 102:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of empty buffer released into the input buffers queue.
 103:tmk_core/protocol/chibios/usb_driver.c ****  *
 104:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 105:tmk_core/protocol/chibios/usb_driver.c ****  */
 106:tmk_core/protocol/chibios/usb_driver.c **** static void ibnotify(io_buffers_queue_t *bqp) {
 107:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 108:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 109:tmk_core/protocol/chibios/usb_driver.c **** }
 110:tmk_core/protocol/chibios/usb_driver.c **** 
 111:tmk_core/protocol/chibios/usb_driver.c **** /**
 112:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of filled buffer inserted into the output buffers queue.
 113:tmk_core/protocol/chibios/usb_driver.c ****  *
 114:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 115:tmk_core/protocol/chibios/usb_driver.c ****  */
 116:tmk_core/protocol/chibios/usb_driver.c **** static void obnotify(io_buffers_queue_t *bqp) {
  27              		.loc 1 116 47 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 117:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
  31              		.loc 1 117 5 view .LVU1
 118:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
  32              		.loc 1 118 5 view .LVU2
 116:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
  33              		.loc 1 116 47 is_stmt 0 view .LVU3
  34 0000 13B5     		push	{r0, r1, r4, lr}
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 0, -16
  37              		.cfi_offset 1, -12
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 118 19 view .LVU4
  41 0002 446B     		ldr	r4, [r0, #52]
  42              	.LVL1:
 119:tmk_core/protocol/chibios/usb_driver.c **** 
 120:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 121:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 122:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  43              		.loc 1 122 5 is_stmt 1 view .LVU5
  44              		.loc 1 122 10 is_stmt 0 view .LVU6
  45 0004 E36F     		ldr	r3, [r4, #124]
  46 0006 1A68     		ldr	r2, [r3]
  47              		.loc 1 122 8 view .LVU7
  48 0008 1178     		ldrb	r1, [r2]
  49 000a 0429     		cmp	r1, #4
  50 000c 15D1     		bne	.L1
  51              		.loc 1 122 67 discriminator 1 view .LVU8
  52 000e 217A     		ldrb	r1, [r4, #8]
  53 0010 0229     		cmp	r1, #2
  54 0012 12D1     		bne	.L1
 123:tmk_core/protocol/chibios/usb_driver.c ****         return;
 124:tmk_core/protocol/chibios/usb_driver.c ****     }
 125:tmk_core/protocol/chibios/usb_driver.c **** 
 126:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
 127:tmk_core/protocol/chibios/usb_driver.c ****     if (!usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  55              		.loc 1 127 5 is_stmt 1 view .LVU9
  56              		.loc 1 127 10 is_stmt 0 view .LVU10
  57 0014 1979     		ldrb	r1, [r3, #4]
  58 0016 0123     		movs	r3, #1
  59 0018 8B40     		lsls	r3, r3, r1
  60              		.loc 1 127 9 view .LVU11
  61 001a 1289     		ldrh	r2, [r2, #8]
  62              		.loc 1 127 8 view .LVU12
  63 001c 1A42     		tst	r2, r3
  64 001e 0CD1     		bne	.L1
  65              	.LBB132:
 128:tmk_core/protocol/chibios/usb_driver.c ****         /* Trying to get a full buffer.*/
 129:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
  66              		.loc 1 129 9 is_stmt 1 view .LVU13
  67              		.loc 1 129 24 is_stmt 0 view .LVU14
  68 0020 2000     		movs	r0, r4
  69              	.LVL2:
  70              		.loc 1 129 24 view .LVU15
  71 0022 01A9     		add	r1, sp, #4
  72 0024 4430     		adds	r0, r0, #68
  73 0026 FFF7FEFF 		bl	obqGetFullBufferI
  74              	.LVL3:
  75 002a 021E     		subs	r2, r0, #0
  76              	.LVL4:
 130:tmk_core/protocol/chibios/usb_driver.c ****         if (buf != NULL) {
  77              		.loc 1 130 9 is_stmt 1 view .LVU16
  78              		.loc 1 130 12 is_stmt 0 view .LVU17
  79 002c 05D0     		beq	.L1
 131:tmk_core/protocol/chibios/usb_driver.c ****             /* Buffer found, starting a new transaction.*/
 132:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
  80              		.loc 1 132 13 is_stmt 1 view .LVU18
  81              		.loc 1 132 38 is_stmt 0 view .LVU19
  82 002e E46F     		ldr	r4, [r4, #124]
  83              	.LVL5:
  84              		.loc 1 132 13 view .LVU20
  85 0030 019B     		ldr	r3, [sp, #4]
  86 0032 2179     		ldrb	r1, [r4, #4]
  87 0034 2068     		ldr	r0, [r4]
  88              	.LVL6:
  89              		.loc 1 132 13 view .LVU21
  90 0036 FFF7FEFF 		bl	usbStartTransmitI
  91              	.LVL7:
  92              	.L1:
  93              		.loc 1 132 13 view .LVU22
  94              	.LBE132:
 133:tmk_core/protocol/chibios/usb_driver.c ****         }
 134:tmk_core/protocol/chibios/usb_driver.c ****     }
 135:tmk_core/protocol/chibios/usb_driver.c **** }
  95              		.loc 1 135 1 view .LVU23
  96              		@ sp needed
  97 003a 13BD     		pop	{r0, r1, r4, pc}
  98              		.cfi_endproc
  99              	.LFE196:
 101              		.section	.text._readt,"ax",%progbits
 102              		.align	1
 103              		.syntax unified
 104              		.code	16
 105              		.thumb_func
 106              		.fpu softvfp
 108              	_readt:
 109              	.LVL8:
 110              	.LFB194:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 111              		.loc 1 97 78 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 115              		.loc 1 97 80 view .LVU25
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 116              		.loc 1 97 78 is_stmt 0 view .LVU26
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 121              		.loc 1 97 87 view .LVU27
 122 0002 0C30     		adds	r0, r0, #12
 123              	.LVL9:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 124              		.loc 1 97 87 view .LVU28
 125 0004 FFF7FEFF 		bl	ibqReadTimeout
 126              	.LVL10:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 127              		.loc 1 97 1 view .LVU29
 128              		@ sp needed
 129 0008 10BD     		pop	{r4, pc}
 130              		.cfi_endproc
 131              	.LFE194:
 133              		.section	.text._read,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	_read:
 141              	.LVL11:
 142              	.LFB188:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 143              		.loc 1 85 54 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 147              		.loc 1 85 56 view .LVU31
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 148              		.loc 1 85 63 is_stmt 0 view .LVU32
 149 0000 0123     		movs	r3, #1
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 150              		.loc 1 85 54 view .LVU33
 151 0002 10B5     		push	{r4, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 4, -8
 154              		.cfi_offset 14, -4
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 155              		.loc 1 85 63 view .LVU34
 156 0004 0C30     		adds	r0, r0, #12
 157              	.LVL12:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 158              		.loc 1 85 63 view .LVU35
 159 0006 5B42     		rsbs	r3, r3, #0
 160 0008 FFF7FEFF 		bl	ibqReadTimeout
 161              	.LVL13:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 162              		.loc 1 85 1 view .LVU36
 163              		@ sp needed
 164 000c 10BD     		pop	{r4, pc}
 165              		.cfi_endproc
 166              	.LFE188:
 168              		.section	.text._writet,"ax",%progbits
 169              		.align	1
 170              		.syntax unified
 171              		.code	16
 172              		.thumb_func
 173              		.fpu softvfp
 175              	_writet:
 176              	.LVL14:
 177              	.LFB193:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 178              		.loc 1 95 85 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 182              		.loc 1 95 87 view .LVU38
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 183              		.loc 1 95 85 is_stmt 0 view .LVU39
 184 0000 10B5     		push	{r4, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 188              		.loc 1 95 94 view .LVU40
 189 0002 4430     		adds	r0, r0, #68
 190              	.LVL15:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 191              		.loc 1 95 94 view .LVU41
 192 0004 FFF7FEFF 		bl	obqWriteTimeout
 193              	.LVL16:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 194              		.loc 1 95 1 view .LVU42
 195              		@ sp needed
 196 0008 10BD     		pop	{r4, pc}
 197              		.cfi_endproc
 198              	.LFE193:
 200              		.section	.text._write,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.code	16
 204              		.thumb_func
 205              		.fpu softvfp
 207              	_write:
 208              	.LVL17:
 209              	.LFB187:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 210              		.loc 1 83 61 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 214              		.loc 1 83 63 view .LVU44
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 215              		.loc 1 83 70 is_stmt 0 view .LVU45
 216 0000 0123     		movs	r3, #1
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 217              		.loc 1 83 61 view .LVU46
 218 0002 10B5     		push	{r4, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 4, -8
 221              		.cfi_offset 14, -4
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 222              		.loc 1 83 70 view .LVU47
 223 0004 4430     		adds	r0, r0, #68
 224              	.LVL18:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 225              		.loc 1 83 70 view .LVU48
 226 0006 5B42     		rsbs	r3, r3, #0
 227 0008 FFF7FEFF 		bl	obqWriteTimeout
 228              	.LVL19:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 229              		.loc 1 83 1 view .LVU49
 230              		@ sp needed
 231 000c 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE187:
 235              		.section	.text._gett,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.code	16
 239              		.thumb_func
 240              		.fpu softvfp
 242              	_gett:
 243              	.LVL20:
 244              	.LFB192:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 245              		.loc 1 93 53 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 249              		.loc 1 93 55 view .LVU51
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 250              		.loc 1 93 53 is_stmt 0 view .LVU52
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 255              		.loc 1 93 62 view .LVU53
 256 0002 0C30     		adds	r0, r0, #12
 257              	.LVL21:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 258              		.loc 1 93 62 view .LVU54
 259 0004 FFF7FEFF 		bl	ibqGetTimeout
 260              	.LVL22:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 261              		.loc 1 93 1 view .LVU55
 262              		@ sp needed
 263 0008 10BD     		pop	{r4, pc}
 264              		.cfi_endproc
 265              	.LFE192:
 267              		.section	.text._get,"ax",%progbits
 268              		.align	1
 269              		.syntax unified
 270              		.code	16
 271              		.thumb_func
 272              		.fpu softvfp
 274              	_get:
 275              	.LVL23:
 276              	.LFB190:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 277              		.loc 1 89 29 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 281              		.loc 1 89 31 view .LVU57
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 282              		.loc 1 89 38 is_stmt 0 view .LVU58
 283 0000 0121     		movs	r1, #1
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 284              		.loc 1 89 29 view .LVU59
 285 0002 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 289              		.loc 1 89 38 view .LVU60
 290 0004 0C30     		adds	r0, r0, #12
 291              	.LVL24:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 292              		.loc 1 89 38 view .LVU61
 293 0006 4942     		rsbs	r1, r1, #0
 294 0008 FFF7FEFF 		bl	ibqGetTimeout
 295              	.LVL25:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 296              		.loc 1 89 1 view .LVU62
 297              		@ sp needed
 298 000c 10BD     		pop	{r4, pc}
 299              		.cfi_endproc
 300              	.LFE190:
 302              		.section	.text._putt,"ax",%progbits
 303              		.align	1
 304              		.syntax unified
 305              		.code	16
 306              		.thumb_func
 307              		.fpu softvfp
 309              	_putt:
 310              	.LVL26:
 311              	.LFB191:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 312              		.loc 1 91 64 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 316              		.loc 1 91 66 view .LVU64
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 317              		.loc 1 91 64 is_stmt 0 view .LVU65
 318 0000 10B5     		push	{r4, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 322              		.loc 1 91 73 view .LVU66
 323 0002 4430     		adds	r0, r0, #68
 324              	.LVL27:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 325              		.loc 1 91 73 view .LVU67
 326 0004 FFF7FEFF 		bl	obqPutTimeout
 327              	.LVL28:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 328              		.loc 1 91 1 view .LVU68
 329              		@ sp needed
 330 0008 10BD     		pop	{r4, pc}
 331              		.cfi_endproc
 332              	.LFE191:
 334              		.section	.text._put,"ax",%progbits
 335              		.align	1
 336              		.syntax unified
 337              		.code	16
 338              		.thumb_func
 339              		.fpu softvfp
 341              	_put:
 342              	.LVL29:
 343              	.LFB189:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 344              		.loc 1 87 40 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 348              		.loc 1 87 42 view .LVU70
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 349              		.loc 1 87 49 is_stmt 0 view .LVU71
 350 0000 0122     		movs	r2, #1
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 351              		.loc 1 87 40 view .LVU72
 352 0002 10B5     		push	{r4, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 356              		.loc 1 87 49 view .LVU73
 357 0004 4430     		adds	r0, r0, #68
 358              	.LVL30:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 359              		.loc 1 87 49 view .LVU74
 360 0006 5242     		rsbs	r2, r2, #0
 361 0008 FFF7FEFF 		bl	obqPutTimeout
 362              	.LVL31:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 363              		.loc 1 87 1 view .LVU75
 364              		@ sp needed
 365 000c 10BD     		pop	{r4, pc}
 366              		.cfi_endproc
 367              	.LFE189:
 369              		.section	.text.qmkusb_start_receive,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.code	16
 373              		.thumb_func
 374              		.fpu softvfp
 376              	qmkusb_start_receive:
 377              	.LVL32:
 378              	.LFB186:
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 379              		.loc 1 53 57 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
  54:tmk_core/protocol/chibios/usb_driver.c **** 
 383              		.loc 1 54 5 view .LVU77
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 384              		.loc 1 58 5 view .LVU78
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 385              		.loc 1 58 10 is_stmt 0 view .LVU79
 386 0000 C26F     		ldr	r2, [r0, #124]
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 387              		.loc 1 53 57 view .LVU80
 388 0002 70B5     		push	{r4, r5, r6, lr}
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 4, -16
 391              		.cfi_offset 5, -12
 392              		.cfi_offset 6, -8
 393              		.cfi_offset 14, -4
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 394              		.loc 1 58 10 view .LVU81
 395 0004 1368     		ldr	r3, [r2]
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 396              		.loc 1 53 57 view .LVU82
 397 0006 0500     		movs	r5, r0
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 398              		.loc 1 58 8 view .LVU83
 399 0008 1978     		ldrb	r1, [r3]
 400 000a 0429     		cmp	r1, #4
 401 000c 01D0     		beq	.L18
 402              	.LVL33:
 403              	.L20:
  59:tmk_core/protocol/chibios/usb_driver.c ****     }
 404              		.loc 1 59 16 view .LVU84
 405 000e 0120     		movs	r0, #1
 406              	.L19:
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 407              		.loc 1 77 1 view .LVU85
 408              		@ sp needed
 409              	.LVL34:
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 410              		.loc 1 77 1 view .LVU86
 411 0010 70BD     		pop	{r4, r5, r6, pc}
 412              	.LVL35:
 413              	.L18:
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 414              		.loc 1 58 67 discriminator 1 view .LVU87
 415 0012 017A     		ldrb	r1, [r0, #8]
 416 0014 0229     		cmp	r1, #2
 417 0016 FAD1     		bne	.L20
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 418              		.loc 1 63 5 is_stmt 1 view .LVU88
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 419              		.loc 1 63 9 is_stmt 0 view .LVU89
 420 0018 0120     		movs	r0, #1
 421              	.LVL36:
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 422              		.loc 1 63 9 view .LVU90
 423 001a 1279     		ldrb	r2, [r2, #4]
 424 001c 5C89     		ldrh	r4, [r3, #10]
 425 001e 9040     		lsls	r0, r0, r2
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 426              		.loc 1 63 8 view .LVU91
 427 0020 0440     		ands	r4, r0
 428 0022 F4D1     		bne	.L20
 429              	.LVL37:
 430              	.LBB135:
 431              	.LBI135:
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 432              		.loc 1 53 13 is_stmt 1 view .LVU92
 433              	.LBB136:
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 434              		.loc 1 68 5 view .LVU93
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 435              		.loc 1 68 11 is_stmt 0 view .LVU94
 436 0024 2800     		movs	r0, r5
 437 0026 0C30     		adds	r0, r0, #12
 438 0028 FFF7FEFF 		bl	ibqGetEmptyBufferI
 439              	.LVL38:
 440 002c 021E     		subs	r2, r0, #0
 441              	.LVL39:
  69:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 442              		.loc 1 69 5 is_stmt 1 view .LVU95
  69:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 443              		.loc 1 69 8 is_stmt 0 view .LVU96
 444 002e EED0     		beq	.L20
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 445              		.loc 1 74 5 is_stmt 1 view .LVU97
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 446              		.loc 1 74 29 is_stmt 0 view .LVU98
 447 0030 EE6F     		ldr	r6, [r5, #124]
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 448              		.loc 1 74 5 view .LVU99
 449 0032 AB6A     		ldr	r3, [r5, #40]
 450 0034 3068     		ldr	r0, [r6]
 451              	.LVL40:
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 452              		.loc 1 74 5 view .LVU100
 453 0036 043B     		subs	r3, r3, #4
 454 0038 7179     		ldrb	r1, [r6, #5]
 455 003a FFF7FEFF 		bl	usbStartReceiveI
 456              	.LVL41:
  76:tmk_core/protocol/chibios/usb_driver.c **** }
 457              		.loc 1 76 5 is_stmt 1 view .LVU101
  76:tmk_core/protocol/chibios/usb_driver.c **** }
 458              		.loc 1 76 12 is_stmt 0 view .LVU102
 459 003e 2000     		movs	r0, r4
 460 0040 E6E7     		b	.L19
 461              	.LBE136:
 462              	.LBE135:
 463              		.cfi_endproc
 464              	.LFE186:
 466              		.section	.text.ibnotify,"ax",%progbits
 467              		.align	1
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 471              		.fpu softvfp
 473              	ibnotify:
 474              	.LVL42:
 475              	.LFB195:
 106:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 476              		.loc 1 106 47 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 107:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 480              		.loc 1 107 5 view .LVU104
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 481              		.loc 1 108 5 view .LVU105
 106:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 482              		.loc 1 106 47 is_stmt 0 view .LVU106
 483 0000 10B5     		push	{r4, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 487              		.loc 1 108 11 view .LVU107
 488 0002 406B     		ldr	r0, [r0, #52]
 489              	.LVL43:
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 490              		.loc 1 108 11 view .LVU108
 491 0004 FFF7FEFF 		bl	qmkusb_start_receive
 492              	.LVL44:
 109:tmk_core/protocol/chibios/usb_driver.c **** 
 493              		.loc 1 109 1 view .LVU109
 494              		@ sp needed
 495 0008 10BD     		pop	{r4, pc}
 496              		.cfi_endproc
 497              	.LFE195:
 499              		.section	.text.qmkusbInit,"ax",%progbits
 500              		.align	1
 501              		.global	qmkusbInit
 502              		.syntax unified
 503              		.code	16
 504              		.thumb_func
 505              		.fpu softvfp
 507              	qmkusbInit:
 508              	.LFB197:
 136:tmk_core/protocol/chibios/usb_driver.c **** 
 137:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 138:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported functions.                                                */
 139:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 140:tmk_core/protocol/chibios/usb_driver.c **** 
 141:tmk_core/protocol/chibios/usb_driver.c **** /**
 142:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial Driver initialization.
 143:tmk_core/protocol/chibios/usb_driver.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
 144:tmk_core/protocol/chibios/usb_driver.c ****  *          no need to explicitly initialize the driver.
 145:tmk_core/protocol/chibios/usb_driver.c ****  *
 146:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 147:tmk_core/protocol/chibios/usb_driver.c ****  */
 148:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInit(void) {}
 509              		.loc 1 148 23 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              		.loc 1 148 24 view .LVU111
 515              		.loc 1 148 1 is_stmt 0 view .LVU112
 516              		@ sp needed
 517 0000 7047     		bx	lr
 518              		.cfi_endproc
 519              	.LFE197:
 521              		.section	.text.qmkusbObjectInit,"ax",%progbits
 522              		.align	1
 523              		.global	qmkusbObjectInit
 524              		.syntax unified
 525              		.code	16
 526              		.thumb_func
 527              		.fpu softvfp
 529              	qmkusbObjectInit:
 530              	.LVL45:
 531              	.LFB198:
 149:tmk_core/protocol/chibios/usb_driver.c **** 
 150:tmk_core/protocol/chibios/usb_driver.c **** /**
 151:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Initializes a generic full duplex driver object.
 152:tmk_core/protocol/chibios/usb_driver.c ****  * @details The HW dependent part of the initialization has to be performed
 153:tmk_core/protocol/chibios/usb_driver.c ****  *          outside, usually in the hardware initialization code.
 154:tmk_core/protocol/chibios/usb_driver.c ****  *
 155:tmk_core/protocol/chibios/usb_driver.c ****  * @param[out] qmkusbp     pointer to a @p QMKUSBDriver structure
 156:tmk_core/protocol/chibios/usb_driver.c ****  *
 157:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 158:tmk_core/protocol/chibios/usb_driver.c ****  */
 159:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbObjectInit(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 532              		.loc 1 159 74 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 160:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 536              		.loc 1 160 5 view .LVU114
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 537              		.loc 1 159 74 is_stmt 0 view .LVU115
 538 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 539              		.cfi_def_cfa_offset 32
 540              		.cfi_offset 0, -32
 541              		.cfi_offset 1, -28
 542              		.cfi_offset 2, -24
 543              		.cfi_offset 3, -20
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 6, -8
 547              		.cfi_offset 14, -4
 548              		.loc 1 160 18 view .LVU116
 549 0002 0300     		movs	r3, r0
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 550              		.loc 1 159 74 view .LVU117
 551 0004 0400     		movs	r4, r0
 161:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 162:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state = QMKUSB_STOP;
 552              		.loc 1 162 20 view .LVU118
 553 0006 0126     		movs	r6, #1
 160:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 554              		.loc 1 160 18 view .LVU119
 555 0008 0E4A     		ldr	r2, .L27
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 556              		.loc 1 159 74 view .LVU120
 557 000a 0D00     		movs	r5, r1
 160:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 558              		.loc 1 160 18 view .LVU121
 559 000c 04C3     		stmia	r3!, {r2}
 161:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 560              		.loc 1 161 5 is_stmt 1 view .LVU122
 561              	.LVL46:
 562              	.LBB137:
 563              	.LBI137:
 564              		.file 2 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:./lib/chibios/os/hal/osal/rt/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:./lib/chibios/os/hal/osal/rt/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:./lib/chibios/os/hal/osal/rt/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 776:./lib/chibios/os/hal/osal/rt/osal.h **** }
 777:./lib/chibios/os/hal/osal/rt/osal.h **** 
 778:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 779:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 782:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 783:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 785:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 786:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 787:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 788:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:./lib/chibios/os/hal/osal/rt/osal.h **** 
 790:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 791:./lib/chibios/os/hal/osal/rt/osal.h **** }
 792:./lib/chibios/os/hal/osal/rt/osal.h **** 
 793:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 794:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 795:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 796:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 798:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 799:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 800:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 801:./lib/chibios/os/hal/osal/rt/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
 803:./lib/chibios/os/hal/osal/rt/osal.h **** }
 804:./lib/chibios/os/hal/osal/rt/osal.h **** 
 805:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 806:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 807:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:./lib/chibios/os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 809:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 810:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 813:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 815:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 818:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 819:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 823:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specification.
 825:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 826:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 827:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 828:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:./lib/chibios/os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 830:./lib/chibios/os/hal/osal/rt/osal.h **** 
 831:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:./lib/chibios/os/hal/osal/rt/osal.h **** }
 833:./lib/chibios/os/hal/osal/rt/osal.h **** 
 834:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 835:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 837:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 839:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 840:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 841:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 842:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:./lib/chibios/os/hal/osal/rt/osal.h **** 
 844:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:./lib/chibios/os/hal/osal/rt/osal.h **** }
 846:./lib/chibios/os/hal/osal/rt/osal.h **** 
 847:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 848:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 852:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 853:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 854:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 855:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 856:./lib/chibios/os/hal/osal/rt/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 858:./lib/chibios/os/hal/osal/rt/osal.h **** }
 859:./lib/chibios/os/hal/osal/rt/osal.h **** 
 860:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 861:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 862:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes an event source object.
 863:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 864:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] esp      pointer to the event source object
 865:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 866:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 867:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 868:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 565              		.loc 2 868 20 view .LVU123
 566              	.LBE137:
 869:./lib/chibios/os/hal/osal/rt/osal.h **** 
 870:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtObjectInit(esp);
 567              		.loc 2 870 3 view .LVU124
 568              	.LBB140:
 569              	.LBB138:
 570              	.LBI138:
 571              		.file 3 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 572              		.loc 3 171 20 view .LVU125
 573              	.LBB139:
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 574              		.loc 3 173 3 view .LVU126
 575              		.loc 3 173 13 is_stmt 0 view .LVU127
 576 000e 4360     		str	r3, [r0, #4]
 577              	.LVL47:
 578              		.loc 3 173 13 view .LVU128
 579              	.LBE139:
 580              	.LBE138:
 581              	.LBE140:
 582              		.loc 1 162 5 is_stmt 1 view .LVU129
 163:tmk_core/protocol/chibios/usb_driver.c ****     // Note that the config uses the USB direction naming
 164:tmk_core/protocol/chibios/usb_driver.c ****     ibqObjectInit(&qmkusbp->ibqueue, true, config->ob, config->out_size, config->out_buffers, ibnot
 583              		.loc 1 164 5 is_stmt 0 view .LVU130
 584 0010 0D4B     		ldr	r3, .L27+4
 162:tmk_core/protocol/chibios/usb_driver.c ****     // Note that the config uses the USB direction naming
 585              		.loc 1 162 20 view .LVU131
 586 0012 0672     		strb	r6, [r0, #8]
 587              		.loc 1 164 5 is_stmt 1 view .LVU132
 588 0014 0294     		str	r4, [sp, #8]
 589 0016 0193     		str	r3, [sp, #4]
 590 0018 CB68     		ldr	r3, [r1, #12]
 591 001a 0C30     		adds	r0, r0, #12
 592              	.LVL48:
 593              		.loc 1 164 5 is_stmt 0 view .LVU133
 594 001c 0093     		str	r3, [sp]
 595 001e 4B69     		ldr	r3, [r1, #20]
 596 0020 0A6A     		ldr	r2, [r1, #32]
 597 0022 3100     		movs	r1, r6
 598              	.LVL49:
 599              		.loc 1 164 5 view .LVU134
 600 0024 FFF7FEFF 		bl	ibqObjectInit
 601              	.LVL50:
 165:tmk_core/protocol/chibios/usb_driver.c ****     obqObjectInit(&qmkusbp->obqueue, true, config->ib, config->in_size, config->in_buffers, obnotif
 602              		.loc 1 165 5 is_stmt 1 view .LVU135
 603 0028 2000     		movs	r0, r4
 604 002a 084B     		ldr	r3, .L27+8
 605 002c EA69     		ldr	r2, [r5, #28]
 606 002e 0193     		str	r3, [sp, #4]
 607 0030 AB68     		ldr	r3, [r5, #8]
 608 0032 3100     		movs	r1, r6
 609 0034 0093     		str	r3, [sp]
 610 0036 4430     		adds	r0, r0, #68
 611 0038 2B69     		ldr	r3, [r5, #16]
 612 003a 0294     		str	r4, [sp, #8]
 613 003c FFF7FEFF 		bl	obqObjectInit
 614              	.LVL51:
 166:tmk_core/protocol/chibios/usb_driver.c **** }
 615              		.loc 1 166 1 is_stmt 0 view .LVU136
 616              		@ sp needed
 617              	.LVL52:
 618              	.LVL53:
 619              		.loc 1 166 1 view .LVU137
 620 0040 7FBD     		pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 621              	.L28:
 622 0042 C046     		.align	2
 623              	.L27:
 624 0044 00000000 		.word	.LANCHOR0
 625 0048 00000000 		.word	ibnotify
 626 004c 00000000 		.word	obnotify
 627              		.cfi_endproc
 628              	.LFE198:
 630              		.section	.text.qmkusbStart,"ax",%progbits
 631              		.align	1
 632              		.global	qmkusbStart
 633              		.syntax unified
 634              		.code	16
 635              		.thumb_func
 636              		.fpu softvfp
 638              	qmkusbStart:
 639              	.LVL54:
 640              	.LFB199:
 167:tmk_core/protocol/chibios/usb_driver.c **** 
 168:tmk_core/protocol/chibios/usb_driver.c **** /**
 169:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Configures and starts the driver.
 170:tmk_core/protocol/chibios/usb_driver.c ****  *
 171:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 172:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] config    the serial over USB driver configuration
 173:tmk_core/protocol/chibios/usb_driver.c ****  *
 174:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 175:tmk_core/protocol/chibios/usb_driver.c ****  */
 176:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStart(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 641              		.loc 1 176 69 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 177:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = config->usbp;
 646              		.loc 1 177 5 view .LVU139
 647              		.loc 1 177 16 is_stmt 0 view .LVU140
 648 0000 0A68     		ldr	r2, [r1]
 649              	.LVL55:
 178:tmk_core/protocol/chibios/usb_driver.c **** 
 179:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 650              		.loc 1 179 5 is_stmt 1 view .LVU141
 651              		.loc 1 179 5 view .LVU142
 180:tmk_core/protocol/chibios/usb_driver.c **** 
 181:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 652              		.loc 1 181 5 view .LVU143
 653              	.LBB141:
 654              	.LBI141:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 655              		.loc 2 509 20 view .LVU144
 656              	.LBE141:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 657              		.loc 2 511 3 view .LVU145
 658              	.LBB149:
 659              	.LBB142:
 660              	.LBI142:
 661              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 662              		.loc 4 353 20 view .LVU146
 663              	.LBE142:
 664              	.LBE149:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 665              		.loc 4 355 3 view .LVU147
 666              	.LBB150:
 667              	.LBB147:
 668              	.LBB143:
 669              	.LBI143:
 670              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 671              		.loc 5 387 20 view .LVU148
 672              	.LBE143:
 673              	.LBE147:
 674              	.LBE150:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 675              		.loc 5 389 3 view .LVU149
 676              	.LBB151:
 677              	.LBB148:
 678              	.LBB146:
 679              	.LBB144:
 680              	.LBI144:
 681              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 682              		.loc 6 140 27 view .LVU150
 683              	.LBB145:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 684              		.loc 6 142 3 view .LVU151
 685              		.syntax divided
 686              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 687 0002 72B6     		cpsid i
 688              	@ 0 "" 2
 689              		.thumb
 690              		.syntax unified
 691              	.LBE145:
 692              	.LBE144:
 693              	.LBE146:
 694              	.LBE148:
 695              	.LBE151:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 696              		.loc 4 356 34 view .LVU152
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 697              		.loc 4 357 20 view .LVU153
 182:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 698              		.loc 1 182 5 view .LVU154
 699              		.loc 1 182 5 view .LVU155
 183:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[config->bulk_in - 1U]   = qmkusbp;
 700              		.loc 1 183 5 view .LVU156
 701              		.loc 1 183 27 is_stmt 0 view .LVU157
 702 0004 0B79     		ldrb	r3, [r1, #4]
 703              		.loc 1 183 45 view .LVU158
 704 0006 0933     		adds	r3, r3, #9
 705 0008 9B00     		lsls	r3, r3, #2
 706 000a D318     		adds	r3, r2, r3
 707 000c 5860     		str	r0, [r3, #4]
 184:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[config->bulk_out - 1U] = qmkusbp;
 708              		.loc 1 184 5 is_stmt 1 view .LVU159
 709              		.loc 1 184 28 is_stmt 0 view .LVU160
 710 000e 4B79     		ldrb	r3, [r1, #5]
 711              		.loc 1 184 45 view .LVU161
 712 0010 1133     		adds	r3, r3, #17
 713 0012 9B00     		lsls	r3, r3, #2
 714 0014 9850     		str	r0, [r3, r2]
 185:tmk_core/protocol/chibios/usb_driver.c ****     if (config->int_in > 0U) {
 715              		.loc 1 185 5 is_stmt 1 view .LVU162
 716              		.loc 1 185 15 is_stmt 0 view .LVU163
 717 0016 8B79     		ldrb	r3, [r1, #6]
 718              		.loc 1 185 8 view .LVU164
 719 0018 002B     		cmp	r3, #0
 720 001a 03D0     		beq	.L30
 186:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[config->int_in - 1U] = qmkusbp;
 721              		.loc 1 186 9 is_stmt 1 view .LVU165
 722              		.loc 1 186 46 is_stmt 0 view .LVU166
 723 001c 0933     		adds	r3, r3, #9
 724 001e 9B00     		lsls	r3, r3, #2
 725 0020 D318     		adds	r3, r2, r3
 726 0022 5860     		str	r0, [r3, #4]
 727              	.L30:
 187:tmk_core/protocol/chibios/usb_driver.c ****     }
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = config;
 728              		.loc 1 188 5 is_stmt 1 view .LVU167
 189:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 729              		.loc 1 189 21 is_stmt 0 view .LVU168
 730 0024 0223     		movs	r3, #2
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 731              		.loc 1 188 21 view .LVU169
 732 0026 C167     		str	r1, [r0, #124]
 733              		.loc 1 189 5 is_stmt 1 view .LVU170
 734              		.loc 1 189 21 is_stmt 0 view .LVU171
 735 0028 0372     		strb	r3, [r0, #8]
 190:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 736              		.loc 1 190 5 is_stmt 1 view .LVU172
 737              	.LBB152:
 738              	.LBI152:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 739              		.loc 2 520 20 view .LVU173
 740              	.LBE152:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 741              		.loc 2 522 3 view .LVU174
 742              	.LBB161:
 743              	.LBB153:
 744              	.LBI153:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 745              		.loc 4 365 20 view .LVU175
 746              	.LBB154:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 747              		.loc 4 367 22 view .LVU176
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 748              		.loc 4 368 33 view .LVU177
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 749              		.loc 4 374 3 view .LVU178
 750              		.loc 4 374 3 view .LVU179
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 751              		.loc 4 378 3 view .LVU180
 752              	.LBB155:
 753              	.LBI155:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 754              		.loc 5 396 20 view .LVU181
 755              	.LBE155:
 756              	.LBE154:
 757              	.LBE153:
 758              	.LBE161:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 759              		.loc 5 398 3 view .LVU182
 760              	.LBB162:
 761              	.LBB160:
 762              	.LBB159:
 763              	.LBB158:
 764              	.LBB156:
 765              	.LBI156:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 766              		.loc 6 129 27 view .LVU183
 767              	.LBB157:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 768              		.loc 6 131 3 view .LVU184
 769              		.syntax divided
 770              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 771 002a 62B6     		cpsie i
 772              	@ 0 "" 2
 773              		.thumb
 774              		.syntax unified
 775              	.LBE157:
 776              	.LBE156:
 777              	.LBE158:
 778              	.LBE159:
 779              	.LBE160:
 780              	.LBE162:
 191:tmk_core/protocol/chibios/usb_driver.c **** }
 781              		.loc 1 191 1 is_stmt 0 view .LVU185
 782              		@ sp needed
 783 002c 7047     		bx	lr
 784              		.cfi_endproc
 785              	.LFE199:
 787              		.section	.text.qmkusbStop,"ax",%progbits
 788              		.align	1
 789              		.global	qmkusbStop
 790              		.syntax unified
 791              		.code	16
 792              		.thumb_func
 793              		.fpu softvfp
 795              	qmkusbStop:
 796              	.LVL56:
 797              	.LFB200:
 192:tmk_core/protocol/chibios/usb_driver.c **** 
 193:tmk_core/protocol/chibios/usb_driver.c **** /**
 194:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Stops the driver.
 195:tmk_core/protocol/chibios/usb_driver.c ****  * @details Any thread waiting on the driver's queues will be awakened with
 196:tmk_core/protocol/chibios/usb_driver.c ****  *          the message @p MSG_RESET.
 197:tmk_core/protocol/chibios/usb_driver.c ****  *
 198:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 199:tmk_core/protocol/chibios/usb_driver.c ****  *
 200:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 201:tmk_core/protocol/chibios/usb_driver.c ****  */
 202:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStop(QMKUSBDriver *qmkusbp) {
 798              		.loc 1 202 40 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 203:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 802              		.loc 1 203 5 view .LVU187
 803              		.loc 1 203 16 is_stmt 0 view .LVU188
 804 0000 C36F     		ldr	r3, [r0, #124]
 202:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 805              		.loc 1 202 40 view .LVU189
 806 0002 10B5     		push	{r4, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 4, -8
 809              		.cfi_offset 14, -4
 810              		.loc 1 203 16 view .LVU190
 811 0004 1A68     		ldr	r2, [r3]
 812              	.LVL57:
 204:tmk_core/protocol/chibios/usb_driver.c **** 
 205:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 813              		.loc 1 205 5 is_stmt 1 view .LVU191
 814              		.loc 1 205 5 view .LVU192
 206:tmk_core/protocol/chibios/usb_driver.c **** 
 207:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 815              		.loc 1 207 5 view .LVU193
 816              	.LBB163:
 817              	.LBI163:
 509:./lib/chibios/os/hal/osal/rt/osal.h **** 
 818              		.loc 2 509 20 view .LVU194
 819              	.LBE163:
 511:./lib/chibios/os/hal/osal/rt/osal.h **** }
 820              		.loc 2 511 3 view .LVU195
 821              	.LBB175:
 822              	.LBB164:
 823              	.LBI164:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 824              		.loc 4 353 20 view .LVU196
 825              	.LBE164:
 826              	.LBE175:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 827              		.loc 4 355 3 view .LVU197
 828              	.LBB176:
 829              	.LBB172:
 830              	.LBB165:
 831              	.LBI165:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 832              		.loc 5 387 20 view .LVU198
 833              	.LBE165:
 834              	.LBE172:
 835              	.LBE176:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 836              		.loc 5 389 3 view .LVU199
 837              	.LBB177:
 838              	.LBB173:
 839              	.LBB170:
 840              	.LBB166:
 841              	.LBI166:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 842              		.loc 6 140 27 view .LVU200
 843              	.LBB167:
 844              		.loc 6 142 3 view .LVU201
 845              	.LBE167:
 846              	.LBE166:
 847              	.LBE170:
 848              	.LBE173:
 849              	.LBE177:
 202:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 850              		.loc 1 202 40 is_stmt 0 view .LVU202
 851 0006 0400     		movs	r4, r0
 852              	.LBB178:
 853              	.LBB174:
 854              	.LBB171:
 855              	.LBB169:
 856              	.LBB168:
 857              		.loc 6 142 3 view .LVU203
 858              		.syntax divided
 859              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 860 0008 72B6     		cpsid i
 861              	@ 0 "" 2
 862              		.thumb
 863              		.syntax unified
 864              	.LBE168:
 865              	.LBE169:
 866              	.LBE171:
 867              	.LBE174:
 868              	.LBE178:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 869              		.loc 4 356 34 is_stmt 1 view .LVU204
 357:./lib/chibios/os/rt/include/chsys.h **** }
 870              		.loc 4 357 20 view .LVU205
 208:tmk_core/protocol/chibios/usb_driver.c **** 
 209:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 871              		.loc 1 209 5 view .LVU206
 872              		.loc 1 209 5 view .LVU207
 210:tmk_core/protocol/chibios/usb_driver.c **** 
 211:tmk_core/protocol/chibios/usb_driver.c ****     /* Driver in stopped state.*/
 212:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[qmkusbp->config->bulk_in - 1U]   = NULL;
 873              		.loc 1 212 5 view .LVU208
 874              		.loc 1 212 54 is_stmt 0 view .LVU209
 875 000a 0021     		movs	r1, #0
 876              		.loc 1 212 28 view .LVU210
 877 000c C06F     		ldr	r0, [r0, #124]
 878              	.LVL58:
 879              		.loc 1 212 36 view .LVU211
 880 000e 0379     		ldrb	r3, [r0, #4]
 881              		.loc 1 212 54 view .LVU212
 882 0010 0933     		adds	r3, r3, #9
 883 0012 9B00     		lsls	r3, r3, #2
 884 0014 D318     		adds	r3, r2, r3
 885 0016 5960     		str	r1, [r3, #4]
 213:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[qmkusbp->config->bulk_out - 1U] = NULL;
 886              		.loc 1 213 5 is_stmt 1 view .LVU213
 887              		.loc 1 213 37 is_stmt 0 view .LVU214
 888 0018 4379     		ldrb	r3, [r0, #5]
 889              		.loc 1 213 54 view .LVU215
 890 001a 1133     		adds	r3, r3, #17
 891 001c 9B00     		lsls	r3, r3, #2
 892 001e 9950     		str	r1, [r3, r2]
 214:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp->config->int_in > 0U) {
 893              		.loc 1 214 5 is_stmt 1 view .LVU216
 894              		.loc 1 214 24 is_stmt 0 view .LVU217
 895 0020 8379     		ldrb	r3, [r0, #6]
 896              		.loc 1 214 8 view .LVU218
 897 0022 8B42     		cmp	r3, r1
 898 0024 03D0     		beq	.L35
 215:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[qmkusbp->config->int_in - 1U] = NULL;
 899              		.loc 1 215 9 is_stmt 1 view .LVU219
 900              		.loc 1 215 55 is_stmt 0 view .LVU220
 901 0026 0933     		adds	r3, r3, #9
 902 0028 9B00     		lsls	r3, r3, #2
 903 002a D318     		adds	r3, r2, r3
 904 002c 5960     		str	r1, [r3, #4]
 905              	.L35:
 216:tmk_core/protocol/chibios/usb_driver.c ****     }
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = NULL;
 906              		.loc 1 217 5 is_stmt 1 view .LVU221
 907              		.loc 1 217 21 is_stmt 0 view .LVU222
 908 002e 0023     		movs	r3, #0
 909 0030 E367     		str	r3, [r4, #124]
 218:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 910              		.loc 1 218 5 is_stmt 1 view .LVU223
 911              		.loc 1 218 21 is_stmt 0 view .LVU224
 912 0032 0133     		adds	r3, r3, #1
 913 0034 2372     		strb	r3, [r4, #8]
 219:tmk_core/protocol/chibios/usb_driver.c **** 
 220:tmk_core/protocol/chibios/usb_driver.c ****     /* Enforces a disconnection.*/
 221:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 914              		.loc 1 221 5 is_stmt 1 view .LVU225
 915              	.LVL59:
 916              	.LBB179:
 917              	.LBI179:
 871:./lib/chibios/os/hal/osal/rt/osal.h **** }
 872:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 873:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 874:./lib/chibios/os/hal/osal/rt/osal.h **** 
 875:./lib/chibios/os/hal/osal/rt/osal.h ****   osalDbgCheck(esp != NULL);
 876:./lib/chibios/os/hal/osal/rt/osal.h **** 
 877:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->flags = (eventflags_t)0;
 878:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->cb    = NULL;
 879:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->param = NULL;
 880:./lib/chibios/os/hal/osal/rt/osal.h **** }
 881:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 882:./lib/chibios/os/hal/osal/rt/osal.h **** 
 883:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 884:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 885:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Add flags to an event source object.
 886:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 887:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] esp       pointer to the event flags object
 888:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 889:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 891:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 918              		.loc 2 892 20 view .LVU226
 919              	.LBB180:
 893:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 894:./lib/chibios/os/hal/osal/rt/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
 920              		.loc 2 895 3 view .LVU227
 921 0036 0221     		movs	r1, #2
 922              	.LBE180:
 923              	.LBE179:
 924              		.loc 1 221 5 is_stmt 0 view .LVU228
 925 0038 201D     		adds	r0, r4, #4
 926              	.LVL60:
 927              	.LBB182:
 928              	.LBB181:
 929              		.loc 2 895 3 view .LVU229
 930 003a FFF7FEFF 		bl	chEvtBroadcastFlagsI
 931              	.LVL61:
 932              		.loc 2 895 3 view .LVU230
 933              	.LBE181:
 934              	.LBE182:
 935              		.loc 1 221 44 is_stmt 1 view .LVU231
 222:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 936              		.loc 1 222 5 view .LVU232
 937 003e 2000     		movs	r0, r4
 938 0040 0C30     		adds	r0, r0, #12
 939 0042 FFF7FEFF 		bl	ibqResetI
 940              	.LVL62:
 223:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 941              		.loc 1 223 5 view .LVU233
 942 0046 2000     		movs	r0, r4
 943 0048 4430     		adds	r0, r0, #68
 944 004a FFF7FEFF 		bl	obqResetI
 945              	.LVL63:
 224:tmk_core/protocol/chibios/usb_driver.c ****     osalOsRescheduleS();
 946              		.loc 1 224 5 view .LVU234
 947              	.LBB183:
 948              	.LBI183:
 616:./lib/chibios/os/hal/osal/rt/osal.h **** 
 949              		.loc 2 616 20 view .LVU235
 950              	.LBB184:
 618:./lib/chibios/os/hal/osal/rt/osal.h **** }
 951              		.loc 2 618 3 view .LVU236
 952 004e FFF7FEFF 		bl	chSchRescheduleS
 953              	.LVL64:
 954              	.LBE184:
 955              	.LBE183:
 225:tmk_core/protocol/chibios/usb_driver.c **** 
 226:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 956              		.loc 1 226 5 view .LVU237
 957              	.LBB185:
 958              	.LBI185:
 520:./lib/chibios/os/hal/osal/rt/osal.h **** 
 959              		.loc 2 520 20 view .LVU238
 960              	.LBE185:
 522:./lib/chibios/os/hal/osal/rt/osal.h **** }
 961              		.loc 2 522 3 view .LVU239
 962              	.LBB194:
 963              	.LBB186:
 964              	.LBI186:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 965              		.loc 4 365 20 view .LVU240
 966              	.LBB187:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 967              		.loc 4 367 22 view .LVU241
 368:./lib/chibios/os/rt/include/chsys.h **** 
 968              		.loc 4 368 33 view .LVU242
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 969              		.loc 4 374 3 view .LVU243
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 970              		.loc 4 374 3 view .LVU244
 971              		.loc 4 378 3 view .LVU245
 972              	.LBB188:
 973              	.LBI188:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 974              		.loc 5 396 20 view .LVU246
 975              	.LBE188:
 976              	.LBE187:
 977              	.LBE186:
 978              	.LBE194:
 979              		.loc 5 398 3 view .LVU247
 980              	.LBB195:
 981              	.LBB193:
 982              	.LBB192:
 983              	.LBB191:
 984              	.LBB189:
 985              	.LBI189:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 986              		.loc 6 129 27 view .LVU248
 987              	.LBB190:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 988              		.loc 6 131 3 view .LVU249
 989              		.syntax divided
 990              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 991 0052 62B6     		cpsie i
 992              	@ 0 "" 2
 993              		.thumb
 994              		.syntax unified
 995              	.LBE190:
 996              	.LBE189:
 997              	.LBE191:
 998              	.LBE192:
 999              	.LBE193:
 1000              	.LBE195:
 227:tmk_core/protocol/chibios/usb_driver.c **** }
 1001              		.loc 1 227 1 is_stmt 0 view .LVU250
 1002              		@ sp needed
 1003              	.LVL65:
 1004              		.loc 1 227 1 view .LVU251
 1005 0054 10BD     		pop	{r4, pc}
 1006              		.cfi_endproc
 1007              	.LFE200:
 1009              		.section	.text.qmkusbSuspendHookI,"ax",%progbits
 1010              		.align	1
 1011              		.global	qmkusbSuspendHookI
 1012              		.syntax unified
 1013              		.code	16
 1014              		.thumb_func
 1015              		.fpu softvfp
 1017              	qmkusbSuspendHookI:
 1018              	.LVL66:
 1019              	.LFB201:
 228:tmk_core/protocol/chibios/usb_driver.c **** 
 229:tmk_core/protocol/chibios/usb_driver.c **** /**
 230:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device suspend handler.
 231:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_DISCONNECT event and puts queues in
 232:tmk_core/protocol/chibios/usb_driver.c ****  *          non-blocking mode, this way the application cannot get stuck
 233:tmk_core/protocol/chibios/usb_driver.c ****  *          in the middle of an I/O operations.
 234:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 235:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 236:tmk_core/protocol/chibios/usb_driver.c ****  *
 237:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 238:tmk_core/protocol/chibios/usb_driver.c ****  *
 239:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 240:tmk_core/protocol/chibios/usb_driver.c ****  */
 241:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSuspendHookI(QMKUSBDriver *qmkusbp) {
 1020              		.loc 1 241 48 is_stmt 1 view -0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 242:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 1024              		.loc 1 242 5 view .LVU253
 1025              	.LBB196:
 1026              	.LBI196:
 892:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 1027              		.loc 2 892 20 view .LVU254
 1028              	.LBB197:
 1029              		.loc 2 895 3 view .LVU255
 1030              	.LBE197:
 1031              	.LBE196:
 241:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 1032              		.loc 1 241 48 is_stmt 0 view .LVU256
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 4, -16
 1036              		.cfi_offset 5, -12
 1037              		.cfi_offset 6, -8
 1038              		.cfi_offset 14, -4
 241:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 1039              		.loc 1 241 48 view .LVU257
 1040 0002 0400     		movs	r4, r0
 1041              	.LBB200:
 1042              	.LBB198:
 1043              		.loc 2 895 3 view .LVU258
 1044 0004 0221     		movs	r1, #2
 1045              	.LBE198:
 1046              	.LBE200:
 1047              		.loc 1 242 5 view .LVU259
 1048 0006 0430     		adds	r0, r0, #4
 1049              	.LVL67:
 1050              	.LBB201:
 1051              	.LBB202:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1052              		.loc 2 857 3 view .LVU260
 1053 0008 0225     		movs	r5, #2
 1054              	.LBE202:
 1055              	.LBE201:
 1056              	.LBB206:
 1057              	.LBB199:
 1058              		.loc 2 895 3 view .LVU261
 1059 000a FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1060              	.LVL68:
 1061              		.loc 2 895 3 view .LVU262
 1062              	.LBE199:
 1063              	.LBE206:
 1064              		.loc 1 242 44 is_stmt 1 view .LVU263
 243:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->ibqueue);
 1065              		.loc 1 243 5 view .LVU264
 1066 000e 0126     		movs	r6, #1
 1067 0010 2000     		movs	r0, r4
 1068              	.LBB207:
 1069              	.LBB203:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1070              		.loc 2 857 3 is_stmt 0 view .LVU265
 1071 0012 6D42     		rsbs	r5, r5, #0
 1072 0014 2900     		movs	r1, r5
 1073              	.LBE203:
 1074              	.LBE207:
 1075              		.loc 1 243 5 view .LVU266
 1076 0016 2675     		strb	r6, [r4, #20]
 1077              		.loc 1 243 5 is_stmt 1 view .LVU267
 1078              	.LVL69:
 1079              	.LBB208:
 1080              	.LBI201:
 855:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1081              		.loc 2 855 20 view .LVU268
 1082              	.LBB204:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1083              		.loc 2 857 3 view .LVU269
 1084              	.LBE204:
 1085              	.LBE208:
 1086              		.loc 1 243 5 is_stmt 0 view .LVU270
 1087 0018 0C30     		adds	r0, r0, #12
 1088              	.LVL70:
 1089              	.LBB209:
 1090              	.LBB205:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1091              		.loc 2 857 3 view .LVU271
 1092 001a FFF7FEFF 		bl	chThdDequeueAllI
 1093              	.LVL71:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1094              		.loc 2 857 3 view .LVU272
 1095              	.LBE205:
 1096              	.LBE209:
 1097              		.loc 1 243 34 is_stmt 1 view .LVU273
 244:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->obqueue);
 1098              		.loc 1 244 5 view .LVU274
 1099 001e 2300     		movs	r3, r4
 1100 0020 2000     		movs	r0, r4
 1101 0022 4C33     		adds	r3, r3, #76
 1102 0024 1E70     		strb	r6, [r3]
 1103              		.loc 1 244 5 view .LVU275
 1104              	.LVL72:
 1105              	.LBB210:
 1106              	.LBI210:
 855:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1107              		.loc 2 855 20 view .LVU276
 1108              	.LBB211:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1109              		.loc 2 857 3 view .LVU277
 1110 0026 2900     		movs	r1, r5
 1111              	.LBE211:
 1112              	.LBE210:
 1113              		.loc 1 244 5 is_stmt 0 view .LVU278
 1114 0028 4430     		adds	r0, r0, #68
 1115              	.LVL73:
 1116              	.LBB213:
 1117              	.LBB212:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1118              		.loc 2 857 3 view .LVU279
 1119 002a FFF7FEFF 		bl	chThdDequeueAllI
 1120              	.LVL74:
 857:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1121              		.loc 2 857 3 view .LVU280
 1122              	.LBE212:
 1123              	.LBE213:
 1124              		.loc 1 244 34 is_stmt 1 view .LVU281
 245:tmk_core/protocol/chibios/usb_driver.c **** }
 1125              		.loc 1 245 1 is_stmt 0 view .LVU282
 1126              		@ sp needed
 1127              	.LVL75:
 1128              		.loc 1 245 1 view .LVU283
 1129 002e 70BD     		pop	{r4, r5, r6, pc}
 1130              		.cfi_endproc
 1131              	.LFE201:
 1133              		.section	.text.qmkusbWakeupHookI,"ax",%progbits
 1134              		.align	1
 1135              		.global	qmkusbWakeupHookI
 1136              		.syntax unified
 1137              		.code	16
 1138              		.thumb_func
 1139              		.fpu softvfp
 1141              	qmkusbWakeupHookI:
 1142              	.LVL76:
 1143              	.LFB202:
 246:tmk_core/protocol/chibios/usb_driver.c **** 
 247:tmk_core/protocol/chibios/usb_driver.c **** /**
 248:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device wakeup handler.
 249:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_CONNECT event and resumes normal queues
 250:tmk_core/protocol/chibios/usb_driver.c ****  *          operations.
 251:tmk_core/protocol/chibios/usb_driver.c ****  *
 252:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 253:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 254:tmk_core/protocol/chibios/usb_driver.c ****  *
 255:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 256:tmk_core/protocol/chibios/usb_driver.c ****  *
 257:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 258:tmk_core/protocol/chibios/usb_driver.c ****  */
 259:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbWakeupHookI(QMKUSBDriver *qmkusbp) {
 1144              		.loc 1 259 47 is_stmt 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 260:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1148              		.loc 1 260 5 view .LVU285
 1149              	.LBB214:
 1150              	.LBI214:
 892:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 1151              		.loc 2 892 20 view .LVU286
 1152              	.LBB215:
 1153              		.loc 2 895 3 view .LVU287
 1154              	.LBE215:
 1155              	.LBE214:
 259:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1156              		.loc 1 259 47 is_stmt 0 view .LVU288
 1157 0000 10B5     		push	{r4, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161              	.LBB218:
 1162              	.LBB216:
 1163              		.loc 2 895 3 view .LVU289
 1164 0002 0121     		movs	r1, #1
 1165              	.LBE216:
 1166              	.LBE218:
 259:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1167              		.loc 1 259 47 view .LVU290
 1168 0004 0400     		movs	r4, r0
 1169              		.loc 1 260 5 view .LVU291
 1170 0006 0430     		adds	r0, r0, #4
 1171              	.LVL77:
 1172              	.LBB219:
 1173              	.LBB217:
 1174              		.loc 2 895 3 view .LVU292
 1175 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1176              	.LVL78:
 1177              		.loc 2 895 3 view .LVU293
 1178              	.LBE217:
 1179              	.LBE219:
 1180              		.loc 1 260 41 is_stmt 1 view .LVU294
 261:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1181              		.loc 1 261 5 view .LVU295
 1182 000c 0023     		movs	r3, #0
 1183 000e 2375     		strb	r3, [r4, #20]
 1184              		.loc 1 261 33 view .LVU296
 262:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 1185              		.loc 1 262 5 view .LVU297
 1186 0010 4C34     		adds	r4, r4, #76
 1187              	.LVL79:
 1188              		.loc 1 262 5 is_stmt 0 view .LVU298
 1189 0012 2370     		strb	r3, [r4]
 1190              		.loc 1 262 33 is_stmt 1 view .LVU299
 263:tmk_core/protocol/chibios/usb_driver.c **** }
 1191              		.loc 1 263 1 is_stmt 0 view .LVU300
 1192              		@ sp needed
 1193              	.LVL80:
 1194              		.loc 1 263 1 view .LVU301
 1195 0014 10BD     		pop	{r4, pc}
 1196              		.cfi_endproc
 1197              	.LFE202:
 1199              		.section	.text.qmkusbConfigureHookI,"ax",%progbits
 1200              		.align	1
 1201              		.global	qmkusbConfigureHookI
 1202              		.syntax unified
 1203              		.code	16
 1204              		.thumb_func
 1205              		.fpu softvfp
 1207              	qmkusbConfigureHookI:
 1208              	.LVL81:
 1209              	.LFB203:
 264:tmk_core/protocol/chibios/usb_driver.c **** 
 265:tmk_core/protocol/chibios/usb_driver.c **** /**
 266:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device configured handler.
 267:tmk_core/protocol/chibios/usb_driver.c ****  *
 268:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 269:tmk_core/protocol/chibios/usb_driver.c ****  *
 270:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 271:tmk_core/protocol/chibios/usb_driver.c ****  */
 272:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbConfigureHookI(QMKUSBDriver *qmkusbp) {
 1210              		.loc 1 272 50 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1214              		.loc 1 273 5 view .LVU303
 272:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1215              		.loc 1 272 50 is_stmt 0 view .LVU304
 1216 0000 70B5     		push	{r4, r5, r6, lr}
 1217              		.cfi_def_cfa_offset 16
 1218              		.cfi_offset 4, -16
 1219              		.cfi_offset 5, -12
 1220              		.cfi_offset 6, -8
 1221              		.cfi_offset 14, -4
 272:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1222              		.loc 1 272 50 view .LVU305
 1223 0002 0400     		movs	r4, r0
 1224              		.loc 1 273 5 view .LVU306
 1225 0004 0C30     		adds	r0, r0, #12
 1226              	.LVL82:
 1227              		.loc 1 273 5 view .LVU307
 1228 0006 FFF7FEFF 		bl	ibqResetI
 1229              	.LVL83:
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1230              		.loc 1 274 5 is_stmt 1 view .LVU308
 1231 000a 0025     		movs	r5, #0
 275:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 1232              		.loc 1 275 5 is_stmt 0 view .LVU309
 1233 000c 2000     		movs	r0, r4
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1234              		.loc 1 274 5 view .LVU310
 1235 000e 2575     		strb	r5, [r4, #20]
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1236              		.loc 1 274 33 is_stmt 1 view .LVU311
 1237              		.loc 1 275 5 view .LVU312
 1238 0010 4430     		adds	r0, r0, #68
 1239 0012 FFF7FEFF 		bl	obqResetI
 1240              	.LVL84:
 276:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 1241              		.loc 1 276 5 view .LVU313
 1242 0016 2300     		movs	r3, r4
 1243 0018 4C33     		adds	r3, r3, #76
 1244 001a 1D70     		strb	r5, [r3]
 1245              		.loc 1 276 33 view .LVU314
 277:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1246              		.loc 1 277 5 view .LVU315
 1247              	.LVL85:
 1248              	.LBB220:
 1249              	.LBI220:
 892:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 1250              		.loc 2 892 20 view .LVU316
 1251              	.LBB221:
 1252              		.loc 2 895 3 view .LVU317
 1253              	.LBE221:
 1254              	.LBE220:
 1255              		.loc 1 277 5 is_stmt 0 view .LVU318
 1256 001c 201D     		adds	r0, r4, #4
 1257              	.LVL86:
 1258              	.LBB223:
 1259              	.LBB222:
 1260              		.loc 2 895 3 view .LVU319
 1261 001e 0121     		movs	r1, #1
 1262 0020 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1263              	.LVL87:
 1264              		.loc 2 895 3 view .LVU320
 1265              	.LBE222:
 1266              	.LBE223:
 1267              		.loc 1 277 41 is_stmt 1 view .LVU321
 278:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1268              		.loc 1 278 5 view .LVU322
 1269              		.loc 1 278 11 is_stmt 0 view .LVU323
 1270 0024 2000     		movs	r0, r4
 1271 0026 FFF7FEFF 		bl	qmkusb_start_receive
 1272              	.LVL88:
 279:tmk_core/protocol/chibios/usb_driver.c **** }
 1273              		.loc 1 279 1 view .LVU324
 1274              		@ sp needed
 1275              	.LVL89:
 1276              		.loc 1 279 1 view .LVU325
 1277 002a 70BD     		pop	{r4, r5, r6, pc}
 1278              		.cfi_endproc
 1279              	.LFE203:
 1281              		.section	.text.qmkusbRequestsHook,"ax",%progbits
 1282              		.align	1
 1283              		.global	qmkusbRequestsHook
 1284              		.syntax unified
 1285              		.code	16
 1286              		.thumb_func
 1287              		.fpu softvfp
 1289              	qmkusbRequestsHook:
 1290              	.LVL90:
 1291              	.LFB204:
 280:tmk_core/protocol/chibios/usb_driver.c **** 
 281:tmk_core/protocol/chibios/usb_driver.c **** /**
 282:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default requests hook.
 283:tmk_core/protocol/chibios/usb_driver.c ****  * @details Applications wanting to use the Serial over USB driver can use
 284:tmk_core/protocol/chibios/usb_driver.c ****  *          this function as requests hook in the USB configuration.
 285:tmk_core/protocol/chibios/usb_driver.c ****  *          The following requests are emulated:
 286:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_GET_LINE_CODING.
 287:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_LINE_CODING.
 288:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_CONTROL_LINE_STATE.
 289:tmk_core/protocol/chibios/usb_driver.c ****  *          .
 290:tmk_core/protocol/chibios/usb_driver.c ****  *
 291:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 292:tmk_core/protocol/chibios/usb_driver.c ****  * @return              The hook status.
 293:tmk_core/protocol/chibios/usb_driver.c ****  * @retval true         Message handled internally.
 294:tmk_core/protocol/chibios/usb_driver.c ****  * @retval false        Message not handled.
 295:tmk_core/protocol/chibios/usb_driver.c ****  */
 296:tmk_core/protocol/chibios/usb_driver.c **** bool qmkusbRequestsHook(USBDriver *usbp) {
 1292              		.loc 1 296 42 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 297:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) {
 1297              		.loc 1 297 5 view .LVU327
 1298              		.loc 1 297 21 is_stmt 0 view .LVU328
 1299 0000 0200     		movs	r2, r0
 1300              		.loc 1 297 8 view .LVU329
 1301 0002 6021     		movs	r1, #96
 1302              		.loc 1 297 21 view .LVU330
 1303 0004 7432     		adds	r2, r2, #116
 1304              		.loc 1 297 8 view .LVU331
 1305 0006 1278     		ldrb	r2, [r2]
 296:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) {
 1306              		.loc 1 296 42 view .LVU332
 1307 0008 0300     		movs	r3, r0
 1308              		.loc 1 297 8 view .LVU333
 1309 000a 0A40     		ands	r2, r1
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 299:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_GET_LINE_CODING:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 301:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 302:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_LINE_CODING:
 303:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 304:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 305:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_CONTROL_LINE_STATE:
 306:tmk_core/protocol/chibios/usb_driver.c ****                 /* Nothing to do, there are no control lines.*/
 307:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, NULL, 0, NULL);
 308:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 309:tmk_core/protocol/chibios/usb_driver.c ****             default:
 310:tmk_core/protocol/chibios/usb_driver.c ****                 return false;
 311:tmk_core/protocol/chibios/usb_driver.c ****         }
 312:tmk_core/protocol/chibios/usb_driver.c ****     }
 313:tmk_core/protocol/chibios/usb_driver.c ****     return false;
 1310              		.loc 1 313 12 view .LVU334
 1311 000c 0020     		movs	r0, #0
 1312              	.LVL91:
 297:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1313              		.loc 1 297 8 view .LVU335
 1314 000e 202A     		cmp	r2, #32
 1315 0010 08D1     		bne	.L43
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1316              		.loc 1 298 9 is_stmt 1 view .LVU336
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1317              		.loc 1 298 28 is_stmt 0 view .LVU337
 1318 0012 1A00     		movs	r2, r3
 1319 0014 7532     		adds	r2, r2, #117
 1320 0016 1278     		ldrb	r2, [r2]
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1321              		.loc 1 298 9 view .LVU338
 1322 0018 202A     		cmp	r2, #32
 1323 001a 03D3     		bcc	.L43
 1324 001c 212A     		cmp	r2, #33
 1325 001e 02D9     		bls	.L44
 1326 0020 222A     		cmp	r2, #34
 1327 0022 07D0     		beq	.L45
 1328              	.L43:
 314:tmk_core/protocol/chibios/usb_driver.c **** }
 1329              		.loc 1 314 1 view .LVU339
 1330              		@ sp needed
 1331 0024 7047     		bx	lr
 1332              	.L44:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1333              		.loc 1 300 17 is_stmt 1 view .LVU340
 1334 0026 054A     		ldr	r2, .L49
 1335 0028 9A66     		str	r2, [r3, #104]
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1336              		.loc 1 300 17 view .LVU341
 1337 002a 0722     		movs	r2, #7
 1338 002c DA66     		str	r2, [r3, #108]
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1339              		.loc 1 300 17 view .LVU342
 1340              	.L48:
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1341              		.loc 1 307 17 view .LVU343
 1342 002e 1867     		str	r0, [r3, #112]
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1343              		.loc 1 307 54 view .LVU344
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 1344              		.loc 1 308 17 view .LVU345
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 1345              		.loc 1 308 24 is_stmt 0 view .LVU346
 1346 0030 0120     		movs	r0, #1
 1347 0032 F7E7     		b	.L43
 1348              	.L45:
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1349              		.loc 1 307 17 is_stmt 1 view .LVU347
 1350 0034 9866     		str	r0, [r3, #104]
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1351              		.loc 1 307 17 view .LVU348
 1352 0036 D866     		str	r0, [r3, #108]
 1353 0038 F9E7     		b	.L48
 1354              	.L50:
 1355 003a C046     		.align	2
 1356              	.L49:
 1357 003c 00000000 		.word	.LANCHOR1
 1358              		.cfi_endproc
 1359              	.LFE204:
 1361              		.section	.text.qmkusbSOFHookI,"ax",%progbits
 1362              		.align	1
 1363              		.global	qmkusbSOFHookI
 1364              		.syntax unified
 1365              		.code	16
 1366              		.thumb_func
 1367              		.fpu softvfp
 1369              	qmkusbSOFHookI:
 1370              	.LVL92:
 1371              	.LFB205:
 315:tmk_core/protocol/chibios/usb_driver.c **** 
 316:tmk_core/protocol/chibios/usb_driver.c **** /**
 317:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   SOF handler.
 318:tmk_core/protocol/chibios/usb_driver.c ****  * @details The SOF interrupt is used for automatic flushing of incomplete
 319:tmk_core/protocol/chibios/usb_driver.c ****  *          buffers pending in the output queue.
 320:tmk_core/protocol/chibios/usb_driver.c ****  *
 321:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 322:tmk_core/protocol/chibios/usb_driver.c ****  *
 323:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 324:tmk_core/protocol/chibios/usb_driver.c ****  */
 325:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSOFHookI(QMKUSBDriver *qmkusbp) {
 1372              		.loc 1 325 44 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 8
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 326:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 327:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 328:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
 1376              		.loc 1 328 5 view .LVU350
 1377              		.loc 1 328 10 is_stmt 0 view .LVU351
 1378 0000 C26F     		ldr	r2, [r0, #124]
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 1379              		.loc 1 325 44 view .LVU352
 1380 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1381              		.cfi_def_cfa_offset 24
 1382              		.cfi_offset 0, -24
 1383              		.cfi_offset 1, -20
 1384              		.cfi_offset 4, -16
 1385              		.cfi_offset 5, -12
 1386              		.cfi_offset 6, -8
 1387              		.cfi_offset 14, -4
 1388              		.loc 1 328 10 view .LVU353
 1389 0004 1368     		ldr	r3, [r2]
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 1390              		.loc 1 325 44 view .LVU354
 1391 0006 0400     		movs	r4, r0
 1392              		.loc 1 328 8 view .LVU355
 1393 0008 1978     		ldrb	r1, [r3]
 1394 000a 0429     		cmp	r1, #4
 1395 000c 29D1     		bne	.L51
 1396              		.loc 1 328 67 discriminator 1 view .LVU356
 1397 000e 017A     		ldrb	r1, [r0, #8]
 1398 0010 0229     		cmp	r1, #2
 1399 0012 26D1     		bne	.L51
 329:tmk_core/protocol/chibios/usb_driver.c ****         return;
 330:tmk_core/protocol/chibios/usb_driver.c ****     }
 331:tmk_core/protocol/chibios/usb_driver.c **** 
 332:tmk_core/protocol/chibios/usb_driver.c ****     /* If there is already a transaction ongoing then another one cannot be
 333:tmk_core/protocol/chibios/usb_driver.c ****        started.*/
 334:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
 1400              		.loc 1 334 5 is_stmt 1 view .LVU357
 1401              		.loc 1 334 9 is_stmt 0 view .LVU358
 1402 0014 0125     		movs	r5, #1
 1403 0016 1279     		ldrb	r2, [r2, #4]
 1404 0018 1B89     		ldrh	r3, [r3, #8]
 1405 001a 9540     		lsls	r5, r5, r2
 1406              		.loc 1 334 8 view .LVU359
 1407 001c 1D40     		ands	r5, r3
 1408 001e 20D1     		bne	.L51
 335:tmk_core/protocol/chibios/usb_driver.c ****         return;
 336:tmk_core/protocol/chibios/usb_driver.c ****     }
 337:tmk_core/protocol/chibios/usb_driver.c **** 
 338:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there only a buffer partially filled, if so then it is
 339:tmk_core/protocol/chibios/usb_driver.c ****        enforced in the queue and transmitted.*/
 340:tmk_core/protocol/chibios/usb_driver.c ****     if (obqTryFlushI(&qmkusbp->obqueue)) {
 1409              		.loc 1 340 5 is_stmt 1 view .LVU360
 1410              		.loc 1 340 9 is_stmt 0 view .LVU361
 1411 0020 0600     		movs	r6, r0
 1412 0022 4436     		adds	r6, r6, #68
 1413 0024 3000     		movs	r0, r6
 1414              	.LVL93:
 1415              		.loc 1 340 9 view .LVU362
 1416 0026 FFF7FEFF 		bl	obqTryFlushI
 1417              	.LVL94:
 1418              		.loc 1 340 8 view .LVU363
 1419 002a 0028     		cmp	r0, #0
 1420 002c 19D0     		beq	.L51
 1421              	.LBB224:
 341:tmk_core/protocol/chibios/usb_driver.c ****         size_t   n;
 1422              		.loc 1 341 9 is_stmt 1 view .LVU364
 342:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1423              		.loc 1 342 9 view .LVU365
 1424              		.loc 1 342 24 is_stmt 0 view .LVU366
 1425 002e 3000     		movs	r0, r6
 1426 0030 01A9     		add	r1, sp, #4
 1427 0032 FFF7FEFF 		bl	obqGetFullBufferI
 1428              	.LVL95:
 343:tmk_core/protocol/chibios/usb_driver.c **** 
 344:tmk_core/protocol/chibios/usb_driver.c ****         /* For fixed size drivers, fill the end with zeros */
 345:tmk_core/protocol/chibios/usb_driver.c ****         if (qmkusbp->config->fixed_size) {
 1429              		.loc 1 345 20 view .LVU367
 1430 0036 E36F     		ldr	r3, [r4, #124]
 342:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1431              		.loc 1 342 24 view .LVU368
 1432 0038 0600     		movs	r6, r0
 1433              	.LVL96:
 1434              		.loc 1 345 9 is_stmt 1 view .LVU369
 1435              		.loc 1 345 12 is_stmt 0 view .LVU370
 1436 003a 1A7E     		ldrb	r2, [r3, #24]
 1437 003c 002A     		cmp	r2, #0
 1438 003e 09D0     		beq	.L55
 346:tmk_core/protocol/chibios/usb_driver.c ****             memset(buf + n, 0, qmkusbp->config->in_size - n);
 1439              		.loc 1 346 13 is_stmt 1 view .LVU371
 1440 0040 0198     		ldr	r0, [sp, #4]
 1441              	.LVL97:
 1442              		.loc 1 346 13 is_stmt 0 view .LVU372
 1443 0042 1A69     		ldr	r2, [r3, #16]
 1444 0044 2900     		movs	r1, r5
 1445 0046 121A     		subs	r2, r2, r0
 1446              		.loc 1 346 24 view .LVU373
 1447 0048 3018     		adds	r0, r6, r0
 1448              		.loc 1 346 13 view .LVU374
 1449 004a FFF7FEFF 		bl	memset
 1450              	.LVL98:
 347:tmk_core/protocol/chibios/usb_driver.c ****             n = qmkusbp->config->in_size;
 1451              		.loc 1 347 13 is_stmt 1 view .LVU375
 1452              		.loc 1 347 32 is_stmt 0 view .LVU376
 1453 004e E36F     		ldr	r3, [r4, #124]
 1454              		.loc 1 347 15 view .LVU377
 1455 0050 1B69     		ldr	r3, [r3, #16]
 1456 0052 0193     		str	r3, [sp, #4]
 1457              	.L55:
 348:tmk_core/protocol/chibios/usb_driver.c ****         }
 349:tmk_core/protocol/chibios/usb_driver.c **** 
 350:tmk_core/protocol/chibios/usb_driver.c ****         osalDbgAssert(buf != NULL, "queue is empty");
 1458              		.loc 1 350 9 is_stmt 1 view .LVU378
 1459              		.loc 1 350 9 view .LVU379
 351:tmk_core/protocol/chibios/usb_driver.c **** 
 352:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
 1460              		.loc 1 352 9 view .LVU380
 1461              		.loc 1 352 34 is_stmt 0 view .LVU381
 1462 0054 E06F     		ldr	r0, [r4, #124]
 1463              		.loc 1 352 9 view .LVU382
 1464 0056 019B     		ldr	r3, [sp, #4]
 1465 0058 0179     		ldrb	r1, [r0, #4]
 1466 005a 3200     		movs	r2, r6
 1467 005c 0068     		ldr	r0, [r0]
 1468 005e FFF7FEFF 		bl	usbStartTransmitI
 1469              	.LVL99:
 1470              	.L51:
 1471              		.loc 1 352 9 view .LVU383
 1472              	.LBE224:
 353:tmk_core/protocol/chibios/usb_driver.c ****     }
 354:tmk_core/protocol/chibios/usb_driver.c **** }
 1473              		.loc 1 354 1 view .LVU384
 1474              		@ sp needed
 1475              	.LVL100:
 1476              		.loc 1 354 1 view .LVU385
 1477 0062 73BD     		pop	{r0, r1, r4, r5, r6, pc}
 1478              		.cfi_endproc
 1479              	.LFE205:
 1481              		.section	.text.qmkusbDataTransmitted,"ax",%progbits
 1482              		.align	1
 1483              		.global	qmkusbDataTransmitted
 1484              		.syntax unified
 1485              		.code	16
 1486              		.thumb_func
 1487              		.fpu softvfp
 1489              	qmkusbDataTransmitted:
 1490              	.LVL101:
 1491              	.LFB206:
 355:tmk_core/protocol/chibios/usb_driver.c **** 
 356:tmk_core/protocol/chibios/usb_driver.c **** /**
 357:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data transmitted callback.
 358:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 359:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 360:tmk_core/protocol/chibios/usb_driver.c ****  *
 361:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 362:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        IN endpoint number
 363:tmk_core/protocol/chibios/usb_driver.c ****  */
 364:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataTransmitted(USBDriver *usbp, usbep_t ep) {
 1492              		.loc 1 364 57 is_stmt 1 view -0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 16
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 365:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1496              		.loc 1 365 5 view .LVU387
 366:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
 1497              		.loc 1 366 5 view .LVU388
 367:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->in_params[ep - 1U];
 1498              		.loc 1 367 5 view .LVU389
 1499              		.loc 1 367 19 is_stmt 0 view .LVU390
 1500 0000 0B00     		movs	r3, r1
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1501              		.loc 1 364 57 view .LVU391
 1502 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1503              		.cfi_def_cfa_offset 20
 1504              		.cfi_offset 4, -20
 1505              		.cfi_offset 5, -16
 1506              		.cfi_offset 6, -12
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509              		.loc 1 367 19 view .LVU392
 1510 0004 0933     		adds	r3, r3, #9
 1511 0006 9B00     		lsls	r3, r3, #2
 1512 0008 C318     		adds	r3, r0, r3
 1513 000a 5E68     		ldr	r6, [r3, #4]
 1514              	.LVL102:
 368:tmk_core/protocol/chibios/usb_driver.c **** 
 369:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1515              		.loc 1 369 5 is_stmt 1 view .LVU393
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1516              		.loc 1 364 57 is_stmt 0 view .LVU394
 1517 000c 85B0     		sub	sp, sp, #20
 1518              		.cfi_def_cfa_offset 40
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1519              		.loc 1 364 57 view .LVU395
 1520 000e 0400     		movs	r4, r0
 1521 0010 0D00     		movs	r5, r1
 1522              		.loc 1 369 8 view .LVU396
 1523 0012 002E     		cmp	r6, #0
 1524 0014 2CD0     		beq	.L62
 370:tmk_core/protocol/chibios/usb_driver.c ****         return;
 371:tmk_core/protocol/chibios/usb_driver.c ****     }
 372:tmk_core/protocol/chibios/usb_driver.c **** 
 373:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 1525              		.loc 1 373 5 is_stmt 1 view .LVU397
 1526              	.LBB225:
 1527              	.LBI225:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1528              		.loc 2 531 20 view .LVU398
 1529              	.LBE225:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1530              		.loc 2 533 3 view .LVU399
 1531              	.LBB237:
 1532              	.LBB226:
 1533              	.LBI226:
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 1534              		.loc 4 393 20 view .LVU400
 1535              	.LBE226:
 1536              	.LBE237:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 1537              		.loc 4 395 3 view .LVU401
 1538              	.LBB238:
 1539              	.LBB234:
 1540              	.LBB227:
 1541              	.LBI227:
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock_from_isr(void) {
 1542              		.loc 5 406 20 view .LVU402
 1543              	.LBE227:
 1544              	.LBE234:
 1545              	.LBE238:
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_lock();
 1546              		.loc 5 408 3 view .LVU403
 1547              	.LBB239:
 1548              	.LBB235:
 1549              	.LBB232:
 1550              	.LBB228:
 1551              	.LBI228:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1552              		.loc 5 387 20 view .LVU404
 1553              	.LBE228:
 1554              	.LBE232:
 1555              	.LBE235:
 1556              	.LBE239:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1557              		.loc 5 389 3 view .LVU405
 1558              	.LBB240:
 1559              	.LBB236:
 1560              	.LBB233:
 1561              	.LBB231:
 1562              	.LBB229:
 1563              	.LBI229:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1564              		.loc 6 140 27 view .LVU406
 1565              	.LBB230:
 1566              		.loc 6 142 3 view .LVU407
 1567              		.syntax divided
 1568              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1569 0016 72B6     		cpsid i
 1570              	@ 0 "" 2
 1571              		.thumb
 1572              		.syntax unified
 1573              	.LBE230:
 1574              	.LBE229:
 1575              	.LBE231:
 1576              	.LBE233:
 1577              	.LBE236:
 1578              	.LBE240:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1579              		.loc 4 396 34 view .LVU408
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1580              		.loc 4 397 29 view .LVU409
 374:tmk_core/protocol/chibios/usb_driver.c **** 
 375:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that space is available in the output queue.*/
 376:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_OUTPUT_EMPTY);
 1581              		.loc 1 376 5 view .LVU410
 1582              	.LVL103:
 1583              	.LBB241:
 1584              	.LBI241:
 892:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 1585              		.loc 2 892 20 view .LVU411
 1586              	.LBB242:
 1587              		.loc 2 895 3 view .LVU412
 1588 0018 0821     		movs	r1, #8
 1589              	.LVL104:
 1590              		.loc 2 895 3 is_stmt 0 view .LVU413
 1591              	.LBE242:
 1592              	.LBE241:
 1593              		.loc 1 376 5 view .LVU414
 1594 001a 301D     		adds	r0, r6, #4
 1595              	.LVL105:
 1596              	.LBB244:
 1597              	.LBB243:
 1598              		.loc 2 895 3 view .LVU415
 1599 001c FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1600              	.LVL106:
 1601              		.loc 2 895 3 view .LVU416
 1602              	.LBE243:
 1603              	.LBE244:
 1604              		.loc 1 376 44 is_stmt 1 view .LVU417
 377:tmk_core/protocol/chibios/usb_driver.c **** 
 378:tmk_core/protocol/chibios/usb_driver.c ****     /* Freeing the buffer just transmitted, if it was not a zero size packet.*/
 379:tmk_core/protocol/chibios/usb_driver.c ****     if (usbp->epc[ep]->in_state->txsize > 0U) {
 1605              		.loc 1 379 5 view .LVU418
 1606 0020 3300     		movs	r3, r6
 1607 0022 AF00     		lsls	r7, r5, #2
 1608 0024 4433     		adds	r3, r3, #68
 1609 0026 E719     		adds	r7, r4, r7
 1610 0028 0193     		str	r3, [sp, #4]
 1611              		.loc 1 379 22 is_stmt 0 view .LVU419
 1612 002a FB68     		ldr	r3, [r7, #12]
 1613              		.loc 1 379 32 view .LVU420
 1614 002c 5B69     		ldr	r3, [r3, #20]
 1615              		.loc 1 379 8 view .LVU421
 1616 002e 1B68     		ldr	r3, [r3]
 1617 0030 002B     		cmp	r3, #0
 1618 0032 02D0     		beq	.L65
 380:tmk_core/protocol/chibios/usb_driver.c ****         obqReleaseEmptyBufferI(&qmkusbp->obqueue);
 1619              		.loc 1 380 9 is_stmt 1 view .LVU422
 1620 0034 0198     		ldr	r0, [sp, #4]
 1621 0036 FFF7FEFF 		bl	obqReleaseEmptyBufferI
 1622              	.LVL107:
 1623              	.L65:
 381:tmk_core/protocol/chibios/usb_driver.c ****     }
 382:tmk_core/protocol/chibios/usb_driver.c **** 
 383:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for transmission.*/
 384:tmk_core/protocol/chibios/usb_driver.c ****     buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1624              		.loc 1 384 5 view .LVU423
 1625              		.loc 1 384 11 is_stmt 0 view .LVU424
 1626 003a 03A9     		add	r1, sp, #12
 1627 003c 0198     		ldr	r0, [sp, #4]
 1628 003e FFF7FEFF 		bl	obqGetFullBufferI
 1629              	.LVL108:
 385:tmk_core/protocol/chibios/usb_driver.c **** 
 386:tmk_core/protocol/chibios/usb_driver.c ****     if (buf != NULL) {
 387:tmk_core/protocol/chibios/usb_driver.c ****         /* The endpoint cannot be busy, we are in the context of the callback,
 388:tmk_core/protocol/chibios/usb_driver.c ****            so it is safe to transmit without a check.*/
 389:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(usbp, ep, buf, n);
 1630              		.loc 1 389 9 view .LVU425
 1631 0042 039B     		ldr	r3, [sp, #12]
 384:tmk_core/protocol/chibios/usb_driver.c **** 
 1632              		.loc 1 384 11 view .LVU426
 1633 0044 021E     		subs	r2, r0, #0
 1634              	.LVL109:
 386:tmk_core/protocol/chibios/usb_driver.c ****         /* The endpoint cannot be busy, we are in the context of the callback,
 1635              		.loc 1 386 5 is_stmt 1 view .LVU427
 386:tmk_core/protocol/chibios/usb_driver.c ****         /* The endpoint cannot be busy, we are in the context of the callback,
 1636              		.loc 1 386 8 is_stmt 0 view .LVU428
 1637 0046 0ED1     		bne	.L74
 390:tmk_core/protocol/chibios/usb_driver.c ****     } else if ((usbp->epc[ep]->in_state->txsize > 0U) && ((usbp->epc[ep]->in_state->txsize & ((size
 1638              		.loc 1 390 12 is_stmt 1 view .LVU429
 1639              		.loc 1 390 26 is_stmt 0 view .LVU430
 1640 0048 FB68     		ldr	r3, [r7, #12]
 1641              		.loc 1 390 40 view .LVU431
 1642 004a 5A69     		ldr	r2, [r3, #20]
 1643 004c 1268     		ldr	r2, [r2]
 1644              		.loc 1 390 15 view .LVU432
 1645 004e 002A     		cmp	r2, #0
 1646 0050 0DD0     		beq	.L67
 1647              		.loc 1 390 95 discriminator 1 view .LVU433
 1648 0052 1B8A     		ldrh	r3, [r3, #16]
 1649              		.loc 1 390 129 discriminator 1 view .LVU434
 1650 0054 013B     		subs	r3, r3, #1
 1651              		.loc 1 390 55 discriminator 1 view .LVU435
 1652 0056 1A42     		tst	r2, r3
 1653 0058 09D1     		bne	.L67
 391:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 392:tmk_core/protocol/chibios/usb_driver.c ****            size. Otherwise the recipient may expect more data coming soon and
 393:tmk_core/protocol/chibios/usb_driver.c ****            not return buffered data to app. See section 5.8.3 Bulk Transfer
 394:tmk_core/protocol/chibios/usb_driver.c ****            Packet Size Constraints of the USB Specification document.*/
 395:tmk_core/protocol/chibios/usb_driver.c ****         if (!qmkusbp->config->fixed_size) {
 1654              		.loc 1 395 9 is_stmt 1 view .LVU436
 1655              		.loc 1 395 29 is_stmt 0 view .LVU437
 1656 005a F36F     		ldr	r3, [r6, #124]
 1657              		.loc 1 395 12 view .LVU438
 1658 005c 1B7E     		ldrb	r3, [r3, #24]
 1659 005e 002B     		cmp	r3, #0
 1660 0060 05D1     		bne	.L67
 396:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1661              		.loc 1 396 13 is_stmt 1 view .LVU439
 1662              		.loc 1 396 45 is_stmt 0 view .LVU440
 1663 0062 2200     		movs	r2, r4
 1664 0064 7432     		adds	r2, r2, #116
 1665              	.L74:
 1666              		.loc 1 396 13 view .LVU441
 1667 0066 2900     		movs	r1, r5
 1668 0068 2000     		movs	r0, r4
 1669              	.LVL110:
 1670              		.loc 1 396 13 view .LVU442
 1671 006a FFF7FEFF 		bl	usbStartTransmitI
 1672              	.LVL111:
 1673              	.L67:
 397:tmk_core/protocol/chibios/usb_driver.c ****         }
 398:tmk_core/protocol/chibios/usb_driver.c **** 
 399:tmk_core/protocol/chibios/usb_driver.c ****     } else {
 400:tmk_core/protocol/chibios/usb_driver.c ****         /* Nothing to transmit.*/
 401:tmk_core/protocol/chibios/usb_driver.c ****     }
 1674              		.loc 1 401 5 is_stmt 1 discriminator 1 view .LVU443
 402:tmk_core/protocol/chibios/usb_driver.c **** 
 403:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 1675              		.loc 1 403 5 discriminator 1 view .LVU444
 1676              	.LBB245:
 1677              	.LBI245:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1678              		.loc 2 542 20 discriminator 1 view .LVU445
 1679              	.LBE245:
 544:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1680              		.loc 2 544 3 discriminator 1 view .LVU446
 1681              	.LBB257:
 1682              	.LBB246:
 1683              	.LBI246:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 1684              		.loc 4 413 20 discriminator 1 view .LVU447
 1685              	.LBE246:
 1686              	.LBE257:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 1687              		.loc 4 415 31 discriminator 1 view .LVU448
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1688              		.loc 4 416 33 discriminator 1 view .LVU449
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1689              		.loc 4 417 3 discriminator 1 view .LVU450
 1690              	.LBB258:
 1691              	.LBB254:
 1692              	.LBB247:
 1693              	.LBI247:
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    Same as @p port_lock() in this port.
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock_from_isr(void) {
 1694              		.loc 5 416 20 discriminator 1 view .LVU451
 1695              	.LBE247:
 1696              	.LBE254:
 1697              	.LBE258:
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   port_unlock();
 1698              		.loc 5 418 3 discriminator 1 view .LVU452
 1699              	.LBB259:
 1700              	.LBB255:
 1701              	.LBB252:
 1702              	.LBB248:
 1703              	.LBI248:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1704              		.loc 5 396 20 discriminator 1 view .LVU453
 1705              	.LBE248:
 1706              	.LBE252:
 1707              	.LBE255:
 1708              	.LBE259:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1709              		.loc 5 398 3 discriminator 1 view .LVU454
 1710              	.LBB260:
 1711              	.LBB256:
 1712              	.LBB253:
 1713              	.LBB251:
 1714              	.LBB249:
 1715              	.LBI249:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1716              		.loc 6 129 27 discriminator 1 view .LVU455
 1717              	.LBB250:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1718              		.loc 6 131 3 discriminator 1 view .LVU456
 1719              		.syntax divided
 1720              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1721 006e 62B6     		cpsie i
 1722              	@ 0 "" 2
 1723              		.thumb
 1724              		.syntax unified
 1725              	.L62:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1726              		.loc 6 131 3 is_stmt 0 discriminator 1 view .LVU457
 1727              	.LBE250:
 1728              	.LBE249:
 1729              	.LBE251:
 1730              	.LBE253:
 1731              	.LBE256:
 1732              	.LBE260:
 404:tmk_core/protocol/chibios/usb_driver.c **** }
 1733              		.loc 1 404 1 view .LVU458
 1734 0070 05B0     		add	sp, sp, #20
 1735              		@ sp needed
 1736              	.LVL112:
 1737              	.LVL113:
 1738              		.loc 1 404 1 view .LVU459
 1739 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 1740              		.cfi_endproc
 1741              	.LFE206:
 1743              		.section	.text.qmkusbDataReceived,"ax",%progbits
 1744              		.align	1
 1745              		.global	qmkusbDataReceived
 1746              		.syntax unified
 1747              		.code	16
 1748              		.thumb_func
 1749              		.fpu softvfp
 1751              	qmkusbDataReceived:
 1752              	.LVL114:
 1753              	.LFB207:
 405:tmk_core/protocol/chibios/usb_driver.c **** 
 406:tmk_core/protocol/chibios/usb_driver.c **** /**
 407:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 408:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the OUT
 409:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 410:tmk_core/protocol/chibios/usb_driver.c ****  *
 411:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 412:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        OUT endpoint number
 413:tmk_core/protocol/chibios/usb_driver.c ****  */
 414:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataReceived(USBDriver *usbp, usbep_t ep) {
 1754              		.loc 1 414 54 is_stmt 1 view -0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 0
 1757              		@ frame_needed = 0, uses_anonymous_args = 0
 415:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1758              		.loc 1 415 5 view .LVU461
 1759              		.loc 1 415 19 is_stmt 0 view .LVU462
 1760 0000 1131     		adds	r1, r1, #17
 1761              	.LVL115:
 1762              		.loc 1 415 19 view .LVU463
 1763 0002 8900     		lsls	r1, r1, #2
 414:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1764              		.loc 1 414 54 view .LVU464
 1765 0004 10B5     		push	{r4, lr}
 1766              		.cfi_def_cfa_offset 8
 1767              		.cfi_offset 4, -8
 1768              		.cfi_offset 14, -4
 1769              		.loc 1 415 19 view .LVU465
 1770 0006 0C58     		ldr	r4, [r1, r0]
 1771              	.LVL116:
 416:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1772              		.loc 1 416 5 is_stmt 1 view .LVU466
 1773              		.loc 1 416 8 is_stmt 0 view .LVU467
 1774 0008 002C     		cmp	r4, #0
 1775 000a 15D0     		beq	.L75
 417:tmk_core/protocol/chibios/usb_driver.c ****         return;
 418:tmk_core/protocol/chibios/usb_driver.c ****     }
 419:tmk_core/protocol/chibios/usb_driver.c **** 
 420:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 1776              		.loc 1 420 5 is_stmt 1 view .LVU468
 1777              	.LBB261:
 1778              	.LBI261:
 531:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1779              		.loc 2 531 20 view .LVU469
 1780              	.LBE261:
 533:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1781              		.loc 2 533 3 view .LVU470
 1782              	.LBB273:
 1783              	.LBB262:
 1784              	.LBI262:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1785              		.loc 4 393 20 view .LVU471
 1786              	.LBE262:
 1787              	.LBE273:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1788              		.loc 4 395 3 view .LVU472
 1789              	.LBB274:
 1790              	.LBB270:
 1791              	.LBB263:
 1792              	.LBI263:
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1793              		.loc 5 406 20 view .LVU473
 1794              	.LBE263:
 1795              	.LBE270:
 1796              	.LBE274:
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1797              		.loc 5 408 3 view .LVU474
 1798              	.LBB275:
 1799              	.LBB271:
 1800              	.LBB268:
 1801              	.LBB264:
 1802              	.LBI264:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1803              		.loc 5 387 20 view .LVU475
 1804              	.LBE264:
 1805              	.LBE268:
 1806              	.LBE271:
 1807              	.LBE275:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1808              		.loc 5 389 3 view .LVU476
 1809              	.LBB276:
 1810              	.LBB272:
 1811              	.LBB269:
 1812              	.LBB267:
 1813              	.LBB265:
 1814              	.LBI265:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1815              		.loc 6 140 27 view .LVU477
 1816              	.LBB266:
 1817              		.loc 6 142 3 view .LVU478
 1818              		.syntax divided
 1819              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1820 000c 72B6     		cpsid i
 1821              	@ 0 "" 2
 1822              		.thumb
 1823              		.syntax unified
 1824              	.LBE266:
 1825              	.LBE265:
 1826              	.LBE267:
 1827              	.LBE269:
 1828              	.LBE272:
 1829              	.LBE276:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1830              		.loc 4 396 34 view .LVU479
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1831              		.loc 4 397 29 view .LVU480
 421:tmk_core/protocol/chibios/usb_driver.c **** 
 422:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that data is available in the input queue.*/
 423:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_INPUT_AVAILABLE);
 1832              		.loc 1 423 5 view .LVU481
 1833              	.LVL117:
 1834              	.LBB277:
 1835              	.LBI277:
 892:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 1836              		.loc 2 892 20 view .LVU482
 1837              	.LBB278:
 1838              		.loc 2 895 3 view .LVU483
 1839 000e 0421     		movs	r1, #4
 1840              	.LBE278:
 1841              	.LBE277:
 1842              		.loc 1 423 5 is_stmt 0 view .LVU484
 1843 0010 201D     		adds	r0, r4, #4
 1844              	.LVL118:
 1845              	.LBB280:
 1846              	.LBB279:
 1847              		.loc 2 895 3 view .LVU485
 1848 0012 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1849              	.LVL119:
 1850              		.loc 2 895 3 view .LVU486
 1851              	.LBE279:
 1852              	.LBE280:
 1853              		.loc 1 423 47 is_stmt 1 view .LVU487
 424:tmk_core/protocol/chibios/usb_driver.c **** 
 425:tmk_core/protocol/chibios/usb_driver.c ****     /* Posting the filled buffer in the queue.*/
 426:tmk_core/protocol/chibios/usb_driver.c ****     ibqPostFullBufferI(&qmkusbp->ibqueue, usbGetReceiveTransactionSizeX(qmkusbp->config->usbp, qmku
 1854              		.loc 1 426 5 view .LVU488
 1855 0016 2000     		movs	r0, r4
 1856              		.loc 1 426 43 is_stmt 0 view .LVU489
 1857 0018 E36F     		ldr	r3, [r4, #124]
 1858              		.loc 1 426 5 view .LVU490
 1859 001a 0C30     		adds	r0, r0, #12
 1860              		.loc 1 426 43 view .LVU491
 1861 001c 1A68     		ldr	r2, [r3]
 1862 001e 5B79     		ldrb	r3, [r3, #5]
 1863 0020 0233     		adds	r3, r3, #2
 1864 0022 9B00     		lsls	r3, r3, #2
 1865 0024 D318     		adds	r3, r2, r3
 1866 0026 5B68     		ldr	r3, [r3, #4]
 1867              		.loc 1 426 5 view .LVU492
 1868 0028 9B69     		ldr	r3, [r3, #24]
 1869 002a 5968     		ldr	r1, [r3, #4]
 1870 002c FFF7FEFF 		bl	ibqPostFullBufferI
 1871              	.LVL120:
 427:tmk_core/protocol/chibios/usb_driver.c **** 
 428:tmk_core/protocol/chibios/usb_driver.c ****     /* The endpoint cannot be busy, we are in the context of the callback,
 429:tmk_core/protocol/chibios/usb_driver.c ****        so a packet is in the buffer for sure. Trying to get a free buffer
 430:tmk_core/protocol/chibios/usb_driver.c ****        for the next transaction.*/
 431:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1872              		.loc 1 431 5 is_stmt 1 view .LVU493
 1873              		.loc 1 431 11 is_stmt 0 view .LVU494
 1874 0030 2000     		movs	r0, r4
 1875 0032 FFF7FEFF 		bl	qmkusb_start_receive
 1876              	.LVL121:
 432:tmk_core/protocol/chibios/usb_driver.c **** 
 433:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 1877              		.loc 1 433 5 is_stmt 1 view .LVU495
 1878              	.LBB281:
 1879              	.LBI281:
 542:./lib/chibios/os/hal/osal/rt/osal.h **** 
 1880              		.loc 2 542 20 view .LVU496
 1881              	.LBE281:
 544:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1882              		.loc 2 544 3 view .LVU497
 1883              	.LBB293:
 1884              	.LBB282:
 1885              	.LBI282:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1886              		.loc 4 413 20 view .LVU498
 1887              	.LBE282:
 1888              	.LBE293:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1889              		.loc 4 415 31 view .LVU499
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1890              		.loc 4 416 33 view .LVU500
 1891              		.loc 4 417 3 view .LVU501
 1892              	.LBB294:
 1893              	.LBB290:
 1894              	.LBB283:
 1895              	.LBI283:
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1896              		.loc 5 416 20 view .LVU502
 1897              	.LBE283:
 1898              	.LBE290:
 1899              	.LBE294:
 1900              		.loc 5 418 3 view .LVU503
 1901              	.LBB295:
 1902              	.LBB291:
 1903              	.LBB288:
 1904              	.LBB284:
 1905              	.LBI284:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1906              		.loc 5 396 20 view .LVU504
 1907              	.LBE284:
 1908              	.LBE288:
 1909              	.LBE291:
 1910              	.LBE295:
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1911              		.loc 5 398 3 view .LVU505
 1912              	.LBB296:
 1913              	.LBB292:
 1914              	.LBB289:
 1915              	.LBB287:
 1916              	.LBB285:
 1917              	.LBI285:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1918              		.loc 6 129 27 view .LVU506
 1919              	.LBB286:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1920              		.loc 6 131 3 view .LVU507
 1921              		.syntax divided
 1922              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1923 0036 62B6     		cpsie i
 1924              	@ 0 "" 2
 1925              		.thumb
 1926              		.syntax unified
 1927              	.L75:
 1928              	.LBE286:
 1929              	.LBE285:
 1930              	.LBE287:
 1931              	.LBE289:
 1932              	.LBE292:
 1933              	.LBE296:
 434:tmk_core/protocol/chibios/usb_driver.c **** }
 1934              		.loc 1 434 1 is_stmt 0 view .LVU508
 1935              		@ sp needed
 1936              	.LVL122:
 1937              		.loc 1 434 1 view .LVU509
 1938 0038 10BD     		pop	{r4, pc}
 1939              		.cfi_endproc
 1940              	.LFE207:
 1942              		.section	.text.qmkusbInterruptTransmitted,"ax",%progbits
 1943              		.align	1
 1944              		.global	qmkusbInterruptTransmitted
 1945              		.syntax unified
 1946              		.code	16
 1947              		.thumb_func
 1948              		.fpu softvfp
 1950              	qmkusbInterruptTransmitted:
 1951              	.LVL123:
 1952              	.LFB208:
 435:tmk_core/protocol/chibios/usb_driver.c **** 
 436:tmk_core/protocol/chibios/usb_driver.c **** /**
 437:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 438:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 439:tmk_core/protocol/chibios/usb_driver.c ****  *          interrupt endpoint.
 440:tmk_core/protocol/chibios/usb_driver.c ****  *
 441:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 442:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        endpoint number
 443:tmk_core/protocol/chibios/usb_driver.c ****  */
 444:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInterruptTransmitted(USBDriver *usbp, usbep_t ep) {
 1953              		.loc 1 444 62 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 445:tmk_core/protocol/chibios/usb_driver.c ****     (void)usbp;
 1958              		.loc 1 445 5 view .LVU511
 446:tmk_core/protocol/chibios/usb_driver.c ****     (void)ep;
 1959              		.loc 1 446 5 view .LVU512
 447:tmk_core/protocol/chibios/usb_driver.c **** }
 1960              		.loc 1 447 1 is_stmt 0 view .LVU513
 1961              		@ sp needed
 1962 0000 7047     		bx	lr
 1963              		.cfi_endproc
 1964              	.LFE208:
 1966              		.section	.data.linecoding,"aw"
 1967              		.set	.LANCHOR1,. + 0
 1970              	linecoding:
 1971 0000 00       		.byte	0
 1972 0001 96       		.byte	-106
 1973 0002 00       		.byte	0
 1974 0003 00       		.byte	0
 1975 0004 00       		.byte	0
 1976 0005 00       		.byte	0
 1977 0006 08       		.byte	8
 1978              		.section	.rodata.vmt,"a"
 1979              		.align	2
 1980              		.set	.LANCHOR0,. + 0
 1983              	vmt:
 1984 0000 00000000 		.word	0
 1985 0004 00000000 		.word	_write
 1986 0008 00000000 		.word	_read
 1987 000c 00000000 		.word	_put
 1988 0010 00000000 		.word	_get
 1989 0014 00000000 		.word	_putt
 1990 0018 00000000 		.word	_gett
 1991 001c 00000000 		.word	_writet
 1992 0020 00000000 		.word	_readt
 1993 0024 00000000 		.space	4
 1994              		.text
 1995              	.Letext0:
 1996              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 1997              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1998              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1999              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 2000              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2001              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 2002              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 2003              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 2004              		.file 15 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 2005              		.file 16 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 2006              		.file 17 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2007              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2008              		.file 19 "./lib/chibios/os/rt/include/chsem.h"
 2009              		.file 20 "./lib/chibios/os/rt/include/chmtx.h"
 2010              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 2011              		.file 22 "./lib/chibios/os/oslib/include/chmemcore.h"
 2012              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2013              		.file 24 "./lib/chibios/os/hal/include/hal_buffers.h"
 2014              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 2015              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2016              		.file 27 "./lib/chibios/os/hal/include/hal_i2c.h"
 2017              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2018              		.file 29 "./lib/chibios/os/hal/include/hal_pwm.h"
 2019              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2020              		.file 31 "./lib/chibios/os/hal/include/hal_spi.h"
 2021              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 2022              		.file 33 "./lib/chibios/os/hal/include/hal_usb.h"
 2023              		.file 34 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2024              		.file 35 "./lib/chibios/os/hal/include/hal_usb_cdc.h"
 2025              		.file 36 "tmk_core/protocol/chibios/usb_driver.h"
 2026              		.file 37 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 2027              		.file 38 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 2028              		.file 39 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 2029              		.file 40 "./lib/chibios/os/rt/include/chthreads.h"
 2030              		.file 41 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 usb_driver.c
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:16     .text.obnotify:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:23     .text.obnotify:00000000 obnotify
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:102    .text._readt:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:108    .text._readt:00000000 _readt
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:134    .text._read:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:140    .text._read:00000000 _read
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:169    .text._writet:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:175    .text._writet:00000000 _writet
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:201    .text._write:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:207    .text._write:00000000 _write
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:236    .text._gett:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:242    .text._gett:00000000 _gett
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:268    .text._get:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:274    .text._get:00000000 _get
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:303    .text._putt:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:309    .text._putt:00000000 _putt
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:335    .text._put:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:341    .text._put:00000000 _put
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:370    .text.qmkusb_start_receive:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:376    .text.qmkusb_start_receive:00000000 qmkusb_start_receive
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:467    .text.ibnotify:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:473    .text.ibnotify:00000000 ibnotify
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:500    .text.qmkusbInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:507    .text.qmkusbInit:00000000 qmkusbInit
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:522    .text.qmkusbObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:529    .text.qmkusbObjectInit:00000000 qmkusbObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:624    .text.qmkusbObjectInit:00000044 $d
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:631    .text.qmkusbStart:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:638    .text.qmkusbStart:00000000 qmkusbStart
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:788    .text.qmkusbStop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:795    .text.qmkusbStop:00000000 qmkusbStop
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1010   .text.qmkusbSuspendHookI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1017   .text.qmkusbSuspendHookI:00000000 qmkusbSuspendHookI
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1134   .text.qmkusbWakeupHookI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1141   .text.qmkusbWakeupHookI:00000000 qmkusbWakeupHookI
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1200   .text.qmkusbConfigureHookI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1207   .text.qmkusbConfigureHookI:00000000 qmkusbConfigureHookI
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1282   .text.qmkusbRequestsHook:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1289   .text.qmkusbRequestsHook:00000000 qmkusbRequestsHook
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1357   .text.qmkusbRequestsHook:0000003c $d
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1362   .text.qmkusbSOFHookI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1369   .text.qmkusbSOFHookI:00000000 qmkusbSOFHookI
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1482   .text.qmkusbDataTransmitted:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1489   .text.qmkusbDataTransmitted:00000000 qmkusbDataTransmitted
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1744   .text.qmkusbDataReceived:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1751   .text.qmkusbDataReceived:00000000 qmkusbDataReceived
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1943   .text.qmkusbInterruptTransmitted:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1950   .text.qmkusbInterruptTransmitted:00000000 qmkusbInterruptTransmitted
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1970   .data.linecoding:00000000 linecoding
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1979   .rodata.vmt:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccu0zaCP.s:1983   .rodata.vmt:00000000 vmt

UNDEFINED SYMBOLS
obqGetFullBufferI
usbStartTransmitI
ibqReadTimeout
obqWriteTimeout
ibqGetTimeout
obqPutTimeout
ibqGetEmptyBufferI
usbStartReceiveI
ibqObjectInit
obqObjectInit
chEvtBroadcastFlagsI
ibqResetI
obqResetI
chSchRescheduleS
chThdDequeueAllI
obqTryFlushI
memset
obqReleaseEmptyBufferI
ibqPostFullBufferI
