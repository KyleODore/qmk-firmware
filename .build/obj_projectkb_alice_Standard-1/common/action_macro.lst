   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"action_macro.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.action_macro_play,"ax",%progbits
  16              		.align	1
  17              		.global	action_macro_play
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	action_macro_play:
  25              	.LVL0:
  26              	.LFB194:
  27              		.file 1 "tmk_core/common/action_macro.c"
   1:tmk_core/common/action_macro.c **** /*
   2:tmk_core/common/action_macro.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/action_macro.c **** 
   4:tmk_core/common/action_macro.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/action_macro.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/action_macro.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/action_macro.c **** (at your option) any later version.
   8:tmk_core/common/action_macro.c **** 
   9:tmk_core/common/action_macro.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/action_macro.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/action_macro.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/action_macro.c **** GNU General Public License for more details.
  13:tmk_core/common/action_macro.c **** 
  14:tmk_core/common/action_macro.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/action_macro.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/action_macro.c **** */
  17:tmk_core/common/action_macro.c **** #include "action.h"
  18:tmk_core/common/action_macro.c **** #include "action_util.h"
  19:tmk_core/common/action_macro.c **** #include "action_macro.h"
  20:tmk_core/common/action_macro.c **** #include "wait.h"
  21:tmk_core/common/action_macro.c **** 
  22:tmk_core/common/action_macro.c **** #ifdef DEBUG_ACTION
  23:tmk_core/common/action_macro.c **** #    include "debug.h"
  24:tmk_core/common/action_macro.c **** #else
  25:tmk_core/common/action_macro.c **** #    include "nodebug.h"
  26:tmk_core/common/action_macro.c **** #endif
  27:tmk_core/common/action_macro.c **** 
  28:tmk_core/common/action_macro.c **** #ifndef NO_ACTION_MACRO
  29:tmk_core/common/action_macro.c **** 
  30:tmk_core/common/action_macro.c **** #    define MACRO_READ() (macro = MACRO_GET(macro_p++))
  31:tmk_core/common/action_macro.c **** /** \brief Action Macro Play
  32:tmk_core/common/action_macro.c ****  *
  33:tmk_core/common/action_macro.c ****  * FIXME: Needs doc
  34:tmk_core/common/action_macro.c ****  */
  35:tmk_core/common/action_macro.c **** void action_macro_play(const macro_t *macro_p) {
  28              		.loc 1 35 48 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  36:tmk_core/common/action_macro.c ****     macro_t macro    = END;
  32              		.loc 1 36 5 view .LVU1
  37:tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  33              		.loc 1 37 5 view .LVU2
  38:tmk_core/common/action_macro.c **** 
  39:tmk_core/common/action_macro.c ****     if (!macro_p) return;
  34              		.loc 1 39 5 view .LVU3
  35:tmk_core/common/action_macro.c ****     macro_t macro    = END;
  35              		.loc 1 35 48 is_stmt 0 view .LVU4
  36 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 3, -24
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 39 8 view .LVU5
  45 0002 0028     		cmp	r0, #0
  46 0004 0BD0     		beq	.L1
  37:tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  47              		.loc 1 37 13 view .LVU6
  48 0006 0026     		movs	r6, #0
  40:tmk_core/common/action_macro.c ****     while (true) {
  41:tmk_core/common/action_macro.c ****         switch (MACRO_READ()) {
  42:tmk_core/common/action_macro.c ****             case KEY_DOWN:
  43:tmk_core/common/action_macro.c ****                 MACRO_READ();
  44:tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
  45:tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  46:tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
  49              		.loc 1 46 36 view .LVU7
  50 0008 0727     		movs	r7, #7
  51              	.LVL1:
  52              	.L17:
  40:tmk_core/common/action_macro.c ****     while (true) {
  53              		.loc 1 40 5 is_stmt 1 view .LVU8
  41:tmk_core/common/action_macro.c ****             case KEY_DOWN:
  54              		.loc 1 41 9 view .LVU9
  41:tmk_core/common/action_macro.c ****             case KEY_DOWN:
  55              		.loc 1 41 17 is_stmt 0 view .LVU10
  56 000a 0378     		ldrb	r3, [r0]
  57 000c 441C     		adds	r4, r0, #1
  58              	.LVL2:
  41:tmk_core/common/action_macro.c ****             case KEY_DOWN:
  59              		.loc 1 41 9 view .LVU11
  60 000e 732B     		cmp	r3, #115
  61 0010 06D8     		bhi	.L3
  62 0012 042B     		cmp	r3, #4
  63 0014 41D2     		bcs	.L4
  64 0016 012B     		cmp	r3, #1
  65 0018 0FD0     		beq	.L5
  66 001a 022B     		cmp	r3, #2
  67 001c 22D0     		beq	.L6
  68              	.LVL3:
  69              	.L1:
  47:tmk_core/common/action_macro.c ****                     send_keyboard_report();
  48:tmk_core/common/action_macro.c ****                 } else {
  49:tmk_core/common/action_macro.c ****                     register_code(macro);
  50:tmk_core/common/action_macro.c ****                 }
  51:tmk_core/common/action_macro.c ****                 break;
  52:tmk_core/common/action_macro.c ****             case KEY_UP:
  53:tmk_core/common/action_macro.c ****                 MACRO_READ();
  54:tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
  55:tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  56:tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
  57:tmk_core/common/action_macro.c ****                     send_keyboard_report();
  58:tmk_core/common/action_macro.c ****                 } else {
  59:tmk_core/common/action_macro.c ****                     unregister_code(macro);
  60:tmk_core/common/action_macro.c ****                 }
  61:tmk_core/common/action_macro.c ****                 break;
  62:tmk_core/common/action_macro.c ****             case WAIT:
  63:tmk_core/common/action_macro.c ****                 MACRO_READ();
  64:tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
  65:tmk_core/common/action_macro.c ****                 {
  66:tmk_core/common/action_macro.c ****                     uint8_t ms = macro;
  67:tmk_core/common/action_macro.c ****                     while (ms--) wait_ms(1);
  68:tmk_core/common/action_macro.c ****                 }
  69:tmk_core/common/action_macro.c ****                 break;
  70:tmk_core/common/action_macro.c ****             case INTERVAL:
  71:tmk_core/common/action_macro.c ****                 interval = MACRO_READ();
  72:tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
  73:tmk_core/common/action_macro.c ****                 break;
  74:tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
  75:tmk_core/common/action_macro.c ****                 dprintf("DOWN(%02X)\n", macro);
  76:tmk_core/common/action_macro.c ****                 register_code(macro);
  77:tmk_core/common/action_macro.c ****                 break;
  78:tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
  79:tmk_core/common/action_macro.c ****                 dprintf("UP(%02X)\n", macro);
  80:tmk_core/common/action_macro.c ****                 unregister_code(macro & 0x7F);
  81:tmk_core/common/action_macro.c ****                 break;
  82:tmk_core/common/action_macro.c ****             case END:
  83:tmk_core/common/action_macro.c ****             default:
  84:tmk_core/common/action_macro.c ****                 return;
  85:tmk_core/common/action_macro.c ****         }
  86:tmk_core/common/action_macro.c ****         // interval
  87:tmk_core/common/action_macro.c ****         {
  88:tmk_core/common/action_macro.c ****             uint8_t ms = interval;
  89:tmk_core/common/action_macro.c ****             while (ms--) wait_ms(1);
  90:tmk_core/common/action_macro.c ****         }
  91:tmk_core/common/action_macro.c ****     }
  92:tmk_core/common/action_macro.c **** }
  70              		.loc 1 92 1 view .LVU12
  71              		@ sp needed
  72 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  73              	.LVL4:
  74              	.L3:
  41:tmk_core/common/action_macro.c ****             case KEY_DOWN:
  75              		.loc 1 41 9 view .LVU13
  76 0020 752B     		cmp	r3, #117
  77 0022 37D0     		beq	.L7
  78 0024 2CD3     		bcc	.L8
  79 0026 1A00     		movs	r2, r3
  80 0028 7C32     		adds	r2, r2, #124
  81 002a D2B2     		uxtb	r2, r2
  82 002c 6F2A     		cmp	r2, #111
  83 002e F6D8     		bhi	.L1
  79:tmk_core/common/action_macro.c ****                 unregister_code(macro & 0x7F);
  84              		.loc 1 79 45 is_stmt 1 view .LVU14
  80:tmk_core/common/action_macro.c ****                 break;
  85              		.loc 1 80 17 view .LVU15
  86 0030 7F20     		movs	r0, #127
  87 0032 1840     		ands	r0, r3
  88              	.LVL5:
  89              	.L24:
  80:tmk_core/common/action_macro.c ****                 break;
  90              		.loc 1 80 17 is_stmt 0 view .LVU16
  91 0034 FFF7FEFF 		bl	unregister_code
  92              	.LVL6:
  81:tmk_core/common/action_macro.c ****             case END:
  93              		.loc 1 81 17 is_stmt 1 view .LVU17
  94 0038 0DE0     		b	.L11
  95              	.LVL7:
  96              	.L5:
  43:tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
  97              		.loc 1 43 17 view .LVU18
  98 003a 841C     		adds	r4, r0, #2
  99              	.LVL8:
  43:tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 100              		.loc 1 43 17 is_stmt 0 view .LVU19
 101 003c 4078     		ldrb	r0, [r0, #1]
 102              	.LVL9:
  44:tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 103              		.loc 1 44 51 is_stmt 1 view .LVU20
  45:tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 104              		.loc 1 45 17 view .LVU21
  45:tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 105              		.loc 1 45 21 is_stmt 0 view .LVU22
 106 003e 0200     		movs	r2, r0
 107 0040 2032     		adds	r2, r2, #32
  45:tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 108              		.loc 1 45 20 view .LVU23
 109 0042 D2B2     		uxtb	r2, r2
 110 0044 072A     		cmp	r2, #7
 111 0046 29D8     		bhi	.L23
  46:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 112              		.loc 1 46 21 is_stmt 1 view .LVU24
  46:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 113              		.loc 1 46 36 is_stmt 0 view .LVU25
 114 0048 3840     		ands	r0, r7
 115              	.LVL10:
  46:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 116              		.loc 1 46 36 view .LVU26
 117 004a 8340     		lsls	r3, r3, r0
  46:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 118              		.loc 1 46 21 view .LVU27
 119 004c D8B2     		uxtb	r0, r3
 120 004e FFF7FEFF 		bl	add_macro_mods
 121              	.LVL11:
  47:tmk_core/common/action_macro.c ****                 } else {
 122              		.loc 1 47 21 is_stmt 1 view .LVU28
 123              	.L22:
  57:tmk_core/common/action_macro.c ****                 } else {
 124              		.loc 1 57 21 view .LVU29
 125 0052 FFF7FEFF 		bl	send_keyboard_report
 126              	.LVL12:
 127              	.L11:
 128              	.LBB2:
  88:tmk_core/common/action_macro.c ****             while (ms--) wait_ms(1);
 129              		.loc 1 88 13 view .LVU30
  89:tmk_core/common/action_macro.c ****         }
 130              		.loc 1 89 13 view .LVU31
  88:tmk_core/common/action_macro.c ****             while (ms--) wait_ms(1);
 131              		.loc 1 88 21 is_stmt 0 view .LVU32
 132 0056 3500     		movs	r5, r6
 133              	.LVL13:
 134              	.L15:
  89:tmk_core/common/action_macro.c ****         }
 135              		.loc 1 89 22 discriminator 4 view .LVU33
 136 0058 013D     		subs	r5, r5, #1
 137              	.LVL14:
  89:tmk_core/common/action_macro.c ****         }
 138              		.loc 1 89 22 discriminator 4 view .LVU34
 139 005a EDB2     		uxtb	r5, r5
 140              	.LVL15:
  89:tmk_core/common/action_macro.c ****         }
 141              		.loc 1 89 19 discriminator 4 view .LVU35
 142 005c FF2D     		cmp	r5, #255
 143 005e 20D1     		bne	.L16
 144 0060 2000     		movs	r0, r4
 145 0062 D2E7     		b	.L17
 146              	.LVL16:
 147              	.L6:
  89:tmk_core/common/action_macro.c ****         }
 148              		.loc 1 89 19 discriminator 4 view .LVU36
 149              	.LBE2:
  53:tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 150              		.loc 1 53 17 is_stmt 1 view .LVU37
 151 0064 841C     		adds	r4, r0, #2
 152              	.LVL17:
  53:tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 153              		.loc 1 53 17 is_stmt 0 view .LVU38
 154 0066 4078     		ldrb	r0, [r0, #1]
 155              	.LVL18:
  54:tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 156              		.loc 1 54 49 is_stmt 1 view .LVU39
  55:tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 157              		.loc 1 55 17 view .LVU40
  55:tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 158              		.loc 1 55 21 is_stmt 0 view .LVU41
 159 0068 0300     		movs	r3, r0
 160 006a 2033     		adds	r3, r3, #32
  55:tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 161              		.loc 1 55 20 view .LVU42
 162 006c DBB2     		uxtb	r3, r3
 163 006e 072B     		cmp	r3, #7
 164 0070 E0D8     		bhi	.L24
  56:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 165              		.loc 1 56 21 is_stmt 1 view .LVU43
  56:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 166              		.loc 1 56 36 is_stmt 0 view .LVU44
 167 0072 0123     		movs	r3, #1
 168 0074 3840     		ands	r0, r7
 169              	.LVL19:
  56:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 170              		.loc 1 56 36 view .LVU45
 171 0076 8340     		lsls	r3, r3, r0
  56:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 172              		.loc 1 56 21 view .LVU46
 173 0078 D8B2     		uxtb	r0, r3
 174 007a FFF7FEFF 		bl	del_macro_mods
 175              	.LVL20:
  56:tmk_core/common/action_macro.c ****                     send_keyboard_report();
 176              		.loc 1 56 21 view .LVU47
 177 007e E8E7     		b	.L22
 178              	.LVL21:
 179              	.L8:
  63:tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 180              		.loc 1 63 17 is_stmt 1 view .LVU48
 181 0080 4578     		ldrb	r5, [r0, #1]
 182 0082 841C     		adds	r4, r0, #2
 183              	.LVL22:
  64:tmk_core/common/action_macro.c ****                 {
 184              		.loc 1 64 45 view .LVU49
 185              	.LBB3:
  66:tmk_core/common/action_macro.c ****                     while (ms--) wait_ms(1);
 186              		.loc 1 66 21 view .LVU50
  67:tmk_core/common/action_macro.c ****                 }
 187              		.loc 1 67 21 view .LVU51
 188              	.L13:
  67:tmk_core/common/action_macro.c ****                 }
 189              		.loc 1 67 30 is_stmt 0 discriminator 4 view .LVU52
 190 0084 013D     		subs	r5, r5, #1
 191              	.LVL23:
  67:tmk_core/common/action_macro.c ****                 }
 192              		.loc 1 67 30 discriminator 4 view .LVU53
 193 0086 EDB2     		uxtb	r5, r5
 194              	.LVL24:
  67:tmk_core/common/action_macro.c ****                 }
 195              		.loc 1 67 27 discriminator 4 view .LVU54
 196 0088 FF2D     		cmp	r5, #255
 197 008a E4D0     		beq	.L11
  67:tmk_core/common/action_macro.c ****                 }
 198              		.loc 1 67 34 is_stmt 1 discriminator 1 view .LVU55
  67:tmk_core/common/action_macro.c ****                 }
 199              		.loc 1 67 34 discriminator 1 view .LVU56
  67:tmk_core/common/action_macro.c ****                 }
 200              		.loc 1 67 34 discriminator 1 view .LVU57
 201 008c 0A20     		movs	r0, #10
 202 008e FFF7FEFF 		bl	chThdSleep
 203              	.LVL25:
 204 0092 F7E7     		b	.L13
 205              	.LVL26:
 206              	.L7:
  67:tmk_core/common/action_macro.c ****                 }
 207              		.loc 1 67 34 is_stmt 0 discriminator 1 view .LVU58
 208              	.LBE3:
  71:tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 209              		.loc 1 71 17 is_stmt 1 view .LVU59
  71:tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 210              		.loc 1 71 28 is_stmt 0 view .LVU60
 211 0094 841C     		adds	r4, r0, #2
 212              	.LVL27:
  71:tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 213              		.loc 1 71 28 view .LVU61
 214 0096 4678     		ldrb	r6, [r0, #1]
 215              	.LVL28:
  72:tmk_core/common/action_macro.c ****                 break;
 216              		.loc 1 72 52 is_stmt 1 view .LVU62
  73:tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
 217              		.loc 1 73 17 view .LVU63
 218 0098 DDE7     		b	.L11
 219              	.LVL29:
 220              	.L4:
  75:tmk_core/common/action_macro.c ****                 register_code(macro);
 221              		.loc 1 75 47 view .LVU64
  76:tmk_core/common/action_macro.c ****                 break;
 222              		.loc 1 76 17 view .LVU65
 223 009a 1800     		movs	r0, r3
 224              	.LVL30:
 225              	.L23:
  76:tmk_core/common/action_macro.c ****                 break;
 226              		.loc 1 76 17 is_stmt 0 view .LVU66
 227 009c FFF7FEFF 		bl	register_code
 228              	.LVL31:
  77:tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
 229              		.loc 1 77 17 is_stmt 1 view .LVU67
 230 00a0 D9E7     		b	.L11
 231              	.LVL32:
 232              	.L16:
 233              	.LBB4:
  89:tmk_core/common/action_macro.c ****         }
 234              		.loc 1 89 26 discriminator 1 view .LVU68
  89:tmk_core/common/action_macro.c ****         }
 235              		.loc 1 89 26 discriminator 1 view .LVU69
  89:tmk_core/common/action_macro.c ****         }
 236              		.loc 1 89 26 discriminator 1 view .LVU70
 237 00a2 0A20     		movs	r0, #10
 238 00a4 FFF7FEFF 		bl	chThdSleep
 239              	.LVL33:
 240 00a8 D6E7     		b	.L15
 241              	.LBE4:
 242              		.cfi_endproc
 243              	.LFE194:
 245              		.text
 246              	.Letext0:
 247              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 248              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 249              		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 250              		.file 5 "tmk_core/common/action_macro.h"
 251              		.file 6 "tmk_core/common/keycode.h"
 252              		.file 7 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 253              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 254              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 255              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 256              		.file 11 "./lib/chibios/os/rt/include/chtime.h"
 257              		.file 12 "tmk_core/common/action.h"
 258              		.file 13 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 259              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 260              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 261              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
 262              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 263              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 264              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 265              		.file 20 "./lib/chibios/os/rt/include/chsys.h"
 266              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 267              		.file 22 "./lib/chibios/os/oslib/include/chmemcore.h"
 268              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 269              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 270              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 271              		.file 26 "./lib/chibios/os/hal/include/hal_i2c.h"
 272              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 273              		.file 28 "./lib/chibios/os/hal/include/hal_pwm.h"
 274              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 275              		.file 30 "./lib/chibios/os/hal/include/hal_spi.h"
 276              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 277              		.file 32 "./lib/chibios/os/hal/include/hal_usb.h"
 278              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 279              		.file 34 "tmk_core/common/report.h"
 280              		.file 35 "tmk_core/common/action_util.h"
 281              		.file 36 "tmk_core/common/debug.h"
 282              		.file 37 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:00000000 action_macro.c
C:\Users\kyleo\AppData\Local\Temp\ccqDbOER.s:16     .text.action_macro_play:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccqDbOER.s:24     .text.action_macro_play:00000000 action_macro_play

UNDEFINED SYMBOLS
unregister_code
add_macro_mods
send_keyboard_report
del_macro_mods
chThdSleep
register_code
