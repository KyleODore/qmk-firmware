   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"util.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.bitpop,"ax",%progbits
  16              		.align	1
  17              		.global	bitpop
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	bitpop:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "tmk_core/common/util.c"
   1:tmk_core/common/util.c **** /*
   2:tmk_core/common/util.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/util.c **** 
   4:tmk_core/common/util.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/util.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/util.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/util.c **** (at your option) any later version.
   8:tmk_core/common/util.c **** 
   9:tmk_core/common/util.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/util.c **** GNU General Public License for more details.
  13:tmk_core/common/util.c **** 
  14:tmk_core/common/util.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/util.c **** */
  17:tmk_core/common/util.c **** 
  18:tmk_core/common/util.c **** #include "util.h"
  19:tmk_core/common/util.c **** 
  20:tmk_core/common/util.c **** // bit population - return number of on-bit
  21:tmk_core/common/util.c **** __attribute__((noinline)) uint8_t bitpop(uint8_t bits) {
  28              		.loc 1 21 56 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  22:tmk_core/common/util.c ****     uint8_t c;
  33              		.loc 1 22 5 view .LVU1
  23:tmk_core/common/util.c ****     for (c = 0; bits; c++) bits &= bits - 1;
  34              		.loc 1 23 5 view .LVU2
  21:tmk_core/common/util.c ****     uint8_t c;
  35              		.loc 1 21 56 is_stmt 0 view .LVU3
  36 0000 0200     		movs	r2, r0
  37              		.loc 1 23 12 view .LVU4
  38 0002 0020     		movs	r0, #0
  39              	.LVL1:
  40              	.L2:
  41              		.loc 1 23 5 discriminator 1 view .LVU5
  42 0004 002A     		cmp	r2, #0
  43 0006 00D1     		bne	.L3
  24:tmk_core/common/util.c ****     return c;
  25:tmk_core/common/util.c ****     /*
  26:tmk_core/common/util.c ****         const uint8_t bit_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 };
  27:tmk_core/common/util.c ****         return bit_count[bits>>4] + bit_count[bits&0x0F]
  28:tmk_core/common/util.c ****     */
  29:tmk_core/common/util.c **** }
  44              		.loc 1 29 1 view .LVU6
  45              		@ sp needed
  46 0008 7047     		bx	lr
  47              	.L3:
  23:tmk_core/common/util.c ****     return c;
  48              		.loc 1 23 28 is_stmt 1 discriminator 3 view .LVU7
  23:tmk_core/common/util.c ****     return c;
  49              		.loc 1 23 41 is_stmt 0 discriminator 3 view .LVU8
  50 000a 531E     		subs	r3, r2, #1
  23:tmk_core/common/util.c ****     return c;
  51              		.loc 1 23 24 discriminator 3 view .LVU9
  52 000c 0130     		adds	r0, r0, #1
  53              	.LVL2:
  23:tmk_core/common/util.c ****     return c;
  54              		.loc 1 23 33 discriminator 3 view .LVU10
  55 000e 1A40     		ands	r2, r3
  56              	.LVL3:
  23:tmk_core/common/util.c ****     return c;
  57              		.loc 1 23 24 discriminator 3 view .LVU11
  58 0010 C0B2     		uxtb	r0, r0
  59              	.LVL4:
  23:tmk_core/common/util.c ****     return c;
  60              		.loc 1 23 24 discriminator 3 view .LVU12
  61 0012 F7E7     		b	.L2
  62              		.cfi_endproc
  63              	.LFE0:
  65              		.section	.text.bitpop16,"ax",%progbits
  66              		.align	1
  67              		.global	bitpop16
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	bitpop16:
  74              	.LVL5:
  75              	.LFB1:
  30:tmk_core/common/util.c **** 
  31:tmk_core/common/util.c **** uint8_t bitpop16(uint16_t bits) {
  76              		.loc 1 31 33 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  32:tmk_core/common/util.c ****     uint8_t c;
  81              		.loc 1 32 5 view .LVU14
  33:tmk_core/common/util.c ****     for (c = 0; bits; c++) bits &= bits - 1;
  82              		.loc 1 33 5 view .LVU15
  31:tmk_core/common/util.c ****     uint8_t c;
  83              		.loc 1 31 33 is_stmt 0 view .LVU16
  84 0000 0200     		movs	r2, r0
  85              		.loc 1 33 12 view .LVU17
  86 0002 0020     		movs	r0, #0
  87              	.LVL6:
  88              	.L5:
  89              		.loc 1 33 5 discriminator 1 view .LVU18
  90 0004 002A     		cmp	r2, #0
  91 0006 00D1     		bne	.L6
  34:tmk_core/common/util.c ****     return c;
  35:tmk_core/common/util.c **** }
  92              		.loc 1 35 1 view .LVU19
  93              		@ sp needed
  94 0008 7047     		bx	lr
  95              	.L6:
  33:tmk_core/common/util.c ****     return c;
  96              		.loc 1 33 28 is_stmt 1 discriminator 3 view .LVU20
  33:tmk_core/common/util.c ****     return c;
  97              		.loc 1 33 41 is_stmt 0 discriminator 3 view .LVU21
  98 000a 531E     		subs	r3, r2, #1
  33:tmk_core/common/util.c ****     return c;
  99              		.loc 1 33 24 discriminator 3 view .LVU22
 100 000c 0130     		adds	r0, r0, #1
 101              	.LVL7:
  33:tmk_core/common/util.c ****     return c;
 102              		.loc 1 33 33 discriminator 3 view .LVU23
 103 000e 1A40     		ands	r2, r3
 104              	.LVL8:
  33:tmk_core/common/util.c ****     return c;
 105              		.loc 1 33 24 discriminator 3 view .LVU24
 106 0010 C0B2     		uxtb	r0, r0
 107              	.LVL9:
  33:tmk_core/common/util.c ****     return c;
 108              		.loc 1 33 24 discriminator 3 view .LVU25
 109 0012 F7E7     		b	.L5
 110              		.cfi_endproc
 111              	.LFE1:
 113              		.section	.text.bitpop32,"ax",%progbits
 114              		.align	1
 115              		.global	bitpop32
 116              		.syntax unified
 117              		.code	16
 118              		.thumb_func
 119              		.fpu softvfp
 121              	bitpop32:
 122              	.LVL10:
 123              	.LFB2:
  36:tmk_core/common/util.c **** 
  37:tmk_core/common/util.c **** uint8_t bitpop32(uint32_t bits) {
 124              		.loc 1 37 33 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
  38:tmk_core/common/util.c ****     uint8_t c;
 129              		.loc 1 38 5 view .LVU27
  39:tmk_core/common/util.c ****     for (c = 0; bits; c++) bits &= bits - 1;
 130              		.loc 1 39 5 view .LVU28
  37:tmk_core/common/util.c ****     uint8_t c;
 131              		.loc 1 37 33 is_stmt 0 view .LVU29
 132 0000 0200     		movs	r2, r0
 133              		.loc 1 39 12 view .LVU30
 134 0002 0020     		movs	r0, #0
 135              	.LVL11:
 136              	.L8:
 137              		.loc 1 39 5 discriminator 1 view .LVU31
 138 0004 002A     		cmp	r2, #0
 139 0006 00D1     		bne	.L9
  40:tmk_core/common/util.c ****     return c;
  41:tmk_core/common/util.c **** }
 140              		.loc 1 41 1 view .LVU32
 141              		@ sp needed
 142 0008 7047     		bx	lr
 143              	.L9:
  39:tmk_core/common/util.c ****     return c;
 144              		.loc 1 39 28 is_stmt 1 discriminator 3 view .LVU33
  39:tmk_core/common/util.c ****     return c;
 145              		.loc 1 39 41 is_stmt 0 discriminator 3 view .LVU34
 146 000a 531E     		subs	r3, r2, #1
  39:tmk_core/common/util.c ****     return c;
 147              		.loc 1 39 24 discriminator 3 view .LVU35
 148 000c 0130     		adds	r0, r0, #1
 149              	.LVL12:
  39:tmk_core/common/util.c ****     return c;
 150              		.loc 1 39 33 discriminator 3 view .LVU36
 151 000e 1A40     		ands	r2, r3
 152              	.LVL13:
  39:tmk_core/common/util.c ****     return c;
 153              		.loc 1 39 24 discriminator 3 view .LVU37
 154 0010 C0B2     		uxtb	r0, r0
 155              	.LVL14:
  39:tmk_core/common/util.c ****     return c;
 156              		.loc 1 39 24 discriminator 3 view .LVU38
 157 0012 F7E7     		b	.L8
 158              		.cfi_endproc
 159              	.LFE2:
 161              		.section	.text.biton,"ax",%progbits
 162              		.align	1
 163              		.global	biton
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 167              		.fpu softvfp
 169              	biton:
 170              	.LVL15:
 171              	.LFB3:
  42:tmk_core/common/util.c **** 
  43:tmk_core/common/util.c **** // most significant on-bit - return highest location of on-bit
  44:tmk_core/common/util.c **** // NOTE: return 0 when bit0 is on or all bits are off
  45:tmk_core/common/util.c **** __attribute__((noinline)) uint8_t biton(uint8_t bits) {
 172              		.loc 1 45 55 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
  46:tmk_core/common/util.c ****     uint8_t n = 0;
 177              		.loc 1 46 5 view .LVU40
  47:tmk_core/common/util.c ****     if (bits >> 4) {
 178              		.loc 1 47 5 view .LVU41
 179              		.loc 1 47 9 is_stmt 0 view .LVU42
 180 0000 0309     		lsrs	r3, r0, #4
 181              		.loc 1 47 8 view .LVU43
 182 0002 01D0     		beq	.L11
 183 0004 1800     		movs	r0, r3
 184              	.LVL16:
  48:tmk_core/common/util.c ****         bits >>= 4;
  49:tmk_core/common/util.c ****         n += 4;
 185              		.loc 1 49 11 view .LVU44
 186 0006 0423     		movs	r3, #4
 187              	.L11:
 188              	.LVL17:
  50:tmk_core/common/util.c ****     }
  51:tmk_core/common/util.c ****     if (bits >> 2) {
 189              		.loc 1 51 5 is_stmt 1 view .LVU45
 190              		.loc 1 51 9 is_stmt 0 view .LVU46
 191 0008 8208     		lsrs	r2, r0, #2
 192              		.loc 1 51 8 view .LVU47
 193 000a 02D0     		beq	.L12
  52:tmk_core/common/util.c ****         bits >>= 2;
 194              		.loc 1 52 9 is_stmt 1 view .LVU48
 195              	.LVL18:
  53:tmk_core/common/util.c ****         n += 2;
 196              		.loc 1 53 9 view .LVU49
 197              		.loc 1 53 11 is_stmt 0 view .LVU50
 198 000c 1000     		movs	r0, r2
 199 000e 0233     		adds	r3, r3, #2
 200              	.LVL19:
 201              		.loc 1 53 11 view .LVU51
 202 0010 DBB2     		uxtb	r3, r3
 203              	.LVL20:
 204              	.L12:
  54:tmk_core/common/util.c ****     }
  55:tmk_core/common/util.c ****     if (bits >> 1) {
 205              		.loc 1 55 5 is_stmt 1 view .LVU52
 206              		.loc 1 55 8 is_stmt 0 view .LVU53
 207 0012 4008     		lsrs	r0, r0, #1
 208              	.LVL21:
 209              		.loc 1 55 8 view .LVU54
 210 0014 01D0     		beq	.L13
  56:tmk_core/common/util.c ****         bits >>= 1;
 211              		.loc 1 56 9 is_stmt 1 view .LVU55
 212              	.LVL22:
  57:tmk_core/common/util.c ****         n += 1;
 213              		.loc 1 57 9 view .LVU56
 214              		.loc 1 57 11 is_stmt 0 view .LVU57
 215 0016 0133     		adds	r3, r3, #1
 216              	.LVL23:
 217              		.loc 1 57 11 view .LVU58
 218 0018 DBB2     		uxtb	r3, r3
 219              	.LVL24:
 220              	.L13:
  58:tmk_core/common/util.c ****     }
  59:tmk_core/common/util.c ****     return n;
 221              		.loc 1 59 5 is_stmt 1 view .LVU59
  60:tmk_core/common/util.c **** }
 222              		.loc 1 60 1 is_stmt 0 view .LVU60
 223 001a 1800     		movs	r0, r3
 224              		@ sp needed
 225 001c 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE3:
 229              		.section	.text.biton16,"ax",%progbits
 230              		.align	1
 231              		.global	biton16
 232              		.syntax unified
 233              		.code	16
 234              		.thumb_func
 235              		.fpu softvfp
 237              	biton16:
 238              	.LVL25:
 239              	.LFB4:
  61:tmk_core/common/util.c **** 
  62:tmk_core/common/util.c **** uint8_t biton16(uint16_t bits) {
 240              		.loc 1 62 32 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
  63:tmk_core/common/util.c ****     uint8_t n = 0;
 245              		.loc 1 63 5 view .LVU62
  64:tmk_core/common/util.c ****     if (bits >> 8) {
 246              		.loc 1 64 5 view .LVU63
  63:tmk_core/common/util.c ****     uint8_t n = 0;
 247              		.loc 1 63 13 is_stmt 0 view .LVU64
 248 0000 0023     		movs	r3, #0
 249              		.loc 1 64 9 view .LVU65
 250 0002 020A     		lsrs	r2, r0, #8
 251              		.loc 1 64 8 view .LVU66
 252 0004 9A42     		cmp	r2, r3
 253 0006 01D0     		beq	.L24
 254 0008 1000     		movs	r0, r2
 255              	.LVL26:
  65:tmk_core/common/util.c ****         bits >>= 8;
  66:tmk_core/common/util.c ****         n += 8;
 256              		.loc 1 66 11 view .LVU67
 257 000a 0833     		adds	r3, r3, #8
 258              	.L24:
 259              	.LVL27:
  67:tmk_core/common/util.c ****     }
  68:tmk_core/common/util.c ****     if (bits >> 4) {
 260              		.loc 1 68 5 is_stmt 1 view .LVU68
 261              		.loc 1 68 9 is_stmt 0 view .LVU69
 262 000c 0209     		lsrs	r2, r0, #4
 263              		.loc 1 68 8 view .LVU70
 264 000e 02D0     		beq	.L25
  69:tmk_core/common/util.c ****         bits >>= 4;
 265              		.loc 1 69 9 is_stmt 1 view .LVU71
 266              	.LVL28:
  70:tmk_core/common/util.c ****         n += 4;
 267              		.loc 1 70 9 view .LVU72
 268              		.loc 1 70 11 is_stmt 0 view .LVU73
 269 0010 1000     		movs	r0, r2
 270 0012 0433     		adds	r3, r3, #4
 271              	.LVL29:
 272              		.loc 1 70 11 view .LVU74
 273 0014 DBB2     		uxtb	r3, r3
 274              	.LVL30:
 275              	.L25:
  71:tmk_core/common/util.c ****     }
  72:tmk_core/common/util.c ****     if (bits >> 2) {
 276              		.loc 1 72 5 is_stmt 1 view .LVU75
 277              		.loc 1 72 9 is_stmt 0 view .LVU76
 278 0016 8208     		lsrs	r2, r0, #2
 279              		.loc 1 72 8 view .LVU77
 280 0018 02D0     		beq	.L26
  73:tmk_core/common/util.c ****         bits >>= 2;
 281              		.loc 1 73 9 is_stmt 1 view .LVU78
 282              	.LVL31:
  74:tmk_core/common/util.c ****         n += 2;
 283              		.loc 1 74 9 view .LVU79
 284              		.loc 1 74 11 is_stmt 0 view .LVU80
 285 001a 1000     		movs	r0, r2
 286 001c 0233     		adds	r3, r3, #2
 287              	.LVL32:
 288              		.loc 1 74 11 view .LVU81
 289 001e DBB2     		uxtb	r3, r3
 290              	.LVL33:
 291              	.L26:
  75:tmk_core/common/util.c ****     }
  76:tmk_core/common/util.c ****     if (bits >> 1) {
 292              		.loc 1 76 5 is_stmt 1 view .LVU82
 293              		.loc 1 76 8 is_stmt 0 view .LVU83
 294 0020 4008     		lsrs	r0, r0, #1
 295              	.LVL34:
 296              		.loc 1 76 8 view .LVU84
 297 0022 01D0     		beq	.L27
  77:tmk_core/common/util.c ****         bits >>= 1;
 298              		.loc 1 77 9 is_stmt 1 view .LVU85
 299              	.LVL35:
  78:tmk_core/common/util.c ****         n += 1;
 300              		.loc 1 78 9 view .LVU86
 301              		.loc 1 78 11 is_stmt 0 view .LVU87
 302 0024 0133     		adds	r3, r3, #1
 303              	.LVL36:
 304              		.loc 1 78 11 view .LVU88
 305 0026 DBB2     		uxtb	r3, r3
 306              	.LVL37:
 307              	.L27:
  79:tmk_core/common/util.c ****     }
  80:tmk_core/common/util.c ****     return n;
 308              		.loc 1 80 5 is_stmt 1 view .LVU89
  81:tmk_core/common/util.c **** }
 309              		.loc 1 81 1 is_stmt 0 view .LVU90
 310 0028 1800     		movs	r0, r3
 311              		@ sp needed
 312 002a 7047     		bx	lr
 313              		.cfi_endproc
 314              	.LFE4:
 316              		.section	.text.biton32,"ax",%progbits
 317              		.align	1
 318              		.global	biton32
 319              		.syntax unified
 320              		.code	16
 321              		.thumb_func
 322              		.fpu softvfp
 324              	biton32:
 325              	.LVL38:
 326              	.LFB5:
  82:tmk_core/common/util.c **** 
  83:tmk_core/common/util.c **** uint8_t biton32(uint32_t bits) {
 327              		.loc 1 83 32 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
  84:tmk_core/common/util.c ****     uint8_t n = 0;
 332              		.loc 1 84 5 view .LVU92
  85:tmk_core/common/util.c ****     if (bits >> 16) {
 333              		.loc 1 85 5 view .LVU93
  84:tmk_core/common/util.c ****     uint8_t n = 0;
 334              		.loc 1 84 13 is_stmt 0 view .LVU94
 335 0000 0023     		movs	r3, #0
 336              		.loc 1 85 14 view .LVU95
 337 0002 020C     		lsrs	r2, r0, #16
 338              		.loc 1 85 8 view .LVU96
 339 0004 9A42     		cmp	r2, r3
 340 0006 01D0     		beq	.L40
 341 0008 1000     		movs	r0, r2
 342              	.LVL39:
  86:tmk_core/common/util.c ****         bits >>= 16;
  87:tmk_core/common/util.c ****         n += 16;
 343              		.loc 1 87 11 view .LVU97
 344 000a 1033     		adds	r3, r3, #16
 345              	.L40:
 346              	.LVL40:
  88:tmk_core/common/util.c ****     }
  89:tmk_core/common/util.c ****     if (bits >> 8) {
 347              		.loc 1 89 5 is_stmt 1 view .LVU98
 348              		.loc 1 89 14 is_stmt 0 view .LVU99
 349 000c 020A     		lsrs	r2, r0, #8
 350              		.loc 1 89 8 view .LVU100
 351 000e 02D0     		beq	.L41
  90:tmk_core/common/util.c ****         bits >>= 8;
 352              		.loc 1 90 9 is_stmt 1 view .LVU101
 353              	.LVL41:
  91:tmk_core/common/util.c ****         n += 8;
 354              		.loc 1 91 9 view .LVU102
 355              		.loc 1 91 11 is_stmt 0 view .LVU103
 356 0010 1000     		movs	r0, r2
 357 0012 0833     		adds	r3, r3, #8
 358              	.LVL42:
 359              		.loc 1 91 11 view .LVU104
 360 0014 DBB2     		uxtb	r3, r3
 361              	.LVL43:
 362              	.L41:
  92:tmk_core/common/util.c ****     }
  93:tmk_core/common/util.c ****     if (bits >> 4) {
 363              		.loc 1 93 5 is_stmt 1 view .LVU105
 364              		.loc 1 93 14 is_stmt 0 view .LVU106
 365 0016 0209     		lsrs	r2, r0, #4
 366              		.loc 1 93 8 view .LVU107
 367 0018 02D0     		beq	.L42
  94:tmk_core/common/util.c ****         bits >>= 4;
 368              		.loc 1 94 9 is_stmt 1 view .LVU108
 369              	.LVL44:
  95:tmk_core/common/util.c ****         n += 4;
 370              		.loc 1 95 9 view .LVU109
 371              		.loc 1 95 11 is_stmt 0 view .LVU110
 372 001a 1000     		movs	r0, r2
 373 001c 0433     		adds	r3, r3, #4
 374              	.LVL45:
 375              		.loc 1 95 11 view .LVU111
 376 001e DBB2     		uxtb	r3, r3
 377              	.LVL46:
 378              	.L42:
  96:tmk_core/common/util.c ****     }
  97:tmk_core/common/util.c ****     if (bits >> 2) {
 379              		.loc 1 97 5 is_stmt 1 view .LVU112
 380              		.loc 1 97 14 is_stmt 0 view .LVU113
 381 0020 8208     		lsrs	r2, r0, #2
 382              		.loc 1 97 8 view .LVU114
 383 0022 02D0     		beq	.L43
  98:tmk_core/common/util.c ****         bits >>= 2;
 384              		.loc 1 98 9 is_stmt 1 view .LVU115
 385              	.LVL47:
  99:tmk_core/common/util.c ****         n += 2;
 386              		.loc 1 99 9 view .LVU116
 387              		.loc 1 99 11 is_stmt 0 view .LVU117
 388 0024 1000     		movs	r0, r2
 389 0026 0233     		adds	r3, r3, #2
 390              	.LVL48:
 391              		.loc 1 99 11 view .LVU118
 392 0028 DBB2     		uxtb	r3, r3
 393              	.LVL49:
 394              	.L43:
 100:tmk_core/common/util.c ****     }
 101:tmk_core/common/util.c ****     if (bits >> 1) {
 395              		.loc 1 101 5 is_stmt 1 view .LVU119
 396              		.loc 1 101 14 is_stmt 0 view .LVU120
 397 002a 4008     		lsrs	r0, r0, #1
 398              	.LVL50:
 399              		.loc 1 101 8 view .LVU121
 400 002c 01D0     		beq	.L44
 102:tmk_core/common/util.c ****         bits >>= 1;
 401              		.loc 1 102 9 is_stmt 1 view .LVU122
 402              	.LVL51:
 103:tmk_core/common/util.c ****         n += 1;
 403              		.loc 1 103 9 view .LVU123
 404              		.loc 1 103 11 is_stmt 0 view .LVU124
 405 002e 0133     		adds	r3, r3, #1
 406              	.LVL52:
 407              		.loc 1 103 11 view .LVU125
 408 0030 DBB2     		uxtb	r3, r3
 409              	.LVL53:
 410              	.L44:
 104:tmk_core/common/util.c ****     }
 105:tmk_core/common/util.c ****     return n;
 411              		.loc 1 105 5 is_stmt 1 view .LVU126
 106:tmk_core/common/util.c **** }
 412              		.loc 1 106 1 is_stmt 0 view .LVU127
 413 0032 1800     		movs	r0, r3
 414              		@ sp needed
 415 0034 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE5:
 419              		.section	.text.bitrev,"ax",%progbits
 420              		.align	1
 421              		.global	bitrev
 422              		.syntax unified
 423              		.code	16
 424              		.thumb_func
 425              		.fpu softvfp
 427              	bitrev:
 428              	.LVL54:
 429              	.LFB6:
 107:tmk_core/common/util.c **** 
 108:tmk_core/common/util.c **** __attribute__((noinline)) uint8_t bitrev(uint8_t bits) {
 430              		.loc 1 108 56 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 109:tmk_core/common/util.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 435              		.loc 1 109 5 view .LVU129
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 436              		.loc 1 110 32 is_stmt 0 view .LVU130
 437 0000 3322     		movs	r2, #51
 109:tmk_core/common/util.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 438              		.loc 1 109 26 view .LVU131
 439 0002 0301     		lsls	r3, r0, #4
 109:tmk_core/common/util.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 440              		.loc 1 109 47 view .LVU132
 441 0004 0009     		lsrs	r0, r0, #4
 442              	.LVL55:
 109:tmk_core/common/util.c ****     bits = (bits & 0x0f) << 4 | (bits & 0xf0) >> 4;
 443              		.loc 1 109 31 view .LVU133
 444 0006 1843     		orrs	r0, r3
 445              	.LVL56:
 446              		.loc 1 110 5 is_stmt 1 view .LVU134
 447              		.loc 1 110 32 is_stmt 0 view .LVU135
 448 0008 C0B2     		uxtb	r0, r0
 449              	.LVL57:
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 450              		.loc 1 111 5 is_stmt 1 view .LVU136
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 451              		.loc 1 110 32 is_stmt 0 view .LVU137
 452 000a 8300     		lsls	r3, r0, #2
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 453              		.loc 1 110 59 view .LVU138
 454 000c 8010     		asrs	r0, r0, #2
 455              	.LVL58:
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 456              		.loc 1 110 59 view .LVU139
 457 000e 1040     		ands	r0, r2
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 458              		.loc 1 110 32 view .LVU140
 459 0010 9343     		bics	r3, r2
 110:tmk_core/common/util.c ****     bits = (bits & 0b00110011) << 2 | (bits & 0b11001100) >> 2;
 460              		.loc 1 110 37 view .LVU141
 461 0012 0343     		orrs	r3, r0
 462              		.loc 1 111 32 view .LVU142
 463 0014 DBB2     		uxtb	r3, r3
 464              	.LVL59:
 112:tmk_core/common/util.c ****     return bits;
 465              		.loc 1 112 5 is_stmt 1 view .LVU143
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 466              		.loc 1 111 32 is_stmt 0 view .LVU144
 467 0016 2232     		adds	r2, r2, #34
 468 0018 5800     		lsls	r0, r3, #1
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 469              		.loc 1 111 59 view .LVU145
 470 001a 5B10     		asrs	r3, r3, #1
 471              	.LVL60:
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 472              		.loc 1 111 32 view .LVU146
 473 001c 9043     		bics	r0, r2
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 474              		.loc 1 111 59 view .LVU147
 475 001e 1340     		ands	r3, r2
 111:tmk_core/common/util.c ****     bits = (bits & 0b01010101) << 1 | (bits & 0b10101010) >> 1;
 476              		.loc 1 111 37 view .LVU148
 477 0020 1843     		orrs	r0, r3
 478              		.loc 1 112 12 view .LVU149
 479 0022 C0B2     		uxtb	r0, r0
 113:tmk_core/common/util.c **** }
 480              		.loc 1 113 1 view .LVU150
 481              		@ sp needed
 482 0024 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE6:
 486              		.section	.text.bitrev16,"ax",%progbits
 487              		.align	1
 488              		.global	bitrev16
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 492              		.fpu softvfp
 494              	bitrev16:
 495              	.LVL61:
 496              	.LFB7:
 114:tmk_core/common/util.c **** 
 115:tmk_core/common/util.c **** uint16_t bitrev16(uint16_t bits) {
 497              		.loc 1 115 34 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 116:tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 501              		.loc 1 116 5 view .LVU152
 115:tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 502              		.loc 1 115 34 is_stmt 0 view .LVU153
 503 0000 70B5     		push	{r4, r5, r6, lr}
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 4, -16
 506              		.cfi_offset 5, -12
 507              		.cfi_offset 6, -8
 508              		.cfi_offset 14, -4
 115:tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 509              		.loc 1 115 34 view .LVU154
 510 0002 0500     		movs	r5, r0
 511              		.loc 1 116 12 view .LVU155
 512 0004 C0B2     		uxtb	r0, r0
 513              	.LVL62:
 514              		.loc 1 116 12 view .LVU156
 515 0006 FFF7FEFF 		bl	bitrev
 516              	.LVL63:
 517 000a 0400     		movs	r4, r0
 518              		.loc 1 116 41 view .LVU157
 519 000c 280A     		lsrs	r0, r5, #8
 520 000e FFF7FEFF 		bl	bitrev
 521              	.LVL64:
 117:tmk_core/common/util.c ****     return bits;
 522              		.loc 1 117 5 is_stmt 1 view .LVU158
 116:tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 523              		.loc 1 116 34 is_stmt 0 view .LVU159
 524 0012 2402     		lsls	r4, r4, #8
 525              	.LVL65:
 116:tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff) << 8 | bitrev((bits & 0xff00) >> 8);
 526              		.loc 1 116 39 view .LVU160
 527 0014 2043     		orrs	r0, r4
 528              		.loc 1 117 12 view .LVU161
 529 0016 80B2     		uxth	r0, r0
 118:tmk_core/common/util.c **** }
 530              		.loc 1 118 1 view .LVU162
 531              		@ sp needed
 532 0018 70BD     		pop	{r4, r5, r6, pc}
 533              		.cfi_endproc
 534              	.LFE7:
 536              		.section	.text.bitrev32,"ax",%progbits
 537              		.align	1
 538              		.global	bitrev32
 539              		.syntax unified
 540              		.code	16
 541              		.thumb_func
 542              		.fpu softvfp
 544              	bitrev32:
 545              	.LVL66:
 546              	.LFB8:
 119:tmk_core/common/util.c **** 
 120:tmk_core/common/util.c **** uint32_t bitrev32(uint32_t bits) {
 547              		.loc 1 120 34 is_stmt 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 121:tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 551              		.loc 1 121 5 view .LVU164
 120:tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 552              		.loc 1 120 34 is_stmt 0 view .LVU165
 553 0000 70B5     		push	{r4, r5, r6, lr}
 554              		.cfi_def_cfa_offset 16
 555              		.cfi_offset 4, -16
 556              		.cfi_offset 5, -12
 557              		.cfi_offset 6, -8
 558              		.cfi_offset 14, -4
 120:tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 559              		.loc 1 120 34 view .LVU166
 560 0002 0500     		movs	r5, r0
 561              		.loc 1 121 22 view .LVU167
 562 0004 80B2     		uxth	r0, r0
 563              	.LVL67:
 564              		.loc 1 121 22 view .LVU168
 565 0006 FFF7FEFF 		bl	bitrev16
 566              	.LVL68:
 567 000a 0400     		movs	r4, r0
 568              		.loc 1 121 58 view .LVU169
 569 000c 280C     		lsrs	r0, r5, #16
 570 000e FFF7FEFF 		bl	bitrev16
 571              	.LVL69:
 122:tmk_core/common/util.c ****     return bits;
 572              		.loc 1 122 5 is_stmt 1 view .LVU170
 121:tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 573              		.loc 1 121 50 is_stmt 0 view .LVU171
 574 0012 2404     		lsls	r4, r4, #16
 575              	.LVL70:
 121:tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff) << 16 | bitrev16((bits & 0xffff0000) >> 16);
 576              		.loc 1 121 10 view .LVU172
 577 0014 2043     		orrs	r0, r4
 123:tmk_core/common/util.c **** }
 578              		.loc 1 123 1 view .LVU173
 579              		@ sp needed
 580 0016 70BD     		pop	{r4, r5, r6, pc}
 581              		.cfi_endproc
 582              	.LFE8:
 584              		.text
 585              	.Letext0:
 586              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 587              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
DEFINED SYMBOLS
                            *ABS*:00000000 util.c
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:16     .text.bitpop:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:24     .text.bitpop:00000000 bitpop
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:66     .text.bitpop16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:73     .text.bitpop16:00000000 bitpop16
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:114    .text.bitpop32:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:121    .text.bitpop32:00000000 bitpop32
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:162    .text.biton:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:169    .text.biton:00000000 biton
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:230    .text.biton16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:237    .text.biton16:00000000 biton16
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:317    .text.biton32:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:324    .text.biton32:00000000 biton32
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:420    .text.bitrev:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:427    .text.bitrev:00000000 bitrev
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:487    .text.bitrev16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:494    .text.bitrev16:00000000 bitrev16
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:537    .text.bitrev32:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccIXbvM6.s:544    .text.bitrev32:00000000 bitrev32

NO UNDEFINED SYMBOLS
