   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"action_layer.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.default_layer_state_set_user,"ax",%progbits
  16              		.align	1
  17              		.weak	default_layer_state_set_user
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	default_layer_state_set_user:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "tmk_core/common/action_layer.c"
   1:tmk_core/common/action_layer.c **** #include <stdint.h>
   2:tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:tmk_core/common/action_layer.c **** #include "action.h"
   4:tmk_core/common/action_layer.c **** #include "util.h"
   5:tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:tmk_core/common/action_layer.c **** 
   7:tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:tmk_core/common/action_layer.c **** #    include "debug.h"
   9:tmk_core/common/action_layer.c **** #else
  10:tmk_core/common/action_layer.c **** #    include "nodebug.h"
  11:tmk_core/common/action_layer.c **** #endif
  12:tmk_core/common/action_layer.c **** 
  13:tmk_core/common/action_layer.c **** /** \brief Default Layer State
  14:tmk_core/common/action_layer.c ****  */
  15:tmk_core/common/action_layer.c **** layer_state_t default_layer_state = 0;
  16:tmk_core/common/action_layer.c **** 
  17:tmk_core/common/action_layer.c **** /** \brief Default Layer State Set At user Level
  18:tmk_core/common/action_layer.c ****  *
  19:tmk_core/common/action_layer.c ****  * Run user code on default layer state change
  20:tmk_core/common/action_layer.c ****  */
  21:tmk_core/common/action_layer.c **** __attribute__((weak)) layer_state_t default_layer_state_set_user(layer_state_t state) { return stat
  28              		.loc 1 21 87 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 21 89 view .LVU1
  34              		.loc 1 21 1 is_stmt 0 view .LVU2
  35              		@ sp needed
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE3:
  40              		.section	.text.default_layer_state_set_kb,"ax",%progbits
  41              		.align	1
  42              		.weak	default_layer_state_set_kb
  43              		.syntax unified
  44              		.code	16
  45              		.thumb_func
  46              		.fpu softvfp
  48              	default_layer_state_set_kb:
  49              	.LVL1:
  50              	.LFB4:
  22:tmk_core/common/action_layer.c **** 
  23:tmk_core/common/action_layer.c **** /** \brief Default Layer State Set At Keyboard Level
  24:tmk_core/common/action_layer.c ****  *
  25:tmk_core/common/action_layer.c ****  *  Run keyboard code on default layer state change
  26:tmk_core/common/action_layer.c ****  */
  27:tmk_core/common/action_layer.c **** __attribute__((weak)) layer_state_t default_layer_state_set_kb(layer_state_t state) { return defaul
  51              		.loc 1 27 85 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		.loc 1 27 87 view .LVU4
  56              		.loc 1 27 85 is_stmt 0 view .LVU5
  57 0000 10B5     		push	{r4, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 4, -8
  60              		.cfi_offset 14, -4
  61              		.loc 1 27 94 view .LVU6
  62 0002 FFF7FEFF 		bl	default_layer_state_set_user
  63              	.LVL2:
  64              		.loc 1 27 1 view .LVU7
  65              		@ sp needed
  66 0006 10BD     		pop	{r4, pc}
  67              		.cfi_endproc
  68              	.LFE4:
  70              		.section	.text.default_layer_state_set,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  75              		.fpu softvfp
  77              	default_layer_state_set:
  78              	.LVL3:
  79              	.LFB5:
  28:tmk_core/common/action_layer.c **** 
  29:tmk_core/common/action_layer.c **** /** \brief Default Layer State Set
  30:tmk_core/common/action_layer.c ****  *
  31:tmk_core/common/action_layer.c ****  * Static function to set the default layer state, prints debug info and clears keys
  32:tmk_core/common/action_layer.c ****  */
  33:tmk_core/common/action_layer.c **** static void default_layer_state_set(layer_state_t state) {
  80              		.loc 1 33 58 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  34:tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  84              		.loc 1 34 5 view .LVU9
  33:tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  85              		.loc 1 33 58 is_stmt 0 view .LVU10
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 34 13 view .LVU11
  91 0002 FFF7FEFF 		bl	default_layer_state_set_kb
  92              	.LVL4:
  35:tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  93              		.loc 1 35 35 is_stmt 1 view .LVU12
  36:tmk_core/common/action_layer.c ****     default_layer_debug();
  94              		.loc 1 36 5 view .LVU13
  37:tmk_core/common/action_layer.c ****     debug(" to ");
  38:tmk_core/common/action_layer.c ****     default_layer_state = state;
  39:tmk_core/common/action_layer.c ****     default_layer_debug();
  40:tmk_core/common/action_layer.c ****     debug("\n");
  41:tmk_core/common/action_layer.c **** #ifdef STRICT_LAYER_RELEASE
  42:tmk_core/common/action_layer.c ****     clear_keyboard_but_mods();  // To avoid stuck keys
  43:tmk_core/common/action_layer.c **** #else
  44:tmk_core/common/action_layer.c ****     clear_keyboard_but_mods_and_keys();  // Don't reset held keys
  45:tmk_core/common/action_layer.c **** #endif
  46:tmk_core/common/action_layer.c **** }
  47:tmk_core/common/action_layer.c **** 
  48:tmk_core/common/action_layer.c **** /** \brief Default Layer Print
  49:tmk_core/common/action_layer.c ****  *
  50:tmk_core/common/action_layer.c ****  * Print out the hex value of the 32-bit default layer state, as well as the value of the highest b
  51:tmk_core/common/action_layer.c ****  */
  52:tmk_core/common/action_layer.c **** void default_layer_debug(void) { dprintf("%08lX(%u)", default_layer_state, get_highest_layer(defaul
  95              		.loc 1 52 115 view .LVU14
  37:tmk_core/common/action_layer.c ****     debug(" to ");
  96              		.loc 1 37 18 view .LVU15
  38:tmk_core/common/action_layer.c ****     default_layer_debug();
  97              		.loc 1 38 5 view .LVU16
  38:tmk_core/common/action_layer.c ****     default_layer_debug();
  98              		.loc 1 38 25 is_stmt 0 view .LVU17
  99 0006 024B     		ldr	r3, .L4
  46:tmk_core/common/action_layer.c **** 
 100              		.loc 1 46 1 view .LVU18
 101              		@ sp needed
  38:tmk_core/common/action_layer.c ****     default_layer_debug();
 102              		.loc 1 38 25 view .LVU19
 103 0008 1860     		str	r0, [r3]
  39:tmk_core/common/action_layer.c ****     debug("\n");
 104              		.loc 1 39 5 is_stmt 1 view .LVU20
 105              		.loc 1 52 115 view .LVU21
  40:tmk_core/common/action_layer.c **** #ifdef STRICT_LAYER_RELEASE
 106              		.loc 1 40 16 view .LVU22
  44:tmk_core/common/action_layer.c **** #endif
 107              		.loc 1 44 5 view .LVU23
 108 000a FFF7FEFF 		bl	clear_keyboard_but_mods_and_keys
 109              	.LVL5:
  46:tmk_core/common/action_layer.c **** 
 110              		.loc 1 46 1 is_stmt 0 view .LVU24
 111 000e 10BD     		pop	{r4, pc}
 112              	.L5:
 113              		.align	2
 114              	.L4:
 115 0010 00000000 		.word	.LANCHOR0
 116              		.cfi_endproc
 117              	.LFE5:
 119              		.section	.text.default_layer_debug,"ax",%progbits
 120              		.align	1
 121              		.global	default_layer_debug
 122              		.syntax unified
 123              		.code	16
 124              		.thumb_func
 125              		.fpu softvfp
 127              	default_layer_debug:
 128              	.LFB6:
 129              		.loc 1 52 32 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 1 52 115 view .LVU26
 135              		.loc 1 52 1 is_stmt 0 view .LVU27
 136              		@ sp needed
 137 0000 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE6:
 141              		.section	.text.default_layer_set,"ax",%progbits
 142              		.align	1
 143              		.global	default_layer_set
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 147              		.fpu softvfp
 149              	default_layer_set:
 150              	.LVL6:
 151              	.LFB7:
  53:tmk_core/common/action_layer.c **** 
  54:tmk_core/common/action_layer.c **** /** \brief Default Layer Set
  55:tmk_core/common/action_layer.c ****  *
  56:tmk_core/common/action_layer.c ****  * Sets the default layer state.
  57:tmk_core/common/action_layer.c ****  */
  58:tmk_core/common/action_layer.c **** void default_layer_set(layer_state_t state) { default_layer_state_set(state); }
 152              		.loc 1 58 45 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 58 47 view .LVU29
 157              		.loc 1 58 45 is_stmt 0 view .LVU30
 158 0000 10B5     		push	{r4, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162              		.loc 1 58 47 view .LVU31
 163 0002 FFF7FEFF 		bl	default_layer_state_set
 164              	.LVL7:
 165              		.loc 1 58 1 view .LVU32
 166              		@ sp needed
 167 0006 10BD     		pop	{r4, pc}
 168              		.cfi_endproc
 169              	.LFE7:
 171              		.section	.text.default_layer_or,"ax",%progbits
 172              		.align	1
 173              		.global	default_layer_or
 174              		.syntax unified
 175              		.code	16
 176              		.thumb_func
 177              		.fpu softvfp
 179              	default_layer_or:
 180              	.LVL8:
 181              	.LFB8:
  59:tmk_core/common/action_layer.c **** 
  60:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  61:tmk_core/common/action_layer.c **** /** \brief Default Layer Or
  62:tmk_core/common/action_layer.c ****  *
  63:tmk_core/common/action_layer.c ****  * Turns on the default layer based on matching bits between specifed layer and existing layer stat
  64:tmk_core/common/action_layer.c ****  */
  65:tmk_core/common/action_layer.c **** void default_layer_or(layer_state_t state) { default_layer_state_set(default_layer_state | state); 
 182              		.loc 1 65 44 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		.loc 1 65 46 view .LVU34
 187              		.loc 1 65 44 is_stmt 0 view .LVU35
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192              		.loc 1 65 46 view .LVU36
 193 0002 034B     		ldr	r3, .L9
 194              		.loc 1 65 1 view .LVU37
 195              		@ sp needed
 196              		.loc 1 65 46 view .LVU38
 197 0004 1B68     		ldr	r3, [r3]
 198 0006 1843     		orrs	r0, r3
 199              	.LVL9:
 200              		.loc 1 65 46 view .LVU39
 201 0008 FFF7FEFF 		bl	default_layer_state_set
 202              	.LVL10:
 203              		.loc 1 65 1 view .LVU40
 204 000c 10BD     		pop	{r4, pc}
 205              	.L10:
 206 000e C046     		.align	2
 207              	.L9:
 208 0010 00000000 		.word	.LANCHOR0
 209              		.cfi_endproc
 210              	.LFE8:
 212              		.section	.text.default_layer_and,"ax",%progbits
 213              		.align	1
 214              		.global	default_layer_and
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	default_layer_and:
 221              	.LVL11:
 222              	.LFB9:
  66:tmk_core/common/action_layer.c **** /** \brief Default Layer And
  67:tmk_core/common/action_layer.c ****  *
  68:tmk_core/common/action_layer.c ****  * Turns on default layer based on matching enabled bits between specifed layer and existing layer 
  69:tmk_core/common/action_layer.c ****  */
  70:tmk_core/common/action_layer.c **** void default_layer_and(layer_state_t state) { default_layer_state_set(default_layer_state & state);
 223              		.loc 1 70 45 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		.loc 1 70 47 view .LVU42
 228              		.loc 1 70 45 is_stmt 0 view .LVU43
 229 0000 10B5     		push	{r4, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233              		.loc 1 70 47 view .LVU44
 234 0002 034B     		ldr	r3, .L12
 235              		.loc 1 70 1 view .LVU45
 236              		@ sp needed
 237              		.loc 1 70 47 view .LVU46
 238 0004 1B68     		ldr	r3, [r3]
 239 0006 1840     		ands	r0, r3
 240              	.LVL12:
 241              		.loc 1 70 47 view .LVU47
 242 0008 FFF7FEFF 		bl	default_layer_state_set
 243              	.LVL13:
 244              		.loc 1 70 1 view .LVU48
 245 000c 10BD     		pop	{r4, pc}
 246              	.L13:
 247 000e C046     		.align	2
 248              	.L12:
 249 0010 00000000 		.word	.LANCHOR0
 250              		.cfi_endproc
 251              	.LFE9:
 253              		.section	.text.default_layer_xor,"ax",%progbits
 254              		.align	1
 255              		.global	default_layer_xor
 256              		.syntax unified
 257              		.code	16
 258              		.thumb_func
 259              		.fpu softvfp
 261              	default_layer_xor:
 262              	.LVL14:
 263              	.LFB10:
  71:tmk_core/common/action_layer.c **** /** \brief Default Layer Xor
  72:tmk_core/common/action_layer.c ****  *
  73:tmk_core/common/action_layer.c ****  * Turns on default layer based on non-matching bits between specifed layer and existing layer stat
  74:tmk_core/common/action_layer.c ****  */
  75:tmk_core/common/action_layer.c **** void default_layer_xor(layer_state_t state) { default_layer_state_set(default_layer_state ^ state);
 264              		.loc 1 75 45 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		.loc 1 75 47 view .LVU50
 269              		.loc 1 75 45 is_stmt 0 view .LVU51
 270 0000 10B5     		push	{r4, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 4, -8
 273              		.cfi_offset 14, -4
 274              		.loc 1 75 47 view .LVU52
 275 0002 034B     		ldr	r3, .L15
 276              		.loc 1 75 1 view .LVU53
 277              		@ sp needed
 278              		.loc 1 75 47 view .LVU54
 279 0004 1B68     		ldr	r3, [r3]
 280 0006 5840     		eors	r0, r3
 281              	.LVL15:
 282              		.loc 1 75 47 view .LVU55
 283 0008 FFF7FEFF 		bl	default_layer_state_set
 284              	.LVL16:
 285              		.loc 1 75 1 view .LVU56
 286 000c 10BD     		pop	{r4, pc}
 287              	.L16:
 288 000e C046     		.align	2
 289              	.L15:
 290 0010 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE10:
 294              		.section	.text.layer_state_set_user,"ax",%progbits
 295              		.align	1
 296              		.weak	layer_state_set_user
 297              		.syntax unified
 298              		.code	16
 299              		.thumb_func
 300              		.fpu softvfp
 302              	layer_state_set_user:
 303              	.LFB33:
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              		@ sp needed
 309 0000 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE33:
 313              		.section	.text.layer_state_set_kb,"ax",%progbits
 314              		.align	1
 315              		.weak	layer_state_set_kb
 316              		.syntax unified
 317              		.code	16
 318              		.thumb_func
 319              		.fpu softvfp
 321              	layer_state_set_kb:
 322              	.LVL17:
 323              	.LFB12:
  76:tmk_core/common/action_layer.c **** #endif
  77:tmk_core/common/action_layer.c **** 
  78:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  79:tmk_core/common/action_layer.c **** /** \brief Keymap Layer State
  80:tmk_core/common/action_layer.c ****  */
  81:tmk_core/common/action_layer.c **** layer_state_t layer_state = 0;
  82:tmk_core/common/action_layer.c **** 
  83:tmk_core/common/action_layer.c **** /** \brief Layer state set user
  84:tmk_core/common/action_layer.c ****  *
  85:tmk_core/common/action_layer.c ****  * Runs user code on layer state change
  86:tmk_core/common/action_layer.c ****  */
  87:tmk_core/common/action_layer.c **** __attribute__((weak)) layer_state_t layer_state_set_user(layer_state_t state) { return state; }
  88:tmk_core/common/action_layer.c **** 
  89:tmk_core/common/action_layer.c **** /** \brief Layer state set keyboard
  90:tmk_core/common/action_layer.c ****  *
  91:tmk_core/common/action_layer.c ****  * Runs keyboard code on layer state change
  92:tmk_core/common/action_layer.c ****  */
  93:tmk_core/common/action_layer.c **** __attribute__((weak)) layer_state_t layer_state_set_kb(layer_state_t state) { return layer_state_se
 324              		.loc 1 93 77 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		.loc 1 93 79 view .LVU58
 329              		.loc 1 93 77 is_stmt 0 view .LVU59
 330 0000 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 334              		.loc 1 93 86 view .LVU60
 335 0002 FFF7FEFF 		bl	layer_state_set_user
 336              	.LVL18:
 337              		.loc 1 93 1 view .LVU61
 338              		@ sp needed
 339 0006 10BD     		pop	{r4, pc}
 340              		.cfi_endproc
 341              	.LFE12:
 343              		.section	.text.layer_state_set,"ax",%progbits
 344              		.align	1
 345              		.global	layer_state_set
 346              		.syntax unified
 347              		.code	16
 348              		.thumb_func
 349              		.fpu softvfp
 351              	layer_state_set:
 352              	.LVL19:
 353              	.LFB13:
  94:tmk_core/common/action_layer.c **** 
  95:tmk_core/common/action_layer.c **** /** \brief Layer state set
  96:tmk_core/common/action_layer.c ****  *
  97:tmk_core/common/action_layer.c ****  * Sets the layer to match the specifed state (a bitmask)
  98:tmk_core/common/action_layer.c ****  */
  99:tmk_core/common/action_layer.c **** void layer_state_set(layer_state_t state) {
 354              		.loc 1 99 43 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 100:tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 358              		.loc 1 100 5 view .LVU63
  99:tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 359              		.loc 1 99 43 is_stmt 0 view .LVU64
 360 0000 10B5     		push	{r4, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364              		.loc 1 100 13 view .LVU65
 365 0002 FFF7FEFF 		bl	layer_state_set_kb
 366              	.LVL20:
 101:tmk_core/common/action_layer.c ****     dprint("layer_state: ");
 367              		.loc 1 101 28 is_stmt 1 view .LVU66
 102:tmk_core/common/action_layer.c ****     layer_debug();
 368              		.loc 1 102 5 view .LVU67
 103:tmk_core/common/action_layer.c ****     dprint(" to ");
 104:tmk_core/common/action_layer.c ****     layer_state = state;
 105:tmk_core/common/action_layer.c ****     layer_debug();
 106:tmk_core/common/action_layer.c ****     dprintln();
 107:tmk_core/common/action_layer.c **** #    ifdef STRICT_LAYER_RELEASE
 108:tmk_core/common/action_layer.c ****     clear_keyboard_but_mods();  // To avoid stuck keys
 109:tmk_core/common/action_layer.c **** #    else
 110:tmk_core/common/action_layer.c ****     clear_keyboard_but_mods_and_keys();  // Don't reset held keys
 111:tmk_core/common/action_layer.c **** #    endif
 112:tmk_core/common/action_layer.c **** }
 113:tmk_core/common/action_layer.c **** 
 114:tmk_core/common/action_layer.c **** /** \brief Layer clear
 115:tmk_core/common/action_layer.c ****  *
 116:tmk_core/common/action_layer.c ****  * Turn off all layers
 117:tmk_core/common/action_layer.c ****  */
 118:tmk_core/common/action_layer.c **** void layer_clear(void) { layer_state_set(0); }
 119:tmk_core/common/action_layer.c **** 
 120:tmk_core/common/action_layer.c **** /** \brief Layer state is
 121:tmk_core/common/action_layer.c ****  *
 122:tmk_core/common/action_layer.c ****  * Return whether the given state is on (it might still be shadowed by a higher state, though)
 123:tmk_core/common/action_layer.c ****  */
 124:tmk_core/common/action_layer.c **** bool layer_state_is(uint8_t layer) { return layer_state_cmp(layer_state, layer); }
 125:tmk_core/common/action_layer.c **** 
 126:tmk_core/common/action_layer.c **** /** \brief Layer state compare
 127:tmk_core/common/action_layer.c ****  *
 128:tmk_core/common/action_layer.c ****  * Used for comparing layers {mostly used for unit testing}
 129:tmk_core/common/action_layer.c ****  */
 130:tmk_core/common/action_layer.c **** bool layer_state_cmp(layer_state_t cmp_layer_state, uint8_t layer) {
 131:tmk_core/common/action_layer.c ****     if (!cmp_layer_state) {
 132:tmk_core/common/action_layer.c ****         return layer == 0;
 133:tmk_core/common/action_layer.c ****     }
 134:tmk_core/common/action_layer.c ****     return (cmp_layer_state & (1UL << layer)) != 0;
 135:tmk_core/common/action_layer.c **** }
 136:tmk_core/common/action_layer.c **** 
 137:tmk_core/common/action_layer.c **** /** \brief Layer move
 138:tmk_core/common/action_layer.c ****  *
 139:tmk_core/common/action_layer.c ****  * Turns on the given layer and turn off all other layers
 140:tmk_core/common/action_layer.c ****  */
 141:tmk_core/common/action_layer.c **** void layer_move(uint8_t layer) { layer_state_set(1UL << layer); }
 142:tmk_core/common/action_layer.c **** 
 143:tmk_core/common/action_layer.c **** /** \brief Layer on
 144:tmk_core/common/action_layer.c ****  *
 145:tmk_core/common/action_layer.c ****  * Turns on given layer
 146:tmk_core/common/action_layer.c ****  */
 147:tmk_core/common/action_layer.c **** void layer_on(uint8_t layer) { layer_state_set(layer_state | (1UL << layer)); }
 148:tmk_core/common/action_layer.c **** 
 149:tmk_core/common/action_layer.c **** /** \brief Layer off
 150:tmk_core/common/action_layer.c ****  *
 151:tmk_core/common/action_layer.c ****  * Turns off given layer
 152:tmk_core/common/action_layer.c ****  */
 153:tmk_core/common/action_layer.c **** void layer_off(uint8_t layer) { layer_state_set(layer_state & ~(1UL << layer)); }
 154:tmk_core/common/action_layer.c **** 
 155:tmk_core/common/action_layer.c **** /** \brief Layer invert
 156:tmk_core/common/action_layer.c ****  *
 157:tmk_core/common/action_layer.c ****  * Toggle the given layer (set it if it's unset, or unset it if it's set)
 158:tmk_core/common/action_layer.c ****  */
 159:tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer) { layer_state_set(layer_state ^ (1UL << layer)); }
 160:tmk_core/common/action_layer.c **** 
 161:tmk_core/common/action_layer.c **** /** \brief Layer or
 162:tmk_core/common/action_layer.c ****  *
 163:tmk_core/common/action_layer.c ****  * Turns on layers based on matching bits between specifed layer and existing layer state
 164:tmk_core/common/action_layer.c ****  */
 165:tmk_core/common/action_layer.c **** void layer_or(layer_state_t state) { layer_state_set(layer_state | state); }
 166:tmk_core/common/action_layer.c **** /** \brief Layer and
 167:tmk_core/common/action_layer.c ****  *
 168:tmk_core/common/action_layer.c ****  * Turns on layers based on matching enabled bits between specifed layer and existing layer state
 169:tmk_core/common/action_layer.c ****  */
 170:tmk_core/common/action_layer.c **** void layer_and(layer_state_t state) { layer_state_set(layer_state & state); }
 171:tmk_core/common/action_layer.c **** /** \brief Layer xor
 172:tmk_core/common/action_layer.c ****  *
 173:tmk_core/common/action_layer.c ****  * Turns on layers based on non-matching bits between specifed layer and existing layer state
 174:tmk_core/common/action_layer.c ****  */
 175:tmk_core/common/action_layer.c **** void layer_xor(layer_state_t state) { layer_state_set(layer_state ^ state); }
 176:tmk_core/common/action_layer.c **** 
 177:tmk_core/common/action_layer.c **** /** \brief Layer debug printing
 178:tmk_core/common/action_layer.c ****  *
 179:tmk_core/common/action_layer.c ****  * Print out the hex value of the 32-bit layer state, as well as the value of the highest bit.
 180:tmk_core/common/action_layer.c ****  */
 181:tmk_core/common/action_layer.c **** void layer_debug(void) { dprintf("%08lX(%u)", layer_state, get_highest_layer(layer_state)); }
 369              		.loc 1 181 91 view .LVU68
 103:tmk_core/common/action_layer.c ****     dprint(" to ");
 370              		.loc 1 103 19 view .LVU69
 104:tmk_core/common/action_layer.c ****     layer_debug();
 371              		.loc 1 104 5 view .LVU70
 104:tmk_core/common/action_layer.c ****     layer_debug();
 372              		.loc 1 104 17 is_stmt 0 view .LVU71
 373 0006 024B     		ldr	r3, .L20
 112:tmk_core/common/action_layer.c **** 
 374              		.loc 1 112 1 view .LVU72
 375              		@ sp needed
 104:tmk_core/common/action_layer.c ****     layer_debug();
 376              		.loc 1 104 17 view .LVU73
 377 0008 1860     		str	r0, [r3]
 105:tmk_core/common/action_layer.c ****     dprintln();
 378              		.loc 1 105 5 is_stmt 1 view .LVU74
 379              		.loc 1 181 91 view .LVU75
 106:tmk_core/common/action_layer.c **** #    ifdef STRICT_LAYER_RELEASE
 380              		.loc 1 106 15 view .LVU76
 110:tmk_core/common/action_layer.c **** #    endif
 381              		.loc 1 110 5 view .LVU77
 382 000a FFF7FEFF 		bl	clear_keyboard_but_mods_and_keys
 383              	.LVL21:
 112:tmk_core/common/action_layer.c **** 
 384              		.loc 1 112 1 is_stmt 0 view .LVU78
 385 000e 10BD     		pop	{r4, pc}
 386              	.L21:
 387              		.align	2
 388              	.L20:
 389 0010 00000000 		.word	.LANCHOR1
 390              		.cfi_endproc
 391              	.LFE13:
 393              		.section	.text.layer_clear,"ax",%progbits
 394              		.align	1
 395              		.global	layer_clear
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 399              		.fpu softvfp
 401              	layer_clear:
 402              	.LFB14:
 118:tmk_core/common/action_layer.c **** 
 403              		.loc 1 118 24 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 118:tmk_core/common/action_layer.c **** 
 407              		.loc 1 118 26 view .LVU80
 118:tmk_core/common/action_layer.c **** 
 408              		.loc 1 118 24 is_stmt 0 view .LVU81
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 118:tmk_core/common/action_layer.c **** 
 413              		.loc 1 118 26 view .LVU82
 414 0002 0020     		movs	r0, #0
 415 0004 FFF7FEFF 		bl	layer_state_set
 416              	.LVL22:
 118:tmk_core/common/action_layer.c **** 
 417              		.loc 1 118 1 view .LVU83
 418              		@ sp needed
 419 0008 10BD     		pop	{r4, pc}
 420              		.cfi_endproc
 421              	.LFE14:
 423              		.section	.text.layer_state_cmp,"ax",%progbits
 424              		.align	1
 425              		.global	layer_state_cmp
 426              		.syntax unified
 427              		.code	16
 428              		.thumb_func
 429              		.fpu softvfp
 431              	layer_state_cmp:
 432              	.LVL23:
 433              	.LFB16:
 130:tmk_core/common/action_layer.c ****     if (!cmp_layer_state) {
 434              		.loc 1 130 68 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 131:tmk_core/common/action_layer.c ****         return layer == 0;
 439              		.loc 1 131 5 view .LVU85
 131:tmk_core/common/action_layer.c ****         return layer == 0;
 440              		.loc 1 131 8 is_stmt 0 view .LVU86
 441 0000 0028     		cmp	r0, #0
 442 0002 03D1     		bne	.L24
 132:tmk_core/common/action_layer.c ****     }
 443              		.loc 1 132 9 is_stmt 1 view .LVU87
 132:tmk_core/common/action_layer.c ****     }
 444              		.loc 1 132 22 is_stmt 0 view .LVU88
 445 0004 4842     		rsbs	r0, r1, #0
 446 0006 4841     		adcs	r0, r0, r1
 447              	.LVL24:
 132:tmk_core/common/action_layer.c ****     }
 448              		.loc 1 132 22 view .LVU89
 449 0008 C0B2     		uxtb	r0, r0
 450              	.L25:
 135:tmk_core/common/action_layer.c **** 
 451              		.loc 1 135 1 view .LVU90
 452              		@ sp needed
 453 000a 7047     		bx	lr
 454              	.LVL25:
 455              	.L24:
 134:tmk_core/common/action_layer.c **** }
 456              		.loc 1 134 5 is_stmt 1 view .LVU91
 134:tmk_core/common/action_layer.c **** }
 457              		.loc 1 134 47 is_stmt 0 view .LVU92
 458 000c C840     		lsrs	r0, r0, r1
 459              	.LVL26:
 134:tmk_core/common/action_layer.c **** }
 460              		.loc 1 134 47 view .LVU93
 461 000e 0121     		movs	r1, #1
 462              	.LVL27:
 134:tmk_core/common/action_layer.c **** }
 463              		.loc 1 134 47 view .LVU94
 464 0010 0840     		ands	r0, r1
 465 0012 FAE7     		b	.L25
 466              		.cfi_endproc
 467              	.LFE16:
 469              		.section	.text.layer_state_is,"ax",%progbits
 470              		.align	1
 471              		.global	layer_state_is
 472              		.syntax unified
 473              		.code	16
 474              		.thumb_func
 475              		.fpu softvfp
 477              	layer_state_is:
 478              	.LVL28:
 479              	.LFB15:
 124:tmk_core/common/action_layer.c **** 
 480              		.loc 1 124 36 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 124:tmk_core/common/action_layer.c **** 
 484              		.loc 1 124 38 view .LVU96
 124:tmk_core/common/action_layer.c **** 
 485              		.loc 1 124 36 is_stmt 0 view .LVU97
 486 0000 10B5     		push	{r4, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 4, -8
 489              		.cfi_offset 14, -4
 124:tmk_core/common/action_layer.c **** 
 490              		.loc 1 124 45 view .LVU98
 491 0002 034B     		ldr	r3, .L27
 124:tmk_core/common/action_layer.c **** 
 492              		.loc 1 124 36 view .LVU99
 493 0004 0100     		movs	r1, r0
 124:tmk_core/common/action_layer.c **** 
 494              		.loc 1 124 45 view .LVU100
 495 0006 1868     		ldr	r0, [r3]
 496              	.LVL29:
 124:tmk_core/common/action_layer.c **** 
 497              		.loc 1 124 45 view .LVU101
 498 0008 FFF7FEFF 		bl	layer_state_cmp
 499              	.LVL30:
 124:tmk_core/common/action_layer.c **** 
 500              		.loc 1 124 1 view .LVU102
 501              		@ sp needed
 502 000c 10BD     		pop	{r4, pc}
 503              	.L28:
 504 000e C046     		.align	2
 505              	.L27:
 506 0010 00000000 		.word	.LANCHOR1
 507              		.cfi_endproc
 508              	.LFE15:
 510              		.section	.text.layer_move,"ax",%progbits
 511              		.align	1
 512              		.global	layer_move
 513              		.syntax unified
 514              		.code	16
 515              		.thumb_func
 516              		.fpu softvfp
 518              	layer_move:
 519              	.LVL31:
 520              	.LFB17:
 141:tmk_core/common/action_layer.c **** 
 521              		.loc 1 141 32 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 141:tmk_core/common/action_layer.c **** 
 525              		.loc 1 141 34 view .LVU104
 526 0000 0123     		movs	r3, #1
 527 0002 8340     		lsls	r3, r3, r0
 141:tmk_core/common/action_layer.c **** 
 528              		.loc 1 141 32 is_stmt 0 view .LVU105
 529 0004 10B5     		push	{r4, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
 141:tmk_core/common/action_layer.c **** 
 533              		.loc 1 141 34 view .LVU106
 534 0006 1800     		movs	r0, r3
 535              	.LVL32:
 141:tmk_core/common/action_layer.c **** 
 536              		.loc 1 141 34 view .LVU107
 537 0008 FFF7FEFF 		bl	layer_state_set
 538              	.LVL33:
 141:tmk_core/common/action_layer.c **** 
 539              		.loc 1 141 1 view .LVU108
 540              		@ sp needed
 541 000c 10BD     		pop	{r4, pc}
 542              		.cfi_endproc
 543              	.LFE17:
 545              		.section	.text.layer_on,"ax",%progbits
 546              		.align	1
 547              		.global	layer_on
 548              		.syntax unified
 549              		.code	16
 550              		.thumb_func
 551              		.fpu softvfp
 553              	layer_on:
 554              	.LVL34:
 555              	.LFB18:
 147:tmk_core/common/action_layer.c **** 
 556              		.loc 1 147 30 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 147:tmk_core/common/action_layer.c **** 
 560              		.loc 1 147 32 view .LVU110
 147:tmk_core/common/action_layer.c **** 
 561              		.loc 1 147 67 is_stmt 0 view .LVU111
 562 0000 0123     		movs	r3, #1
 563 0002 8340     		lsls	r3, r3, r0
 147:tmk_core/common/action_layer.c **** 
 564              		.loc 1 147 30 view .LVU112
 565 0004 10B5     		push	{r4, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 4, -8
 568              		.cfi_offset 14, -4
 147:tmk_core/common/action_layer.c **** 
 569              		.loc 1 147 32 view .LVU113
 570 0006 034A     		ldr	r2, .L31
 147:tmk_core/common/action_layer.c **** 
 571              		.loc 1 147 1 view .LVU114
 572              		@ sp needed
 147:tmk_core/common/action_layer.c **** 
 573              		.loc 1 147 32 view .LVU115
 574 0008 1068     		ldr	r0, [r2]
 575              	.LVL35:
 147:tmk_core/common/action_layer.c **** 
 576              		.loc 1 147 32 view .LVU116
 577 000a 1843     		orrs	r0, r3
 578 000c FFF7FEFF 		bl	layer_state_set
 579              	.LVL36:
 147:tmk_core/common/action_layer.c **** 
 580              		.loc 1 147 1 view .LVU117
 581 0010 10BD     		pop	{r4, pc}
 582              	.L32:
 583 0012 C046     		.align	2
 584              	.L31:
 585 0014 00000000 		.word	.LANCHOR1
 586              		.cfi_endproc
 587              	.LFE18:
 589              		.section	.text.layer_off,"ax",%progbits
 590              		.align	1
 591              		.global	layer_off
 592              		.syntax unified
 593              		.code	16
 594              		.thumb_func
 595              		.fpu softvfp
 597              	layer_off:
 598              	.LVL37:
 599              	.LFB19:
 153:tmk_core/common/action_layer.c **** 
 600              		.loc 1 153 31 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 153:tmk_core/common/action_layer.c **** 
 604              		.loc 1 153 33 view .LVU119
 153:tmk_core/common/action_layer.c **** 
 605              		.loc 1 153 69 is_stmt 0 view .LVU120
 606 0000 0123     		movs	r3, #1
 607 0002 8340     		lsls	r3, r3, r0
 153:tmk_core/common/action_layer.c **** 
 608              		.loc 1 153 31 view .LVU121
 609 0004 10B5     		push	{r4, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 4, -8
 612              		.cfi_offset 14, -4
 153:tmk_core/common/action_layer.c **** 
 613              		.loc 1 153 33 view .LVU122
 614 0006 034A     		ldr	r2, .L34
 153:tmk_core/common/action_layer.c **** 
 615              		.loc 1 153 1 view .LVU123
 616              		@ sp needed
 153:tmk_core/common/action_layer.c **** 
 617              		.loc 1 153 33 view .LVU124
 618 0008 1068     		ldr	r0, [r2]
 619              	.LVL38:
 153:tmk_core/common/action_layer.c **** 
 620              		.loc 1 153 33 view .LVU125
 621 000a 9843     		bics	r0, r3
 622 000c FFF7FEFF 		bl	layer_state_set
 623              	.LVL39:
 153:tmk_core/common/action_layer.c **** 
 624              		.loc 1 153 1 view .LVU126
 625 0010 10BD     		pop	{r4, pc}
 626              	.L35:
 627 0012 C046     		.align	2
 628              	.L34:
 629 0014 00000000 		.word	.LANCHOR1
 630              		.cfi_endproc
 631              	.LFE19:
 633              		.section	.text.layer_invert,"ax",%progbits
 634              		.align	1
 635              		.global	layer_invert
 636              		.syntax unified
 637              		.code	16
 638              		.thumb_func
 639              		.fpu softvfp
 641              	layer_invert:
 642              	.LVL40:
 643              	.LFB20:
 159:tmk_core/common/action_layer.c **** 
 644              		.loc 1 159 34 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 159:tmk_core/common/action_layer.c **** 
 648              		.loc 1 159 36 view .LVU128
 159:tmk_core/common/action_layer.c **** 
 649              		.loc 1 159 71 is_stmt 0 view .LVU129
 650 0000 0123     		movs	r3, #1
 651 0002 8340     		lsls	r3, r3, r0
 159:tmk_core/common/action_layer.c **** 
 652              		.loc 1 159 34 view .LVU130
 653 0004 10B5     		push	{r4, lr}
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 4, -8
 656              		.cfi_offset 14, -4
 159:tmk_core/common/action_layer.c **** 
 657              		.loc 1 159 36 view .LVU131
 658 0006 034A     		ldr	r2, .L37
 159:tmk_core/common/action_layer.c **** 
 659              		.loc 1 159 1 view .LVU132
 660              		@ sp needed
 159:tmk_core/common/action_layer.c **** 
 661              		.loc 1 159 36 view .LVU133
 662 0008 1068     		ldr	r0, [r2]
 663              	.LVL41:
 159:tmk_core/common/action_layer.c **** 
 664              		.loc 1 159 36 view .LVU134
 665 000a 5840     		eors	r0, r3
 666 000c FFF7FEFF 		bl	layer_state_set
 667              	.LVL42:
 159:tmk_core/common/action_layer.c **** 
 668              		.loc 1 159 1 view .LVU135
 669 0010 10BD     		pop	{r4, pc}
 670              	.L38:
 671 0012 C046     		.align	2
 672              	.L37:
 673 0014 00000000 		.word	.LANCHOR1
 674              		.cfi_endproc
 675              	.LFE20:
 677              		.section	.text.layer_or,"ax",%progbits
 678              		.align	1
 679              		.global	layer_or
 680              		.syntax unified
 681              		.code	16
 682              		.thumb_func
 683              		.fpu softvfp
 685              	layer_or:
 686              	.LVL43:
 687              	.LFB21:
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 688              		.loc 1 165 36 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 692              		.loc 1 165 38 view .LVU137
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 693              		.loc 1 165 36 is_stmt 0 view .LVU138
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 698              		.loc 1 165 38 view .LVU139
 699 0002 034B     		ldr	r3, .L40
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 700              		.loc 1 165 1 view .LVU140
 701              		@ sp needed
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 702              		.loc 1 165 38 view .LVU141
 703 0004 1B68     		ldr	r3, [r3]
 704 0006 1843     		orrs	r0, r3
 705              	.LVL44:
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 706              		.loc 1 165 38 view .LVU142
 707 0008 FFF7FEFF 		bl	layer_state_set
 708              	.LVL45:
 165:tmk_core/common/action_layer.c **** /** \brief Layer and
 709              		.loc 1 165 1 view .LVU143
 710 000c 10BD     		pop	{r4, pc}
 711              	.L41:
 712 000e C046     		.align	2
 713              	.L40:
 714 0010 00000000 		.word	.LANCHOR1
 715              		.cfi_endproc
 716              	.LFE21:
 718              		.section	.text.layer_and,"ax",%progbits
 719              		.align	1
 720              		.global	layer_and
 721              		.syntax unified
 722              		.code	16
 723              		.thumb_func
 724              		.fpu softvfp
 726              	layer_and:
 727              	.LVL46:
 728              	.LFB22:
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 729              		.loc 1 170 37 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 733              		.loc 1 170 39 view .LVU145
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 734              		.loc 1 170 37 is_stmt 0 view .LVU146
 735 0000 10B5     		push	{r4, lr}
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 4, -8
 738              		.cfi_offset 14, -4
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 739              		.loc 1 170 39 view .LVU147
 740 0002 034B     		ldr	r3, .L43
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 741              		.loc 1 170 1 view .LVU148
 742              		@ sp needed
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 743              		.loc 1 170 39 view .LVU149
 744 0004 1B68     		ldr	r3, [r3]
 745 0006 1840     		ands	r0, r3
 746              	.LVL47:
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 747              		.loc 1 170 39 view .LVU150
 748 0008 FFF7FEFF 		bl	layer_state_set
 749              	.LVL48:
 170:tmk_core/common/action_layer.c **** /** \brief Layer xor
 750              		.loc 1 170 1 view .LVU151
 751 000c 10BD     		pop	{r4, pc}
 752              	.L44:
 753 000e C046     		.align	2
 754              	.L43:
 755 0010 00000000 		.word	.LANCHOR1
 756              		.cfi_endproc
 757              	.LFE22:
 759              		.section	.text.layer_xor,"ax",%progbits
 760              		.align	1
 761              		.global	layer_xor
 762              		.syntax unified
 763              		.code	16
 764              		.thumb_func
 765              		.fpu softvfp
 767              	layer_xor:
 768              	.LVL49:
 769              	.LFB23:
 175:tmk_core/common/action_layer.c **** 
 770              		.loc 1 175 37 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 175:tmk_core/common/action_layer.c **** 
 774              		.loc 1 175 39 view .LVU153
 175:tmk_core/common/action_layer.c **** 
 775              		.loc 1 175 37 is_stmt 0 view .LVU154
 776 0000 10B5     		push	{r4, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
 175:tmk_core/common/action_layer.c **** 
 780              		.loc 1 175 39 view .LVU155
 781 0002 034B     		ldr	r3, .L46
 175:tmk_core/common/action_layer.c **** 
 782              		.loc 1 175 1 view .LVU156
 783              		@ sp needed
 175:tmk_core/common/action_layer.c **** 
 784              		.loc 1 175 39 view .LVU157
 785 0004 1B68     		ldr	r3, [r3]
 786 0006 5840     		eors	r0, r3
 787              	.LVL50:
 175:tmk_core/common/action_layer.c **** 
 788              		.loc 1 175 39 view .LVU158
 789 0008 FFF7FEFF 		bl	layer_state_set
 790              	.LVL51:
 175:tmk_core/common/action_layer.c **** 
 791              		.loc 1 175 1 view .LVU159
 792 000c 10BD     		pop	{r4, pc}
 793              	.L47:
 794 000e C046     		.align	2
 795              	.L46:
 796 0010 00000000 		.word	.LANCHOR1
 797              		.cfi_endproc
 798              	.LFE23:
 800              		.section	.text.layer_debug,"ax",%progbits
 801              		.align	1
 802              		.global	layer_debug
 803              		.syntax unified
 804              		.code	16
 805              		.thumb_func
 806              		.fpu softvfp
 808              	layer_debug:
 809              	.LFB31:
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              		@ sp needed
 815 0000 7047     		bx	lr
 816              		.cfi_endproc
 817              	.LFE31:
 819              		.section	.text.update_source_layers_cache,"ax",%progbits
 820              		.align	1
 821              		.global	update_source_layers_cache
 822              		.syntax unified
 823              		.code	16
 824              		.thumb_func
 825              		.fpu softvfp
 827              	update_source_layers_cache:
 828              	.LVL52:
 829              	.LFB25:
 182:tmk_core/common/action_layer.c **** #endif
 183:tmk_core/common/action_layer.c **** 
 184:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 185:tmk_core/common/action_layer.c **** /** \brief source layer cache
 186:tmk_core/common/action_layer.c ****  */
 187:tmk_core/common/action_layer.c **** 
 188:tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 189:tmk_core/common/action_layer.c **** 
 190:tmk_core/common/action_layer.c **** /** \brief update source layers cache
 191:tmk_core/common/action_layer.c ****  *
 192:tmk_core/common/action_layer.c ****  * Updates the cached keys when changing layers
 193:tmk_core/common/action_layer.c ****  */
 194:tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer) {
 830              		.loc 1 194 62 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 195:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 834              		.loc 1 195 5 view .LVU161
 194:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 835              		.loc 1 194 62 is_stmt 0 view .LVU162
 836 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 837              		.cfi_def_cfa_offset 24
 838              		.cfi_offset 0, -24
 839              		.cfi_offset 1, -20
 840              		.cfi_offset 4, -16
 841              		.cfi_offset 5, -12
 842              		.cfi_offset 6, -8
 843              		.cfi_offset 14, -4
 844              	.LBB10:
 196:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 197:tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 198:tmk_core/common/action_layer.c **** 
 199:tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 200:tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^= (-((layer & (1U << bit_number)) != 0) ^ sou
 845              		.loc 1 200 149 view .LVU163
 846 0002 0126     		movs	r6, #1
 847              	.LBE10:
 194:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 848              		.loc 1 194 62 view .LVU164
 849 0004 0304     		lsls	r3, r0, #16
 850 0006 01AC     		add	r4, sp, #4
 851 0008 021C     		adds	r2, r0, #0
 852 000a 2080     		strh	r0, [r4]
 195:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 853              		.loc 1 195 41 view .LVU165
 854 000c 180E     		lsrs	r0, r3, #24
 855              	.LBB11:
 856              		.loc 1 200 149 view .LVU166
 857 000e 0723     		movs	r3, #7
 858 0010 3400     		movs	r4, r6
 859              	.LBE11:
 195:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 860              		.loc 1 195 41 view .LVU167
 861 0012 0001     		lsls	r0, r0, #4
 195:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 862              		.loc 1 195 19 view .LVU168
 863 0014 8018     		adds	r0, r0, r2
 864 0016 C0B2     		uxtb	r0, r0
 865              	.LVL53:
 196:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 866              		.loc 1 196 5 is_stmt 1 view .LVU169
 197:tmk_core/common/action_layer.c **** 
 867              		.loc 1 197 5 view .LVU170
 199:tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^= (-((layer & (1U << bit_number)) != 0) ^ sou
 868              		.loc 1 199 5 view .LVU171
 869              	.LBB12:
 199:tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^= (-((layer & (1U << bit_number)) != 0) ^ sou
 870              		.loc 1 199 10 view .LVU172
 871              		.loc 1 200 149 is_stmt 0 view .LVU173
 872 0018 0340     		ands	r3, r0
 873 001a 9C40     		lsls	r4, r4, r3
 874 001c 0523     		movs	r3, #5
 875              		.loc 1 200 143 view .LVU174
 876 001e 0022     		movs	r2, #0
 877 0020 C008     		lsrs	r0, r0, #3
 878              	.LVL54:
 879              		.loc 1 200 143 view .LVU175
 880 0022 5843     		muls	r0, r3
 881 0024 084B     		ldr	r3, .L52
 882 0026 E4B2     		uxtb	r4, r4
 883 0028 1818     		adds	r0, r3, r0
 884              	.LVL55:
 885              	.L50:
 886              		.loc 1 200 9 is_stmt 1 discriminator 3 view .LVU176
 887              		.loc 1 200 89 is_stmt 0 discriminator 3 view .LVU177
 888 002a 0B00     		movs	r3, r1
 889 002c D340     		lsrs	r3, r3, r2
 890              		.loc 1 200 54 discriminator 3 view .LVU178
 891 002e 0578     		ldrb	r5, [r0]
 892              		.loc 1 200 89 discriminator 3 view .LVU179
 893 0030 3340     		ands	r3, r6
 894              		.loc 1 200 95 discriminator 3 view .LVU180
 895 0032 5B42     		rsbs	r3, r3, #0
 896 0034 6B40     		eors	r3, r5
 897              		.loc 1 200 143 discriminator 3 view .LVU181
 898 0036 2340     		ands	r3, r4
 899              		.loc 1 200 54 discriminator 3 view .LVU182
 900 0038 6B40     		eors	r3, r5
 901 003a 0132     		adds	r2, r2, #1
 902              	.LVL56:
 903              		.loc 1 200 54 discriminator 3 view .LVU183
 904 003c 0370     		strb	r3, [r0]
 905              		.loc 1 200 54 discriminator 3 view .LVU184
 906 003e 0130     		adds	r0, r0, #1
 199:tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^= (-((layer & (1U << bit_number)) != 0) ^ sou
 907              		.loc 1 199 5 discriminator 3 view .LVU185
 908 0040 052A     		cmp	r2, #5
 909 0042 F2D1     		bne	.L50
 910              	.LBE12:
 201:tmk_core/common/action_layer.c ****     }
 202:tmk_core/common/action_layer.c **** }
 911              		.loc 1 202 1 view .LVU186
 912              		@ sp needed
 913 0044 73BD     		pop	{r0, r1, r4, r5, r6, pc}
 914              	.L53:
 915 0046 C046     		.align	2
 916              	.L52:
 917 0048 00000000 		.word	.LANCHOR2
 918              		.cfi_endproc
 919              	.LFE25:
 921              		.section	.text.read_source_layers_cache,"ax",%progbits
 922              		.align	1
 923              		.global	read_source_layers_cache
 924              		.syntax unified
 925              		.code	16
 926              		.thumb_func
 927              		.fpu softvfp
 929              	read_source_layers_cache:
 930              	.LFB26:
 203:tmk_core/common/action_layer.c **** 
 204:tmk_core/common/action_layer.c **** /** \brief read source layers cache
 205:tmk_core/common/action_layer.c ****  *
 206:tmk_core/common/action_layer.c ****  * reads the cached keys stored when the layer was changed
 207:tmk_core/common/action_layer.c ****  */
 208:tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key) {
 931              		.loc 1 208 48 is_stmt 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 209:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 935              		.loc 1 209 5 view .LVU188
 208:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 936              		.loc 1 208 48 is_stmt 0 view .LVU189
 937 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 938              		.cfi_def_cfa_offset 24
 939              		.cfi_offset 0, -24
 940              		.cfi_offset 1, -20
 941              		.cfi_offset 2, -16
 942              		.cfi_offset 4, -12
 943              		.cfi_offset 5, -8
 944              		.cfi_offset 14, -4
 208:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 945              		.loc 1 208 48 view .LVU190
 946 0002 01A9     		add	r1, sp, #4
 947 0004 0880     		strh	r0, [r1]
 210:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 211:tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 948              		.loc 1 211 19 view .LVU191
 949 0006 0721     		movs	r1, #7
 950 0008 0524     		movs	r4, #5
 208:tmk_core/common/action_layer.c ****     const uint8_t key_number  = key.col + (key.row * MATRIX_COLS);
 951              		.loc 1 208 48 view .LVU192
 952 000a 0304     		lsls	r3, r0, #16
 953 000c 021C     		adds	r2, r0, #0
 209:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 954              		.loc 1 209 41 view .LVU193
 955 000e 180E     		lsrs	r0, r3, #24
 956 0010 0001     		lsls	r0, r0, #4
 209:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 957              		.loc 1 209 19 view .LVU194
 958 0012 8018     		adds	r0, r0, r2
 959              		.loc 1 211 19 view .LVU195
 960 0014 0022     		movs	r2, #0
 209:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 961              		.loc 1 209 19 view .LVU196
 962 0016 C0B2     		uxtb	r0, r0
 963              	.LVL57:
 210:tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 964              		.loc 1 210 5 is_stmt 1 view .LVU197
 965              		.loc 1 211 5 view .LVU198
 966              		.loc 1 211 19 is_stmt 0 view .LVU199
 967 0018 0140     		ands	r1, r0
 968              	.LVL58:
 212:tmk_core/common/action_layer.c ****     uint8_t       layer       = 0;
 969              		.loc 1 212 5 is_stmt 1 view .LVU200
 213:tmk_core/common/action_layer.c **** 
 214:tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 970              		.loc 1 214 5 view .LVU201
 971              	.LBB13:
 972              		.loc 1 214 10 view .LVU202
 973              		.loc 1 214 10 is_stmt 0 view .LVU203
 974 001a C008     		lsrs	r0, r0, #3
 975              	.LVL59:
 976              		.loc 1 214 10 view .LVU204
 977 001c 6043     		muls	r0, r4
 978 001e 074C     		ldr	r4, .L57
 215:tmk_core/common/action_layer.c ****         layer |= ((source_layers_cache[storage_row][bit_number] & (1U << storage_bit)) != 0) << bit
 979              		.loc 1 215 88 view .LVU205
 980 0020 0125     		movs	r5, #1
 981 0022 2418     		adds	r4, r4, r0
 982              	.LBE13:
 212:tmk_core/common/action_layer.c ****     uint8_t       layer       = 0;
 983              		.loc 1 212 19 view .LVU206
 984 0024 1000     		movs	r0, r2
 985              	.LVL60:
 986              	.L55:
 987              	.LBB14:
 988              		.loc 1 215 9 is_stmt 1 discriminator 3 view .LVU207
 989              		.loc 1 215 52 is_stmt 0 discriminator 3 view .LVU208
 990 0026 A35C     		ldrb	r3, [r4, r2]
 991              		.loc 1 215 88 discriminator 3 view .LVU209
 992 0028 CB40     		lsrs	r3, r3, r1
 993 002a 2B40     		ands	r3, r5
 994              		.loc 1 215 94 discriminator 3 view .LVU210
 995 002c 9340     		lsls	r3, r3, r2
 996 002e 0132     		adds	r2, r2, #1
 997              	.LVL61:
 998              		.loc 1 215 15 discriminator 3 view .LVU211
 999 0030 1843     		orrs	r0, r3
 1000              	.LVL62:
 1001              		.loc 1 215 15 discriminator 3 view .LVU212
 1002 0032 C0B2     		uxtb	r0, r0
 1003              	.LVL63:
 214:tmk_core/common/action_layer.c ****         layer |= ((source_layers_cache[storage_row][bit_number] & (1U << storage_bit)) != 0) << bit
 1004              		.loc 1 214 5 discriminator 3 view .LVU213
 1005 0034 052A     		cmp	r2, #5
 1006 0036 F6D1     		bne	.L55
 1007              	.LBE14:
 216:tmk_core/common/action_layer.c ****     }
 217:tmk_core/common/action_layer.c **** 
 218:tmk_core/common/action_layer.c ****     return layer;
 219:tmk_core/common/action_layer.c **** }
 1008              		.loc 1 219 1 view .LVU214
 1009              		@ sp needed
 1010 0038 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1011              	.L58:
 1012 003a C046     		.align	2
 1013              	.L57:
 1014 003c 00000000 		.word	.LANCHOR2
 1015              		.cfi_endproc
 1016              	.LFE26:
 1018              		.section	.text.layer_switch_get_layer,"ax",%progbits
 1019              		.align	1
 1020              		.global	layer_switch_get_layer
 1021              		.syntax unified
 1022              		.code	16
 1023              		.thumb_func
 1024              		.fpu softvfp
 1026              	layer_switch_get_layer:
 1027              	.LFB28:
 220:tmk_core/common/action_layer.c **** #endif
 221:tmk_core/common/action_layer.c **** 
 222:tmk_core/common/action_layer.c **** /** \brief Store or get action (FIXME: Needs better summary)
 223:tmk_core/common/action_layer.c ****  *
 224:tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 225:tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 226:tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 227:tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 228:tmk_core/common/action_layer.c ****  */
 229:tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key) {
 230:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 231:tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 232:tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 233:tmk_core/common/action_layer.c ****     }
 234:tmk_core/common/action_layer.c **** 
 235:tmk_core/common/action_layer.c ****     uint8_t layer;
 236:tmk_core/common/action_layer.c **** 
 237:tmk_core/common/action_layer.c ****     if (pressed) {
 238:tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 239:tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 240:tmk_core/common/action_layer.c ****     } else {
 241:tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 242:tmk_core/common/action_layer.c ****     }
 243:tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 244:tmk_core/common/action_layer.c **** #else
 245:tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 246:tmk_core/common/action_layer.c **** #endif
 247:tmk_core/common/action_layer.c **** }
 248:tmk_core/common/action_layer.c **** 
 249:tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 250:tmk_core/common/action_layer.c ****  *
 251:tmk_core/common/action_layer.c ****  * Gets the layer based on key info
 252:tmk_core/common/action_layer.c ****  */
 253:tmk_core/common/action_layer.c **** uint8_t layer_switch_get_layer(keypos_t key) {
 1028              		.loc 1 253 46 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 8
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 254:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 255:tmk_core/common/action_layer.c ****     action_t action;
 1032              		.loc 1 255 5 view .LVU216
 256:tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1033              		.loc 1 256 5 view .LVU217
 1034              	.LVL64:
 257:tmk_core/common/action_layer.c **** 
 258:tmk_core/common/action_layer.c ****     layer_state_t layers = layer_state | default_layer_state;
 1035              		.loc 1 258 5 view .LVU218
 253:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 1036              		.loc 1 253 46 is_stmt 0 view .LVU219
 1037 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1038              		.cfi_def_cfa_offset 32
 1039              		.cfi_offset 0, -32
 1040              		.cfi_offset 1, -28
 1041              		.cfi_offset 2, -24
 1042              		.cfi_offset 4, -20
 1043              		.cfi_offset 5, -16
 1044              		.cfi_offset 6, -12
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047              		.loc 1 258 19 view .LVU220
 1048 0002 1F24     		movs	r4, #31
 1049              	.LBB15:
 259:tmk_core/common/action_layer.c ****     /* check top layer first */
 260:tmk_core/common/action_layer.c ****     for (int8_t i = sizeof(layer_state_t) * 8 - 1; i >= 0; i--) {
 261:tmk_core/common/action_layer.c ****         if (layers & (1UL << i)) {
 1050              		.loc 1 261 13 view .LVU221
 1051 0004 0127     		movs	r7, #1
 1052              	.LBE15:
 258:tmk_core/common/action_layer.c ****     /* check top layer first */
 1053              		.loc 1 258 19 view .LVU222
 1054 0006 0D4B     		ldr	r3, .L68
 253:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 1055              		.loc 1 253 46 view .LVU223
 1056 0008 01AE     		add	r6, sp, #4
 258:tmk_core/common/action_layer.c ****     /* check top layer first */
 1057              		.loc 1 258 19 view .LVU224
 1058 000a 1A68     		ldr	r2, [r3]
 1059 000c 0C4B     		ldr	r3, .L68+4
 253:tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 1060              		.loc 1 253 46 view .LVU225
 1061 000e 3080     		strh	r0, [r6]
 258:tmk_core/common/action_layer.c ****     /* check top layer first */
 1062              		.loc 1 258 19 view .LVU226
 1063 0010 1B68     		ldr	r3, [r3]
 1064 0012 1A43     		orrs	r2, r3
 1065 0014 0092     		str	r2, [sp]
 1066              	.LVL65:
 260:tmk_core/common/action_layer.c ****         if (layers & (1UL << i)) {
 1067              		.loc 1 260 5 is_stmt 1 view .LVU227
 1068              	.LBB16:
 260:tmk_core/common/action_layer.c ****         if (layers & (1UL << i)) {
 1069              		.loc 1 260 10 view .LVU228
 1070              	.L61:
 1071              		.loc 1 261 9 view .LVU229
 1072              		.loc 1 261 13 is_stmt 0 view .LVU230
 1073 0016 009B     		ldr	r3, [sp]
 1074 0018 E5B2     		uxtb	r5, r4
 1075 001a E340     		lsrs	r3, r3, r4
 1076              		.loc 1 261 12 view .LVU231
 1077 001c 3B42     		tst	r3, r7
 1078 001e 04D1     		bne	.L60
 1079              	.L63:
 1080              	.LVL66:
 260:tmk_core/common/action_layer.c ****         if (layers & (1UL << i)) {
 1081              		.loc 1 260 5 view .LVU232
 1082 0020 013C     		subs	r4, r4, #1
 1083 0022 F8D2     		bcs	.L61
 1084              	.LVL67:
 260:tmk_core/common/action_layer.c ****         if (layers & (1UL << i)) {
 1085              		.loc 1 260 5 view .LVU233
 1086              	.LBE16:
 262:tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 263:tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 264:tmk_core/common/action_layer.c ****                 return i;
 265:tmk_core/common/action_layer.c ****             }
 266:tmk_core/common/action_layer.c ****         }
 267:tmk_core/common/action_layer.c ****     }
 268:tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 269:tmk_core/common/action_layer.c ****     return 0;
 1087              		.loc 1 269 12 view .LVU234
 1088 0024 0025     		movs	r5, #0
 1089              	.LVL68:
 1090              	.L62:
 270:tmk_core/common/action_layer.c **** #else
 271:tmk_core/common/action_layer.c ****     return get_highest_layer(default_layer_state);
 272:tmk_core/common/action_layer.c **** #endif
 273:tmk_core/common/action_layer.c **** }
 1091              		.loc 1 273 1 view .LVU235
 1092 0026 2800     		movs	r0, r5
 1093              	.LVL69:
 1094              		.loc 1 273 1 view .LVU236
 1095              		@ sp needed
 1096 0028 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1097              	.LVL70:
 1098              	.L60:
 1099              	.LBB17:
 262:tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1100              		.loc 1 262 13 is_stmt 1 view .LVU237
 262:tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1101              		.loc 1 262 22 is_stmt 0 view .LVU238
 1102 002a 3168     		ldr	r1, [r6]
 1103 002c 2800     		movs	r0, r5
 1104              	.LVL71:
 262:tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1105              		.loc 1 262 22 view .LVU239
 1106 002e FFF7FEFF 		bl	action_for_key
 1107              	.LVL72:
 263:tmk_core/common/action_layer.c ****                 return i;
 1108              		.loc 1 263 13 is_stmt 1 view .LVU240
 263:tmk_core/common/action_layer.c ****                 return i;
 1109              		.loc 1 263 16 is_stmt 0 view .LVU241
 1110 0032 80B2     		uxth	r0, r0
 1111              	.LVL73:
 263:tmk_core/common/action_layer.c ****                 return i;
 1112              		.loc 1 263 16 view .LVU242
 1113 0034 0128     		cmp	r0, #1
 1114 0036 F3D0     		beq	.L63
 1115 0038 F5E7     		b	.L62
 1116              	.L69:
 1117 003a C046     		.align	2
 1118              	.L68:
 1119 003c 00000000 		.word	.LANCHOR1
 1120 0040 00000000 		.word	.LANCHOR0
 1121              	.LBE17:
 1122              		.cfi_endproc
 1123              	.LFE28:
 1125              		.section	.text.layer_switch_get_action,"ax",%progbits
 1126              		.align	1
 1127              		.global	layer_switch_get_action
 1128              		.syntax unified
 1129              		.code	16
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	layer_switch_get_action:
 1134              	.LFB29:
 274:tmk_core/common/action_layer.c **** 
 275:tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 276:tmk_core/common/action_layer.c ****  *
 277:tmk_core/common/action_layer.c ****  * Gets action code based on key position
 278:tmk_core/common/action_layer.c ****  */
 279:tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key) { return action_for_key(layer_switch_get_layer(key),
 1135              		.loc 1 279 48 is_stmt 1 view -0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 8
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139              		.loc 1 279 50 view .LVU244
 1140              		.loc 1 279 48 is_stmt 0 view .LVU245
 1141 0000 07B5     		push	{r0, r1, r2, lr}
 1142              		.cfi_def_cfa_offset 16
 1143              		.cfi_offset 0, -16
 1144              		.cfi_offset 1, -12
 1145              		.cfi_offset 2, -8
 1146              		.cfi_offset 14, -4
 1147              		.loc 1 279 48 view .LVU246
 1148 0002 01AB     		add	r3, sp, #4
 1149 0004 1880     		strh	r0, [r3]
 1150              		.loc 1 279 57 view .LVU247
 1151 0006 0198     		ldr	r0, [sp, #4]
 1152 0008 FFF7FEFF 		bl	layer_switch_get_layer
 1153              	.LVL74:
 1154 000c 0199     		ldr	r1, [sp, #4]
 1155 000e FFF7FEFF 		bl	action_for_key
 1156              	.LVL75:
 1157              		.loc 1 279 1 view .LVU248
 1158              		@ sp needed
 1159 0012 0EBD     		pop	{r1, r2, r3, pc}
 1160              		.cfi_endproc
 1161              	.LFE29:
 1163              		.section	.text.store_or_get_action,"ax",%progbits
 1164              		.align	1
 1165              		.global	store_or_get_action
 1166              		.syntax unified
 1167              		.code	16
 1168              		.thumb_func
 1169              		.fpu softvfp
 1171              	store_or_get_action:
 1172              	.LVL76:
 1173              	.LFB27:
 229:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 1174              		.loc 1 229 58 is_stmt 1 view -0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 8
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 231:tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1178              		.loc 1 231 5 view .LVU250
 229:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 1179              		.loc 1 229 58 is_stmt 0 view .LVU251
 1180 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1181              		.cfi_def_cfa_offset 24
 1182              		.cfi_offset 0, -24
 1183              		.cfi_offset 1, -20
 1184              		.cfi_offset 2, -16
 1185              		.cfi_offset 4, -12
 1186              		.cfi_offset 5, -8
 1187              		.cfi_offset 14, -4
 231:tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1188              		.loc 1 231 9 view .LVU252
 1189 0002 0F4B     		ldr	r3, .L76
 229:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 1190              		.loc 1 229 58 view .LVU253
 1191 0004 01AC     		add	r4, sp, #4
 231:tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1192              		.loc 1 231 8 view .LVU254
 1193 0006 1B78     		ldrb	r3, [r3]
 229:tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 1194              		.loc 1 229 58 view .LVU255
 1195 0008 2180     		strh	r1, [r4]
 231:tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1196              		.loc 1 231 8 view .LVU256
 1197 000a 002B     		cmp	r3, #0
 1198 000c 03D0     		beq	.L72
 232:tmk_core/common/action_layer.c ****     }
 1199              		.loc 1 232 9 is_stmt 1 view .LVU257
 232:tmk_core/common/action_layer.c ****     }
 1200              		.loc 1 232 16 is_stmt 0 view .LVU258
 1201 000e 0198     		ldr	r0, [sp, #4]
 1202              	.LVL77:
 232:tmk_core/common/action_layer.c ****     }
 1203              		.loc 1 232 16 view .LVU259
 1204 0010 FFF7FEFF 		bl	layer_switch_get_action
 1205              	.LVL78:
 1206              	.L73:
 247:tmk_core/common/action_layer.c **** 
 1207              		.loc 1 247 1 view .LVU260
 1208              		@ sp needed
 1209 0014 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1210              	.LVL79:
 1211              	.L72:
 235:tmk_core/common/action_layer.c **** 
 1212              		.loc 1 235 5 is_stmt 1 view .LVU261
 237:tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1213              		.loc 1 237 5 view .LVU262
 237:tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1214              		.loc 1 237 8 is_stmt 0 view .LVU263
 1215 0016 0028     		cmp	r0, #0
 1216 0018 0CD0     		beq	.L74
 238:tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1217              		.loc 1 238 9 is_stmt 1 view .LVU264
 238:tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1218              		.loc 1 238 17 is_stmt 0 view .LVU265
 1219 001a 2068     		ldr	r0, [r4]
 1220              	.LVL80:
 238:tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1221              		.loc 1 238 17 view .LVU266
 1222 001c FFF7FEFF 		bl	layer_switch_get_layer
 1223              	.LVL81:
 1224 0020 0500     		movs	r5, r0
 1225              	.LVL82:
 239:tmk_core/common/action_layer.c ****     } else {
 1226              		.loc 1 239 9 is_stmt 1 view .LVU267
 1227 0022 0100     		movs	r1, r0
 1228 0024 2068     		ldr	r0, [r4]
 1229              	.LVL83:
 239:tmk_core/common/action_layer.c ****     } else {
 1230              		.loc 1 239 9 is_stmt 0 view .LVU268
 1231 0026 FFF7FEFF 		bl	update_source_layers_cache
 1232              	.LVL84:
 1233              	.L75:
 243:tmk_core/common/action_layer.c **** #else
 1234              		.loc 1 243 5 is_stmt 1 view .LVU269
 243:tmk_core/common/action_layer.c **** #else
 1235              		.loc 1 243 12 is_stmt 0 view .LVU270
 1236 002a 0199     		ldr	r1, [sp, #4]
 1237 002c 2800     		movs	r0, r5
 1238 002e FFF7FEFF 		bl	action_for_key
 1239              	.LVL85:
 1240 0032 EFE7     		b	.L73
 1241              	.LVL86:
 1242              	.L74:
 241:tmk_core/common/action_layer.c ****     }
 1243              		.loc 1 241 9 is_stmt 1 view .LVU271
 241:tmk_core/common/action_layer.c ****     }
 1244              		.loc 1 241 17 is_stmt 0 view .LVU272
 1245 0034 2068     		ldr	r0, [r4]
 1246              	.LVL87:
 241:tmk_core/common/action_layer.c ****     }
 1247              		.loc 1 241 17 view .LVU273
 1248 0036 FFF7FEFF 		bl	read_source_layers_cache
 1249              	.LVL88:
 1250 003a 0500     		movs	r5, r0
 1251              	.LVL89:
 241:tmk_core/common/action_layer.c ****     }
 1252              		.loc 1 241 17 view .LVU274
 1253 003c F5E7     		b	.L75
 1254              	.L77:
 1255 003e C046     		.align	2
 1256              	.L76:
 1257 0040 00000000 		.word	disable_action_cache
 1258              		.cfi_endproc
 1259              	.LFE27:
 1261              		.global	source_layers_cache
 1262              		.global	layer_state
 1263              		.global	default_layer_state
 1264              		.section	.bss.default_layer_state,"aw",%nobits
 1265              		.align	2
 1266              		.set	.LANCHOR0,. + 0
 1269              	default_layer_state:
 1270 0000 00000000 		.space	4
 1271              		.section	.bss.layer_state,"aw",%nobits
 1272              		.align	2
 1273              		.set	.LANCHOR1,. + 0
 1276              	layer_state:
 1277 0000 00000000 		.space	4
 1278              		.section	.bss.source_layers_cache,"aw",%nobits
 1279              		.set	.LANCHOR2,. + 0
 1282              	source_layers_cache:
 1283 0000 00000000 		.space	50
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1284              		.text
 1285              	.Letext0:
 1286              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1287              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 1288              		.file 4 "tmk_core/common/keyboard.h"
 1289              		.file 5 "tmk_core/common/action_code.h"
 1290              		.file 6 "tmk_core/common/action_layer.h"
 1291              		.file 7 "tmk_core/common/action.h"
 1292              		.file 8 "tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:00000000 action_layer.c
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:16     .text.default_layer_state_set_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:24     .text.default_layer_state_set_user:00000000 default_layer_state_set_user
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:41     .text.default_layer_state_set_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:48     .text.default_layer_state_set_kb:00000000 default_layer_state_set_kb
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:71     .text.default_layer_state_set:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:77     .text.default_layer_state_set:00000000 default_layer_state_set
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:115    .text.default_layer_state_set:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:120    .text.default_layer_debug:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:127    .text.default_layer_debug:00000000 default_layer_debug
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:142    .text.default_layer_set:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:149    .text.default_layer_set:00000000 default_layer_set
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:172    .text.default_layer_or:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:179    .text.default_layer_or:00000000 default_layer_or
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:208    .text.default_layer_or:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:213    .text.default_layer_and:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:220    .text.default_layer_and:00000000 default_layer_and
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:249    .text.default_layer_and:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:254    .text.default_layer_xor:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:261    .text.default_layer_xor:00000000 default_layer_xor
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:290    .text.default_layer_xor:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:295    .text.layer_state_set_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:302    .text.layer_state_set_user:00000000 layer_state_set_user
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:314    .text.layer_state_set_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:321    .text.layer_state_set_kb:00000000 layer_state_set_kb
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:344    .text.layer_state_set:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:351    .text.layer_state_set:00000000 layer_state_set
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:389    .text.layer_state_set:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:394    .text.layer_clear:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:401    .text.layer_clear:00000000 layer_clear
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:424    .text.layer_state_cmp:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:431    .text.layer_state_cmp:00000000 layer_state_cmp
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:470    .text.layer_state_is:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:477    .text.layer_state_is:00000000 layer_state_is
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:506    .text.layer_state_is:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:511    .text.layer_move:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:518    .text.layer_move:00000000 layer_move
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:546    .text.layer_on:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:553    .text.layer_on:00000000 layer_on
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:585    .text.layer_on:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:590    .text.layer_off:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:597    .text.layer_off:00000000 layer_off
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:629    .text.layer_off:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:634    .text.layer_invert:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:641    .text.layer_invert:00000000 layer_invert
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:673    .text.layer_invert:00000014 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:678    .text.layer_or:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:685    .text.layer_or:00000000 layer_or
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:714    .text.layer_or:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:719    .text.layer_and:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:726    .text.layer_and:00000000 layer_and
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:755    .text.layer_and:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:760    .text.layer_xor:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:767    .text.layer_xor:00000000 layer_xor
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:796    .text.layer_xor:00000010 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:801    .text.layer_debug:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:808    .text.layer_debug:00000000 layer_debug
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:820    .text.update_source_layers_cache:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:827    .text.update_source_layers_cache:00000000 update_source_layers_cache
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:917    .text.update_source_layers_cache:00000048 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:922    .text.read_source_layers_cache:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:929    .text.read_source_layers_cache:00000000 read_source_layers_cache
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1014   .text.read_source_layers_cache:0000003c $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1019   .text.layer_switch_get_layer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1026   .text.layer_switch_get_layer:00000000 layer_switch_get_layer
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1119   .text.layer_switch_get_layer:0000003c $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1126   .text.layer_switch_get_action:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1133   .text.layer_switch_get_action:00000000 layer_switch_get_action
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1164   .text.store_or_get_action:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1171   .text.store_or_get_action:00000000 store_or_get_action
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1257   .text.store_or_get_action:00000040 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1282   .bss.source_layers_cache:00000000 source_layers_cache
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1276   .bss.layer_state:00000000 layer_state
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1269   .bss.default_layer_state:00000000 default_layer_state
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1265   .bss.default_layer_state:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1272   .bss.layer_state:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccN86rZg.s:1283   .bss.source_layers_cache:00000000 $d

UNDEFINED SYMBOLS
clear_keyboard_but_mods_and_keys
action_for_key
disable_action_cache
