   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"chmboxes.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.chMBObjectInit,"ax",%progbits
  16              		.align	1
  17              		.global	chMBObjectInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	chMBObjectInit:
  25              	.LVL0:
  26              	.LFB154:
  27              		.file 1 "lib/chibios/os/oslib/src/chmboxes.c"
   1:lib/chibios/os/oslib/src/chmboxes.c **** /*
   2:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/oslib/src/chmboxes.c **** 
   4:lib/chibios/os/oslib/src/chmboxes.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/oslib/src/chmboxes.c **** 
   6:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/oslib/src/chmboxes.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/oslib/src/chmboxes.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/oslib/src/chmboxes.c ****     (at your option) any later version.
  10:lib/chibios/os/oslib/src/chmboxes.c **** 
  11:lib/chibios/os/oslib/src/chmboxes.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/oslib/src/chmboxes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/oslib/src/chmboxes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/oslib/src/chmboxes.c ****     GNU General Public License for more details.
  15:lib/chibios/os/oslib/src/chmboxes.c **** 
  16:lib/chibios/os/oslib/src/chmboxes.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/oslib/src/chmboxes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/oslib/src/chmboxes.c **** */
  19:lib/chibios/os/oslib/src/chmboxes.c **** 
  20:lib/chibios/os/oslib/src/chmboxes.c **** /**
  21:lib/chibios/os/oslib/src/chmboxes.c ****  * @file    chmboxes.c
  22:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Mailboxes code.
  23:lib/chibios/os/oslib/src/chmboxes.c ****  *
  24:lib/chibios/os/oslib/src/chmboxes.c ****  * @addtogroup oslib_mailboxes
  25:lib/chibios/os/oslib/src/chmboxes.c ****  * @details Asynchronous messages.
  26:lib/chibios/os/oslib/src/chmboxes.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/oslib/src/chmboxes.c ****  *          A mailbox is an asynchronous communication mechanism.<br>
  28:lib/chibios/os/oslib/src/chmboxes.c ****  *          Operations defined for mailboxes:
  29:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Post</b>: Posts a message on the mailbox in FIFO order.
  30:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Post Ahead</b>: Posts a message on the mailbox with urgent
  31:lib/chibios/os/oslib/src/chmboxes.c ****  *            priority.
  32:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Fetch</b>: A message is fetched from the mailbox and removed
  33:lib/chibios/os/oslib/src/chmboxes.c ****  *            from the queue.
  34:lib/chibios/os/oslib/src/chmboxes.c ****  *          - <b>Reset</b>: The mailbox is emptied and all the stored messages
  35:lib/chibios/os/oslib/src/chmboxes.c ****  *            are lost.
  36:lib/chibios/os/oslib/src/chmboxes.c ****  *          .
  37:lib/chibios/os/oslib/src/chmboxes.c ****  *          A message is a variable of type msg_t that is guaranteed to have
  38:lib/chibios/os/oslib/src/chmboxes.c ****  *          the same size of and be compatible with (data) pointers (anyway an
  39:lib/chibios/os/oslib/src/chmboxes.c ****  *          explicit cast is needed).
  40:lib/chibios/os/oslib/src/chmboxes.c ****  *          If larger messages need to be exchanged then a pointer to a
  41:lib/chibios/os/oslib/src/chmboxes.c ****  *          structure can be posted in the mailbox but the posting side has
  42:lib/chibios/os/oslib/src/chmboxes.c ****  *          no predefined way to know when the message has been processed. A
  43:lib/chibios/os/oslib/src/chmboxes.c ****  *          possible approach is to allocate memory (from a memory pool for
  44:lib/chibios/os/oslib/src/chmboxes.c ****  *          example) from the posting side and free it on the fetching side.
  45:lib/chibios/os/oslib/src/chmboxes.c ****  *          Another approach is to set a "done" flag into the structure pointed
  46:lib/chibios/os/oslib/src/chmboxes.c ****  *          by the message.
  47:lib/chibios/os/oslib/src/chmboxes.c ****  * @pre     In order to use the mailboxes APIs the @p CH_CFG_USE_MAILBOXES
  48:lib/chibios/os/oslib/src/chmboxes.c ****  *          option must be enabled in @p chconf.h.
  49:lib/chibios/os/oslib/src/chmboxes.c ****  * @note    Compatible with RT and NIL.
  50:lib/chibios/os/oslib/src/chmboxes.c ****  * @{
  51:lib/chibios/os/oslib/src/chmboxes.c ****  */
  52:lib/chibios/os/oslib/src/chmboxes.c **** 
  53:lib/chibios/os/oslib/src/chmboxes.c **** #include "ch.h"
  54:lib/chibios/os/oslib/src/chmboxes.c **** 
  55:lib/chibios/os/oslib/src/chmboxes.c **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  56:lib/chibios/os/oslib/src/chmboxes.c **** 
  57:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  58:lib/chibios/os/oslib/src/chmboxes.c **** /* Module exported variables.                                                */
  59:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  60:lib/chibios/os/oslib/src/chmboxes.c **** 
  61:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  62:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local types.                                                       */
  63:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  64:lib/chibios/os/oslib/src/chmboxes.c **** 
  65:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  66:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local variables.                                                   */
  67:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  68:lib/chibios/os/oslib/src/chmboxes.c **** 
  69:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  70:lib/chibios/os/oslib/src/chmboxes.c **** /* Module local functions.                                                   */
  71:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  72:lib/chibios/os/oslib/src/chmboxes.c **** 
  73:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  74:lib/chibios/os/oslib/src/chmboxes.c **** /* Module exported functions.                                                */
  75:lib/chibios/os/oslib/src/chmboxes.c **** /*===========================================================================*/
  76:lib/chibios/os/oslib/src/chmboxes.c **** 
  77:lib/chibios/os/oslib/src/chmboxes.c **** /**
  78:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Initializes a @p mailbox_t object.
  79:lib/chibios/os/oslib/src/chmboxes.c ****  *
  80:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] mbp      the pointer to the @p mailbox_t structure to be
  81:lib/chibios/os/oslib/src/chmboxes.c ****  *                      initialized
  82:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] buf       pointer to the messages buffer as an array of @p msg_t
  83:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] n         number of elements in the buffer array
  84:lib/chibios/os/oslib/src/chmboxes.c ****  *
  85:lib/chibios/os/oslib/src/chmboxes.c ****  * @init
  86:lib/chibios/os/oslib/src/chmboxes.c ****  */
  87:lib/chibios/os/oslib/src/chmboxes.c **** void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n) {
  28              		.loc 1 87 59 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  88:lib/chibios/os/oslib/src/chmboxes.c **** 
  89:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (buf != NULL) && (n > (size_t)0));
  33              		.loc 1 89 3 view .LVU1
  34              		.loc 1 89 3 view .LVU2
  90:lib/chibios/os/oslib/src/chmboxes.c **** 
  91:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->buffer = buf;
  35              		.loc 1 91 3 view .LVU3
  92:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr  = buf;
  93:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  95:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  36              		.loc 1 95 15 is_stmt 0 view .LVU4
  37 0000 0023     		movs	r3, #0
  38 0002 0361     		str	r3, [r0, #16]
  96:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset  = false;
  39              		.loc 1 96 15 view .LVU5
  40 0004 0375     		strb	r3, [r0, #20]
  97:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qw);
  41              		.loc 1 97 3 view .LVU6
  42 0006 0300     		movs	r3, r0
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  43              		.loc 1 94 21 view .LVU7
  44 0008 9200     		lsls	r2, r2, #2
  45              	.LVL1:
  46              		.loc 1 97 3 view .LVU8
  47 000a 1833     		adds	r3, r3, #24
  91:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr  = buf;
  48              		.loc 1 91 15 view .LVU9
  49 000c 0160     		str	r1, [r0]
  92:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  50              		.loc 1 92 3 is_stmt 1 view .LVU10
  92:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  51              		.loc 1 92 15 is_stmt 0 view .LVU11
  52 000e C160     		str	r1, [r0, #12]
  93:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  53              		.loc 1 93 3 is_stmt 1 view .LVU12
  93:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  54              		.loc 1 93 15 is_stmt 0 view .LVU13
  55 0010 8160     		str	r1, [r0, #8]
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  56              		.loc 1 94 3 is_stmt 1 view .LVU14
  57              	.LBB72:
  58              	.LBB73:
  59              	.LBB74:
  60              		.file 2 "./lib/chibios/os/rt/include/chschd.h"
   1:./lib/chibios/os/rt/include/chschd.h **** /*
   2:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chschd.h **** 
   4:./lib/chibios/os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chschd.h **** 
   6:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chschd.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chschd.h **** 
  11:./lib/chibios/os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chschd.h **** 
  16:./lib/chibios/os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chschd.h **** */
  19:./lib/chibios/os/rt/include/chschd.h **** 
  20:./lib/chibios/os/rt/include/chschd.h **** /**
  21:./lib/chibios/os/rt/include/chschd.h ****  * @file    chschd.h
  22:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:./lib/chibios/os/rt/include/chschd.h ****  *
  24:./lib/chibios/os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:./lib/chibios/os/rt/include/chschd.h ****  * @{
  26:./lib/chibios/os/rt/include/chschd.h ****  */
  27:./lib/chibios/os/rt/include/chschd.h **** 
  28:./lib/chibios/os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:./lib/chibios/os/rt/include/chschd.h **** #define CHSCHD_H
  30:./lib/chibios/os/rt/include/chschd.h **** 
  31:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chschd.h **** 
  35:./lib/chibios/os/rt/include/chschd.h **** /**
  36:./lib/chibios/os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:./lib/chibios/os/rt/include/chschd.h ****  * @{
  38:./lib/chibios/os/rt/include/chschd.h ****  */
  39:./lib/chibios/os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:./lib/chibios/os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  42:./lib/chibios/os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:./lib/chibios/os/rt/include/chschd.h ****                                              condition.                     */
  44:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  45:./lib/chibios/os/rt/include/chschd.h **** 
  46:./lib/chibios/os/rt/include/chschd.h **** /**
  47:./lib/chibios/os/rt/include/chschd.h ****  * @name    Priority constants
  48:./lib/chibios/os/rt/include/chschd.h ****  * @{
  49:./lib/chibios/os/rt/include/chschd.h ****  */
  50:./lib/chibios/os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:./lib/chibios/os/rt/include/chschd.h ****                                                  priority.                  */
  52:./lib/chibios/os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:./lib/chibios/os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:./lib/chibios/os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:./lib/chibios/os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  57:./lib/chibios/os/rt/include/chschd.h **** 
  58:./lib/chibios/os/rt/include/chschd.h **** /**
  59:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread states
  60:./lib/chibios/os/rt/include/chschd.h ****  * @{
  61:./lib/chibios/os/rt/include/chschd.h ****  */
  62:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:./lib/chibios/os/rt/include/chschd.h ****                                                   ready list.               */
  64:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On a queue.        */
  68:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:./lib/chibios/os/rt/include/chschd.h ****                                                   in queue.                 */
  77:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:./lib/chibios/os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:./lib/chibios/os/rt/include/chschd.h ****                                                   message.                  */
  81:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:./lib/chibios/os/rt/include/chschd.h **** 
  83:./lib/chibios/os/rt/include/chschd.h **** /**
  84:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:./lib/chibios/os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:./lib/chibios/os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:./lib/chibios/os/rt/include/chschd.h ****  */
  88:./lib/chibios/os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:./lib/chibios/os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:./lib/chibios/os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:./lib/chibios/os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:./lib/chibios/os/rt/include/chschd.h **** /** @} */
  93:./lib/chibios/os/rt/include/chschd.h **** 
  94:./lib/chibios/os/rt/include/chschd.h **** /**
  95:./lib/chibios/os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:./lib/chibios/os/rt/include/chschd.h ****  * @{
  97:./lib/chibios/os/rt/include/chschd.h ****  */
  98:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:./lib/chibios/os/rt/include/chschd.h ****                                                  mask.                      */
 100:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:./lib/chibios/os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:./lib/chibios/os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:./lib/chibios/os/rt/include/chschd.h ****                                                  flag.                      */
 107:./lib/chibios/os/rt/include/chschd.h **** /** @} */
 108:./lib/chibios/os/rt/include/chschd.h **** 
 109:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 110:./lib/chibios/os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 112:./lib/chibios/os/rt/include/chschd.h **** 
 113:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 114:./lib/chibios/os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 116:./lib/chibios/os/rt/include/chschd.h **** 
 117:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 118:./lib/chibios/os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 120:./lib/chibios/os/rt/include/chschd.h **** 
 121:./lib/chibios/os/rt/include/chschd.h **** /**
 122:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:./lib/chibios/os/rt/include/chschd.h ****  */
 124:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_list {
 125:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:./lib/chibios/os/rt/include/chschd.h **** };
 127:./lib/chibios/os/rt/include/chschd.h **** 
 128:./lib/chibios/os/rt/include/chschd.h **** /**
 129:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:./lib/chibios/os/rt/include/chschd.h ****  */
 131:./lib/chibios/os/rt/include/chschd.h **** struct ch_threads_queue {
 132:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:./lib/chibios/os/rt/include/chschd.h **** };
 135:./lib/chibios/os/rt/include/chschd.h **** 
 136:./lib/chibios/os/rt/include/chschd.h **** /**
 137:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:./lib/chibios/os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:./lib/chibios/os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:./lib/chibios/os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:./lib/chibios/os/rt/include/chschd.h ****  */
 142:./lib/chibios/os/rt/include/chschd.h **** struct ch_thread {
 143:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:./lib/chibios/os/rt/include/chschd.h **** #endif
 150:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:./lib/chibios/os/rt/include/chschd.h ****   /**
 153:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:./lib/chibios/os/rt/include/chschd.h ****    */
 155:./lib/chibios/os/rt/include/chschd.h ****   const char            *name;
 156:./lib/chibios/os/rt/include/chschd.h **** #endif
 157:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:./lib/chibios/os/rt/include/chschd.h ****   /**
 160:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:./lib/chibios/os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:./lib/chibios/os/rt/include/chschd.h ****    *          dynamic threading.
 163:./lib/chibios/os/rt/include/chschd.h ****    */
 164:./lib/chibios/os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:./lib/chibios/os/rt/include/chschd.h **** #endif
 166:./lib/chibios/os/rt/include/chschd.h ****   /**
 167:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:./lib/chibios/os/rt/include/chschd.h ****    */
 169:./lib/chibios/os/rt/include/chschd.h ****   tstate_t              state;
 170:./lib/chibios/os/rt/include/chschd.h ****   /**
 171:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:./lib/chibios/os/rt/include/chschd.h ****    */
 173:./lib/chibios/os/rt/include/chschd.h ****   tmode_t               flags;
 174:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:./lib/chibios/os/rt/include/chschd.h ****   /**
 176:./lib/chibios/os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:./lib/chibios/os/rt/include/chschd.h ****    */
 178:./lib/chibios/os/rt/include/chschd.h ****   trefs_t               refs;
 179:./lib/chibios/os/rt/include/chschd.h **** #endif
 180:./lib/chibios/os/rt/include/chschd.h ****   /**
 181:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:./lib/chibios/os/rt/include/chschd.h ****    */
 183:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:./lib/chibios/os/rt/include/chschd.h ****   tslices_t             ticks;
 185:./lib/chibios/os/rt/include/chschd.h **** #endif
 186:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:./lib/chibios/os/rt/include/chschd.h ****   /**
 188:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:./lib/chibios/os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:./lib/chibios/os/rt/include/chschd.h ****    */
 191:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    time;
 192:./lib/chibios/os/rt/include/chschd.h **** #endif
 193:./lib/chibios/os/rt/include/chschd.h ****   /**
 194:./lib/chibios/os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:./lib/chibios/os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:./lib/chibios/os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:./lib/chibios/os/rt/include/chschd.h ****    */
 198:./lib/chibios/os/rt/include/chschd.h ****   union {
 199:./lib/chibios/os/rt/include/chschd.h ****     /**
 200:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:./lib/chibios/os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:./lib/chibios/os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:./lib/chibios/os/rt/include/chschd.h ****      */
 205:./lib/chibios/os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:./lib/chibios/os/rt/include/chschd.h ****     /**
 207:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:./lib/chibios/os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:./lib/chibios/os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:./lib/chibios/os/rt/include/chschd.h ****      *          this thread.
 211:./lib/chibios/os/rt/include/chschd.h ****      */
 212:./lib/chibios/os/rt/include/chschd.h ****     msg_t               exitcode;
 213:./lib/chibios/os/rt/include/chschd.h ****     /**
 214:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:./lib/chibios/os/rt/include/chschd.h ****      *          states.
 218:./lib/chibios/os/rt/include/chschd.h ****      */
 219:./lib/chibios/os/rt/include/chschd.h ****     void                *wtobjp;
 220:./lib/chibios/os/rt/include/chschd.h ****     /**
 221:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 225:./lib/chibios/os/rt/include/chschd.h ****      */
 226:./lib/chibios/os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:./lib/chibios/os/rt/include/chschd.h ****     /**
 229:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:./lib/chibios/os/rt/include/chschd.h ****      */
 231:./lib/chibios/os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:./lib/chibios/os/rt/include/chschd.h **** #endif
 233:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:./lib/chibios/os/rt/include/chschd.h ****     /**
 235:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 239:./lib/chibios/os/rt/include/chschd.h ****      */
 240:./lib/chibios/os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:./lib/chibios/os/rt/include/chschd.h **** #endif
 242:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:./lib/chibios/os/rt/include/chschd.h ****     /**
 244:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:./lib/chibios/os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:./lib/chibios/os/rt/include/chschd.h ****      *          state.
 248:./lib/chibios/os/rt/include/chschd.h ****      */
 249:./lib/chibios/os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:./lib/chibios/os/rt/include/chschd.h **** #endif
 251:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:./lib/chibios/os/rt/include/chschd.h ****     /**
 253:./lib/chibios/os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:./lib/chibios/os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:./lib/chibios/os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:./lib/chibios/os/rt/include/chschd.h ****      */
 257:./lib/chibios/os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:./lib/chibios/os/rt/include/chschd.h **** #endif
 259:./lib/chibios/os/rt/include/chschd.h ****   }                     u;
 260:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:./lib/chibios/os/rt/include/chschd.h ****   /**
 262:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:./lib/chibios/os/rt/include/chschd.h ****    */
 264:./lib/chibios/os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:./lib/chibios/os/rt/include/chschd.h **** #endif
 266:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:./lib/chibios/os/rt/include/chschd.h ****   /**
 268:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:./lib/chibios/os/rt/include/chschd.h ****    */
 270:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:./lib/chibios/os/rt/include/chschd.h **** #endif
 272:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:./lib/chibios/os/rt/include/chschd.h ****   /**
 274:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:./lib/chibios/os/rt/include/chschd.h ****    */
 276:./lib/chibios/os/rt/include/chschd.h ****   eventmask_t           epending;
 277:./lib/chibios/os/rt/include/chschd.h **** #endif
 278:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chschd.h ****   /**
 280:./lib/chibios/os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:./lib/chibios/os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:./lib/chibios/os/rt/include/chschd.h ****    */
 283:./lib/chibios/os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:./lib/chibios/os/rt/include/chschd.h ****   /**
 285:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:./lib/chibios/os/rt/include/chschd.h ****    */
 287:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               realprio;
 288:./lib/chibios/os/rt/include/chschd.h **** #endif
 289:./lib/chibios/os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:./lib/chibios/os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:./lib/chibios/os/rt/include/chschd.h ****   /**
 292:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:./lib/chibios/os/rt/include/chschd.h ****    */
 294:./lib/chibios/os/rt/include/chschd.h ****   void                  *mpool;
 295:./lib/chibios/os/rt/include/chschd.h **** #endif
 296:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:./lib/chibios/os/rt/include/chschd.h ****   /**
 298:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:./lib/chibios/os/rt/include/chschd.h ****    */
 300:./lib/chibios/os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:./lib/chibios/os/rt/include/chschd.h **** #endif
 302:./lib/chibios/os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:./lib/chibios/os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:./lib/chibios/os/rt/include/chschd.h **** #endif
 306:./lib/chibios/os/rt/include/chschd.h **** };
 307:./lib/chibios/os/rt/include/chschd.h **** 
 308:./lib/chibios/os/rt/include/chschd.h **** /**
 309:./lib/chibios/os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:./lib/chibios/os/rt/include/chschd.h ****  *
 311:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:./lib/chibios/os/rt/include/chschd.h ****  */
 313:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:./lib/chibios/os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:./lib/chibios/os/rt/include/chschd.h ****                                                 pointer.                    */
 319:./lib/chibios/os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:./lib/chibios/os/rt/include/chschd.h ****                                                 parameter.                  */
 321:./lib/chibios/os/rt/include/chschd.h **** };
 322:./lib/chibios/os/rt/include/chschd.h **** 
 323:./lib/chibios/os/rt/include/chschd.h **** /**
 324:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:./lib/chibios/os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:./lib/chibios/os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:./lib/chibios/os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:./lib/chibios/os/rt/include/chschd.h ****  */
 329:./lib/chibios/os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 332:./lib/chibios/os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:./lib/chibios/os/rt/include/chschd.h ****                                                 list.                       */
 334:./lib/chibios/os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:./lib/chibios/os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:./lib/chibios/os/rt/include/chschd.h **** #endif
 338:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:./lib/chibios/os/rt/include/chschd.h ****   /**
 340:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:./lib/chibios/os/rt/include/chschd.h ****    */
 342:./lib/chibios/os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:./lib/chibios/os/rt/include/chschd.h ****                                                 tick event.                 */
 344:./lib/chibios/os/rt/include/chschd.h **** #endif
 345:./lib/chibios/os/rt/include/chschd.h **** };
 346:./lib/chibios/os/rt/include/chschd.h **** 
 347:./lib/chibios/os/rt/include/chschd.h **** /**
 348:./lib/chibios/os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:./lib/chibios/os/rt/include/chschd.h ****  */
 350:./lib/chibios/os/rt/include/chschd.h **** struct ch_ready_list {
 351:./lib/chibios/os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:./lib/chibios/os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:./lib/chibios/os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:./lib/chibios/os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:./lib/chibios/os/rt/include/chschd.h ****                                                 offsets.                    */
 356:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:./lib/chibios/os/rt/include/chschd.h **** #endif
 360:./lib/chibios/os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:./lib/chibios/os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:./lib/chibios/os/rt/include/chschd.h ****                                                 thread.                     */
 363:./lib/chibios/os/rt/include/chschd.h **** };
 364:./lib/chibios/os/rt/include/chschd.h **** 
 365:./lib/chibios/os/rt/include/chschd.h **** /**
 366:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:./lib/chibios/os/rt/include/chschd.h ****  */
 368:./lib/chibios/os/rt/include/chschd.h **** struct ch_system_debug {
 369:./lib/chibios/os/rt/include/chschd.h ****   /**
 370:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:./lib/chibios/os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:./lib/chibios/os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:./lib/chibios/os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:./lib/chibios/os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:./lib/chibios/os/rt/include/chschd.h ****    */
 376:./lib/chibios/os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:./lib/chibios/os/rt/include/chschd.h ****   /**
 379:./lib/chibios/os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:./lib/chibios/os/rt/include/chschd.h ****    */
 381:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:./lib/chibios/os/rt/include/chschd.h ****   /**
 383:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:./lib/chibios/os/rt/include/chschd.h ****    */
 385:./lib/chibios/os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:./lib/chibios/os/rt/include/chschd.h **** #endif
 387:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:./lib/chibios/os/rt/include/chschd.h ****   /**
 389:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:./lib/chibios/os/rt/include/chschd.h ****    */
 391:./lib/chibios/os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:./lib/chibios/os/rt/include/chschd.h **** #endif
 393:./lib/chibios/os/rt/include/chschd.h **** };
 394:./lib/chibios/os/rt/include/chschd.h **** 
 395:./lib/chibios/os/rt/include/chschd.h **** /**
 396:./lib/chibios/os/rt/include/chschd.h ****  * @brief   System data structure.
 397:./lib/chibios/os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:./lib/chibios/os/rt/include/chschd.h ****  *          stacks.
 399:./lib/chibios/os/rt/include/chschd.h ****  */
 400:./lib/chibios/os/rt/include/chschd.h **** struct ch_system {
 401:./lib/chibios/os/rt/include/chschd.h ****   /**
 402:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:./lib/chibios/os/rt/include/chschd.h ****    */
 404:./lib/chibios/os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:./lib/chibios/os/rt/include/chschd.h ****   /**
 406:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:./lib/chibios/os/rt/include/chschd.h ****    */
 408:./lib/chibios/os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:./lib/chibios/os/rt/include/chschd.h ****   /**
 410:./lib/chibios/os/rt/include/chschd.h ****    * @brief   System debug.
 411:./lib/chibios/os/rt/include/chschd.h ****    */
 412:./lib/chibios/os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:./lib/chibios/os/rt/include/chschd.h ****   /**
 414:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:./lib/chibios/os/rt/include/chschd.h ****    */
 416:./lib/chibios/os/rt/include/chschd.h ****   thread_t              mainthread;
 417:./lib/chibios/os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:./lib/chibios/os/rt/include/chschd.h ****   /**
 419:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:./lib/chibios/os/rt/include/chschd.h ****    */
 421:./lib/chibios/os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:./lib/chibios/os/rt/include/chschd.h **** #endif
 423:./lib/chibios/os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:./lib/chibios/os/rt/include/chschd.h ****   /**
 425:./lib/chibios/os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:./lib/chibios/os/rt/include/chschd.h ****    */
 427:./lib/chibios/os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:./lib/chibios/os/rt/include/chschd.h **** #endif
 429:./lib/chibios/os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:./lib/chibios/os/rt/include/chschd.h **** };
 431:./lib/chibios/os/rt/include/chschd.h **** 
 432:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 433:./lib/chibios/os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 435:./lib/chibios/os/rt/include/chschd.h **** 
 436:./lib/chibios/os/rt/include/chschd.h **** /**
 437:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:./lib/chibios/os/rt/include/chschd.h ****  *
 439:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 440:./lib/chibios/os/rt/include/chschd.h ****  */
 441:./lib/chibios/os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:./lib/chibios/os/rt/include/chschd.h **** 
 443:./lib/chibios/os/rt/include/chschd.h **** /**
 444:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:./lib/chibios/os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:./lib/chibios/os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:./lib/chibios/os/rt/include/chschd.h ****  */
 448:./lib/chibios/os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:./lib/chibios/os/rt/include/chschd.h **** 
 450:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 451:./lib/chibios/os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 453:./lib/chibios/os/rt/include/chschd.h **** 
 454:./lib/chibios/os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:./lib/chibios/os/rt/include/chschd.h **** extern ch_system_t ch;
 456:./lib/chibios/os/rt/include/chschd.h **** #endif
 457:./lib/chibios/os/rt/include/chschd.h **** 
 458:./lib/chibios/os/rt/include/chschd.h **** /*
 459:./lib/chibios/os/rt/include/chschd.h ****  * Scheduler APIs.
 460:./lib/chibios/os/rt/include/chschd.h ****  */
 461:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 462:./lib/chibios/os/rt/include/chschd.h **** extern "C" {
 463:./lib/chibios/os/rt/include/chschd.h **** #endif
 464:./lib/chibios/os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:./lib/chibios/os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:./lib/chibios/os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:./lib/chibios/os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:./lib/chibios/os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:./lib/chibios/os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:./lib/chibios/os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:./lib/chibios/os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:./lib/chibios/os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:./lib/chibios/os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:./lib/chibios/os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:./lib/chibios/os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:./lib/chibios/os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:./lib/chibios/os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:./lib/chibios/os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:./lib/chibios/os/rt/include/chschd.h **** #ifdef __cplusplus
 485:./lib/chibios/os/rt/include/chschd.h **** }
 486:./lib/chibios/os/rt/include/chschd.h **** #endif
 487:./lib/chibios/os/rt/include/chschd.h **** 
 488:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 489:./lib/chibios/os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:./lib/chibios/os/rt/include/chschd.h **** /*===========================================================================*/
 491:./lib/chibios/os/rt/include/chschd.h **** 
 492:./lib/chibios/os/rt/include/chschd.h **** /**
 493:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:./lib/chibios/os/rt/include/chschd.h ****  *
 495:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:./lib/chibios/os/rt/include/chschd.h ****  *
 497:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 498:./lib/chibios/os/rt/include/chschd.h ****  */
 499:./lib/chibios/os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
 500:./lib/chibios/os/rt/include/chschd.h **** 
 501:./lib/chibios/os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
 502:./lib/chibios/os/rt/include/chschd.h **** }
 503:./lib/chibios/os/rt/include/chschd.h **** 
 504:./lib/chibios/os/rt/include/chschd.h **** /**
 505:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:./lib/chibios/os/rt/include/chschd.h ****  *
 507:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 509:./lib/chibios/os/rt/include/chschd.h ****  *
 510:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 511:./lib/chibios/os/rt/include/chschd.h ****  */
 512:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:./lib/chibios/os/rt/include/chschd.h **** 
 514:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:./lib/chibios/os/rt/include/chschd.h **** }
 516:./lib/chibios/os/rt/include/chschd.h **** 
 517:./lib/chibios/os/rt/include/chschd.h **** /**
 518:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:./lib/chibios/os/rt/include/chschd.h ****  *
 520:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:./lib/chibios/os/rt/include/chschd.h ****  * @return              The status of the list.
 522:./lib/chibios/os/rt/include/chschd.h ****  *
 523:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 524:./lib/chibios/os/rt/include/chschd.h ****  */
 525:./lib/chibios/os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:./lib/chibios/os/rt/include/chschd.h **** 
 527:./lib/chibios/os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:./lib/chibios/os/rt/include/chschd.h **** }
 529:./lib/chibios/os/rt/include/chschd.h **** 
 530:./lib/chibios/os/rt/include/chschd.h **** /**
 531:./lib/chibios/os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:./lib/chibios/os/rt/include/chschd.h ****  *
 533:./lib/chibios/os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:./lib/chibios/os/rt/include/chschd.h ****  *
 535:./lib/chibios/os/rt/include/chschd.h ****  * @notapi
 536:./lib/chibios/os/rt/include/chschd.h ****  */
 537:./lib/chibios/os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
 538:./lib/chibios/os/rt/include/chschd.h **** 
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
  61              		.loc 2 539 13 is_stmt 0 view .LVU15
  62 0012 8361     		str	r3, [r0, #24]
  63              	.LBE74:
  64              	.LBE73:
  65              	.LBE72:
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  66              		.loc 1 94 17 view .LVU16
  67 0014 8918     		adds	r1, r1, r2
  68              	.LVL2:
  69              	.LBB79:
  70              	.LBB77:
  71              	.LBB75:
 540:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
  72              		.loc 2 540 13 view .LVU17
  73 0016 C361     		str	r3, [r0, #28]
  74              	.LBE75:
  75              	.LBE77:
  76              	.LBE79:
  98:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qr);
  77              		.loc 1 98 3 view .LVU18
  78 0018 0833     		adds	r3, r3, #8
  94:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  79              		.loc 1 94 15 view .LVU19
  80 001a 4160     		str	r1, [r0, #4]
  95:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset  = false;
  81              		.loc 1 95 3 is_stmt 1 view .LVU20
  96:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qw);
  82              		.loc 1 96 3 view .LVU21
  97:lib/chibios/os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qr);
  83              		.loc 1 97 3 view .LVU22
  84              	.LBB80:
  85              	.LBI72:
  86              		.file 3 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  */
  91:./lib/chibios/os/rt/include/chthreads.h **** /**
  92:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  94:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  95:./lib/chibios/os/rt/include/chthreads.h ****  *
  96:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  97:./lib/chibios/os/rt/include/chthreads.h ****  */
  98:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {(thread_t *)&name, (thread_t *)&name}
  99:./lib/chibios/os/rt/include/chthreads.h **** 
 100:./lib/chibios/os/rt/include/chthreads.h **** /**
 101:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 103:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 104:./lib/chibios/os/rt/include/chthreads.h ****  *
 105:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 106:./lib/chibios/os/rt/include/chthreads.h ****  */
 107:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DECL(name)                                           \
 108:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 109:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 110:./lib/chibios/os/rt/include/chthreads.h **** 
 111:./lib/chibios/os/rt/include/chthreads.h **** /**
 112:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 113:./lib/chibios/os/rt/include/chthreads.h ****  */
 114:./lib/chibios/os/rt/include/chthreads.h **** /**
 115:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 116:./lib/chibios/os/rt/include/chthreads.h ****  *
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 118:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 119:./lib/chibios/os/rt/include/chthreads.h ****  *
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 121:./lib/chibios/os/rt/include/chthreads.h ****  */
 122:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 123:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 124:./lib/chibios/os/rt/include/chthreads.h **** 
 125:./lib/chibios/os/rt/include/chthreads.h **** /**
 126:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 127:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 128:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 129:./lib/chibios/os/rt/include/chthreads.h ****  *
 130:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 131:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 132:./lib/chibios/os/rt/include/chthreads.h ****  *
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 134:./lib/chibios/os/rt/include/chthreads.h ****  */
 135:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 136:./lib/chibios/os/rt/include/chthreads.h **** 
 137:./lib/chibios/os/rt/include/chthreads.h **** /**
 138:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 139:./lib/chibios/os/rt/include/chthreads.h ****  *
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 141:./lib/chibios/os/rt/include/chthreads.h ****  */
 142:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 143:./lib/chibios/os/rt/include/chthreads.h **** 
 144:./lib/chibios/os/rt/include/chthreads.h **** /**
 145:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 146:./lib/chibios/os/rt/include/chthreads.h ****  *
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 148:./lib/chibios/os/rt/include/chthreads.h ****  */
 149:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 150:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 151:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 152:./lib/chibios/os/rt/include/chthreads.h **** 
 153:./lib/chibios/os/rt/include/chthreads.h **** /**
 154:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 155:./lib/chibios/os/rt/include/chthreads.h ****  */
 156:./lib/chibios/os/rt/include/chthreads.h **** /**
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 158:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 159:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 160:./lib/chibios/os/rt/include/chthreads.h ****  */
 161:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 162:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 163:./lib/chibios/os/rt/include/chthreads.h **** 
 164:./lib/chibios/os/rt/include/chthreads.h **** /**
 165:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 166:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 167:./lib/chibios/os/rt/include/chthreads.h ****  */
 168:./lib/chibios/os/rt/include/chthreads.h **** /**
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 170:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 171:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 175:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 176:./lib/chibios/os/rt/include/chthreads.h ****  *
 177:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 178:./lib/chibios/os/rt/include/chthreads.h ****  *
 179:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 180:./lib/chibios/os/rt/include/chthreads.h ****  */
 181:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 182:./lib/chibios/os/rt/include/chthreads.h **** 
 183:./lib/chibios/os/rt/include/chthreads.h **** /**
 184:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 185:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 186:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 187:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 188:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 191:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 192:./lib/chibios/os/rt/include/chthreads.h ****  *
 193:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 194:./lib/chibios/os/rt/include/chthreads.h ****  *
 195:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 196:./lib/chibios/os/rt/include/chthreads.h ****  */
 197:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 198:./lib/chibios/os/rt/include/chthreads.h **** 
 199:./lib/chibios/os/rt/include/chthreads.h **** /**
 200:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 201:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 202:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 203:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 204:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 207:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 208:./lib/chibios/os/rt/include/chthreads.h ****  *
 209:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 210:./lib/chibios/os/rt/include/chthreads.h ****  *
 211:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 212:./lib/chibios/os/rt/include/chthreads.h ****  */
 213:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 214:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 215:./lib/chibios/os/rt/include/chthreads.h **** 
 216:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 217:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 218:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 219:./lib/chibios/os/rt/include/chthreads.h **** 
 220:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 221:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 222:./lib/chibios/os/rt/include/chthreads.h **** #endif
 223:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 224:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 225:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 226:./lib/chibios/os/rt/include/chthreads.h **** #endif
 227:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 228:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 229:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 232:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 234:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 235:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 236:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #endif
 238:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 240:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 241:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 242:./lib/chibios/os/rt/include/chthreads.h **** #endif
 243:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 244:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 246:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 248:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 249:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 250:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 255:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 257:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 258:./lib/chibios/os/rt/include/chthreads.h **** }
 259:./lib/chibios/os/rt/include/chthreads.h **** #endif
 260:./lib/chibios/os/rt/include/chthreads.h **** 
 261:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 262:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 263:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 264:./lib/chibios/os/rt/include/chthreads.h **** 
 265:./lib/chibios/os/rt/include/chthreads.h ****  /**
 266:./lib/chibios/os/rt/include/chthreads.h ****   * @brief   Returns a pointer to the current @p thread_t.
 267:./lib/chibios/os/rt/include/chthreads.h ****   *
 268:./lib/chibios/os/rt/include/chthreads.h ****   * @return             A pointer to the current thread.
 269:./lib/chibios/os/rt/include/chthreads.h ****   *
 270:./lib/chibios/os/rt/include/chthreads.h ****   * @xclass
 271:./lib/chibios/os/rt/include/chthreads.h ****   */
 272:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 273:./lib/chibios/os/rt/include/chthreads.h **** 
 274:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 275:./lib/chibios/os/rt/include/chthreads.h **** }
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h **** /**
 278:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 279:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 280:./lib/chibios/os/rt/include/chthreads.h ****  *
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  *
 283:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 284:./lib/chibios/os/rt/include/chthreads.h ****  */
 285:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 286:./lib/chibios/os/rt/include/chthreads.h **** 
 287:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->prio;
 288:./lib/chibios/os/rt/include/chthreads.h **** }
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h **** /**
 291:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 292:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 293:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 294:./lib/chibios/os/rt/include/chthreads.h ****  *
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 296:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 299:./lib/chibios/os/rt/include/chthreads.h ****  */
 300:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 301:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 302:./lib/chibios/os/rt/include/chthreads.h **** 
 303:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 304:./lib/chibios/os/rt/include/chthreads.h **** }
 305:./lib/chibios/os/rt/include/chthreads.h **** #endif
 306:./lib/chibios/os/rt/include/chthreads.h **** 
 307:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 308:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 309:./lib/chibios/os/rt/include/chthreads.h **** /**
 310:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 311:./lib/chibios/os/rt/include/chthreads.h ****  *
 312:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 316:./lib/chibios/os/rt/include/chthreads.h ****  */
 317:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 318:./lib/chibios/os/rt/include/chthreads.h **** 
 319:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 320:./lib/chibios/os/rt/include/chthreads.h **** }
 321:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 322:./lib/chibios/os/rt/include/chthreads.h **** 
 323:./lib/chibios/os/rt/include/chthreads.h **** /**
 324:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 325:./lib/chibios/os/rt/include/chthreads.h ****  *
 326:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 328:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 329:./lib/chibios/os/rt/include/chthreads.h ****  *
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 331:./lib/chibios/os/rt/include/chthreads.h ****  */
 332:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 333:./lib/chibios/os/rt/include/chthreads.h **** 
 334:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 335:./lib/chibios/os/rt/include/chthreads.h **** }
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h **** /**
 338:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 339:./lib/chibios/os/rt/include/chthreads.h ****  *
 340:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 344:./lib/chibios/os/rt/include/chthreads.h ****  */
 345:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 346:./lib/chibios/os/rt/include/chthreads.h **** 
 347:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 348:./lib/chibios/os/rt/include/chthreads.h **** }
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h **** /**
 351:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 352:./lib/chibios/os/rt/include/chthreads.h ****  *
 353:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 355:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 356:./lib/chibios/os/rt/include/chthreads.h ****  *
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 358:./lib/chibios/os/rt/include/chthreads.h ****  */
 359:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 360:./lib/chibios/os/rt/include/chthreads.h **** 
 361:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 362:./lib/chibios/os/rt/include/chthreads.h **** 
 363:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 364:./lib/chibios/os/rt/include/chthreads.h **** }
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h **** /**
 367:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 368:./lib/chibios/os/rt/include/chthreads.h ****  *
 369:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 370:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 371:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 372:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 375:./lib/chibios/os/rt/include/chthreads.h ****  *
 376:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 377:./lib/chibios/os/rt/include/chthreads.h ****  */
 378:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 379:./lib/chibios/os/rt/include/chthreads.h **** 
 380:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 381:./lib/chibios/os/rt/include/chthreads.h **** 
 382:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 383:./lib/chibios/os/rt/include/chthreads.h **** }
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h **** /**
 386:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 387:./lib/chibios/os/rt/include/chthreads.h ****  *
 388:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 389:./lib/chibios/os/rt/include/chthreads.h ****  *
 390:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 391:./lib/chibios/os/rt/include/chthreads.h ****  */
 392:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
  87              		.loc 3 392 20 view .LVU23
  88              	.LBE80:
 393:./lib/chibios/os/rt/include/chthreads.h **** 
 394:./lib/chibios/os/rt/include/chthreads.h ****   queue_init(tqp);
  89              		.loc 3 394 3 view .LVU24
  90              	.LBB81:
  91              	.LBB78:
  92              	.LBI73:
 537:./lib/chibios/os/rt/include/chschd.h **** 
  93              		.loc 2 537 20 view .LVU25
  94              	.LBB76:
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
  95              		.loc 2 539 3 view .LVU26
  96              		.loc 2 540 3 view .LVU27
  97              	.LBE76:
  98              	.LBE78:
  99              	.LBE81:
 100              		.loc 1 98 3 view .LVU28
 101              	.LVL3:
 102              	.LBB82:
 103              	.LBI82:
 392:./lib/chibios/os/rt/include/chthreads.h **** 
 104              		.loc 3 392 20 view .LVU29
 105              	.LBE82:
 106              		.loc 3 394 3 view .LVU30
 107              	.LBB85:
 108              	.LBB83:
 109              	.LBI83:
 537:./lib/chibios/os/rt/include/chschd.h **** 
 110              		.loc 2 537 20 view .LVU31
 111              	.LBB84:
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 112              		.loc 2 539 3 view .LVU32
 539:./lib/chibios/os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 113              		.loc 2 539 13 is_stmt 0 view .LVU33
 114 001c 0362     		str	r3, [r0, #32]
 115              		.loc 2 540 3 is_stmt 1 view .LVU34
 116              		.loc 2 540 13 is_stmt 0 view .LVU35
 117 001e 4362     		str	r3, [r0, #36]
 118              	.LVL4:
 119              		.loc 2 540 13 view .LVU36
 120              	.LBE84:
 121              	.LBE83:
 122              	.LBE85:
  99:lib/chibios/os/oslib/src/chmboxes.c **** }
 123              		.loc 1 99 1 view .LVU37
 124              		@ sp needed
 125 0020 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE154:
 129              		.section	.text.chMBResetI,"ax",%progbits
 130              		.align	1
 131              		.global	chMBResetI
 132              		.syntax unified
 133              		.code	16
 134              		.thumb_func
 135              		.fpu softvfp
 137              	chMBResetI:
 138              	.LVL5:
 139              	.LFB156:
 100:lib/chibios/os/oslib/src/chmboxes.c **** 
 101:lib/chibios/os/oslib/src/chmboxes.c **** /**
 102:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 103:lib/chibios/os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 104:lib/chibios/os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 105:lib/chibios/os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 106:lib/chibios/os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 107:lib/chibios/os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 108:lib/chibios/os/oslib/src/chmboxes.c ****  *
 109:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 110:lib/chibios/os/oslib/src/chmboxes.c ****  *
 111:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 112:lib/chibios/os/oslib/src/chmboxes.c ****  */
 113:lib/chibios/os/oslib/src/chmboxes.c **** void chMBReset(mailbox_t *mbp) {
 114:lib/chibios/os/oslib/src/chmboxes.c **** 
 115:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 116:lib/chibios/os/oslib/src/chmboxes.c ****   chMBResetI(mbp);
 117:lib/chibios/os/oslib/src/chmboxes.c ****   chSchRescheduleS();
 118:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 119:lib/chibios/os/oslib/src/chmboxes.c **** }
 120:lib/chibios/os/oslib/src/chmboxes.c **** 
 121:lib/chibios/os/oslib/src/chmboxes.c **** /**
 122:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 123:lib/chibios/os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 124:lib/chibios/os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 125:lib/chibios/os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 126:lib/chibios/os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 127:lib/chibios/os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 128:lib/chibios/os/oslib/src/chmboxes.c ****  *
 129:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 130:lib/chibios/os/oslib/src/chmboxes.c ****  *
 131:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 132:lib/chibios/os/oslib/src/chmboxes.c ****  */
 133:lib/chibios/os/oslib/src/chmboxes.c **** void chMBResetI(mailbox_t *mbp) {
 140              		.loc 1 133 33 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 134:lib/chibios/os/oslib/src/chmboxes.c **** 
 135:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 144              		.loc 1 135 21 view .LVU39
 136:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 145              		.loc 1 136 3 view .LVU40
 146              		.loc 1 136 3 view .LVU41
 137:lib/chibios/os/oslib/src/chmboxes.c **** 
 138:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->wrptr = mbp->buffer;
 147              		.loc 1 138 3 view .LVU42
 148              		.loc 1 138 19 is_stmt 0 view .LVU43
 149 0000 0368     		ldr	r3, [r0]
 133:lib/chibios/os/oslib/src/chmboxes.c **** 
 150              		.loc 1 133 33 view .LVU44
 151 0002 70B5     		push	{r4, r5, r6, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
 156              		.cfi_offset 14, -4
 157              		.loc 1 138 14 view .LVU45
 158 0004 8360     		str	r3, [r0, #8]
 139:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 159              		.loc 1 139 3 is_stmt 1 view .LVU46
 160              		.loc 1 139 14 is_stmt 0 view .LVU47
 161 0006 C360     		str	r3, [r0, #12]
 140:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 162              		.loc 1 140 3 is_stmt 1 view .LVU48
 141:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset = true;
 142:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qw, MSG_RESET);
 163              		.loc 1 142 3 is_stmt 0 view .LVU49
 164 0008 0225     		movs	r5, #2
 140:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 165              		.loc 1 140 14 view .LVU50
 166 000a 0023     		movs	r3, #0
 133:lib/chibios/os/oslib/src/chmboxes.c **** 
 167              		.loc 1 133 33 view .LVU51
 168 000c 0400     		movs	r4, r0
 169              		.loc 1 142 3 view .LVU52
 170 000e 6D42     		rsbs	r5, r5, #0
 140:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 171              		.loc 1 140 14 view .LVU53
 172 0010 0361     		str	r3, [r0, #16]
 141:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset = true;
 173              		.loc 1 141 3 is_stmt 1 view .LVU54
 141:lib/chibios/os/oslib/src/chmboxes.c ****   mbp->reset = true;
 174              		.loc 1 141 14 is_stmt 0 view .LVU55
 175 0012 0133     		adds	r3, r3, #1
 176 0014 0375     		strb	r3, [r0, #20]
 177              		.loc 1 142 3 is_stmt 1 view .LVU56
 178 0016 2900     		movs	r1, r5
 179 0018 1830     		adds	r0, r0, #24
 180              	.LVL6:
 181              		.loc 1 142 3 is_stmt 0 view .LVU57
 182 001a FFF7FEFF 		bl	chThdDequeueAllI
 183              	.LVL7:
 143:lib/chibios/os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 184              		.loc 1 143 3 is_stmt 1 view .LVU58
 185 001e 2000     		movs	r0, r4
 186 0020 2900     		movs	r1, r5
 187 0022 2030     		adds	r0, r0, #32
 188 0024 FFF7FEFF 		bl	chThdDequeueAllI
 189              	.LVL8:
 144:lib/chibios/os/oslib/src/chmboxes.c **** }
 190              		.loc 1 144 1 is_stmt 0 view .LVU59
 191              		@ sp needed
 192              	.LVL9:
 193              		.loc 1 144 1 view .LVU60
 194 0028 70BD     		pop	{r4, r5, r6, pc}
 195              		.cfi_endproc
 196              	.LFE156:
 198              		.section	.text.chMBReset,"ax",%progbits
 199              		.align	1
 200              		.global	chMBReset
 201              		.syntax unified
 202              		.code	16
 203              		.thumb_func
 204              		.fpu softvfp
 206              	chMBReset:
 207              	.LVL10:
 208              	.LFB155:
 113:lib/chibios/os/oslib/src/chmboxes.c **** 
 209              		.loc 1 113 32 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 115:lib/chibios/os/oslib/src/chmboxes.c ****   chMBResetI(mbp);
 213              		.loc 1 115 3 view .LVU62
 214              	.LBB86:
 215              	.LBI86:
 216              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 217              		.loc 4 353 20 view .LVU63
 218              	.LBE86:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 219              		.loc 4 355 3 view .LVU64
 220              	.LBB94:
 221              	.LBB87:
 222              	.LBI87:
 223              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @file    chcore_v6m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   ARMv6-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @addtogroup ARMCMx_V6M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CHCORE_V6M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CHCORE_V6M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SUPPORTS_RT                FALSE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA_ALIGN         PORT_STACK_ALIGN
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   PendSV priority level.
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    This priority is enforced to be equal to @p 0,
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          this handler always has the highest priority that cannot preempt
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the kernel.
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_PRIORITY_PENDSV          0
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module pre-compile time settings.                                         */
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Stack size for the system idle thread.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This size depends on the idle thread implementation, usually
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          the idle thread should take no more space than those reserved
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          a stack frame when compiling without optimizations. You may
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          reduce this value to zero when compiling with optimizations.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE)
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This constant is used in the calculation of the correct working
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          area size.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    In this port this value is conservatively set to 64 because the
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          with compiler optimizations disabled. The value can be reduced
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          when compiler optimizations are enabled.
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(PORT_INT_REQUIRED_STACK)
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INT_REQUIRED_STACK         64
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Alternate preemption method.
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details Activating this option will make the Kernel use the PendSV
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          handler for preemption instead of the NMI handler.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifndef CORTEX_ALTERNATE_SWITCH
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_ALTERNATE_SWITCH         FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Derived constants and error checks.                                       */
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(CH_CUSTOMER_LIC_PORT_CM0)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "CH_CUSTOMER_LIC_PORT_CM0 not defined"
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if CH_CUSTOMER_LIC_PORT_CM0 == FALSE
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #error "ChibiOS Cortex-M0 port not licensed"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Handling a GCC problem impacting ARMv6-M.*/
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) && !defined(PORT_IGNORE_GCC_VERSION_CHECK)
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if __GNUC__ > 5
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "This compiler has a know problem with Cortex-M0, see bugs: 88167, 88656."
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #warning "*** Use GCC version 5 or below ***"
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @name    Architecture and Compiler
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @{
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if ((CORTEX_MODEL == 0) && !defined(__CORE_CM0PLUS_H_DEPENDANT)) ||        \
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     defined(__DOXYGEN__)
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Macro defining the specific ARM architecture.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the implemented architecture.
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Name of the architecture variant.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0"
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif (CORTEX_MODEL == 0) && defined(__CORE_CM0PLUS_H_DEPENDANT)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_ARM_v6M
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv6-M"
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_CORE_VARIANT_NAME          "Cortex-M0+"
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-specific information string.
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == FALSE) || defined(__DOXYGEN__)
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through NMI"
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_INFO                       "Preemption through PendSV"
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /** @} */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Maximum usable priority for normal ISRs.
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CORTEX_ALTERNATE_SWITCH == TRUE) || defined(__DOXYGEN__)
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      1
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module data structures and types.                                         */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(_FROM_ASM_)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  /* The documentation of the following declarations is in chconf.h in order
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     to not have duplicated structure names into the documentation.*/
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if !defined(__DOXYGEN__)
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_extctx {
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r0;
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r1;
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r2;
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r3;
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r12;
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr_thd;
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      pc;
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      xpsr;
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** struct port_intctx {
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r8;
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r9;
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r10;
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r11;
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r4;
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r5;
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r6;
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      r7;
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t      lr;
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** };
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif /* !defined(__DOXYGEN__) */
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module macros.                                                            */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This code usually setup the context switching frame represented
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          by an @p port_intctx structure.
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                                         sizeof (struct port_intctx));       \
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Computes the thread working area global size.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    There is no need to perform alignments in this macro.
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WA_SIZE(n) (sizeof (struct port_intctx) +                      \
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          sizeof (struct port_extctx) +                      \
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Static working area allocation.
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro is used to allocate a static thread working area
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          aligned as both position and size.
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] s         the name to be assigned to the stack array
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] n         the stack size to be assigned to the thread
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ prologue code.
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__builtin_return_address(0)
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__ICCARM__)
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__get_LR()
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #elif defined(__CC_ARM)
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_PROLOGUE()                                                 \
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   regarm_t _saved_lr = (regarm_t)__return_address()
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ epilogue code.
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          enabled to invoke system APIs.
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue(_saved_lr)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   IRQ handler function declaration.
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Fast IRQ handler function declaration.
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    @p id can be a function name or a vector number depending on the
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          port implementation.
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Performs a context switch between two threads.
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details This is the most critical code in any port, this function
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          is responsible for the context switch between 2 threads.
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *          switch performance so optimize here as much as you can.
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] ntp       the thread to be switched in
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] otp       the thread to be switched out
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #else
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #define port_switch(ntp, otp) {                                             \
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****     chSysHalt("stack overflow");                                            \
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   }                                                                         \
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   _port_switch(ntp, otp);                                                   \
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* External declarations.                                                    */
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** extern "C" {
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_irq_epilogue(regarm_t lr);
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_thread_start(void);
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_switch_from_isr(void);
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   void _port_exit_from_isr(void);
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #ifdef __cplusplus
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** #endif
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /* Module inline functions.                                                  */
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /*===========================================================================*/
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Port-related initialization code.
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_init(void) {
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Returns a word encoding the current interrupts status.
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupts status.
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline syssts_t port_get_irq_status(void) {
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (syssts_t)__get_PRIMASK();
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Checks the interrupt status.
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @param[in] sts       the interrupt status word
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The interrupt status.
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        the word specified a disabled interrupts status.
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         the word specified an enabled interrupts status.
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Determines the current execution context.
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  *
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @return              The execution context.
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval false        not running in ISR mode.
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @retval true         running in ISR mode.
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline bool port_is_isr_context(void) {
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-lock action.
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function disables interrupts globally.
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_lock(void) {
 224              		.loc 5 387 20 view .LVU65
 225              	.LBE87:
 226              	.LBE94:
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __disable_irq();
 227              		.loc 5 389 3 view .LVU66
 228              	.LBB95:
 229              	.LBB92:
 230              	.LBB88:
 231              	.LBI88:
 232              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 233              		.loc 6 140 27 view .LVU67
 234              	.LBB89:
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 235              		.loc 6 142 3 view .LVU68
 236              	.LBE89:
 237              	.LBE88:
 238              	.LBE92:
 239              	.LBE95:
 113:lib/chibios/os/oslib/src/chmboxes.c **** 
 240              		.loc 1 113 32 is_stmt 0 view .LVU69
 241 0000 10B5     		push	{r4, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245              	.LBB96:
 246              	.LBB93:
 247              	.LBB91:
 248              	.LBB90:
 249              		.loc 6 142 3 view .LVU70
 250              		.syntax divided
 251              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 252 0002 72B6     		cpsid i
 253              	@ 0 "" 2
 254              		.thumb
 255              		.syntax unified
 256              	.LBE90:
 257              	.LBE91:
 258              	.LBE93:
 259              	.LBE96:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 260              		.loc 4 356 34 is_stmt 1 view .LVU71
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 261              		.loc 4 357 20 view .LVU72
 116:lib/chibios/os/oslib/src/chmboxes.c ****   chSchRescheduleS();
 262              		.loc 1 116 3 view .LVU73
 263 0004 FFF7FEFF 		bl	chMBResetI
 264              	.LVL11:
 117:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 265              		.loc 1 117 3 view .LVU74
 266 0008 FFF7FEFF 		bl	chSchRescheduleS
 267              	.LVL12:
 118:lib/chibios/os/oslib/src/chmboxes.c **** }
 268              		.loc 1 118 3 view .LVU75
 269              	.LBB97:
 270              	.LBI97:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 271              		.loc 4 365 20 view .LVU76
 272              	.LBB98:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 273              		.loc 4 367 22 view .LVU77
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 274              		.loc 4 368 33 view .LVU78
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 275              		.loc 4 374 3 view .LVU79
 276              		.loc 4 374 3 view .LVU80
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 277              		.loc 4 378 3 view .LVU81
 278              	.LBB99:
 279              	.LBI99:
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** /**
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @brief   Kernel-unlock action.
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  * @details In this port this function enables interrupts globally.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****  */
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** static inline void port_unlock(void) {
 280              		.loc 5 396 20 view .LVU82
 281              	.LBE99:
 282              	.LBE98:
 283              	.LBE97:
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h ****   __enable_irq();
 284              		.loc 5 398 3 view .LVU83
 285              	.LBB104:
 286              	.LBB103:
 287              	.LBB102:
 288              	.LBB100:
 289              	.LBI100:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 290              		.loc 6 129 27 view .LVU84
 291              	.LBB101:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 292              		.loc 6 131 3 view .LVU85
 293              		.syntax divided
 294              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 295 000c 62B6     		cpsie i
 296              	@ 0 "" 2
 297              		.thumb
 298              		.syntax unified
 299              	.LBE101:
 300              	.LBE100:
 301              	.LBE102:
 302              	.LBE103:
 303              	.LBE104:
 119:lib/chibios/os/oslib/src/chmboxes.c **** 
 304              		.loc 1 119 1 is_stmt 0 view .LVU86
 305              		@ sp needed
 306 000e 10BD     		pop	{r4, pc}
 307              		.cfi_endproc
 308              	.LFE155:
 310              		.section	.text.chMBPostTimeoutS,"ax",%progbits
 311              		.align	1
 312              		.global	chMBPostTimeoutS
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 316              		.fpu softvfp
 318              	chMBPostTimeoutS:
 319              	.LVL13:
 320              	.LFB158:
 145:lib/chibios/os/oslib/src/chmboxes.c **** 
 146:lib/chibios/os/oslib/src/chmboxes.c **** /**
 147:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 148:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 149:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 150:lib/chibios/os/oslib/src/chmboxes.c ****  *
 151:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 152:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 153:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 154:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 155:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 156:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 157:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 158:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 159:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 160:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 161:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 162:lib/chibios/os/oslib/src/chmboxes.c ****  *
 163:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 164:lib/chibios/os/oslib/src/chmboxes.c ****  */
 165:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 166:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 167:lib/chibios/os/oslib/src/chmboxes.c **** 
 168:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 169:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 170:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 171:lib/chibios/os/oslib/src/chmboxes.c **** 
 172:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 173:lib/chibios/os/oslib/src/chmboxes.c **** }
 174:lib/chibios/os/oslib/src/chmboxes.c **** 
 175:lib/chibios/os/oslib/src/chmboxes.c **** /**
 176:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 177:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 178:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 179:lib/chibios/os/oslib/src/chmboxes.c ****  *
 180:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 181:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 182:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 183:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 184:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 185:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 186:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 187:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 188:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 189:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 190:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 191:lib/chibios/os/oslib/src/chmboxes.c ****  *
 192:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 193:lib/chibios/os/oslib/src/chmboxes.c ****  */
 194:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 321              		.loc 1 194 74 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		.loc 1 194 74 is_stmt 0 view .LVU88
 326 0000 70B5     		push	{r4, r5, r6, lr}
 327              		.cfi_def_cfa_offset 16
 328              		.cfi_offset 4, -16
 329              		.cfi_offset 5, -12
 330              		.cfi_offset 6, -8
 331              		.cfi_offset 14, -4
 332 0002 0400     		movs	r4, r0
 333 0004 0E00     		movs	r6, r1
 334 0006 1500     		movs	r5, r2
 195:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 335              		.loc 1 195 3 is_stmt 1 view .LVU89
 196:lib/chibios/os/oslib/src/chmboxes.c **** 
 197:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 336              		.loc 1 197 21 view .LVU90
 198:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 337              		.loc 1 198 3 view .LVU91
 338              		.loc 1 198 3 view .LVU92
 339              	.LVL14:
 340              	.L8:
 199:lib/chibios/os/oslib/src/chmboxes.c **** 
 200:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 341              		.loc 1 200 3 view .LVU93
 201:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 202:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 342              		.loc 1 202 5 view .LVU94
 343              		.loc 1 202 8 is_stmt 0 view .LVU95
 344 0008 237D     		ldrb	r3, [r4, #20]
 345 000a 002B     		cmp	r3, #0
 346 000c 20D1     		bne	.L9
 203:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 204:lib/chibios/os/oslib/src/chmboxes.c ****     }
 205:lib/chibios/os/oslib/src/chmboxes.c **** 
 206:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 207:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 347              		.loc 1 207 5 is_stmt 1 view .LVU96
 348              	.LVL15:
 349              	.LBB111:
 350              	.LBI111:
 351              		.file 7 "./lib/chibios/os/oslib/include/chmboxes.h"
   1:./lib/chibios/os/oslib/include/chmboxes.h **** /*
   2:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/oslib/include/chmboxes.h **** 
   4:./lib/chibios/os/oslib/include/chmboxes.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/oslib/include/chmboxes.h **** 
   6:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/oslib/include/chmboxes.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/oslib/include/chmboxes.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/oslib/include/chmboxes.h ****     (at your option) any later version.
  10:./lib/chibios/os/oslib/include/chmboxes.h **** 
  11:./lib/chibios/os/oslib/include/chmboxes.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/oslib/include/chmboxes.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/oslib/include/chmboxes.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/oslib/include/chmboxes.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/oslib/include/chmboxes.h **** 
  16:./lib/chibios/os/oslib/include/chmboxes.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/oslib/include/chmboxes.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/oslib/include/chmboxes.h **** */
  19:./lib/chibios/os/oslib/include/chmboxes.h **** 
  20:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  21:./lib/chibios/os/oslib/include/chmboxes.h ****  * @file    chmboxes.h
  22:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Mailboxes macros and structures.
  23:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  24:./lib/chibios/os/oslib/include/chmboxes.h ****  * @addtogroup oslib_mailboxes
  25:./lib/chibios/os/oslib/include/chmboxes.h ****  * @{
  26:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  27:./lib/chibios/os/oslib/include/chmboxes.h **** 
  28:./lib/chibios/os/oslib/include/chmboxes.h **** #ifndef CHMBOXES_H
  29:./lib/chibios/os/oslib/include/chmboxes.h **** #define CHMBOXES_H
  30:./lib/chibios/os/oslib/include/chmboxes.h **** 
  31:./lib/chibios/os/oslib/include/chmboxes.h **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  32:./lib/chibios/os/oslib/include/chmboxes.h **** 
  33:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  34:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  36:./lib/chibios/os/oslib/include/chmboxes.h **** 
  37:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  38:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  40:./lib/chibios/os/oslib/include/chmboxes.h **** 
  41:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  42:./lib/chibios/os/oslib/include/chmboxes.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  44:./lib/chibios/os/oslib/include/chmboxes.h **** 
  45:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  46:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  48:./lib/chibios/os/oslib/include/chmboxes.h **** 
  49:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  50:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Structure representing a mailbox object.
  51:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  52:./lib/chibios/os/oslib/include/chmboxes.h **** typedef struct {
  53:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *buffer;        /**< @brief Pointer to the mailbox
  54:./lib/chibios/os/oslib/include/chmboxes.h ****                                                     buffer.                 */
  55:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *top;           /**< @brief Pointer to the location
  56:./lib/chibios/os/oslib/include/chmboxes.h ****                                                     after the buffer.       */
  57:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *wrptr;         /**< @brief Write pointer.          */
  58:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t                 *rdptr;         /**< @brief Read pointer.           */
  59:./lib/chibios/os/oslib/include/chmboxes.h ****   size_t                cnt;            /**< @brief Messages in queue.      */
  60:./lib/chibios/os/oslib/include/chmboxes.h ****   bool                  reset;          /**< @brief True in reset state.    */
  61:./lib/chibios/os/oslib/include/chmboxes.h ****   threads_queue_t       qw;             /**< @brief Queued writers.         */
  62:./lib/chibios/os/oslib/include/chmboxes.h ****   threads_queue_t       qr;             /**< @brief Queued readers.         */
  63:./lib/chibios/os/oslib/include/chmboxes.h **** } mailbox_t;
  64:./lib/chibios/os/oslib/include/chmboxes.h **** 
  65:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  66:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module macros.                                                            */
  67:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
  68:./lib/chibios/os/oslib/include/chmboxes.h **** 
  69:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  70:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Data part of a static mailbox initializer.
  71:./lib/chibios/os/oslib/include/chmboxes.h ****  * @details This macro should be used when statically initializing a
  72:./lib/chibios/os/oslib/include/chmboxes.h ****  *          mailbox that is part of a bigger structure.
  73:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  74:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  75:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  76:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  77:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  78:./lib/chibios/os/oslib/include/chmboxes.h **** #define _MAILBOX_DATA(name, buffer, size) {                                 \
  79:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  80:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer) + size,                                                 \
  81:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  82:./lib/chibios/os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  83:./lib/chibios/os/oslib/include/chmboxes.h ****   (size_t)0,                                                                \
  84:./lib/chibios/os/oslib/include/chmboxes.h ****   false,                                                                    \
  85:./lib/chibios/os/oslib/include/chmboxes.h ****   _THREADS_QUEUE_DATA(name.qw),                                             \
  86:./lib/chibios/os/oslib/include/chmboxes.h ****   _THREADS_QUEUE_DATA(name.qr),                                             \
  87:./lib/chibios/os/oslib/include/chmboxes.h **** }
  88:./lib/chibios/os/oslib/include/chmboxes.h **** 
  89:./lib/chibios/os/oslib/include/chmboxes.h **** /**
  90:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Static mailbox initializer.
  91:./lib/chibios/os/oslib/include/chmboxes.h ****  * @details Statically initialized mailboxes require no explicit
  92:./lib/chibios/os/oslib/include/chmboxes.h ****  *          initialization using @p chMBObjectInit().
  93:./lib/chibios/os/oslib/include/chmboxes.h ****  *
  94:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  95:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  96:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  97:./lib/chibios/os/oslib/include/chmboxes.h ****  */
  98:./lib/chibios/os/oslib/include/chmboxes.h **** #define MAILBOX_DECL(name, buffer, size)                                    \
  99:./lib/chibios/os/oslib/include/chmboxes.h ****   mailbox_t name = _MAILBOX_DATA(name, buffer, size)
 100:./lib/chibios/os/oslib/include/chmboxes.h **** 
 101:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 102:./lib/chibios/os/oslib/include/chmboxes.h **** /* External declarations.                                                    */
 103:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 104:./lib/chibios/os/oslib/include/chmboxes.h **** 
 105:./lib/chibios/os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 106:./lib/chibios/os/oslib/include/chmboxes.h **** extern "C" {
 107:./lib/chibios/os/oslib/include/chmboxes.h **** #endif
 108:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n);
 109:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBReset(mailbox_t *mbp);
 110:./lib/chibios/os/oslib/include/chmboxes.h ****   void chMBResetI(mailbox_t *mbp);
 111:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 112:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 113:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostI(mailbox_t *mbp, msg_t msg);
 114:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 115:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 116:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg);
 117:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 118:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 119:./lib/chibios/os/oslib/include/chmboxes.h ****   msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp);
 120:./lib/chibios/os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 121:./lib/chibios/os/oslib/include/chmboxes.h **** }
 122:./lib/chibios/os/oslib/include/chmboxes.h **** #endif
 123:./lib/chibios/os/oslib/include/chmboxes.h **** 
 124:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 125:./lib/chibios/os/oslib/include/chmboxes.h **** /* Module inline functions.                                                  */
 126:./lib/chibios/os/oslib/include/chmboxes.h **** /*===========================================================================*/
 127:./lib/chibios/os/oslib/include/chmboxes.h **** 
 128:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 129:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the mailbox buffer size as number of messages.
 130:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 131:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 132:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The size of the mailbox.
 133:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 134:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 135:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 136:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetSizeI(const mailbox_t *mbp) {
 137:./lib/chibios/os/oslib/include/chmboxes.h **** 
 138:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -save -e9033 [10.8] Perfectly safe pointers
 139:./lib/chibios/os/oslib/include/chmboxes.h ****     arithmetic.*/
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   return (size_t)(mbp->top - mbp->buffer);
 141:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 142:./lib/chibios/os/oslib/include/chmboxes.h **** }
 143:./lib/chibios/os/oslib/include/chmboxes.h **** 
 144:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 145:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the number of used message slots into a mailbox.
 146:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 147:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 148:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The number of queued messages.
 149:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 150:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 151:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 152:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetUsedCountI(const mailbox_t *mbp) {
 153:./lib/chibios/os/oslib/include/chmboxes.h **** 
 154:./lib/chibios/os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 155:./lib/chibios/os/oslib/include/chmboxes.h **** 
 156:./lib/chibios/os/oslib/include/chmboxes.h ****   return mbp->cnt;
 157:./lib/chibios/os/oslib/include/chmboxes.h **** }
 158:./lib/chibios/os/oslib/include/chmboxes.h **** 
 159:./lib/chibios/os/oslib/include/chmboxes.h **** /**
 160:./lib/chibios/os/oslib/include/chmboxes.h ****  * @brief   Returns the number of free message slots into a mailbox.
 161:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 162:./lib/chibios/os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 163:./lib/chibios/os/oslib/include/chmboxes.h ****  * @return              The number of empty message slots.
 164:./lib/chibios/os/oslib/include/chmboxes.h ****  *
 165:./lib/chibios/os/oslib/include/chmboxes.h ****  * @iclass
 166:./lib/chibios/os/oslib/include/chmboxes.h ****  */
 167:./lib/chibios/os/oslib/include/chmboxes.h **** static inline size_t chMBGetFreeCountI(const mailbox_t *mbp) {
 352              		.loc 7 167 22 view .LVU97
 353              	.LBB112:
 168:./lib/chibios/os/oslib/include/chmboxes.h **** 
 169:./lib/chibios/os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 354              		.loc 7 169 21 view .LVU98
 170:./lib/chibios/os/oslib/include/chmboxes.h **** 
 171:./lib/chibios/os/oslib/include/chmboxes.h ****   return chMBGetSizeI(mbp) - chMBGetUsedCountI(mbp);
 355              		.loc 7 171 3 view .LVU99
 356              	.LBB113:
 357              	.LBI113:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 358              		.loc 7 136 22 view .LVU100
 359              	.LBB114:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 360              		.loc 7 140 3 view .LVU101
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 361              		.loc 7 140 22 is_stmt 0 view .LVU102
 362 000e 6068     		ldr	r0, [r4, #4]
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 363              		.loc 7 140 33 view .LVU103
 364 0010 2168     		ldr	r1, [r4]
 365              	.LVL16:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 366              		.loc 7 140 33 view .LVU104
 367              	.LBE114:
 368              	.LBE113:
 369              		.loc 7 171 30 view .LVU105
 370 0012 2369     		ldr	r3, [r4, #16]
 371              	.LVL17:
 372              		.loc 7 171 30 view .LVU106
 373              	.LBE112:
 374              	.LBE111:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 375              		.loc 7 154 21 is_stmt 1 view .LVU107
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 376              		.loc 7 156 3 view .LVU108
 377              	.LBB118:
 378              	.LBB117:
 379              	.LBB116:
 380              	.LBB115:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 381              		.loc 7 140 28 is_stmt 0 view .LVU109
 382 0014 421A     		subs	r2, r0, r1
 383 0016 9210     		asrs	r2, r2, #2
 384              	.LBE115:
 385              	.LBE116:
 386              	.LBE117:
 387              	.LBE118:
 388              		.loc 1 207 8 view .LVU110
 389 0018 9A42     		cmp	r2, r3
 390 001a 11D0     		beq	.L6
 391              	.LVL18:
 392              	.LBB119:
 393              	.LBI119:
 194:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 394              		.loc 1 194 7 is_stmt 1 view .LVU111
 395              	.LBB120:
 208:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 396              		.loc 1 208 7 view .LVU112
 397              		.loc 1 208 11 is_stmt 0 view .LVU113
 398 001c A568     		ldr	r5, [r4, #8]
 399              	.LVL19:
 400              		.loc 1 208 18 view .LVU114
 401 001e 2A1D     		adds	r2, r5, #4
 402 0020 A260     		str	r2, [r4, #8]
 403              		.loc 1 208 21 view .LVU115
 404 0022 2E60     		str	r6, [r5]
 209:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 405              		.loc 1 209 7 is_stmt 1 view .LVU116
 406              		.loc 1 209 10 is_stmt 0 view .LVU117
 407 0024 9042     		cmp	r0, r2
 408 0026 00D8     		bhi	.L7
 210:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 409              		.loc 1 210 9 is_stmt 1 view .LVU118
 410              		.loc 1 210 20 is_stmt 0 view .LVU119
 411 0028 A160     		str	r1, [r4, #8]
 412              	.L7:
 211:lib/chibios/os/oslib/src/chmboxes.c ****       }
 212:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 413              		.loc 1 212 7 is_stmt 1 view .LVU120
 213:lib/chibios/os/oslib/src/chmboxes.c **** 
 214:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 215:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 414              		.loc 1 215 7 is_stmt 0 view .LVU121
 415 002a 2000     		movs	r0, r4
 212:lib/chibios/os/oslib/src/chmboxes.c **** 
 416              		.loc 1 212 15 view .LVU122
 417 002c 0133     		adds	r3, r3, #1
 418              		.loc 1 215 7 view .LVU123
 419 002e 2030     		adds	r0, r0, #32
 212:lib/chibios/os/oslib/src/chmboxes.c **** 
 420              		.loc 1 212 15 view .LVU124
 421 0030 2361     		str	r3, [r4, #16]
 422              		.loc 1 215 7 is_stmt 1 view .LVU125
 423 0032 0021     		movs	r1, #0
 424 0034 FFF7FEFF 		bl	chThdDequeueNextI
 425              	.LVL20:
 216:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 426              		.loc 1 216 7 view .LVU126
 427 0038 FFF7FEFF 		bl	chSchRescheduleS
 428              	.LVL21:
 217:lib/chibios/os/oslib/src/chmboxes.c **** 
 218:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 429              		.loc 1 218 7 view .LVU127
 216:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 430              		.loc 1 216 7 is_stmt 0 view .LVU128
 431 003c 0020     		movs	r0, #0
 432              	.LVL22:
 433              	.L4:
 216:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 434              		.loc 1 216 7 view .LVU129
 435              	.LBE120:
 436              	.LBE119:
 219:lib/chibios/os/oslib/src/chmboxes.c ****     }
 220:lib/chibios/os/oslib/src/chmboxes.c **** 
 221:lib/chibios/os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 222:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 223:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 224:lib/chibios/os/oslib/src/chmboxes.c **** 
 225:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 226:lib/chibios/os/oslib/src/chmboxes.c **** }
 437              		.loc 1 226 1 view .LVU130
 438              		@ sp needed
 439              	.LVL23:
 440              	.LVL24:
 441              		.loc 1 226 1 view .LVU131
 442 003e 70BD     		pop	{r4, r5, r6, pc}
 443              	.LVL25:
 444              	.L6:
 222:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 445              		.loc 1 222 5 is_stmt 1 view .LVU132
 222:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 446              		.loc 1 222 14 is_stmt 0 view .LVU133
 447 0040 2000     		movs	r0, r4
 448 0042 2900     		movs	r1, r5
 449 0044 1830     		adds	r0, r0, #24
 450 0046 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 451              	.LVL26:
 223:lib/chibios/os/oslib/src/chmboxes.c **** 
 452              		.loc 1 223 3 view .LVU134
 453 004a 0028     		cmp	r0, #0
 454 004c DCD0     		beq	.L8
 455 004e F6E7     		b	.L4
 456              	.LVL27:
 457              	.L9:
 203:lib/chibios/os/oslib/src/chmboxes.c ****     }
 458              		.loc 1 203 14 view .LVU135
 459 0050 0220     		movs	r0, #2
 460 0052 4042     		rsbs	r0, r0, #0
 461 0054 F3E7     		b	.L4
 462              		.cfi_endproc
 463              	.LFE158:
 465              		.section	.text.chMBPostTimeout,"ax",%progbits
 466              		.align	1
 467              		.global	chMBPostTimeout
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 471              		.fpu softvfp
 473              	chMBPostTimeout:
 474              	.LVL28:
 475              	.LFB157:
 165:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 476              		.loc 1 165 73 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 166:lib/chibios/os/oslib/src/chmboxes.c **** 
 480              		.loc 1 166 3 view .LVU137
 168:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 481              		.loc 1 168 3 view .LVU138
 482              	.LBB121:
 483              	.LBI121:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 484              		.loc 4 353 20 view .LVU139
 485              	.LBE121:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 486              		.loc 4 355 3 view .LVU140
 487              	.LBB129:
 488              	.LBB122:
 489              	.LBI122:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 490              		.loc 5 387 20 view .LVU141
 491              	.LBE122:
 492              	.LBE129:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 493              		.loc 5 389 3 view .LVU142
 494              	.LBB130:
 495              	.LBB127:
 496              	.LBB123:
 497              	.LBI123:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 498              		.loc 6 140 27 view .LVU143
 499              	.LBB124:
 500              		.loc 6 142 3 view .LVU144
 501              	.LBE124:
 502              	.LBE123:
 503              	.LBE127:
 504              	.LBE130:
 165:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 505              		.loc 1 165 73 is_stmt 0 view .LVU145
 506 0000 10B5     		push	{r4, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 510              	.LBB131:
 511              	.LBB128:
 512              	.LBB126:
 513              	.LBB125:
 514              		.loc 6 142 3 view .LVU146
 515              		.syntax divided
 516              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 517 0002 72B6     		cpsid i
 518              	@ 0 "" 2
 519              		.thumb
 520              		.syntax unified
 521              	.LBE125:
 522              	.LBE126:
 523              	.LBE128:
 524              	.LBE131:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 525              		.loc 4 356 34 is_stmt 1 view .LVU147
 357:./lib/chibios/os/rt/include/chsys.h **** }
 526              		.loc 4 357 20 view .LVU148
 169:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 527              		.loc 1 169 3 view .LVU149
 169:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 528              		.loc 1 169 12 is_stmt 0 view .LVU150
 529 0004 FFF7FEFF 		bl	chMBPostTimeoutS
 530              	.LVL29:
 170:lib/chibios/os/oslib/src/chmboxes.c **** 
 531              		.loc 1 170 3 is_stmt 1 view .LVU151
 532              	.LBB132:
 533              	.LBI132:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 534              		.loc 4 365 20 view .LVU152
 535              	.LBB133:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 536              		.loc 4 367 22 view .LVU153
 368:./lib/chibios/os/rt/include/chsys.h **** 
 537              		.loc 4 368 33 view .LVU154
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 538              		.loc 4 374 3 view .LVU155
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 539              		.loc 4 374 3 view .LVU156
 540              		.loc 4 378 3 view .LVU157
 541              	.LBB134:
 542              	.LBI134:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 543              		.loc 5 396 20 view .LVU158
 544              	.LBE134:
 545              	.LBE133:
 546              	.LBE132:
 547              		.loc 5 398 3 view .LVU159
 548              	.LBB139:
 549              	.LBB138:
 550              	.LBB137:
 551              	.LBB135:
 552              	.LBI135:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 553              		.loc 6 129 27 view .LVU160
 554              	.LBB136:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 555              		.loc 6 131 3 view .LVU161
 556              		.syntax divided
 557              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 558 0008 62B6     		cpsie i
 559              	@ 0 "" 2
 560              		.thumb
 561              		.syntax unified
 562              	.LBE136:
 563              	.LBE135:
 564              	.LBE137:
 565              	.LBE138:
 566              	.LBE139:
 172:lib/chibios/os/oslib/src/chmboxes.c **** }
 567              		.loc 1 172 3 view .LVU162
 173:lib/chibios/os/oslib/src/chmboxes.c **** 
 568              		.loc 1 173 1 is_stmt 0 view .LVU163
 569              		@ sp needed
 570 000a 10BD     		pop	{r4, pc}
 571              		.cfi_endproc
 572              	.LFE157:
 574              		.section	.text.chMBPostI,"ax",%progbits
 575              		.align	1
 576              		.global	chMBPostI
 577              		.syntax unified
 578              		.code	16
 579              		.thumb_func
 580              		.fpu softvfp
 582              	chMBPostI:
 583              	.LVL30:
 584              	.LFB159:
 227:lib/chibios/os/oslib/src/chmboxes.c **** 
 228:lib/chibios/os/oslib/src/chmboxes.c **** /**
 229:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 230:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 231:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 232:lib/chibios/os/oslib/src/chmboxes.c ****  *
 233:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 234:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 235:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 236:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 237:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 238:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 239:lib/chibios/os/oslib/src/chmboxes.c ****  *                      posted.
 240:lib/chibios/os/oslib/src/chmboxes.c ****  *
 241:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 242:lib/chibios/os/oslib/src/chmboxes.c ****  */
 243:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostI(mailbox_t *mbp, msg_t msg) {
 585              		.loc 1 243 44 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 244:lib/chibios/os/oslib/src/chmboxes.c **** 
 245:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 589              		.loc 1 245 21 view .LVU165
 246:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 590              		.loc 1 246 3 view .LVU166
 591              		.loc 1 246 3 view .LVU167
 247:lib/chibios/os/oslib/src/chmboxes.c **** 
 248:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 249:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 592              		.loc 1 249 3 view .LVU168
 243:lib/chibios/os/oslib/src/chmboxes.c **** 
 593              		.loc 1 243 44 is_stmt 0 view .LVU169
 594 0000 70B5     		push	{r4, r5, r6, lr}
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 4, -16
 597              		.cfi_offset 5, -12
 598              		.cfi_offset 6, -8
 599              		.cfi_offset 14, -4
 600              		.loc 1 249 6 view .LVU170
 601 0002 037D     		ldrb	r3, [r0, #20]
 602 0004 002B     		cmp	r3, #0
 603 0006 15D1     		bne	.L16
 250:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 251:lib/chibios/os/oslib/src/chmboxes.c ****   }
 252:lib/chibios/os/oslib/src/chmboxes.c **** 
 253:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 254:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 604              		.loc 1 254 3 is_stmt 1 view .LVU171
 605              	.LVL31:
 606              	.LBB144:
 607              	.LBI144:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 608              		.loc 7 167 22 view .LVU172
 609              	.LBB145:
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 610              		.loc 7 169 21 view .LVU173
 611              		.loc 7 171 3 view .LVU174
 612              	.LBB146:
 613              	.LBI146:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 614              		.loc 7 136 22 view .LVU175
 615              	.LBB147:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 616              		.loc 7 140 3 view .LVU176
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 617              		.loc 7 140 22 is_stmt 0 view .LVU177
 618 0008 4568     		ldr	r5, [r0, #4]
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 619              		.loc 7 140 33 view .LVU178
 620 000a 0468     		ldr	r4, [r0]
 621              	.LVL32:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 622              		.loc 7 140 33 view .LVU179
 623              	.LBE147:
 624              	.LBE146:
 625              		.loc 7 171 30 view .LVU180
 626 000c 0369     		ldr	r3, [r0, #16]
 627              	.LVL33:
 628              		.loc 7 171 30 view .LVU181
 629              	.LBE145:
 630              	.LBE144:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 631              		.loc 7 154 21 is_stmt 1 view .LVU182
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 632              		.loc 7 156 3 view .LVU183
 633              	.LBB151:
 634              	.LBB150:
 635              	.LBB149:
 636              	.LBB148:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 637              		.loc 7 140 28 is_stmt 0 view .LVU184
 638 000e 2A1B     		subs	r2, r5, r4
 639 0010 9210     		asrs	r2, r2, #2
 640              	.LBE148:
 641              	.LBE149:
 642              	.LBE150:
 643              	.LBE151:
 644              		.loc 1 254 6 view .LVU185
 645 0012 9A42     		cmp	r2, r3
 646 0014 11D0     		beq	.L17
 255:lib/chibios/os/oslib/src/chmboxes.c ****     *mbp->wrptr++ = msg;
 647              		.loc 1 255 5 is_stmt 1 view .LVU186
 648              		.loc 1 255 9 is_stmt 0 view .LVU187
 649 0016 8668     		ldr	r6, [r0, #8]
 650              		.loc 1 255 16 view .LVU188
 651 0018 321D     		adds	r2, r6, #4
 652 001a 8260     		str	r2, [r0, #8]
 653              		.loc 1 255 19 view .LVU189
 654 001c 3160     		str	r1, [r6]
 256:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->wrptr >= mbp->top) {
 655              		.loc 1 256 5 is_stmt 1 view .LVU190
 656              		.loc 1 256 8 is_stmt 0 view .LVU191
 657 001e AA42     		cmp	r2, r5
 658 0020 00D3     		bcc	.L15
 257:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->wrptr = mbp->buffer;
 659              		.loc 1 257 7 is_stmt 1 view .LVU192
 660              		.loc 1 257 18 is_stmt 0 view .LVU193
 661 0022 8460     		str	r4, [r0, #8]
 662              	.L15:
 258:lib/chibios/os/oslib/src/chmboxes.c ****     }
 259:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 663              		.loc 1 259 5 is_stmt 1 view .LVU194
 664              		.loc 1 259 13 is_stmt 0 view .LVU195
 665 0024 0133     		adds	r3, r3, #1
 666 0026 0361     		str	r3, [r0, #16]
 260:lib/chibios/os/oslib/src/chmboxes.c **** 
 261:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 262:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 667              		.loc 1 262 5 is_stmt 1 view .LVU196
 668 0028 0021     		movs	r1, #0
 669              	.LVL34:
 670              		.loc 1 262 5 is_stmt 0 view .LVU197
 671 002a 2030     		adds	r0, r0, #32
 672              	.LVL35:
 673              		.loc 1 262 5 view .LVU198
 674 002c FFF7FEFF 		bl	chThdDequeueNextI
 675              	.LVL36:
 263:lib/chibios/os/oslib/src/chmboxes.c **** 
 264:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 676              		.loc 1 264 5 is_stmt 1 view .LVU199
 677              		.loc 1 264 12 is_stmt 0 view .LVU200
 678 0030 0020     		movs	r0, #0
 679              	.LVL37:
 680              	.L13:
 265:lib/chibios/os/oslib/src/chmboxes.c ****   }
 266:lib/chibios/os/oslib/src/chmboxes.c **** 
 267:lib/chibios/os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 268:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 269:lib/chibios/os/oslib/src/chmboxes.c **** }
 681              		.loc 1 269 1 view .LVU201
 682              		@ sp needed
 683 0032 70BD     		pop	{r4, r5, r6, pc}
 684              	.LVL38:
 685              	.L16:
 250:lib/chibios/os/oslib/src/chmboxes.c ****   }
 686              		.loc 1 250 12 view .LVU202
 687 0034 0220     		movs	r0, #2
 688              	.LVL39:
 689              	.L18:
 268:lib/chibios/os/oslib/src/chmboxes.c **** }
 690              		.loc 1 268 10 view .LVU203
 691 0036 4042     		rsbs	r0, r0, #0
 692 0038 FBE7     		b	.L13
 693              	.LVL40:
 694              	.L17:
 268:lib/chibios/os/oslib/src/chmboxes.c **** }
 695              		.loc 1 268 10 view .LVU204
 696 003a 0120     		movs	r0, #1
 697              	.LVL41:
 268:lib/chibios/os/oslib/src/chmboxes.c **** }
 698              		.loc 1 268 10 view .LVU205
 699 003c FBE7     		b	.L18
 700              		.cfi_endproc
 701              	.LFE159:
 703              		.section	.text.chMBPostAheadTimeoutS,"ax",%progbits
 704              		.align	1
 705              		.global	chMBPostAheadTimeoutS
 706              		.syntax unified
 707              		.code	16
 708              		.thumb_func
 709              		.fpu softvfp
 711              	chMBPostAheadTimeoutS:
 712              	.LVL42:
 713              	.LFB161:
 270:lib/chibios/os/oslib/src/chmboxes.c **** 
 271:lib/chibios/os/oslib/src/chmboxes.c **** /**
 272:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 273:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 274:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 275:lib/chibios/os/oslib/src/chmboxes.c ****  *
 276:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 277:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 278:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 279:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 280:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 281:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 282:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 283:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 284:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 285:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 286:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 287:lib/chibios/os/oslib/src/chmboxes.c ****  *
 288:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 289:lib/chibios/os/oslib/src/chmboxes.c ****  */
 290:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 291:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 292:lib/chibios/os/oslib/src/chmboxes.c **** 
 293:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 294:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 295:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 296:lib/chibios/os/oslib/src/chmboxes.c **** 
 297:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 298:lib/chibios/os/oslib/src/chmboxes.c **** }
 299:lib/chibios/os/oslib/src/chmboxes.c **** 
 300:lib/chibios/os/oslib/src/chmboxes.c **** /**
 301:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 302:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 303:lib/chibios/os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 304:lib/chibios/os/oslib/src/chmboxes.c ****  *
 305:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 306:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 307:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 308:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 309:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 310:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 311:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 312:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 313:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 314:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 315:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 316:lib/chibios/os/oslib/src/chmboxes.c ****  *
 317:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 318:lib/chibios/os/oslib/src/chmboxes.c ****  */
 319:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 714              		.loc 1 319 79 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		.loc 1 319 79 is_stmt 0 view .LVU207
 719 0000 70B5     		push	{r4, r5, r6, lr}
 720              		.cfi_def_cfa_offset 16
 721              		.cfi_offset 4, -16
 722              		.cfi_offset 5, -12
 723              		.cfi_offset 6, -8
 724              		.cfi_offset 14, -4
 725 0002 0400     		movs	r4, r0
 726 0004 0E00     		movs	r6, r1
 727 0006 1500     		movs	r5, r2
 320:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 728              		.loc 1 320 3 is_stmt 1 view .LVU208
 321:lib/chibios/os/oslib/src/chmboxes.c **** 
 322:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 729              		.loc 1 322 21 view .LVU209
 323:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 730              		.loc 1 323 3 view .LVU210
 731              		.loc 1 323 3 view .LVU211
 732              	.LVL43:
 733              	.L24:
 324:lib/chibios/os/oslib/src/chmboxes.c **** 
 325:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 734              		.loc 1 325 3 view .LVU212
 326:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 327:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 735              		.loc 1 327 5 view .LVU213
 736              		.loc 1 327 8 is_stmt 0 view .LVU214
 737 0008 237D     		ldrb	r3, [r4, #20]
 738 000a 002B     		cmp	r3, #0
 739 000c 23D1     		bne	.L25
 328:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 329:lib/chibios/os/oslib/src/chmboxes.c ****     }
 330:lib/chibios/os/oslib/src/chmboxes.c **** 
 331:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 332:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 740              		.loc 1 332 5 is_stmt 1 view .LVU215
 741              	.LVL44:
 742              	.LBB158:
 743              	.LBI158:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 744              		.loc 7 167 22 view .LVU216
 745              	.LBB159:
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 746              		.loc 7 169 21 view .LVU217
 747              		.loc 7 171 3 view .LVU218
 748              	.LBB160:
 749              	.LBI160:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 750              		.loc 7 136 22 view .LVU219
 751              	.LBB161:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 752              		.loc 7 140 3 view .LVU220
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 753              		.loc 7 140 22 is_stmt 0 view .LVU221
 754 000e 6268     		ldr	r2, [r4, #4]
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 755              		.loc 7 140 33 view .LVU222
 756 0010 2068     		ldr	r0, [r4]
 757              	.LVL45:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 758              		.loc 7 140 33 view .LVU223
 759              	.LBE161:
 760              	.LBE160:
 761              		.loc 7 171 30 view .LVU224
 762 0012 2369     		ldr	r3, [r4, #16]
 763              	.LVL46:
 764              		.loc 7 171 30 view .LVU225
 765              	.LBE159:
 766              	.LBE158:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 767              		.loc 7 154 21 is_stmt 1 view .LVU226
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 768              		.loc 7 156 3 view .LVU227
 769              	.LBB165:
 770              	.LBB164:
 771              	.LBB163:
 772              	.LBB162:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 773              		.loc 7 140 28 is_stmt 0 view .LVU228
 774 0014 111A     		subs	r1, r2, r0
 775 0016 8910     		asrs	r1, r1, #2
 776              	.LBE162:
 777              	.LBE163:
 778              	.LBE164:
 779              	.LBE165:
 780              		.loc 1 332 8 view .LVU229
 781 0018 9942     		cmp	r1, r3
 782 001a 14D0     		beq	.L21
 783              	.LVL47:
 784              	.LBB166:
 785              	.LBI166:
 319:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 786              		.loc 1 319 7 is_stmt 1 view .LVU230
 787              	.LBB167:
 333:lib/chibios/os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 788              		.loc 1 333 7 view .LVU231
 789              		.loc 1 333 11 is_stmt 0 view .LVU232
 790 001c E168     		ldr	r1, [r4, #12]
 791 001e 0439     		subs	r1, r1, #4
 792              		.loc 1 333 10 view .LVU233
 793 0020 8842     		cmp	r0, r1
 794 0022 0DD8     		bhi	.L22
 795 0024 E160     		str	r1, [r4, #12]
 796              	.L23:
 334:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 335:lib/chibios/os/oslib/src/chmboxes.c ****       }
 336:lib/chibios/os/oslib/src/chmboxes.c ****       *mbp->rdptr = msg;
 797              		.loc 1 336 7 is_stmt 1 view .LVU234
 337:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 338:lib/chibios/os/oslib/src/chmboxes.c **** 
 339:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 340:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 798              		.loc 1 340 7 is_stmt 0 view .LVU235
 799 0026 2000     		movs	r0, r4
 336:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 800              		.loc 1 336 19 view .LVU236
 801 0028 E268     		ldr	r2, [r4, #12]
 337:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 802              		.loc 1 337 15 view .LVU237
 803 002a 0133     		adds	r3, r3, #1
 336:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 804              		.loc 1 336 19 view .LVU238
 805 002c 1660     		str	r6, [r2]
 337:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 806              		.loc 1 337 7 is_stmt 1 view .LVU239
 807              		.loc 1 340 7 is_stmt 0 view .LVU240
 808 002e 2030     		adds	r0, r0, #32
 337:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt++;
 809              		.loc 1 337 15 view .LVU241
 810 0030 2361     		str	r3, [r4, #16]
 811              		.loc 1 340 7 is_stmt 1 view .LVU242
 812 0032 0021     		movs	r1, #0
 813 0034 FFF7FEFF 		bl	chThdDequeueNextI
 814              	.LVL48:
 341:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 815              		.loc 1 341 7 view .LVU243
 816 0038 FFF7FEFF 		bl	chSchRescheduleS
 817              	.LVL49:
 342:lib/chibios/os/oslib/src/chmboxes.c **** 
 343:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 818              		.loc 1 343 7 view .LVU244
 341:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 819              		.loc 1 341 7 is_stmt 0 view .LVU245
 820 003c 0020     		movs	r0, #0
 821              	.LVL50:
 822              	.L19:
 341:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 823              		.loc 1 341 7 view .LVU246
 824              	.LBE167:
 825              	.LBE166:
 344:lib/chibios/os/oslib/src/chmboxes.c ****     }
 345:lib/chibios/os/oslib/src/chmboxes.c **** 
 346:lib/chibios/os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 347:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 348:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 349:lib/chibios/os/oslib/src/chmboxes.c **** 
 350:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 351:lib/chibios/os/oslib/src/chmboxes.c **** }
 826              		.loc 1 351 1 view .LVU247
 827              		@ sp needed
 828              	.LVL51:
 829              	.LVL52:
 830              	.LVL53:
 831              		.loc 1 351 1 view .LVU248
 832 003e 70BD     		pop	{r4, r5, r6, pc}
 833              	.LVL54:
 834              	.L22:
 835              	.LBB169:
 836              	.LBB168:
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 837              		.loc 1 334 9 is_stmt 1 view .LVU249
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 838              		.loc 1 334 31 is_stmt 0 view .LVU250
 839 0040 043A     		subs	r2, r2, #4
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 840              		.loc 1 334 20 view .LVU251
 841 0042 E260     		str	r2, [r4, #12]
 842 0044 EFE7     		b	.L23
 843              	.LVL55:
 844              	.L21:
 334:lib/chibios/os/oslib/src/chmboxes.c ****       }
 845              		.loc 1 334 20 view .LVU252
 846              	.LBE168:
 847              	.LBE169:
 347:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 848              		.loc 1 347 5 is_stmt 1 view .LVU253
 347:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 849              		.loc 1 347 14 is_stmt 0 view .LVU254
 850 0046 2000     		movs	r0, r4
 851 0048 2900     		movs	r1, r5
 852 004a 1830     		adds	r0, r0, #24
 853 004c FFF7FEFF 		bl	chThdEnqueueTimeoutS
 854              	.LVL56:
 348:lib/chibios/os/oslib/src/chmboxes.c **** 
 855              		.loc 1 348 3 view .LVU255
 856 0050 0028     		cmp	r0, #0
 857 0052 D9D0     		beq	.L24
 858 0054 F3E7     		b	.L19
 859              	.LVL57:
 860              	.L25:
 328:lib/chibios/os/oslib/src/chmboxes.c ****     }
 861              		.loc 1 328 14 view .LVU256
 862 0056 0220     		movs	r0, #2
 863 0058 4042     		rsbs	r0, r0, #0
 864 005a F0E7     		b	.L19
 865              		.cfi_endproc
 866              	.LFE161:
 868              		.section	.text.chMBPostAheadTimeout,"ax",%progbits
 869              		.align	1
 870              		.global	chMBPostAheadTimeout
 871              		.syntax unified
 872              		.code	16
 873              		.thumb_func
 874              		.fpu softvfp
 876              	chMBPostAheadTimeout:
 877              	.LVL58:
 878              	.LFB160:
 290:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 879              		.loc 1 290 78 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 291:lib/chibios/os/oslib/src/chmboxes.c **** 
 883              		.loc 1 291 3 view .LVU258
 293:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 884              		.loc 1 293 3 view .LVU259
 885              	.LBB170:
 886              	.LBI170:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 887              		.loc 4 353 20 view .LVU260
 888              	.LBE170:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 889              		.loc 4 355 3 view .LVU261
 890              	.LBB178:
 891              	.LBB171:
 892              	.LBI171:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 893              		.loc 5 387 20 view .LVU262
 894              	.LBE171:
 895              	.LBE178:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 896              		.loc 5 389 3 view .LVU263
 897              	.LBB179:
 898              	.LBB176:
 899              	.LBB172:
 900              	.LBI172:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 901              		.loc 6 140 27 view .LVU264
 902              	.LBB173:
 903              		.loc 6 142 3 view .LVU265
 904              	.LBE173:
 905              	.LBE172:
 906              	.LBE176:
 907              	.LBE179:
 290:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 908              		.loc 1 290 78 is_stmt 0 view .LVU266
 909 0000 10B5     		push	{r4, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 4, -8
 912              		.cfi_offset 14, -4
 913              	.LBB180:
 914              	.LBB177:
 915              	.LBB175:
 916              	.LBB174:
 917              		.loc 6 142 3 view .LVU267
 918              		.syntax divided
 919              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 920 0002 72B6     		cpsid i
 921              	@ 0 "" 2
 922              		.thumb
 923              		.syntax unified
 924              	.LBE174:
 925              	.LBE175:
 926              	.LBE177:
 927              	.LBE180:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 928              		.loc 4 356 34 is_stmt 1 view .LVU268
 357:./lib/chibios/os/rt/include/chsys.h **** }
 929              		.loc 4 357 20 view .LVU269
 294:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 930              		.loc 1 294 3 view .LVU270
 294:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 931              		.loc 1 294 12 is_stmt 0 view .LVU271
 932 0004 FFF7FEFF 		bl	chMBPostAheadTimeoutS
 933              	.LVL59:
 295:lib/chibios/os/oslib/src/chmboxes.c **** 
 934              		.loc 1 295 3 is_stmt 1 view .LVU272
 935              	.LBB181:
 936              	.LBI181:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 937              		.loc 4 365 20 view .LVU273
 938              	.LBB182:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 939              		.loc 4 367 22 view .LVU274
 368:./lib/chibios/os/rt/include/chsys.h **** 
 940              		.loc 4 368 33 view .LVU275
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 941              		.loc 4 374 3 view .LVU276
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 942              		.loc 4 374 3 view .LVU277
 943              		.loc 4 378 3 view .LVU278
 944              	.LBB183:
 945              	.LBI183:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 946              		.loc 5 396 20 view .LVU279
 947              	.LBE183:
 948              	.LBE182:
 949              	.LBE181:
 950              		.loc 5 398 3 view .LVU280
 951              	.LBB188:
 952              	.LBB187:
 953              	.LBB186:
 954              	.LBB184:
 955              	.LBI184:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 956              		.loc 6 129 27 view .LVU281
 957              	.LBB185:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 958              		.loc 6 131 3 view .LVU282
 959              		.syntax divided
 960              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 961 0008 62B6     		cpsie i
 962              	@ 0 "" 2
 963              		.thumb
 964              		.syntax unified
 965              	.LBE185:
 966              	.LBE184:
 967              	.LBE186:
 968              	.LBE187:
 969              	.LBE188:
 297:lib/chibios/os/oslib/src/chmboxes.c **** }
 970              		.loc 1 297 3 view .LVU283
 298:lib/chibios/os/oslib/src/chmboxes.c **** 
 971              		.loc 1 298 1 is_stmt 0 view .LVU284
 972              		@ sp needed
 973 000a 10BD     		pop	{r4, pc}
 974              		.cfi_endproc
 975              	.LFE160:
 977              		.section	.text.chMBPostAheadI,"ax",%progbits
 978              		.align	1
 979              		.global	chMBPostAheadI
 980              		.syntax unified
 981              		.code	16
 982              		.thumb_func
 983              		.fpu softvfp
 985              	chMBPostAheadI:
 986              	.LVL60:
 987              	.LFB162:
 352:lib/chibios/os/oslib/src/chmboxes.c **** 
 353:lib/chibios/os/oslib/src/chmboxes.c **** /**
 354:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 355:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 356:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 357:lib/chibios/os/oslib/src/chmboxes.c ****  *
 358:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 359:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 360:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 361:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 362:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 363:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 364:lib/chibios/os/oslib/src/chmboxes.c ****  *                      posted.
 365:lib/chibios/os/oslib/src/chmboxes.c ****  *
 366:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 367:lib/chibios/os/oslib/src/chmboxes.c ****  */
 368:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg) {
 988              		.loc 1 368 49 is_stmt 1 view -0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 369:lib/chibios/os/oslib/src/chmboxes.c **** 
 370:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 992              		.loc 1 370 21 view .LVU286
 371:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 993              		.loc 1 371 3 view .LVU287
 994              		.loc 1 371 3 view .LVU288
 372:lib/chibios/os/oslib/src/chmboxes.c **** 
 373:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 374:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 995              		.loc 1 374 3 view .LVU289
 368:lib/chibios/os/oslib/src/chmboxes.c **** 
 996              		.loc 1 368 49 is_stmt 0 view .LVU290
 997 0000 70B5     		push	{r4, r5, r6, lr}
 998              		.cfi_def_cfa_offset 16
 999              		.cfi_offset 4, -16
 1000              		.cfi_offset 5, -12
 1001              		.cfi_offset 6, -8
 1002              		.cfi_offset 14, -4
 1003              		.loc 1 374 6 view .LVU291
 1004 0002 037D     		ldrb	r3, [r0, #20]
 1005 0004 002B     		cmp	r3, #0
 1006 0006 18D1     		bne	.L33
 375:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 376:lib/chibios/os/oslib/src/chmboxes.c ****   }
 377:lib/chibios/os/oslib/src/chmboxes.c **** 
 378:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 379:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 1007              		.loc 1 379 3 is_stmt 1 view .LVU292
 1008              	.LVL61:
 1009              	.LBB193:
 1010              	.LBI193:
 167:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1011              		.loc 7 167 22 view .LVU293
 1012              	.LBB194:
 169:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1013              		.loc 7 169 21 view .LVU294
 1014              		.loc 7 171 3 view .LVU295
 1015              	.LBB195:
 1016              	.LBI195:
 136:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1017              		.loc 7 136 22 view .LVU296
 1018              	.LBB196:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 1019              		.loc 7 140 3 view .LVU297
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 1020              		.loc 7 140 22 is_stmt 0 view .LVU298
 1021 0008 4268     		ldr	r2, [r0, #4]
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 1022              		.loc 7 140 33 view .LVU299
 1023 000a 0568     		ldr	r5, [r0]
 1024              	.LVL62:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 1025              		.loc 7 140 33 view .LVU300
 1026              	.LBE196:
 1027              	.LBE195:
 1028              		.loc 7 171 30 view .LVU301
 1029 000c 0369     		ldr	r3, [r0, #16]
 1030              	.LVL63:
 1031              		.loc 7 171 30 view .LVU302
 1032              	.LBE194:
 1033              	.LBE193:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1034              		.loc 7 154 21 is_stmt 1 view .LVU303
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1035              		.loc 7 156 3 view .LVU304
 1036              	.LBB200:
 1037              	.LBB199:
 1038              	.LBB198:
 1039              	.LBB197:
 140:./lib/chibios/os/oslib/include/chmboxes.h ****   /*lint -restore*/
 1040              		.loc 7 140 28 is_stmt 0 view .LVU305
 1041 000e 541B     		subs	r4, r2, r5
 1042 0010 A410     		asrs	r4, r4, #2
 1043              	.LBE197:
 1044              	.LBE198:
 1045              	.LBE199:
 1046              	.LBE200:
 1047              		.loc 1 379 6 view .LVU306
 1048 0012 9C42     		cmp	r4, r3
 1049 0014 14D0     		beq	.L34
 380:lib/chibios/os/oslib/src/chmboxes.c ****     if (--mbp->rdptr < mbp->buffer) {
 1050              		.loc 1 380 5 is_stmt 1 view .LVU307
 1051              		.loc 1 380 9 is_stmt 0 view .LVU308
 1052 0016 C468     		ldr	r4, [r0, #12]
 1053 0018 043C     		subs	r4, r4, #4
 1054              		.loc 1 380 8 view .LVU309
 1055 001a AC42     		cmp	r4, r5
 1056 001c 0AD3     		bcc	.L31
 1057 001e C460     		str	r4, [r0, #12]
 1058              	.L32:
 381:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->top - 1;
 382:lib/chibios/os/oslib/src/chmboxes.c ****     }
 383:lib/chibios/os/oslib/src/chmboxes.c ****     *mbp->rdptr = msg;
 1059              		.loc 1 383 5 is_stmt 1 view .LVU310
 1060              		.loc 1 383 17 is_stmt 0 view .LVU311
 1061 0020 C268     		ldr	r2, [r0, #12]
 384:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 1062              		.loc 1 384 13 view .LVU312
 1063 0022 0133     		adds	r3, r3, #1
 383:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt++;
 1064              		.loc 1 383 17 view .LVU313
 1065 0024 1160     		str	r1, [r2]
 1066              		.loc 1 384 5 is_stmt 1 view .LVU314
 1067              		.loc 1 384 13 is_stmt 0 view .LVU315
 1068 0026 0361     		str	r3, [r0, #16]
 385:lib/chibios/os/oslib/src/chmboxes.c **** 
 386:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 387:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 1069              		.loc 1 387 5 is_stmt 1 view .LVU316
 1070 0028 0021     		movs	r1, #0
 1071              	.LVL64:
 1072              		.loc 1 387 5 is_stmt 0 view .LVU317
 1073 002a 2030     		adds	r0, r0, #32
 1074              	.LVL65:
 1075              		.loc 1 387 5 view .LVU318
 1076 002c FFF7FEFF 		bl	chThdDequeueNextI
 1077              	.LVL66:
 388:lib/chibios/os/oslib/src/chmboxes.c **** 
 389:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 1078              		.loc 1 389 5 is_stmt 1 view .LVU319
 1079              		.loc 1 389 12 is_stmt 0 view .LVU320
 1080 0030 0020     		movs	r0, #0
 1081              	.LVL67:
 1082              	.L29:
 390:lib/chibios/os/oslib/src/chmboxes.c ****   }
 391:lib/chibios/os/oslib/src/chmboxes.c **** 
 392:lib/chibios/os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 393:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 394:lib/chibios/os/oslib/src/chmboxes.c **** }
 1083              		.loc 1 394 1 view .LVU321
 1084              		@ sp needed
 1085 0032 70BD     		pop	{r4, r5, r6, pc}
 1086              	.LVL68:
 1087              	.L31:
 381:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1088              		.loc 1 381 7 is_stmt 1 view .LVU322
 381:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1089              		.loc 1 381 29 is_stmt 0 view .LVU323
 1090 0034 043A     		subs	r2, r2, #4
 381:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1091              		.loc 1 381 18 view .LVU324
 1092 0036 C260     		str	r2, [r0, #12]
 1093 0038 F2E7     		b	.L32
 1094              	.LVL69:
 1095              	.L33:
 375:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1096              		.loc 1 375 12 view .LVU325
 1097 003a 0220     		movs	r0, #2
 1098              	.LVL70:
 1099              	.L35:
 393:lib/chibios/os/oslib/src/chmboxes.c **** }
 1100              		.loc 1 393 10 view .LVU326
 1101 003c 4042     		rsbs	r0, r0, #0
 1102 003e F8E7     		b	.L29
 1103              	.LVL71:
 1104              	.L34:
 393:lib/chibios/os/oslib/src/chmboxes.c **** }
 1105              		.loc 1 393 10 view .LVU327
 1106 0040 0120     		movs	r0, #1
 1107              	.LVL72:
 393:lib/chibios/os/oslib/src/chmboxes.c **** }
 1108              		.loc 1 393 10 view .LVU328
 1109 0042 FBE7     		b	.L35
 1110              		.cfi_endproc
 1111              	.LFE162:
 1113              		.section	.text.chMBFetchTimeoutS,"ax",%progbits
 1114              		.align	1
 1115              		.global	chMBFetchTimeoutS
 1116              		.syntax unified
 1117              		.code	16
 1118              		.thumb_func
 1119              		.fpu softvfp
 1121              	chMBFetchTimeoutS:
 1122              	.LVL73:
 1123              	.LFB164:
 395:lib/chibios/os/oslib/src/chmboxes.c **** 
 396:lib/chibios/os/oslib/src/chmboxes.c **** /**
 397:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 398:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 399:lib/chibios/os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 400:lib/chibios/os/oslib/src/chmboxes.c ****  *
 401:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 402:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 403:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 404:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 405:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 406:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 407:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 408:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 409:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 410:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 411:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 412:lib/chibios/os/oslib/src/chmboxes.c ****  *
 413:lib/chibios/os/oslib/src/chmboxes.c ****  * @api
 414:lib/chibios/os/oslib/src/chmboxes.c ****  */
 415:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 416:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 417:lib/chibios/os/oslib/src/chmboxes.c **** 
 418:lib/chibios/os/oslib/src/chmboxes.c ****   chSysLock();
 419:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 420:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 421:lib/chibios/os/oslib/src/chmboxes.c **** 
 422:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 423:lib/chibios/os/oslib/src/chmboxes.c **** }
 424:lib/chibios/os/oslib/src/chmboxes.c **** 
 425:lib/chibios/os/oslib/src/chmboxes.c **** /**
 426:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 427:lib/chibios/os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 428:lib/chibios/os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 429:lib/chibios/os/oslib/src/chmboxes.c ****  *
 430:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 431:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 432:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 433:lib/chibios/os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 434:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 435:lib/chibios/os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 436:lib/chibios/os/oslib/src/chmboxes.c ****  *                      .
 437:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 438:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 439:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 440:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 441:lib/chibios/os/oslib/src/chmboxes.c ****  *
 442:lib/chibios/os/oslib/src/chmboxes.c ****  * @sclass
 443:lib/chibios/os/oslib/src/chmboxes.c ****  */
 444:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 1124              		.loc 1 444 77 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		.loc 1 444 77 is_stmt 0 view .LVU330
 1129 0000 70B5     		push	{r4, r5, r6, lr}
 1130              		.cfi_def_cfa_offset 16
 1131              		.cfi_offset 4, -16
 1132              		.cfi_offset 5, -12
 1133              		.cfi_offset 6, -8
 1134              		.cfi_offset 14, -4
 1135 0002 0400     		movs	r4, r0
 1136 0004 0E00     		movs	r6, r1
 1137 0006 1500     		movs	r5, r2
 445:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1138              		.loc 1 445 3 is_stmt 1 view .LVU331
 446:lib/chibios/os/oslib/src/chmboxes.c **** 
 447:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 1139              		.loc 1 447 21 view .LVU332
 448:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1140              		.loc 1 448 3 view .LVU333
 1141              		.loc 1 448 3 view .LVU334
 1142              	.LVL74:
 1143              	.L40:
 449:lib/chibios/os/oslib/src/chmboxes.c **** 
 450:lib/chibios/os/oslib/src/chmboxes.c ****   do {
 1144              		.loc 1 450 3 view .LVU335
 451:lib/chibios/os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 452:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 1145              		.loc 1 452 5 view .LVU336
 1146              		.loc 1 452 8 is_stmt 0 view .LVU337
 1147 0008 237D     		ldrb	r3, [r4, #20]
 1148 000a 002B     		cmp	r3, #0
 1149 000c 1FD1     		bne	.L41
 453:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_RESET;
 454:lib/chibios/os/oslib/src/chmboxes.c ****     }
 455:lib/chibios/os/oslib/src/chmboxes.c **** 
 456:lib/chibios/os/oslib/src/chmboxes.c ****     /* Is there a message in queue? if so then fetch.*/
 457:lib/chibios/os/oslib/src/chmboxes.c ****     if (chMBGetUsedCountI(mbp) > (size_t)0) {
 1150              		.loc 1 457 5 is_stmt 1 view .LVU338
 1151              		.loc 1 457 9 is_stmt 0 view .LVU339
 1152 000e 2369     		ldr	r3, [r4, #16]
 1153              	.LVL75:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1154              		.loc 7 154 21 is_stmt 1 view .LVU340
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1155              		.loc 7 156 3 view .LVU341
 1156              		.loc 1 457 8 is_stmt 0 view .LVU342
 1157 0010 002B     		cmp	r3, #0
 1158 0012 14D0     		beq	.L38
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1159              		.loc 1 458 7 is_stmt 1 view .LVU343
 459:lib/chibios/os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1160              		.loc 1 459 7 view .LVU344
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1161              		.loc 1 458 19 is_stmt 0 view .LVU345
 1162 0014 E168     		ldr	r1, [r4, #12]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1163              		.loc 1 458 26 view .LVU346
 1164 0016 0A1D     		adds	r2, r1, #4
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1165              		.loc 1 458 15 view .LVU347
 1166 0018 0968     		ldr	r1, [r1]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1167              		.loc 1 458 26 view .LVU348
 1168 001a E260     		str	r2, [r4, #12]
 458:lib/chibios/os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1169              		.loc 1 458 15 view .LVU349
 1170 001c 3160     		str	r1, [r6]
 1171              		.loc 1 459 10 view .LVU350
 1172 001e 6168     		ldr	r1, [r4, #4]
 1173 0020 8A42     		cmp	r2, r1
 1174 0022 01D3     		bcc	.L39
 460:lib/chibios/os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 1175              		.loc 1 460 9 is_stmt 1 view .LVU351
 1176              		.loc 1 460 20 is_stmt 0 view .LVU352
 1177 0024 2268     		ldr	r2, [r4]
 1178 0026 E260     		str	r2, [r4, #12]
 1179              	.L39:
 461:lib/chibios/os/oslib/src/chmboxes.c ****       }
 462:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->cnt--;
 1180              		.loc 1 462 7 is_stmt 1 view .LVU353
 463:lib/chibios/os/oslib/src/chmboxes.c **** 
 464:lib/chibios/os/oslib/src/chmboxes.c ****       /* If there is a writer waiting then makes it ready.*/
 465:lib/chibios/os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qw, MSG_OK);
 1181              		.loc 1 465 7 is_stmt 0 view .LVU354
 1182 0028 2000     		movs	r0, r4
 462:lib/chibios/os/oslib/src/chmboxes.c **** 
 1183              		.loc 1 462 15 view .LVU355
 1184 002a 013B     		subs	r3, r3, #1
 1185              		.loc 1 465 7 view .LVU356
 1186 002c 1830     		adds	r0, r0, #24
 462:lib/chibios/os/oslib/src/chmboxes.c **** 
 1187              		.loc 1 462 15 view .LVU357
 1188 002e 2361     		str	r3, [r4, #16]
 1189              		.loc 1 465 7 is_stmt 1 view .LVU358
 1190 0030 0021     		movs	r1, #0
 1191 0032 FFF7FEFF 		bl	chThdDequeueNextI
 1192              	.LVL76:
 466:lib/chibios/os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 1193              		.loc 1 466 7 view .LVU359
 1194 0036 FFF7FEFF 		bl	chSchRescheduleS
 1195              	.LVL77:
 467:lib/chibios/os/oslib/src/chmboxes.c **** 
 468:lib/chibios/os/oslib/src/chmboxes.c ****       return MSG_OK;
 1196              		.loc 1 468 7 view .LVU360
 1197              		.loc 1 468 14 is_stmt 0 view .LVU361
 1198 003a 0020     		movs	r0, #0
 1199              	.LVL78:
 1200              	.L36:
 469:lib/chibios/os/oslib/src/chmboxes.c ****     }
 470:lib/chibios/os/oslib/src/chmboxes.c **** 
 471:lib/chibios/os/oslib/src/chmboxes.c ****     /* No message in the queue, waiting for a message to become available.*/
 472:lib/chibios/os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qr, timeout);
 473:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 474:lib/chibios/os/oslib/src/chmboxes.c **** 
 475:lib/chibios/os/oslib/src/chmboxes.c ****   return rdymsg;
 476:lib/chibios/os/oslib/src/chmboxes.c **** }
 1201              		.loc 1 476 1 view .LVU362
 1202              		@ sp needed
 1203              	.LVL79:
 1204              	.LVL80:
 1205              	.LVL81:
 1206              		.loc 1 476 1 view .LVU363
 1207 003c 70BD     		pop	{r4, r5, r6, pc}
 1208              	.LVL82:
 1209              	.L38:
 472:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1210              		.loc 1 472 5 is_stmt 1 view .LVU364
 472:lib/chibios/os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1211              		.loc 1 472 14 is_stmt 0 view .LVU365
 1212 003e 2000     		movs	r0, r4
 1213 0040 2900     		movs	r1, r5
 1214 0042 2030     		adds	r0, r0, #32
 1215 0044 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1216              	.LVL83:
 473:lib/chibios/os/oslib/src/chmboxes.c **** 
 1217              		.loc 1 473 3 view .LVU366
 1218 0048 0028     		cmp	r0, #0
 1219 004a DDD0     		beq	.L40
 1220 004c F6E7     		b	.L36
 1221              	.LVL84:
 1222              	.L41:
 453:lib/chibios/os/oslib/src/chmboxes.c ****     }
 1223              		.loc 1 453 14 view .LVU367
 1224 004e 0220     		movs	r0, #2
 1225 0050 4042     		rsbs	r0, r0, #0
 1226 0052 F3E7     		b	.L36
 1227              		.cfi_endproc
 1228              	.LFE164:
 1230              		.section	.text.chMBFetchTimeout,"ax",%progbits
 1231              		.align	1
 1232              		.global	chMBFetchTimeout
 1233              		.syntax unified
 1234              		.code	16
 1235              		.thumb_func
 1236              		.fpu softvfp
 1238              	chMBFetchTimeout:
 1239              	.LVL85:
 1240              	.LFB163:
 415:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1241              		.loc 1 415 76 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 416:lib/chibios/os/oslib/src/chmboxes.c **** 
 1245              		.loc 1 416 3 view .LVU369
 418:lib/chibios/os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 1246              		.loc 1 418 3 view .LVU370
 1247              	.LBB201:
 1248              	.LBI201:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1249              		.loc 4 353 20 view .LVU371
 1250              	.LBE201:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1251              		.loc 4 355 3 view .LVU372
 1252              	.LBB209:
 1253              	.LBB202:
 1254              	.LBI202:
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1255              		.loc 5 387 20 view .LVU373
 1256              	.LBE202:
 1257              	.LBE209:
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** }
 1258              		.loc 5 389 3 view .LVU374
 1259              	.LBB210:
 1260              	.LBB207:
 1261              	.LBB203:
 1262              	.LBI203:
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1263              		.loc 6 140 27 view .LVU375
 1264              	.LBB204:
 1265              		.loc 6 142 3 view .LVU376
 1266              	.LBE204:
 1267              	.LBE203:
 1268              	.LBE207:
 1269              	.LBE210:
 415:lib/chibios/os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1270              		.loc 1 415 76 is_stmt 0 view .LVU377
 1271 0000 10B5     		push	{r4, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 4, -8
 1274              		.cfi_offset 14, -4
 1275              	.LBB211:
 1276              	.LBB208:
 1277              	.LBB206:
 1278              	.LBB205:
 1279              		.loc 6 142 3 view .LVU378
 1280              		.syntax divided
 1281              	@ 142 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1282 0002 72B6     		cpsid i
 1283              	@ 0 "" 2
 1284              		.thumb
 1285              		.syntax unified
 1286              	.LBE205:
 1287              	.LBE206:
 1288              	.LBE208:
 1289              	.LBE211:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1290              		.loc 4 356 34 is_stmt 1 view .LVU379
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1291              		.loc 4 357 20 view .LVU380
 419:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 1292              		.loc 1 419 3 view .LVU381
 419:lib/chibios/os/oslib/src/chmboxes.c ****   chSysUnlock();
 1293              		.loc 1 419 12 is_stmt 0 view .LVU382
 1294 0004 FFF7FEFF 		bl	chMBFetchTimeoutS
 1295              	.LVL86:
 420:lib/chibios/os/oslib/src/chmboxes.c **** 
 1296              		.loc 1 420 3 is_stmt 1 view .LVU383
 1297              	.LBB212:
 1298              	.LBI212:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1299              		.loc 4 365 20 view .LVU384
 1300              	.LBB213:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1301              		.loc 4 367 22 view .LVU385
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1302              		.loc 4 368 33 view .LVU386
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1303              		.loc 4 374 3 view .LVU387
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1304              		.loc 4 374 3 view .LVU388
 1305              		.loc 4 378 3 view .LVU389
 1306              	.LBB214:
 1307              	.LBI214:
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h **** 
 1308              		.loc 5 396 20 view .LVU390
 1309              	.LBE214:
 1310              	.LBE213:
 1311              	.LBE212:
 1312              		.loc 5 398 3 view .LVU391
 1313              	.LBB219:
 1314              	.LBB218:
 1315              	.LBB217:
 1316              	.LBB215:
 1317              	.LBI215:
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1318              		.loc 6 129 27 view .LVU392
 1319              	.LBB216:
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 1320              		.loc 6 131 3 view .LVU393
 1321              		.syntax divided
 1322              	@ 131 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1323 0008 62B6     		cpsie i
 1324              	@ 0 "" 2
 1325              		.thumb
 1326              		.syntax unified
 1327              	.LBE216:
 1328              	.LBE215:
 1329              	.LBE217:
 1330              	.LBE218:
 1331              	.LBE219:
 422:lib/chibios/os/oslib/src/chmboxes.c **** }
 1332              		.loc 1 422 3 view .LVU394
 423:lib/chibios/os/oslib/src/chmboxes.c **** 
 1333              		.loc 1 423 1 is_stmt 0 view .LVU395
 1334              		@ sp needed
 1335 000a 10BD     		pop	{r4, pc}
 1336              		.cfi_endproc
 1337              	.LFE163:
 1339              		.section	.text.chMBFetchI,"ax",%progbits
 1340              		.align	1
 1341              		.global	chMBFetchI
 1342              		.syntax unified
 1343              		.code	16
 1344              		.thumb_func
 1345              		.fpu softvfp
 1347              	chMBFetchI:
 1348              	.LVL87:
 1349              	.LFB165:
 477:lib/chibios/os/oslib/src/chmboxes.c **** 
 478:lib/chibios/os/oslib/src/chmboxes.c **** /**
 479:lib/chibios/os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 480:lib/chibios/os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 481:lib/chibios/os/oslib/src/chmboxes.c ****  *          condition if the queue is empty.
 482:lib/chibios/os/oslib/src/chmboxes.c ****  *
 483:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 484:lib/chibios/os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 485:lib/chibios/os/oslib/src/chmboxes.c ****  * @return              The operation status.
 486:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 487:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 488:lib/chibios/os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is empty and a message cannot be
 489:lib/chibios/os/oslib/src/chmboxes.c ****  *                      fetched.
 490:lib/chibios/os/oslib/src/chmboxes.c ****  *
 491:lib/chibios/os/oslib/src/chmboxes.c ****  * @iclass
 492:lib/chibios/os/oslib/src/chmboxes.c ****  */
 493:lib/chibios/os/oslib/src/chmboxes.c **** msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp) {
 1350              		.loc 1 493 47 is_stmt 1 view -0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 494:lib/chibios/os/oslib/src/chmboxes.c **** 
 495:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 1354              		.loc 1 495 21 view .LVU397
 496:lib/chibios/os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1355              		.loc 1 496 3 view .LVU398
 1356              		.loc 1 496 3 view .LVU399
 497:lib/chibios/os/oslib/src/chmboxes.c **** 
 498:lib/chibios/os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 499:lib/chibios/os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 1357              		.loc 1 499 3 view .LVU400
 493:lib/chibios/os/oslib/src/chmboxes.c **** 
 1358              		.loc 1 493 47 is_stmt 0 view .LVU401
 1359 0000 10B5     		push	{r4, lr}
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 4, -8
 1362              		.cfi_offset 14, -4
 1363              		.loc 1 499 6 view .LVU402
 1364 0002 037D     		ldrb	r3, [r0, #20]
 1365 0004 002B     		cmp	r3, #0
 1366 0006 14D1     		bne	.L48
 500:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_RESET;
 501:lib/chibios/os/oslib/src/chmboxes.c ****   }
 502:lib/chibios/os/oslib/src/chmboxes.c **** 
 503:lib/chibios/os/oslib/src/chmboxes.c ****   /* Is there a message in queue? if so then fetch.*/
 504:lib/chibios/os/oslib/src/chmboxes.c ****   if (chMBGetUsedCountI(mbp) > (size_t)0) {
 1367              		.loc 1 504 3 is_stmt 1 view .LVU403
 1368              		.loc 1 504 7 is_stmt 0 view .LVU404
 1369 0008 0369     		ldr	r3, [r0, #16]
 1370              	.LVL88:
 154:./lib/chibios/os/oslib/include/chmboxes.h **** 
 1371              		.loc 7 154 21 is_stmt 1 view .LVU405
 156:./lib/chibios/os/oslib/include/chmboxes.h **** }
 1372              		.loc 7 156 3 view .LVU406
 1373              		.loc 1 504 6 is_stmt 0 view .LVU407
 1374 000a 002B     		cmp	r3, #0
 1375 000c 14D0     		beq	.L49
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1376              		.loc 1 505 5 is_stmt 1 view .LVU408
 506:lib/chibios/os/oslib/src/chmboxes.c ****     if (mbp->rdptr >= mbp->top) {
 1377              		.loc 1 506 5 view .LVU409
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1378              		.loc 1 505 17 is_stmt 0 view .LVU410
 1379 000e C468     		ldr	r4, [r0, #12]
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1380              		.loc 1 505 24 view .LVU411
 1381 0010 221D     		adds	r2, r4, #4
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1382              		.loc 1 505 13 view .LVU412
 1383 0012 2468     		ldr	r4, [r4]
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1384              		.loc 1 505 24 view .LVU413
 1385 0014 C260     		str	r2, [r0, #12]
 505:lib/chibios/os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1386              		.loc 1 505 13 view .LVU414
 1387 0016 0C60     		str	r4, [r1]
 1388              		.loc 1 506 8 view .LVU415
 1389 0018 4168     		ldr	r1, [r0, #4]
 1390              	.LVL89:
 1391              		.loc 1 506 8 view .LVU416
 1392 001a 8A42     		cmp	r2, r1
 1393 001c 01D3     		bcc	.L47
 507:lib/chibios/os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->buffer;
 1394              		.loc 1 507 7 is_stmt 1 view .LVU417
 1395              		.loc 1 507 18 is_stmt 0 view .LVU418
 1396 001e 0268     		ldr	r2, [r0]
 1397 0020 C260     		str	r2, [r0, #12]
 1398              	.L47:
 508:lib/chibios/os/oslib/src/chmboxes.c ****     }
 509:lib/chibios/os/oslib/src/chmboxes.c ****     mbp->cnt--;
 1399              		.loc 1 509 5 is_stmt 1 view .LVU419
 1400              		.loc 1 509 13 is_stmt 0 view .LVU420
 1401 0022 013B     		subs	r3, r3, #1
 1402 0024 0361     		str	r3, [r0, #16]
 510:lib/chibios/os/oslib/src/chmboxes.c **** 
 511:lib/chibios/os/oslib/src/chmboxes.c ****     /* If there is a writer waiting then makes it ready.*/
 512:lib/chibios/os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qw, MSG_OK);
 1403              		.loc 1 512 5 is_stmt 1 view .LVU421
 1404 0026 0021     		movs	r1, #0
 1405 0028 1830     		adds	r0, r0, #24
 1406              	.LVL90:
 1407              		.loc 1 512 5 is_stmt 0 view .LVU422
 1408 002a FFF7FEFF 		bl	chThdDequeueNextI
 1409              	.LVL91:
 513:lib/chibios/os/oslib/src/chmboxes.c **** 
 514:lib/chibios/os/oslib/src/chmboxes.c ****     return MSG_OK;
 1410              		.loc 1 514 5 is_stmt 1 view .LVU423
 1411              		.loc 1 514 12 is_stmt 0 view .LVU424
 1412 002e 0020     		movs	r0, #0
 1413              	.LVL92:
 1414              	.L45:
 515:lib/chibios/os/oslib/src/chmboxes.c ****   }
 516:lib/chibios/os/oslib/src/chmboxes.c **** 
 517:lib/chibios/os/oslib/src/chmboxes.c ****   /* No message, immediate timeout.*/
 518:lib/chibios/os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 519:lib/chibios/os/oslib/src/chmboxes.c **** }
 1415              		.loc 1 519 1 view .LVU425
 1416              		@ sp needed
 1417 0030 10BD     		pop	{r4, pc}
 1418              	.LVL93:
 1419              	.L48:
 500:lib/chibios/os/oslib/src/chmboxes.c ****   }
 1420              		.loc 1 500 12 view .LVU426
 1421 0032 0220     		movs	r0, #2
 1422              	.LVL94:
 1423              	.L50:
 518:lib/chibios/os/oslib/src/chmboxes.c **** }
 1424              		.loc 1 518 10 view .LVU427
 1425 0034 4042     		rsbs	r0, r0, #0
 1426 0036 FBE7     		b	.L45
 1427              	.LVL95:
 1428              	.L49:
 518:lib/chibios/os/oslib/src/chmboxes.c **** }
 1429              		.loc 1 518 10 view .LVU428
 1430 0038 0120     		movs	r0, #1
 1431              	.LVL96:
 518:lib/chibios/os/oslib/src/chmboxes.c **** }
 1432              		.loc 1 518 10 view .LVU429
 1433 003a FBE7     		b	.L50
 1434              		.cfi_endproc
 1435              	.LFE165:
 1437              		.text
 1438              	.Letext0:
 1439              		.file 8 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 1440              		.file 9 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 1441              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_std
 1442              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1443              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 1444              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 1445              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 1446              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1447              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 1448              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 1449              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 1450              		.file 19 "./lib/chibios/os/oslib/include/chmemcore.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chmboxes.c
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:16     .text.chMBObjectInit:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:24     .text.chMBObjectInit:00000000 chMBObjectInit
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:130    .text.chMBResetI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:137    .text.chMBResetI:00000000 chMBResetI
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:199    .text.chMBReset:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:206    .text.chMBReset:00000000 chMBReset
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:311    .text.chMBPostTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:318    .text.chMBPostTimeoutS:00000000 chMBPostTimeoutS
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:466    .text.chMBPostTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:473    .text.chMBPostTimeout:00000000 chMBPostTimeout
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:575    .text.chMBPostI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:582    .text.chMBPostI:00000000 chMBPostI
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:704    .text.chMBPostAheadTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:711    .text.chMBPostAheadTimeoutS:00000000 chMBPostAheadTimeoutS
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:869    .text.chMBPostAheadTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:876    .text.chMBPostAheadTimeout:00000000 chMBPostAheadTimeout
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:978    .text.chMBPostAheadI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:985    .text.chMBPostAheadI:00000000 chMBPostAheadI
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1114   .text.chMBFetchTimeoutS:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1121   .text.chMBFetchTimeoutS:00000000 chMBFetchTimeoutS
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1231   .text.chMBFetchTimeout:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1238   .text.chMBFetchTimeout:00000000 chMBFetchTimeout
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1340   .text.chMBFetchI:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccl3asDh.s:1347   .text.chMBFetchI:00000000 chMBFetchI

UNDEFINED SYMBOLS
chThdDequeueAllI
chSchRescheduleS
chThdDequeueNextI
chThdEnqueueTimeoutS
