   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"matrix.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.matrix_init,"ax",%progbits
  16              		.align	1
  17              		.global	matrix_init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	matrix_init:
  25              	.LFB199:
  26              		.file 1 "quantum/matrix.c"
   1:quantum/matrix.c **** /*
   2:quantum/matrix.c **** Copyright 2012-2018 Jun Wako, Jack Humbert, Yiancar
   3:quantum/matrix.c **** 
   4:quantum/matrix.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/matrix.c **** it under the terms of the GNU General Public License as published by
   6:quantum/matrix.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/matrix.c **** (at your option) any later version.
   8:quantum/matrix.c **** 
   9:quantum/matrix.c **** This program is distributed in the hope that it will be useful,
  10:quantum/matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/matrix.c **** GNU General Public License for more details.
  13:quantum/matrix.c **** 
  14:quantum/matrix.c **** You should have received a copy of the GNU General Public License
  15:quantum/matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/matrix.c **** */
  17:quantum/matrix.c **** #include <stdint.h>
  18:quantum/matrix.c **** #include <stdbool.h>
  19:quantum/matrix.c **** #include "util.h"
  20:quantum/matrix.c **** #include "matrix.h"
  21:quantum/matrix.c **** #include "debounce.h"
  22:quantum/matrix.c **** #include "quantum.h"
  23:quantum/matrix.c **** 
  24:quantum/matrix.c **** #ifdef DIRECT_PINS
  25:quantum/matrix.c **** static pin_t direct_pins[MATRIX_ROWS][MATRIX_COLS] = DIRECT_PINS;
  26:quantum/matrix.c **** #elif (DIODE_DIRECTION == ROW2COL) || (DIODE_DIRECTION == COL2ROW)
  27:quantum/matrix.c **** static const pin_t row_pins[MATRIX_ROWS] = MATRIX_ROW_PINS;
  28:quantum/matrix.c **** static const pin_t col_pins[MATRIX_COLS] = MATRIX_COL_PINS;
  29:quantum/matrix.c **** #endif
  30:quantum/matrix.c **** 
  31:quantum/matrix.c **** /* matrix state(1:on, 0:off) */
  32:quantum/matrix.c **** extern matrix_row_t raw_matrix[MATRIX_ROWS];  // raw values
  33:quantum/matrix.c **** extern matrix_row_t matrix[MATRIX_ROWS];      // debounced values
  34:quantum/matrix.c **** 
  35:quantum/matrix.c **** // matrix code
  36:quantum/matrix.c **** 
  37:quantum/matrix.c **** #ifdef DIRECT_PINS
  38:quantum/matrix.c **** 
  39:quantum/matrix.c **** static void init_pins(void) {
  40:quantum/matrix.c ****     for (int row = 0; row < MATRIX_ROWS; row++) {
  41:quantum/matrix.c ****         for (int col = 0; col < MATRIX_COLS; col++) {
  42:quantum/matrix.c ****             pin_t pin = direct_pins[row][col];
  43:quantum/matrix.c ****             if (pin != NO_PIN) {
  44:quantum/matrix.c ****                 setPinInputHigh(pin);
  45:quantum/matrix.c ****             }
  46:quantum/matrix.c ****         }
  47:quantum/matrix.c ****     }
  48:quantum/matrix.c **** }
  49:quantum/matrix.c **** 
  50:quantum/matrix.c **** static bool read_cols_on_row(matrix_row_t current_matrix[], uint8_t current_row) {
  51:quantum/matrix.c ****     matrix_row_t last_row_value = current_matrix[current_row];
  52:quantum/matrix.c ****     current_matrix[current_row] = 0;
  53:quantum/matrix.c **** 
  54:quantum/matrix.c ****     for (uint8_t col_index = 0; col_index < MATRIX_COLS; col_index++) {
  55:quantum/matrix.c ****         pin_t pin = direct_pins[current_row][col_index];
  56:quantum/matrix.c ****         if (pin != NO_PIN) {
  57:quantum/matrix.c ****             current_matrix[current_row] |= readPin(pin) ? 0 : (MATRIX_ROW_SHIFTER << col_index);
  58:quantum/matrix.c ****         }
  59:quantum/matrix.c ****     }
  60:quantum/matrix.c **** 
  61:quantum/matrix.c ****     return (last_row_value != current_matrix[current_row]);
  62:quantum/matrix.c **** }
  63:quantum/matrix.c **** 
  64:quantum/matrix.c **** #elif defined(DIODE_DIRECTION)
  65:quantum/matrix.c **** #    if (DIODE_DIRECTION == COL2ROW)
  66:quantum/matrix.c **** 
  67:quantum/matrix.c **** static void select_row(uint8_t row) {
  68:quantum/matrix.c ****     setPinOutput(row_pins[row]);
  69:quantum/matrix.c ****     writePinLow(row_pins[row]);
  70:quantum/matrix.c **** }
  71:quantum/matrix.c **** 
  72:quantum/matrix.c **** static void unselect_row(uint8_t row) { setPinInputHigh(row_pins[row]); }
  73:quantum/matrix.c **** 
  74:quantum/matrix.c **** static void unselect_rows(void) {
  75:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_ROWS; x++) {
  76:quantum/matrix.c ****         setPinInputHigh(row_pins[x]);
  77:quantum/matrix.c ****     }
  78:quantum/matrix.c **** }
  79:quantum/matrix.c **** 
  80:quantum/matrix.c **** static void init_pins(void) {
  81:quantum/matrix.c ****     unselect_rows();
  82:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_COLS; x++) {
  83:quantum/matrix.c ****         setPinInputHigh(col_pins[x]);
  84:quantum/matrix.c ****     }
  85:quantum/matrix.c **** }
  86:quantum/matrix.c **** 
  87:quantum/matrix.c **** static bool read_cols_on_row(matrix_row_t current_matrix[], uint8_t current_row) {
  88:quantum/matrix.c ****     // Store last value of row prior to reading
  89:quantum/matrix.c ****     matrix_row_t last_row_value = current_matrix[current_row];
  90:quantum/matrix.c **** 
  91:quantum/matrix.c ****     // Clear data in matrix row
  92:quantum/matrix.c ****     current_matrix[current_row] = 0;
  93:quantum/matrix.c **** 
  94:quantum/matrix.c ****     // Select row and wait for row selecton to stabilize
  95:quantum/matrix.c ****     select_row(current_row);
  96:quantum/matrix.c ****     matrix_io_delay();
  97:quantum/matrix.c **** 
  98:quantum/matrix.c ****     // For each col...
  99:quantum/matrix.c ****     for (uint8_t col_index = 0; col_index < MATRIX_COLS; col_index++) {
 100:quantum/matrix.c ****         // Select the col pin to read (active low)
 101:quantum/matrix.c ****         uint8_t pin_state = readPin(col_pins[col_index]);
 102:quantum/matrix.c **** 
 103:quantum/matrix.c ****         // Populate the matrix row with the state of the col pin
 104:quantum/matrix.c ****         current_matrix[current_row] |= pin_state ? 0 : (MATRIX_ROW_SHIFTER << col_index);
 105:quantum/matrix.c ****     }
 106:quantum/matrix.c **** 
 107:quantum/matrix.c ****     // Unselect row
 108:quantum/matrix.c ****     unselect_row(current_row);
 109:quantum/matrix.c **** 
 110:quantum/matrix.c ****     return (last_row_value != current_matrix[current_row]);
 111:quantum/matrix.c **** }
 112:quantum/matrix.c **** 
 113:quantum/matrix.c **** #    elif (DIODE_DIRECTION == ROW2COL)
 114:quantum/matrix.c **** 
 115:quantum/matrix.c **** static void select_col(uint8_t col) {
 116:quantum/matrix.c ****     setPinOutput(col_pins[col]);
 117:quantum/matrix.c ****     writePinLow(col_pins[col]);
 118:quantum/matrix.c **** }
 119:quantum/matrix.c **** 
 120:quantum/matrix.c **** static void unselect_col(uint8_t col) { setPinInputHigh(col_pins[col]); }
 121:quantum/matrix.c **** 
 122:quantum/matrix.c **** static void unselect_cols(void) {
 123:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_COLS; x++) {
 124:quantum/matrix.c ****         setPinInputHigh(col_pins[x]);
 125:quantum/matrix.c ****     }
 126:quantum/matrix.c **** }
 127:quantum/matrix.c **** 
 128:quantum/matrix.c **** static void init_pins(void) {
 129:quantum/matrix.c ****     unselect_cols();
 130:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_ROWS; x++) {
 131:quantum/matrix.c ****         setPinInputHigh(row_pins[x]);
 132:quantum/matrix.c ****     }
 133:quantum/matrix.c **** }
 134:quantum/matrix.c **** 
 135:quantum/matrix.c **** static bool read_rows_on_col(matrix_row_t current_matrix[], uint8_t current_col) {
 136:quantum/matrix.c ****     bool matrix_changed = false;
 137:quantum/matrix.c **** 
 138:quantum/matrix.c ****     // Select col and wait for col selecton to stabilize
 139:quantum/matrix.c ****     select_col(current_col);
 140:quantum/matrix.c ****     matrix_io_delay();
 141:quantum/matrix.c **** 
 142:quantum/matrix.c ****     // For each row...
 143:quantum/matrix.c ****     for (uint8_t row_index = 0; row_index < MATRIX_ROWS; row_index++) {
 144:quantum/matrix.c ****         // Store last value of row prior to reading
 145:quantum/matrix.c ****         matrix_row_t last_row_value = current_matrix[row_index];
 146:quantum/matrix.c **** 
 147:quantum/matrix.c ****         // Check row pin state
 148:quantum/matrix.c ****         if (readPin(row_pins[row_index]) == 0) {
 149:quantum/matrix.c ****             // Pin LO, set col bit
 150:quantum/matrix.c ****             current_matrix[row_index] |= (MATRIX_ROW_SHIFTER << current_col);
 151:quantum/matrix.c ****         } else {
 152:quantum/matrix.c ****             // Pin HI, clear col bit
 153:quantum/matrix.c ****             current_matrix[row_index] &= ~(MATRIX_ROW_SHIFTER << current_col);
 154:quantum/matrix.c ****         }
 155:quantum/matrix.c **** 
 156:quantum/matrix.c ****         // Determine if the matrix changed state
 157:quantum/matrix.c ****         if ((last_row_value != current_matrix[row_index]) && !(matrix_changed)) {
 158:quantum/matrix.c ****             matrix_changed = true;
 159:quantum/matrix.c ****         }
 160:quantum/matrix.c ****     }
 161:quantum/matrix.c **** 
 162:quantum/matrix.c ****     // Unselect col
 163:quantum/matrix.c ****     unselect_col(current_col);
 164:quantum/matrix.c **** 
 165:quantum/matrix.c ****     return matrix_changed;
 166:quantum/matrix.c **** }
 167:quantum/matrix.c **** 
 168:quantum/matrix.c **** #    else
 169:quantum/matrix.c **** #        error DIODE_DIRECTION must be one of COL2ROW or ROW2COL!
 170:quantum/matrix.c **** #    endif
 171:quantum/matrix.c **** #else
 172:quantum/matrix.c **** #    error DIODE_DIRECTION is not defined!
 173:quantum/matrix.c **** #endif
 174:quantum/matrix.c **** 
 175:quantum/matrix.c **** void matrix_init(void) {
  27              		.loc 1 175 24 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 176:quantum/matrix.c ****     // initialize key pins
 177:quantum/matrix.c ****     init_pins();
  31              		.loc 1 177 5 view .LVU1
  32              	.LBB11:
  33              	.LBI11:
  80:quantum/matrix.c ****     unselect_rows();
  34              		.loc 1 80 13 view .LVU2
  35              	.LBE11:
  81:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_COLS; x++) {
  36              		.loc 1 81 5 view .LVU3
  37              	.LBB16:
  38              	.LBB12:
  39              	.LBI12:
  74:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_ROWS; x++) {
  40              		.loc 1 74 13 view .LVU4
  41              	.LVL0:
  74:quantum/matrix.c ****     for (uint8_t x = 0; x < MATRIX_ROWS; x++) {
  42              		.loc 1 74 13 is_stmt 0 view .LVU5
  43              	.LBE12:
  44              	.LBE16:
 175:quantum/matrix.c ****     // initialize key pins
  45              		.loc 1 175 24 view .LVU6
  46 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  47              		.cfi_def_cfa_offset 24
  48              		.cfi_offset 3, -24
  49              		.cfi_offset 4, -20
  50              		.cfi_offset 5, -16
  51              		.cfi_offset 6, -12
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 194C     		ldr	r4, .L6
  55              	.LBB17:
  56              	.LBB14:
  57              	.LBB13:
  76:quantum/matrix.c ****     }
  58              		.loc 1 76 9 view .LVU7
  59 0004 0F25     		movs	r5, #15
  60 0006 2600     		movs	r6, r4
  61 0008 0127     		movs	r7, #1
  62 000a 1436     		adds	r6, r6, #20
  63              	.LVL1:
  64              	.L2:
  76:quantum/matrix.c ****     }
  65              		.loc 1 76 9 is_stmt 1 view .LVU8
  66 000c 01CC     		ldmia	r4!, {r0}
  67 000e 3900     		movs	r1, r7
  68 0010 0300     		movs	r3, r0
  69 0012 2B40     		ands	r3, r5
  70 0014 9940     		lsls	r1, r1, r3
  71 0016 A843     		bics	r0, r5
  72 0018 2022     		movs	r2, #32
  73 001a FFF7FEFF 		bl	_pal_lld_setgroupmode
  74              	.LVL2:
  75:quantum/matrix.c ****         setPinInputHigh(row_pins[x]);
  75              		.loc 1 75 5 is_stmt 0 view .LVU9
  76 001e A642     		cmp	r6, r4
  77 0020 F4D1     		bne	.L2
  78 0022 124C     		ldr	r4, .L6+4
  79              	.LBE13:
  80              	.LBE14:
  81              	.LBB15:
  83:quantum/matrix.c ****     }
  82              		.loc 1 83 9 view .LVU10
  83 0024 0F25     		movs	r5, #15
  84 0026 2600     		movs	r6, r4
  85 0028 0127     		movs	r7, #1
  86 002a 4036     		adds	r6, r6, #64
  87              	.L3:
  83:quantum/matrix.c ****     }
  88              		.loc 1 83 9 is_stmt 1 view .LVU11
  89 002c 01CC     		ldmia	r4!, {r0}
  90 002e 3900     		movs	r1, r7
  91 0030 0300     		movs	r3, r0
  92 0032 2B40     		ands	r3, r5
  93 0034 9940     		lsls	r1, r1, r3
  94 0036 A843     		bics	r0, r5
  95 0038 2022     		movs	r2, #32
  96 003a FFF7FEFF 		bl	_pal_lld_setgroupmode
  97              	.LVL3:
  82:quantum/matrix.c ****         setPinInputHigh(col_pins[x]);
  98              		.loc 1 82 5 is_stmt 0 view .LVU12
  99 003e B442     		cmp	r4, r6
 100 0040 F4D1     		bne	.L3
 101              	.LVL4:
  82:quantum/matrix.c ****         setPinInputHigh(col_pins[x]);
 102              		.loc 1 82 5 view .LVU13
 103              	.LBE15:
 104              	.LBE17:
 105              	.LBB18:
 178:quantum/matrix.c **** 
 179:quantum/matrix.c ****     // initialize matrix state: all keys off
 180:quantum/matrix.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 181:quantum/matrix.c ****         raw_matrix[i] = 0;
 106              		.loc 1 181 9 is_stmt 1 view .LVU14
 107              		.loc 1 181 23 is_stmt 0 view .LVU15
 108 0042 0023     		movs	r3, #0
 109 0044 0A49     		ldr	r1, .L6+8
 182:quantum/matrix.c ****         matrix[i]     = 0;
 110              		.loc 1 182 23 view .LVU16
 111 0046 0B4A     		ldr	r2, .L6+12
 112              	.LBE18:
 183:quantum/matrix.c ****     }
 184:quantum/matrix.c **** 
 185:quantum/matrix.c ****     debounce_init(MATRIX_ROWS);
 113              		.loc 1 185 5 view .LVU17
 114 0048 0520     		movs	r0, #5
 115              	.LBB19:
 181:quantum/matrix.c ****         matrix[i]     = 0;
 116              		.loc 1 181 23 view .LVU18
 117 004a 0B80     		strh	r3, [r1]
 182:quantum/matrix.c ****         matrix[i]     = 0;
 118              		.loc 1 182 9 is_stmt 1 view .LVU19
 182:quantum/matrix.c ****         matrix[i]     = 0;
 119              		.loc 1 182 23 is_stmt 0 view .LVU20
 120 004c 1380     		strh	r3, [r2]
 121              	.LVL5:
 181:quantum/matrix.c ****         matrix[i]     = 0;
 122              		.loc 1 181 9 is_stmt 1 view .LVU21
 181:quantum/matrix.c ****         matrix[i]     = 0;
 123              		.loc 1 181 23 is_stmt 0 view .LVU22
 124 004e 4B80     		strh	r3, [r1, #2]
 182:quantum/matrix.c ****         matrix[i]     = 0;
 125              		.loc 1 182 9 is_stmt 1 view .LVU23
 182:quantum/matrix.c ****         matrix[i]     = 0;
 126              		.loc 1 182 23 is_stmt 0 view .LVU24
 127 0050 5380     		strh	r3, [r2, #2]
 128              	.LVL6:
 181:quantum/matrix.c ****         matrix[i]     = 0;
 129              		.loc 1 181 9 is_stmt 1 view .LVU25
 181:quantum/matrix.c ****         matrix[i]     = 0;
 130              		.loc 1 181 23 is_stmt 0 view .LVU26
 131 0052 8B80     		strh	r3, [r1, #4]
 182:quantum/matrix.c ****         matrix[i]     = 0;
 132              		.loc 1 182 9 is_stmt 1 view .LVU27
 182:quantum/matrix.c ****         matrix[i]     = 0;
 133              		.loc 1 182 23 is_stmt 0 view .LVU28
 134 0054 9380     		strh	r3, [r2, #4]
 135              	.LVL7:
 181:quantum/matrix.c ****         matrix[i]     = 0;
 136              		.loc 1 181 9 is_stmt 1 view .LVU29
 181:quantum/matrix.c ****         matrix[i]     = 0;
 137              		.loc 1 181 23 is_stmt 0 view .LVU30
 138 0056 CB80     		strh	r3, [r1, #6]
 182:quantum/matrix.c ****         matrix[i]     = 0;
 139              		.loc 1 182 9 is_stmt 1 view .LVU31
 182:quantum/matrix.c ****         matrix[i]     = 0;
 140              		.loc 1 182 23 is_stmt 0 view .LVU32
 141 0058 D380     		strh	r3, [r2, #6]
 142              	.LVL8:
 181:quantum/matrix.c ****         matrix[i]     = 0;
 143              		.loc 1 181 9 is_stmt 1 view .LVU33
 181:quantum/matrix.c ****         matrix[i]     = 0;
 144              		.loc 1 181 23 is_stmt 0 view .LVU34
 145 005a 0B81     		strh	r3, [r1, #8]
 182:quantum/matrix.c ****         matrix[i]     = 0;
 146              		.loc 1 182 9 is_stmt 1 view .LVU35
 182:quantum/matrix.c ****         matrix[i]     = 0;
 147              		.loc 1 182 23 is_stmt 0 view .LVU36
 148 005c 1381     		strh	r3, [r2, #8]
 149              	.LVL9:
 182:quantum/matrix.c ****         matrix[i]     = 0;
 150              		.loc 1 182 23 view .LVU37
 151              	.LBE19:
 152              		.loc 1 185 5 is_stmt 1 view .LVU38
 186:quantum/matrix.c **** 
 187:quantum/matrix.c ****     matrix_init_quantum();
 188:quantum/matrix.c **** }
 153              		.loc 1 188 1 is_stmt 0 view .LVU39
 154              		@ sp needed
 185:quantum/matrix.c **** 
 155              		.loc 1 185 5 view .LVU40
 156 005e FFF7FEFF 		bl	debounce_init
 157              	.LVL10:
 187:quantum/matrix.c **** }
 158              		.loc 1 187 5 is_stmt 1 view .LVU41
 159 0062 FFF7FEFF 		bl	matrix_init_quantum
 160              	.LVL11:
 161              		.loc 1 188 1 is_stmt 0 view .LVU42
 162 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 163              	.L7:
 164              		.align	2
 165              	.L6:
 166 0068 00000000 		.word	.LANCHOR0
 167 006c 00000000 		.word	.LANCHOR1
 168 0070 00000000 		.word	raw_matrix
 169 0074 00000000 		.word	matrix
 170              		.cfi_endproc
 171              	.LFE199:
 173              		.section	.text.matrix_scan,"ax",%progbits
 174              		.align	1
 175              		.global	matrix_scan
 176              		.syntax unified
 177              		.code	16
 178              		.thumb_func
 179              		.fpu softvfp
 181              	matrix_scan:
 182              	.LFB200:
 189:quantum/matrix.c **** 
 190:quantum/matrix.c **** uint8_t matrix_scan(void) {
 183              		.loc 1 190 27 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 191:quantum/matrix.c ****     bool changed = false;
 187              		.loc 1 191 5 view .LVU44
 188              	.LVL12:
 192:quantum/matrix.c **** 
 193:quantum/matrix.c **** #if defined(DIRECT_PINS) || (DIODE_DIRECTION == COL2ROW)
 194:quantum/matrix.c ****     // Set row, read cols
 195:quantum/matrix.c ****     for (uint8_t current_row = 0; current_row < MATRIX_ROWS; current_row++) {
 189              		.loc 1 195 5 view .LVU45
 190              	.LBB29:
 191              		.loc 1 195 10 view .LVU46
 192              		.loc 1 195 10 is_stmt 0 view .LVU47
 193              	.LBE29:
 190:quantum/matrix.c ****     bool changed = false;
 194              		.loc 1 190 27 view .LVU48
 195 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 196              		.cfi_def_cfa_offset 20
 197              		.cfi_offset 4, -20
 198              		.cfi_offset 5, -16
 199              		.cfi_offset 6, -12
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 191:quantum/matrix.c ****     bool changed = false;
 202              		.loc 1 191 10 view .LVU49
 203 0002 0027     		movs	r7, #0
 204 0004 274C     		ldr	r4, .L15
 205 0006 284E     		ldr	r6, .L15+4
 190:quantum/matrix.c ****     bool changed = false;
 206              		.loc 1 190 27 view .LVU50
 207 0008 85B0     		sub	sp, sp, #20
 208              		.cfi_def_cfa_offset 40
 209              	.LVL13:
 210              	.L11:
 211              	.LBB44:
 196:quantum/matrix.c ****         changed |= read_cols_on_row(raw_matrix, current_row);
 212              		.loc 1 196 9 is_stmt 1 view .LVU51
 213              	.LBB30:
 214              	.LBI30:
  87:quantum/matrix.c ****     // Store last value of row prior to reading
 215              		.loc 1 87 13 view .LVU52
 216              	.LBB31:
  89:quantum/matrix.c **** 
 217              		.loc 1 89 5 view .LVU53
  89:quantum/matrix.c **** 
 218              		.loc 1 89 18 is_stmt 0 view .LVU54
 219 000a 2388     		ldrh	r3, [r4]
 220              	.LBB32:
 221              	.LBB33:
  68:quantum/matrix.c ****     writePinLow(row_pins[row]);
 222              		.loc 1 68 5 view .LVU55
 223 000c 0F21     		movs	r1, #15
 224              	.LBE33:
 225              	.LBE32:
  89:quantum/matrix.c **** 
 226              		.loc 1 89 18 view .LVU56
 227 000e 0393     		str	r3, [sp, #12]
 228              	.LVL14:
  92:quantum/matrix.c **** 
 229              		.loc 1 92 5 is_stmt 1 view .LVU57
 230              	.LBB37:
 231              	.LBB34:
  68:quantum/matrix.c ****     writePinLow(row_pins[row]);
 232              		.loc 1 68 5 is_stmt 0 view .LVU58
 233 0010 3368     		ldr	r3, [r6]
 234              	.LBE34:
 235              	.LBE37:
  92:quantum/matrix.c **** 
 236              		.loc 1 92 33 view .LVU59
 237 0012 0025     		movs	r5, #0
 238              	.LBB38:
 239              	.LBB35:
  68:quantum/matrix.c ****     writePinLow(row_pins[row]);
 240              		.loc 1 68 5 view .LVU60
 241 0014 1A00     		movs	r2, r3
 242 0016 8A43     		bics	r2, r1
 243 0018 0192     		str	r2, [sp, #4]
 244 001a 0122     		movs	r2, #1
 245 001c 0B40     		ands	r3, r1
 246 001e 9A40     		lsls	r2, r2, r3
 247 0020 0292     		str	r2, [sp, #8]
 248 0022 0299     		ldr	r1, [sp, #8]
 249 0024 0122     		movs	r2, #1
 250 0026 0198     		ldr	r0, [sp, #4]
 251              	.LBE35:
 252              	.LBE38:
  92:quantum/matrix.c **** 
 253              		.loc 1 92 33 view .LVU61
 254 0028 2580     		strh	r5, [r4]
  95:quantum/matrix.c ****     matrix_io_delay();
 255              		.loc 1 95 5 is_stmt 1 view .LVU62
 256              	.LBB39:
 257              	.LBI32:
  67:quantum/matrix.c ****     setPinOutput(row_pins[row]);
 258              		.loc 1 67 13 view .LVU63
 259              	.LBB36:
  68:quantum/matrix.c ****     writePinLow(row_pins[row]);
 260              		.loc 1 68 5 view .LVU64
 261 002a FFF7FEFF 		bl	_pal_lld_setgroupmode
 262              	.LVL15:
  69:quantum/matrix.c **** }
 263              		.loc 1 69 5 view .LVU65
 264 002e 6B46     		mov	r3, sp
 265 0030 019A     		ldr	r2, [sp, #4]
 266 0032 1B89     		ldrh	r3, [r3, #8]
 267 0034 5383     		strh	r3, [r2, #26]
 268              	.LBE36:
 269              	.LBE39:
  96:quantum/matrix.c **** 
 270              		.loc 1 96 5 view .LVU66
 271 0036 FFF7FEFF 		bl	matrix_io_delay
 272              	.LVL16:
  99:quantum/matrix.c ****         // Select the col pin to read (active low)
 273              		.loc 1 99 5 view .LVU67
 274              	.LBB40:
  99:quantum/matrix.c ****         // Select the col pin to read (active low)
 275              		.loc 1 99 10 view .LVU68
 276              	.LBB41:
 101:quantum/matrix.c **** 
 277              		.loc 1 101 29 is_stmt 0 view .LVU69
 278 003a 1C4A     		ldr	r2, .L15+8
 279 003c 2388     		ldrh	r3, [r4]
 280 003e 9446     		mov	ip, r2
 281              	.LVL17:
 282              	.L10:
 101:quantum/matrix.c **** 
 283              		.loc 1 101 9 is_stmt 1 view .LVU70
 101:quantum/matrix.c **** 
 284              		.loc 1 101 29 is_stmt 0 view .LVU71
 285 0040 6146     		mov	r1, ip
 286 0042 AA00     		lsls	r2, r5, #2
 287 0044 5258     		ldr	r2, [r2, r1]
 288 0046 0F20     		movs	r0, #15
 289 0048 1100     		movs	r1, r2
 290 004a 8143     		bics	r1, r0
 291 004c 0969     		ldr	r1, [r1, #16]
 292              	.LVL18:
 104:quantum/matrix.c ****     }
 293              		.loc 1 104 9 is_stmt 1 view .LVU72
 101:quantum/matrix.c **** 
 294              		.loc 1 101 29 is_stmt 0 view .LVU73
 295 004e 0240     		ands	r2, r0
 296              	.LVL19:
 101:quantum/matrix.c **** 
 297              		.loc 1 101 29 view .LVU74
 298 0050 D140     		lsrs	r1, r1, r2
 299              	.LVL20:
 104:quantum/matrix.c ****     }
 300              		.loc 1 104 37 view .LVU75
 301 0052 0E38     		subs	r0, r0, #14
 302 0054 1BB2     		sxth	r3, r3
 303 0056 0022     		movs	r2, #0
 304 0058 0142     		tst	r1, r0
 305 005a 02D1     		bne	.L9
 104:quantum/matrix.c ****     }
 306              		.loc 1 104 76 view .LVU76
 307 005c 0200     		movs	r2, r0
 308 005e AA40     		lsls	r2, r2, r5
 104:quantum/matrix.c ****     }
 309              		.loc 1 104 37 view .LVU77
 310 0060 12B2     		sxth	r2, r2
 311              	.L9:
 312 0062 1343     		orrs	r3, r2
 313 0064 0135     		adds	r5, r5, #1
 314              	.LVL21:
 104:quantum/matrix.c ****     }
 315              		.loc 1 104 37 view .LVU78
 316 0066 9BB2     		uxth	r3, r3
 104:quantum/matrix.c ****     }
 317              		.loc 1 104 37 view .LVU79
 318              	.LBE41:
  99:quantum/matrix.c ****         // Select the col pin to read (active low)
 319              		.loc 1 99 5 view .LVU80
 320 0068 102D     		cmp	r5, #16
 321 006a E9D1     		bne	.L10
 322 006c 2380     		strh	r3, [r4]
 323              	.LBE40:
 108:quantum/matrix.c **** 
 324              		.loc 1 108 5 is_stmt 1 view .LVU81
 325              	.LBB42:
 326              	.LBI42:
  72:quantum/matrix.c **** 
 327              		.loc 1 72 13 view .LVU82
 328              	.LBB43:
  72:quantum/matrix.c **** 
 329              		.loc 1 72 41 view .LVU83
 330 006e 2022     		movs	r2, #32
 331 0070 0299     		ldr	r1, [sp, #8]
 332 0072 0198     		ldr	r0, [sp, #4]
 333 0074 FFF7FEFF 		bl	_pal_lld_setgroupmode
 334              	.LVL22:
 335              	.LBE43:
 336              	.LBE42:
 110:quantum/matrix.c **** }
 337              		.loc 1 110 5 view .LVU84
 110:quantum/matrix.c **** }
 338              		.loc 1 110 28 is_stmt 0 view .LVU85
 339 0078 2388     		ldrh	r3, [r4]
 340 007a 039A     		ldr	r2, [sp, #12]
 341 007c 0234     		adds	r4, r4, #2
 342 007e 9B1A     		subs	r3, r3, r2
 343 0080 5A1E     		subs	r2, r3, #1
 344 0082 9341     		sbcs	r3, r3, r2
 345              	.LBE31:
 346              	.LBE30:
 347              		.loc 1 196 17 view .LVU86
 348 0084 1F43     		orrs	r7, r3
 349              	.LVL23:
 195:quantum/matrix.c ****         changed |= read_cols_on_row(raw_matrix, current_row);
 350              		.loc 1 195 5 view .LVU87
 351 0086 0A4B     		ldr	r3, .L15+12
 352 0088 0436     		adds	r6, r6, #4
 353 008a 9C42     		cmp	r4, r3
 354 008c BDD1     		bne	.L11
 355              	.LBE44:
 197:quantum/matrix.c ****     }
 198:quantum/matrix.c **** #elif (DIODE_DIRECTION == ROW2COL)
 199:quantum/matrix.c ****     // Set col, read rows
 200:quantum/matrix.c ****     for (uint8_t current_col = 0; current_col < MATRIX_COLS; current_col++) {
 201:quantum/matrix.c ****         changed |= read_rows_on_col(raw_matrix, current_col);
 202:quantum/matrix.c ****     }
 203:quantum/matrix.c **** #endif
 204:quantum/matrix.c **** 
 205:quantum/matrix.c ****     debounce(raw_matrix, matrix, MATRIX_ROWS, changed);
 356              		.loc 1 205 5 is_stmt 1 view .LVU88
 357 008e 3B00     		movs	r3, r7
 358 0090 0522     		movs	r2, #5
 359 0092 0849     		ldr	r1, .L15+16
 360 0094 0348     		ldr	r0, .L15
 361 0096 FFF7FEFF 		bl	debounce
 362              	.LVL24:
 206:quantum/matrix.c **** 
 207:quantum/matrix.c ****     matrix_scan_quantum();
 363              		.loc 1 207 5 view .LVU89
 364 009a FFF7FEFF 		bl	matrix_scan_quantum
 365              	.LVL25:
 208:quantum/matrix.c ****     return (uint8_t)changed;
 366              		.loc 1 208 5 view .LVU90
 209:quantum/matrix.c **** }
 367              		.loc 1 209 1 is_stmt 0 view .LVU91
 368 009e 3800     		movs	r0, r7
 369 00a0 05B0     		add	sp, sp, #20
 370              		@ sp needed
 371              	.LVL26:
 372              		.loc 1 209 1 view .LVU92
 373 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 374              	.L16:
 375              		.align	2
 376              	.L15:
 377 00a4 00000000 		.word	raw_matrix
 378 00a8 00000000 		.word	.LANCHOR0
 379 00ac 00000000 		.word	.LANCHOR1
 380 00b0 0A000000 		.word	raw_matrix+10
 381 00b4 00000000 		.word	matrix
 382              		.cfi_endproc
 383              	.LFE200:
 385              		.section	.rodata.col_pins,"a"
 386              		.align	2
 387              		.set	.LANCHOR1,. + 0
 390              	col_pins:
 391 0000 02040048 		.word	1207960578
 392 0004 0A040048 		.word	1207960586
 393 0008 0B040048 		.word	1207960587
 394 000c 09000048 		.word	1207959561
 395 0010 0F000048 		.word	1207959567
 396 0014 03040048 		.word	1207960579
 397 0018 04040048 		.word	1207960580
 398 001c 05040048 		.word	1207960581
 399 0020 06040048 		.word	1207960582
 400 0024 07040048 		.word	1207960583
 401 0028 08040048 		.word	1207960584
 402 002c 09040048 		.word	1207960585
 403 0030 0D080048 		.word	1207961613
 404 0034 0E080048 		.word	1207961614
 405 0038 0F080048 		.word	1207961615
 406 003c 0C040048 		.word	1207960588
 407              		.section	.rodata.row_pins,"a"
 408              		.align	2
 409              		.set	.LANCHOR0,. + 0
 412              	row_pins:
 413 0000 01040048 		.word	1207960577
 414 0004 00040048 		.word	1207960576
 415 0008 07000048 		.word	1207959559
 416 000c 05000048 		.word	1207959557
 417 0010 04000048 		.word	1207959556
 418              		.text
 419              	.Letext0:
 420              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 421              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 422              		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 423              		.file 5 "tmk_core/common/matrix.h"
 424              		.file 6 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 425              		.file 7 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 426              		.file 8 "./lib/chibios/os/rt/include/chsystypes.h"
 427              		.file 9 "./lib/chibios/os/rt/include/chschd.h"
 428              		.file 10 "./lib/chibios/os/rt/include/chtime.h"
 429              		.file 11 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 430              		.file 12 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 431              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 432              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
 433              		.file 15 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 434              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 435              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 436              		.file 18 "./lib/chibios/os/rt/include/chsys.h"
 437              		.file 19 "./lib/chibios/os/rt/include/chregistry.h"
 438              		.file 20 "./lib/chibios/os/oslib/include/chmemcore.h"
 439              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 440              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 441              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 442              		.file 24 "./lib/chibios/os/hal/include/hal_i2c.h"
 443              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 444              		.file 26 "./lib/chibios/os/hal/include/hal_pwm.h"
 445              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 446              		.file 28 "./lib/chibios/os/hal/include/hal_spi.h"
 447              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 448              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 449              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 450              		.file 32 "tmk_core/common/action.h"
 451              		.file 33 "tmk_core/common/report.h"
 452              		.file 34 "tmk_core/common/host.h"
 453              		.file 35 "tmk_core/common/debug.h"
 454              		.file 36 "quantum/keycode_config.h"
 455              		.file 37 "quantum/keymap.h"
 456              		.file 38 "./quantum/color.h"
 457              		.file 39 "quantum/rgblight.h"
 458              		.file 40 "tmk_core/common/action_layer.h"
 459              		.file 41 "tmk_core/common/timer.h"
 460              		.file 42 "tmk_core/common/action_util.h"
 461              		.file 43 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 462              		.file 44 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 463              		.file 45 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 464              		.file 46 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdlib.h"
 465              		.file 47 "quantum/quantum.h"
 466              		.file 48 "quantum/debounce.h"
DEFINED SYMBOLS
                            *ABS*:00000000 matrix.c
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:16     .text.matrix_init:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:24     .text.matrix_init:00000000 matrix_init
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:166    .text.matrix_init:00000068 $d
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:174    .text.matrix_scan:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:181    .text.matrix_scan:00000000 matrix_scan
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:377    .text.matrix_scan:000000a4 $d
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:386    .rodata.col_pins:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:390    .rodata.col_pins:00000000 col_pins
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:408    .rodata.row_pins:00000000 $d
C:\Users\kyleo\AppData\Local\Temp\ccvOI9Lo.s:412    .rodata.row_pins:00000000 row_pins

UNDEFINED SYMBOLS
_pal_lld_setgroupmode
debounce_init
matrix_init_quantum
raw_matrix
matrix
matrix_io_delay
debounce
matrix_scan_quantum
