   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"quantum.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.do_code16,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	do_code16:
  24              	.LVL0:
  25              	.LFB194:
  26              		.file 1 "quantum/quantum.c"
   1:quantum/quantum.c **** /* Copyright 2016-2017 Jack Humbert
   2:quantum/quantum.c ****  *
   3:quantum/quantum.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/quantum.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/quantum.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/quantum.c ****  * (at your option) any later version.
   7:quantum/quantum.c ****  *
   8:quantum/quantum.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/quantum.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/quantum.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/quantum.c ****  * GNU General Public License for more details.
  12:quantum/quantum.c ****  *
  13:quantum/quantum.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/quantum.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/quantum.c ****  */
  16:quantum/quantum.c **** 
  17:quantum/quantum.c **** #include <ctype.h>
  18:quantum/quantum.c **** #include "quantum.h"
  19:quantum/quantum.c **** 
  20:quantum/quantum.c **** #ifdef PROTOCOL_LUFA
  21:quantum/quantum.c **** #    include "outputselect.h"
  22:quantum/quantum.c **** #endif
  23:quantum/quantum.c **** 
  24:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
  25:quantum/quantum.c **** #    include "backlight.h"
  26:quantum/quantum.c **** extern backlight_config_t backlight_config;
  27:quantum/quantum.c **** #endif
  28:quantum/quantum.c **** 
  29:quantum/quantum.c **** #ifdef FAUXCLICKY_ENABLE
  30:quantum/quantum.c **** #    include "fauxclicky.h"
  31:quantum/quantum.c **** #endif
  32:quantum/quantum.c **** 
  33:quantum/quantum.c **** #ifdef API_ENABLE
  34:quantum/quantum.c **** #    include "api.h"
  35:quantum/quantum.c **** #endif
  36:quantum/quantum.c **** 
  37:quantum/quantum.c **** #ifdef MIDI_ENABLE
  38:quantum/quantum.c **** #    include "process_midi.h"
  39:quantum/quantum.c **** #endif
  40:quantum/quantum.c **** 
  41:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
  42:quantum/quantum.c **** #    include "velocikey.h"
  43:quantum/quantum.c **** #endif
  44:quantum/quantum.c **** 
  45:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
  46:quantum/quantum.c **** #    include "haptic.h"
  47:quantum/quantum.c **** #endif
  48:quantum/quantum.c **** 
  49:quantum/quantum.c **** #ifdef ENCODER_ENABLE
  50:quantum/quantum.c **** #    include "encoder.h"
  51:quantum/quantum.c **** #endif
  52:quantum/quantum.c **** 
  53:quantum/quantum.c **** #ifdef AUDIO_ENABLE
  54:quantum/quantum.c **** #    ifndef GOODBYE_SONG
  55:quantum/quantum.c **** #        define GOODBYE_SONG SONG(GOODBYE_SOUND)
  56:quantum/quantum.c **** #    endif
  57:quantum/quantum.c **** float goodbye_song[][2] = GOODBYE_SONG;
  58:quantum/quantum.c **** #    ifdef DEFAULT_LAYER_SONGS
  59:quantum/quantum.c **** float default_layer_songs[][16][2] = DEFAULT_LAYER_SONGS;
  60:quantum/quantum.c **** #    endif
  61:quantum/quantum.c **** #    ifdef SENDSTRING_BELL
  62:quantum/quantum.c **** float bell_song[][2] = SONG(TERMINAL_SOUND);
  63:quantum/quantum.c **** #    endif
  64:quantum/quantum.c **** #endif
  65:quantum/quantum.c **** 
  66:quantum/quantum.c **** static void do_code16(uint16_t code, void (*f)(uint8_t)) {
  27              		.loc 1 66 58 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  67:quantum/quantum.c ****     switch (code) {
  31              		.loc 1 67 5 view .LVU1
  66:quantum/quantum.c ****     switch (code) {
  32              		.loc 1 66 58 is_stmt 0 view .LVU2
  33 0000 0200     		movs	r2, r0
  34              		.loc 1 67 5 view .LVU3
  35 0002 174B     		ldr	r3, .L30
  36 0004 0138     		subs	r0, r0, #1
  37              	.LVL1:
  38              		.loc 1 67 5 view .LVU4
  39 0006 FF38     		subs	r0, r0, #255
  66:quantum/quantum.c ****     switch (code) {
  40              		.loc 1 66 58 view .LVU5
  41 0008 70B5     		push	{r4, r5, r6, lr}
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 5, -12
  45              		.cfi_offset 6, -8
  46              		.cfi_offset 14, -4
  47              		.loc 1 67 5 view .LVU6
  48 000a 9842     		cmp	r0, r3
  49 000c 19D8     		bhi	.L1
  50              	.LVL2:
  51              	.LBB4:
  52              	.LBI4:
  66:quantum/quantum.c ****     switch (code) {
  53              		.loc 1 66 13 is_stmt 1 view .LVU7
  54              	.LBB5:
  68:quantum/quantum.c ****         case QK_MODS ... QK_MODS_MAX:
  69:quantum/quantum.c ****             break;
  55              		.loc 1 69 13 view .LVU8
  70:quantum/quantum.c ****         default:
  71:quantum/quantum.c ****             return;
  72:quantum/quantum.c ****     }
  73:quantum/quantum.c **** 
  74:quantum/quantum.c ****     uint8_t mods_to_send = 0;
  56              		.loc 1 74 5 view .LVU9
  75:quantum/quantum.c **** 
  76:quantum/quantum.c ****     if (code & QK_RMODS_MIN) {  // Right mod flag is set
  57              		.loc 1 76 5 view .LVU10
  58 000e 8023     		movs	r3, #128
  59 0010 8024     		movs	r4, #128
  60 0012 8025     		movs	r5, #128
  61 0014 5B00     		lsls	r3, r3, #1
  62 0016 1340     		ands	r3, r2
  63 0018 A400     		lsls	r4, r4, #2
  64 001a 1440     		ands	r4, r2
  65 001c ED00     		lsls	r5, r5, #3
  77:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  66              		.loc 1 77 42 is_stmt 0 view .LVU11
  67 001e 581E     		subs	r0, r3, #1
  68 0020 8341     		sbcs	r3, r3, r0
  76:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_RCTL);
  69              		.loc 1 76 8 view .LVU12
  70 0022 D004     		lsls	r0, r2, #19
  71 0024 0ED5     		bpl	.L3
  72              		.loc 1 77 9 is_stmt 1 view .LVU13
  73              		.loc 1 77 42 is_stmt 0 view .LVU14
  74 0026 1801     		lsls	r0, r3, #4
  75              	.LVL3:
  78:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_RSFT);
  76              		.loc 1 78 9 is_stmt 1 view .LVU15
  77              		.loc 1 78 12 is_stmt 0 view .LVU16
  78 0028 002C     		cmp	r4, #0
  79 002a 01D0     		beq	.L5
  80              		.loc 1 78 29 is_stmt 1 view .LVU17
  81              		.loc 1 78 42 is_stmt 0 view .LVU18
  82 002c 2023     		movs	r3, #32
  83 002e 1843     		orrs	r0, r3
  84              	.LVL4:
  85              	.L5:
  79:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_RALT);
  86              		.loc 1 79 9 is_stmt 1 view .LVU19
  87              		.loc 1 79 12 is_stmt 0 view .LVU20
  88 0030 2A42     		tst	r2, r5
  89 0032 01D0     		beq	.L6
  90              		.loc 1 79 29 is_stmt 1 view .LVU21
  91              		.loc 1 79 42 is_stmt 0 view .LVU22
  92 0034 4023     		movs	r3, #64
  93 0036 1843     		orrs	r0, r3
  94              	.LVL5:
  95              	.L6:
  80:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_RGUI);
  96              		.loc 1 80 9 is_stmt 1 view .LVU23
  97              		.loc 1 80 12 is_stmt 0 view .LVU24
  98 0038 1305     		lsls	r3, r2, #20
  99 003a 01D5     		bpl	.L7
 100              		.loc 1 80 29 is_stmt 1 view .LVU25
 101              		.loc 1 80 42 is_stmt 0 view .LVU26
 102 003c 8023     		movs	r3, #128
 103              	.L29:
  81:quantum/quantum.c ****     } else {
  82:quantum/quantum.c ****         if (code & QK_LCTL) mods_to_send |= MOD_BIT(KC_LCTL);
  83:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
  84:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
  85:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 104              		.loc 1 85 42 view .LVU27
 105 003e 1843     		orrs	r0, r3
 106              	.LVL6:
 107              	.L7:
  86:quantum/quantum.c ****     }
  87:quantum/quantum.c **** 
  88:quantum/quantum.c ****     f(mods_to_send);
 108              		.loc 1 88 5 is_stmt 1 view .LVU28
 109 0040 8847     		blx	r1
 110              	.LVL7:
 111              	.L1:
 112              		.loc 1 88 5 is_stmt 0 view .LVU29
 113              	.LBE5:
 114              	.LBE4:
  89:quantum/quantum.c **** }
 115              		.loc 1 89 1 view .LVU30
 116              		@ sp needed
 117 0042 70BD     		pop	{r4, r5, r6, pc}
 118              	.LVL8:
 119              	.L3:
 120              	.LBB7:
 121              	.LBB6:
  82:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
 122              		.loc 1 82 9 is_stmt 1 view .LVU31
  82:quantum/quantum.c ****         if (code & QK_LSFT) mods_to_send |= MOD_BIT(KC_LSFT);
 123              		.loc 1 82 42 is_stmt 0 view .LVU32
 124 0044 D8B2     		uxtb	r0, r3
 125              	.LVL9:
  83:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 126              		.loc 1 83 9 is_stmt 1 view .LVU33
  83:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 127              		.loc 1 83 12 is_stmt 0 view .LVU34
 128 0046 002C     		cmp	r4, #0
 129 0048 01D0     		beq	.L8
  83:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 130              		.loc 1 83 29 is_stmt 1 view .LVU35
  83:quantum/quantum.c ****         if (code & QK_LALT) mods_to_send |= MOD_BIT(KC_LALT);
 131              		.loc 1 83 42 is_stmt 0 view .LVU36
 132 004a 0223     		movs	r3, #2
 133 004c 1843     		orrs	r0, r3
 134              	.LVL10:
 135              	.L8:
  84:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 136              		.loc 1 84 9 is_stmt 1 view .LVU37
  84:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 137              		.loc 1 84 12 is_stmt 0 view .LVU38
 138 004e 2A42     		tst	r2, r5
 139 0050 01D0     		beq	.L9
  84:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 140              		.loc 1 84 29 is_stmt 1 view .LVU39
  84:quantum/quantum.c ****         if (code & QK_LGUI) mods_to_send |= MOD_BIT(KC_LGUI);
 141              		.loc 1 84 42 is_stmt 0 view .LVU40
 142 0052 0423     		movs	r3, #4
 143 0054 1843     		orrs	r0, r3
 144              	.LVL11:
 145              	.L9:
  85:quantum/quantum.c ****     }
 146              		.loc 1 85 9 is_stmt 1 view .LVU41
  85:quantum/quantum.c ****     }
 147              		.loc 1 85 12 is_stmt 0 view .LVU42
 148 0056 1305     		lsls	r3, r2, #20
 149 0058 F2D5     		bpl	.L7
  85:quantum/quantum.c ****     }
 150              		.loc 1 85 29 is_stmt 1 view .LVU43
  85:quantum/quantum.c ****     }
 151              		.loc 1 85 42 is_stmt 0 view .LVU44
 152 005a 0823     		movs	r3, #8
 153 005c EFE7     		b	.L29
 154              	.L31:
 155 005e C046     		.align	2
 156              	.L30:
 157 0060 FF1E0000 		.word	7935
 158              	.LBE6:
 159              	.LBE7:
 160              		.cfi_endproc
 161              	.LFE194:
 163              		.section	.text.register_code16,"ax",%progbits
 164              		.align	1
 165              		.global	register_code16
 166              		.syntax unified
 167              		.code	16
 168              		.thumb_func
 169              		.fpu softvfp
 171              	register_code16:
 172              	.LVL12:
 173              	.LFB195:
  90:quantum/quantum.c **** 
  91:quantum/quantum.c **** void register_code16(uint16_t code) {
 174              		.loc 1 91 37 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
  92:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 178              		.loc 1 92 5 view .LVU46
 179              		.loc 1 92 8 is_stmt 0 view .LVU47
 180 0000 0300     		movs	r3, r0
 181 0002 E03B     		subs	r3, r3, #224
  91:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 182              		.loc 1 91 37 view .LVU48
 183 0004 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
  91:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 187              		.loc 1 91 37 view .LVU49
 188 0006 0400     		movs	r4, r0
 189              		.loc 1 92 8 view .LVU50
 190 0008 072B     		cmp	r3, #7
 191 000a 02D9     		bls	.L33
  93:quantum/quantum.c ****         do_code16(code, register_mods);
  94:quantum/quantum.c ****     } else {
  95:quantum/quantum.c ****         do_code16(code, register_weak_mods);
 192              		.loc 1 95 9 discriminator 1 view .LVU51
 193 000c 0549     		ldr	r1, .L37
  92:quantum/quantum.c ****         do_code16(code, register_mods);
 194              		.loc 1 92 22 discriminator 1 view .LVU52
 195 000e 0028     		cmp	r0, #0
 196 0010 00D1     		bne	.L36
 197              	.L33:
  93:quantum/quantum.c ****         do_code16(code, register_mods);
 198              		.loc 1 93 9 is_stmt 1 view .LVU53
 199 0012 0549     		ldr	r1, .L37+4
 200              	.L36:
 201              		.loc 1 95 9 is_stmt 0 view .LVU54
 202 0014 2000     		movs	r0, r4
 203              	.LVL13:
 204              		.loc 1 95 9 view .LVU55
 205 0016 FFF7FEFF 		bl	do_code16
 206              	.LVL14:
  96:quantum/quantum.c ****     }
  97:quantum/quantum.c ****     register_code(code);
 207              		.loc 1 97 5 is_stmt 1 view .LVU56
 208 001a E0B2     		uxtb	r0, r4
 209 001c FFF7FEFF 		bl	register_code
 210              	.LVL15:
  98:quantum/quantum.c **** }
 211              		.loc 1 98 1 is_stmt 0 view .LVU57
 212              		@ sp needed
 213 0020 10BD     		pop	{r4, pc}
 214              	.L38:
 215 0022 C046     		.align	2
 216              	.L37:
 217 0024 00000000 		.word	register_weak_mods
 218 0028 00000000 		.word	register_mods
 219              		.cfi_endproc
 220              	.LFE195:
 222              		.section	.text.unregister_code16,"ax",%progbits
 223              		.align	1
 224              		.global	unregister_code16
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	unregister_code16:
 231              	.LVL16:
 232              	.LFB196:
  99:quantum/quantum.c **** 
 100:quantum/quantum.c **** void unregister_code16(uint16_t code) {
 233              		.loc 1 100 39 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 101:quantum/quantum.c ****     unregister_code(code);
 237              		.loc 1 101 5 view .LVU59
 100:quantum/quantum.c ****     unregister_code(code);
 238              		.loc 1 100 39 is_stmt 0 view .LVU60
 239 0000 10B5     		push	{r4, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
 100:quantum/quantum.c ****     unregister_code(code);
 243              		.loc 1 100 39 view .LVU61
 244 0002 0400     		movs	r4, r0
 245              		.loc 1 101 5 view .LVU62
 246 0004 C0B2     		uxtb	r0, r0
 247              	.LVL17:
 248              		.loc 1 101 5 view .LVU63
 249 0006 FFF7FEFF 		bl	unregister_code
 250              	.LVL18:
 102:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 251              		.loc 1 102 5 is_stmt 1 view .LVU64
 252              		.loc 1 102 8 is_stmt 0 view .LVU65
 253 000a 2300     		movs	r3, r4
 254 000c E03B     		subs	r3, r3, #224
 255 000e 072B     		cmp	r3, #7
 256 0010 02D9     		bls	.L40
 103:quantum/quantum.c ****         do_code16(code, unregister_mods);
 104:quantum/quantum.c ****     } else {
 105:quantum/quantum.c ****         do_code16(code, unregister_weak_mods);
 257              		.loc 1 105 9 discriminator 1 view .LVU66
 258 0012 0449     		ldr	r1, .L44
 102:quantum/quantum.c ****     if (IS_MOD(code) || code == KC_NO) {
 259              		.loc 1 102 22 discriminator 1 view .LVU67
 260 0014 002C     		cmp	r4, #0
 261 0016 00D1     		bne	.L43
 262              	.L40:
 103:quantum/quantum.c ****         do_code16(code, unregister_mods);
 263              		.loc 1 103 9 is_stmt 1 view .LVU68
 264 0018 0349     		ldr	r1, .L44+4
 265              	.L43:
 266              		.loc 1 105 9 is_stmt 0 view .LVU69
 267 001a 2000     		movs	r0, r4
 268 001c FFF7FEFF 		bl	do_code16
 269              	.LVL19:
 106:quantum/quantum.c ****     }
 107:quantum/quantum.c **** }
 270              		.loc 1 107 1 view .LVU70
 271              		@ sp needed
 272 0020 10BD     		pop	{r4, pc}
 273              	.L45:
 274 0022 C046     		.align	2
 275              	.L44:
 276 0024 00000000 		.word	unregister_weak_mods
 277 0028 00000000 		.word	unregister_mods
 278              		.cfi_endproc
 279              	.LFE196:
 281              		.section	.text.tap_code16,"ax",%progbits
 282              		.align	1
 283              		.global	tap_code16
 284              		.syntax unified
 285              		.code	16
 286              		.thumb_func
 287              		.fpu softvfp
 289              	tap_code16:
 290              	.LVL20:
 291              	.LFB197:
 108:quantum/quantum.c **** 
 109:quantum/quantum.c **** void tap_code16(uint16_t code) {
 292              		.loc 1 109 32 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 110:quantum/quantum.c ****     register_code16(code);
 296              		.loc 1 110 5 view .LVU72
 109:quantum/quantum.c ****     register_code16(code);
 297              		.loc 1 109 32 is_stmt 0 view .LVU73
 298 0000 10B5     		push	{r4, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 4, -8
 301              		.cfi_offset 14, -4
 109:quantum/quantum.c ****     register_code16(code);
 302              		.loc 1 109 32 view .LVU74
 303 0002 0400     		movs	r4, r0
 304              		.loc 1 110 5 view .LVU75
 305 0004 FFF7FEFF 		bl	register_code16
 306              	.LVL21:
 111:quantum/quantum.c **** #if TAP_CODE_DELAY > 0
 112:quantum/quantum.c ****     wait_ms(TAP_CODE_DELAY);
 113:quantum/quantum.c **** #endif
 114:quantum/quantum.c ****     unregister_code16(code);
 307              		.loc 1 114 5 is_stmt 1 view .LVU76
 308 0008 2000     		movs	r0, r4
 309 000a FFF7FEFF 		bl	unregister_code16
 310              	.LVL22:
 115:quantum/quantum.c **** }
 311              		.loc 1 115 1 is_stmt 0 view .LVU77
 312              		@ sp needed
 313 000e 10BD     		pop	{r4, pc}
 314              		.cfi_endproc
 315              	.LFE197:
 317              		.section	.text.process_action_kb,"ax",%progbits
 318              		.align	1
 319              		.weak	process_action_kb
 320              		.syntax unified
 321              		.code	16
 322              		.thumb_func
 323              		.fpu softvfp
 325              	process_action_kb:
 326              	.LVL23:
 327              	.LFB198:
 116:quantum/quantum.c **** 
 117:quantum/quantum.c **** __attribute__((weak)) bool process_action_kb(keyrecord_t *record) { return true; }
 328              		.loc 1 117 67 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              		.loc 1 117 69 view .LVU79
 334              		.loc 1 117 1 is_stmt 0 view .LVU80
 335 0000 0120     		movs	r0, #1
 336              	.LVL24:
 337              		.loc 1 117 1 view .LVU81
 338              		@ sp needed
 339 0002 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE198:
 343              		.section	.text.process_record_user,"ax",%progbits
 344              		.align	1
 345              		.weak	process_record_user
 346              		.syntax unified
 347              		.code	16
 348              		.thumb_func
 349              		.fpu softvfp
 351              	process_record_user:
 352              	.LVL25:
 353              	.LFB200:
 118:quantum/quantum.c **** 
 119:quantum/quantum.c **** __attribute__((weak)) bool process_record_kb(uint16_t keycode, keyrecord_t *record) { return proces
 120:quantum/quantum.c **** 
 121:quantum/quantum.c **** __attribute__((weak)) bool process_record_user(uint16_t keycode, keyrecord_t *record) { return true
 354              		.loc 1 121 87 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              		.loc 1 121 89 view .LVU83
 360              		.loc 1 121 1 is_stmt 0 view .LVU84
 361 0000 0120     		movs	r0, #1
 362              	.LVL26:
 363              		.loc 1 121 1 view .LVU85
 364              		@ sp needed
 365 0002 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE200:
 369              		.section	.text.process_record_kb,"ax",%progbits
 370              		.align	1
 371              		.weak	process_record_kb
 372              		.syntax unified
 373              		.code	16
 374              		.thumb_func
 375              		.fpu softvfp
 377              	process_record_kb:
 378              	.LVL27:
 379              	.LFB199:
 119:quantum/quantum.c **** 
 380              		.loc 1 119 85 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 119:quantum/quantum.c **** 
 384              		.loc 1 119 87 view .LVU87
 119:quantum/quantum.c **** 
 385              		.loc 1 119 85 is_stmt 0 view .LVU88
 386 0000 10B5     		push	{r4, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
 119:quantum/quantum.c **** 
 390              		.loc 1 119 94 view .LVU89
 391 0002 FFF7FEFF 		bl	process_record_user
 392              	.LVL28:
 119:quantum/quantum.c **** 
 393              		.loc 1 119 1 view .LVU90
 394              		@ sp needed
 395 0006 10BD     		pop	{r4, pc}
 396              		.cfi_endproc
 397              	.LFE199:
 399              		.section	.text.post_process_record_user,"ax",%progbits
 400              		.align	1
 401              		.weak	post_process_record_user
 402              		.syntax unified
 403              		.code	16
 404              		.thumb_func
 405              		.fpu softvfp
 407              	post_process_record_user:
 408              	.LVL29:
 409              	.LFB202:
 122:quantum/quantum.c **** 
 123:quantum/quantum.c **** __attribute__((weak)) void post_process_record_kb(uint16_t keycode, keyrecord_t *record) { post_pro
 124:quantum/quantum.c **** 
 125:quantum/quantum.c **** __attribute__((weak)) void post_process_record_user(uint16_t keycode, keyrecord_t *record) {}
 410              		.loc 1 125 92 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              		.loc 1 125 93 view .LVU92
 416              		.loc 1 125 1 is_stmt 0 view .LVU93
 417              		@ sp needed
 418 0000 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE202:
 422              		.section	.text.post_process_record_kb,"ax",%progbits
 423              		.align	1
 424              		.weak	post_process_record_kb
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	post_process_record_kb:
 431              	.LVL30:
 432              	.LFB201:
 123:quantum/quantum.c **** 
 433              		.loc 1 123 90 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 123:quantum/quantum.c **** 
 437              		.loc 1 123 92 view .LVU95
 123:quantum/quantum.c **** 
 438              		.loc 1 123 90 is_stmt 0 view .LVU96
 439 0000 10B5     		push	{r4, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 123:quantum/quantum.c **** 
 443              		.loc 1 123 92 view .LVU97
 444 0002 FFF7FEFF 		bl	post_process_record_user
 445              	.LVL31:
 123:quantum/quantum.c **** 
 446              		.loc 1 123 1 view .LVU98
 447              		@ sp needed
 448 0006 10BD     		pop	{r4, pc}
 449              		.cfi_endproc
 450              	.LFE201:
 452              		.section	.text.get_event_keycode,"ax",%progbits
 453              		.align	1
 454              		.global	get_event_keycode
 455              		.syntax unified
 456              		.code	16
 457              		.thumb_func
 458              		.fpu softvfp
 460              	get_event_keycode:
 461              	.LFB205:
 126:quantum/quantum.c **** 
 127:quantum/quantum.c **** void reset_keyboard(void) {
 128:quantum/quantum.c ****     clear_keyboard();
 129:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 130:quantum/quantum.c ****     process_midi_all_notes_off();
 131:quantum/quantum.c **** #endif
 132:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 133:quantum/quantum.c **** #    ifndef NO_MUSIC_MODE
 134:quantum/quantum.c ****     music_all_notes_off();
 135:quantum/quantum.c **** #    endif
 136:quantum/quantum.c ****     uint16_t timer_start = timer_read();
 137:quantum/quantum.c ****     PLAY_SONG(goodbye_song);
 138:quantum/quantum.c ****     shutdown_user();
 139:quantum/quantum.c ****     while (timer_elapsed(timer_start) < 250) wait_ms(1);
 140:quantum/quantum.c ****     stop_all_notes();
 141:quantum/quantum.c **** #else
 142:quantum/quantum.c ****     shutdown_user();
 143:quantum/quantum.c ****     wait_ms(250);
 144:quantum/quantum.c **** #endif
 145:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 146:quantum/quantum.c ****     haptic_shutdown();
 147:quantum/quantum.c **** #endif
 148:quantum/quantum.c ****     bootloader_jump();
 149:quantum/quantum.c **** }
 150:quantum/quantum.c **** 
 151:quantum/quantum.c **** /* Convert record into usable keycode via the contained event. */
 152:quantum/quantum.c **** uint16_t get_record_keycode(keyrecord_t *record) { return get_event_keycode(record->event); }
 153:quantum/quantum.c **** 
 154:quantum/quantum.c **** /* Convert event into usable keycode. Checks the layer cache to ensure that it
 155:quantum/quantum.c ****  * retains the correct keycode after a layer change, if the key is still pressed.
 156:quantum/quantum.c ****  */
 157:quantum/quantum.c **** uint16_t get_event_keycode(keyevent_t event) {
 462              		.loc 1 157 46 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 8
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 158:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 159:quantum/quantum.c ****     /* TODO: Use store_or_get_action() or a similar function. */
 160:quantum/quantum.c ****     if (!disable_action_cache) {
 466              		.loc 1 160 5 view .LVU100
 157:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 467              		.loc 1 157 46 is_stmt 0 view .LVU101
 468 0000 13B5     		push	{r0, r1, r4, lr}
 469              		.cfi_def_cfa_offset 16
 470              		.cfi_offset 0, -16
 471              		.cfi_offset 1, -12
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474              		.loc 1 160 9 view .LVU102
 475 0002 0F4B     		ldr	r3, .L58
 157:quantum/quantum.c **** #if !defined(NO_ACTION_LAYER) && !defined(STRICT_LAYER_RELEASE)
 476              		.loc 1 157 46 view .LVU103
 477 0004 0090     		str	r0, [sp]
 478              		.loc 1 160 8 view .LVU104
 479 0006 1B78     		ldrb	r3, [r3]
 480 0008 002B     		cmp	r3, #0
 481 000a 14D1     		bne	.L53
 482              	.LBB8:
 161:quantum/quantum.c ****         uint8_t layer;
 483              		.loc 1 161 9 is_stmt 1 view .LVU105
 162:quantum/quantum.c **** 
 163:quantum/quantum.c ****         if (event.pressed) {
 484              		.loc 1 163 9 view .LVU106
 485              		.loc 1 163 12 is_stmt 0 view .LVU107
 486 000c 6B46     		mov	r3, sp
 487 000e 9B78     		ldrb	r3, [r3, #2]
 488 0010 002B     		cmp	r3, #0
 489 0012 0BD0     		beq	.L54
 164:quantum/quantum.c ****             layer = layer_switch_get_layer(event.key);
 490              		.loc 1 164 13 is_stmt 1 view .LVU108
 491              		.loc 1 164 21 is_stmt 0 view .LVU109
 492 0014 FFF7FEFF 		bl	layer_switch_get_layer
 493              	.LVL32:
 494 0018 0400     		movs	r4, r0
 495              	.LVL33:
 165:quantum/quantum.c ****             update_source_layers_cache(event.key, layer);
 496              		.loc 1 165 13 is_stmt 1 view .LVU110
 497 001a 0100     		movs	r1, r0
 498 001c 0098     		ldr	r0, [sp]
 499              	.LVL34:
 500              		.loc 1 165 13 is_stmt 0 view .LVU111
 501 001e FFF7FEFF 		bl	update_source_layers_cache
 502              	.LVL35:
 503              	.L55:
 166:quantum/quantum.c ****         } else {
 167:quantum/quantum.c ****             layer = read_source_layers_cache(event.key);
 168:quantum/quantum.c ****         }
 169:quantum/quantum.c ****         return keymap_key_to_keycode(layer, event.key);
 504              		.loc 1 169 9 is_stmt 1 view .LVU112
 505              		.loc 1 169 16 is_stmt 0 view .LVU113
 506 0022 2000     		movs	r0, r4
 507 0024 0099     		ldr	r1, [sp]
 508              	.LVL36:
 509              	.L57:
 510              		.loc 1 169 16 view .LVU114
 511              	.LBE8:
 170:quantum/quantum.c ****     } else
 171:quantum/quantum.c **** #endif
 172:quantum/quantum.c ****         return keymap_key_to_keycode(layer_switch_get_layer(event.key), event.key);
 512              		.loc 1 172 16 view .LVU115
 513 0026 FFF7FEFF 		bl	keymap_key_to_keycode
 514              	.LVL37:
 173:quantum/quantum.c **** }
 515              		.loc 1 173 1 view .LVU116
 516              		@ sp needed
 517 002a 16BD     		pop	{r1, r2, r4, pc}
 518              	.L54:
 519              	.LBB9:
 167:quantum/quantum.c ****         }
 520              		.loc 1 167 13 is_stmt 1 view .LVU117
 167:quantum/quantum.c ****         }
 521              		.loc 1 167 21 is_stmt 0 view .LVU118
 522 002c 0098     		ldr	r0, [sp]
 523 002e FFF7FEFF 		bl	read_source_layers_cache
 524              	.LVL38:
 525 0032 0400     		movs	r4, r0
 526              	.LVL39:
 167:quantum/quantum.c ****         }
 527              		.loc 1 167 21 view .LVU119
 528 0034 F5E7     		b	.L55
 529              	.LVL40:
 530              	.L53:
 167:quantum/quantum.c ****         }
 531              		.loc 1 167 21 view .LVU120
 532              	.LBE9:
 172:quantum/quantum.c **** }
 533              		.loc 1 172 9 is_stmt 1 view .LVU121
 172:quantum/quantum.c **** }
 534              		.loc 1 172 16 is_stmt 0 view .LVU122
 535 0036 0098     		ldr	r0, [sp]
 536 0038 FFF7FEFF 		bl	layer_switch_get_layer
 537              	.LVL41:
 538 003c 0099     		ldr	r1, [sp]
 539 003e F2E7     		b	.L57
 540              	.L59:
 541              		.align	2
 542              	.L58:
 543 0040 00000000 		.word	disable_action_cache
 544              		.cfi_endproc
 545              	.LFE205:
 547              		.section	.text.get_record_keycode,"ax",%progbits
 548              		.align	1
 549              		.global	get_record_keycode
 550              		.syntax unified
 551              		.code	16
 552              		.thumb_func
 553              		.fpu softvfp
 555              	get_record_keycode:
 556              	.LVL42:
 557              	.LFB204:
 152:quantum/quantum.c **** 
 558              		.loc 1 152 50 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 152:quantum/quantum.c **** 
 562              		.loc 1 152 52 view .LVU124
 152:quantum/quantum.c **** 
 563              		.loc 1 152 50 is_stmt 0 view .LVU125
 564 0000 0200     		movs	r2, r0
 565 0002 10B5     		push	{r4, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 4, -8
 568              		.cfi_offset 14, -4
 152:quantum/quantum.c **** 
 569              		.loc 1 152 59 view .LVU126
 570 0004 5388     		ldrh	r3, [r2, #2]
 571 0006 0088     		ldrh	r0, [r0]
 572              	.LVL43:
 152:quantum/quantum.c **** 
 573              		.loc 1 152 59 view .LVU127
 574 0008 1B04     		lsls	r3, r3, #16
 575 000a 1843     		orrs	r0, r3
 576 000c 9188     		ldrh	r1, [r2, #4]
 577 000e FFF7FEFF 		bl	get_event_keycode
 578              	.LVL44:
 152:quantum/quantum.c **** 
 579              		.loc 1 152 1 view .LVU128
 580              		@ sp needed
 581 0012 10BD     		pop	{r4, pc}
 582              		.cfi_endproc
 583              	.LFE204:
 585              		.section	.text.post_process_record_quantum,"ax",%progbits
 586              		.align	1
 587              		.global	post_process_record_quantum
 588              		.syntax unified
 589              		.code	16
 590              		.thumb_func
 591              		.fpu softvfp
 593              	post_process_record_quantum:
 594              	.LVL45:
 595              	.LFB206:
 174:quantum/quantum.c **** 
 175:quantum/quantum.c **** /* Get keycode, and then call keyboard function */
 176:quantum/quantum.c **** void post_process_record_quantum(keyrecord_t *record) {
 596              		.loc 1 176 55 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 177:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 600              		.loc 1 177 5 view .LVU130
 176:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 601              		.loc 1 176 55 is_stmt 0 view .LVU131
 602 0000 10B5     		push	{r4, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 176:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 606              		.loc 1 176 55 view .LVU132
 607 0002 0400     		movs	r4, r0
 608              		.loc 1 177 24 view .LVU133
 609 0004 FFF7FEFF 		bl	get_record_keycode
 610              	.LVL46:
 178:quantum/quantum.c ****     post_process_record_kb(keycode, record);
 611              		.loc 1 178 5 is_stmt 1 view .LVU134
 612 0008 2100     		movs	r1, r4
 613 000a FFF7FEFF 		bl	post_process_record_kb
 614              	.LVL47:
 179:quantum/quantum.c **** }
 615              		.loc 1 179 1 is_stmt 0 view .LVU135
 616              		@ sp needed
 617              	.LVL48:
 618              		.loc 1 179 1 view .LVU136
 619 000e 10BD     		pop	{r4, pc}
 620              		.cfi_endproc
 621              	.LFE206:
 623              		.section	.text.send_char,"ax",%progbits
 624              		.align	1
 625              		.global	send_char
 626              		.syntax unified
 627              		.code	16
 628              		.thumb_func
 629              		.fpu softvfp
 631              	send_char:
 632              	.LVL49:
 633              	.LFB212:
 180:quantum/quantum.c **** 
 181:quantum/quantum.c **** /* Core keycode function, hands off handling to other functions,
 182:quantum/quantum.c ****     then processes internal quantum keycodes, and then processes
 183:quantum/quantum.c ****     ACTIONs.                                                      */
 184:quantum/quantum.c **** bool process_record_quantum(keyrecord_t *record) {
 185:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 186:quantum/quantum.c **** 
 187:quantum/quantum.c ****     // This is how you use actions here
 188:quantum/quantum.c ****     // if (keycode == KC_LEAD) {
 189:quantum/quantum.c ****     //   action_t action;
 190:quantum/quantum.c ****     //   action.code = ACTION_DEFAULT_LAYER_SET(0);
 191:quantum/quantum.c ****     //   process_action(record, action);
 192:quantum/quantum.c ****     //   return false;
 193:quantum/quantum.c ****     // }
 194:quantum/quantum.c **** 
 195:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 196:quantum/quantum.c ****     if (velocikey_enabled() && record->event.pressed) {
 197:quantum/quantum.c ****         velocikey_accelerate();
 198:quantum/quantum.c ****     }
 199:quantum/quantum.c **** #endif
 200:quantum/quantum.c **** 
 201:quantum/quantum.c **** #ifdef WPM_ENABLE
 202:quantum/quantum.c ****     if (record->event.pressed) {
 203:quantum/quantum.c ****         update_wpm(keycode);
 204:quantum/quantum.c ****     }
 205:quantum/quantum.c **** #endif
 206:quantum/quantum.c **** 
 207:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 208:quantum/quantum.c ****     preprocess_tap_dance(keycode, record);
 209:quantum/quantum.c **** #endif
 210:quantum/quantum.c **** 
 211:quantum/quantum.c ****     if (!(
 212:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 213:quantum/quantum.c ****             // Must run first to be able to mask key_up events.
 214:quantum/quantum.c ****             process_key_lock(&keycode, record) &&
 215:quantum/quantum.c **** #endif
 216:quantum/quantum.c **** #if defined(DYNAMIC_MACRO_ENABLE) && !defined(DYNAMIC_MACRO_USER_CALL)
 217:quantum/quantum.c ****             // Must run asap to ensure all keypresses are recorded.
 218:quantum/quantum.c ****             process_dynamic_macro(keycode, record) &&
 219:quantum/quantum.c **** #endif
 220:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(AUDIO_CLICKY)
 221:quantum/quantum.c ****             process_clicky(keycode, record) &&
 222:quantum/quantum.c **** #endif  // AUDIO_CLICKY
 223:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 224:quantum/quantum.c ****             process_haptic(keycode, record) &&
 225:quantum/quantum.c **** #endif  // HAPTIC_ENABLE
 226:quantum/quantum.c **** #if defined(RGB_MATRIX_ENABLE)
 227:quantum/quantum.c ****             process_rgb_matrix(keycode, record) &&
 228:quantum/quantum.c **** #endif
 229:quantum/quantum.c **** #if defined(VIA_ENABLE)
 230:quantum/quantum.c ****             process_record_via(keycode, record) &&
 231:quantum/quantum.c **** #endif
 232:quantum/quantum.c ****             process_record_kb(keycode, record) &&
 233:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 234:quantum/quantum.c ****             process_midi(keycode, record) &&
 235:quantum/quantum.c **** #endif
 236:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 237:quantum/quantum.c ****             process_audio(keycode, record) &&
 238:quantum/quantum.c **** #endif
 239:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
 240:quantum/quantum.c ****             process_backlight(keycode, record) &&
 241:quantum/quantum.c **** #endif
 242:quantum/quantum.c **** #ifdef STENO_ENABLE
 243:quantum/quantum.c ****             process_steno(keycode, record) &&
 244:quantum/quantum.c **** #endif
 245:quantum/quantum.c **** #if (defined(AUDIO_ENABLE) || (defined(MIDI_ENABLE) && defined(MIDI_BASIC))) && !defined(NO_MUSIC_M
 246:quantum/quantum.c ****             process_music(keycode, record) &&
 247:quantum/quantum.c **** #endif
 248:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 249:quantum/quantum.c ****             process_tap_dance(keycode, record) &&
 250:quantum/quantum.c **** #endif
 251:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 252:quantum/quantum.c ****             process_unicode_common(keycode, record) &&
 253:quantum/quantum.c **** #endif
 254:quantum/quantum.c **** #ifdef LEADER_ENABLE
 255:quantum/quantum.c ****             process_leader(keycode, record) &&
 256:quantum/quantum.c **** #endif
 257:quantum/quantum.c **** #ifdef COMBO_ENABLE
 258:quantum/quantum.c ****             process_combo(keycode, record) &&
 259:quantum/quantum.c **** #endif
 260:quantum/quantum.c **** #ifdef PRINTING_ENABLE
 261:quantum/quantum.c ****             process_printer(keycode, record) &&
 262:quantum/quantum.c **** #endif
 263:quantum/quantum.c **** #ifdef AUTO_SHIFT_ENABLE
 264:quantum/quantum.c ****             process_auto_shift(keycode, record) &&
 265:quantum/quantum.c **** #endif
 266:quantum/quantum.c **** #ifdef TERMINAL_ENABLE
 267:quantum/quantum.c ****             process_terminal(keycode, record) &&
 268:quantum/quantum.c **** #endif
 269:quantum/quantum.c **** #ifdef SPACE_CADET_ENABLE
 270:quantum/quantum.c ****             process_space_cadet(keycode, record) &&
 271:quantum/quantum.c **** #endif
 272:quantum/quantum.c **** #ifdef MAGIC_KEYCODE_ENABLE
 273:quantum/quantum.c ****             process_magic(keycode, record) &&
 274:quantum/quantum.c **** #endif
 275:quantum/quantum.c **** #ifdef GRAVE_ESC_ENABLE
 276:quantum/quantum.c ****             process_grave_esc(keycode, record) &&
 277:quantum/quantum.c **** #endif
 278:quantum/quantum.c **** #if defined(RGBLIGHT_ENABLE) || defined(RGB_MATRIX_ENABLE)
 279:quantum/quantum.c ****             process_rgb(keycode, record) &&
 280:quantum/quantum.c **** #endif
 281:quantum/quantum.c ****             true)) {
 282:quantum/quantum.c ****         return false;
 283:quantum/quantum.c ****     }
 284:quantum/quantum.c **** 
 285:quantum/quantum.c ****     if (record->event.pressed) {
 286:quantum/quantum.c ****         switch (keycode) {
 287:quantum/quantum.c **** #ifndef NO_RESET
 288:quantum/quantum.c ****             case RESET:
 289:quantum/quantum.c ****                 reset_keyboard();
 290:quantum/quantum.c ****                 return false;
 291:quantum/quantum.c **** #endif
 292:quantum/quantum.c **** #ifndef NO_DEBUG
 293:quantum/quantum.c ****             case DEBUG:
 294:quantum/quantum.c ****                 debug_enable ^= 1;
 295:quantum/quantum.c ****                 if (debug_enable) {
 296:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 297:quantum/quantum.c ****                 } else {
 298:quantum/quantum.c ****                     print("DEBUG: disabled.\n");
 299:quantum/quantum.c ****                 }
 300:quantum/quantum.c **** #endif
 301:quantum/quantum.c ****                 return false;
 302:quantum/quantum.c ****             case EEPROM_RESET:
 303:quantum/quantum.c ****                 eeconfig_init();
 304:quantum/quantum.c ****                 return false;
 305:quantum/quantum.c **** #ifdef FAUXCLICKY_ENABLE
 306:quantum/quantum.c ****             case FC_TOG:
 307:quantum/quantum.c ****                 FAUXCLICKY_TOGGLE;
 308:quantum/quantum.c ****                 return false;
 309:quantum/quantum.c ****             case FC_ON:
 310:quantum/quantum.c ****                 FAUXCLICKY_ON;
 311:quantum/quantum.c ****                 return false;
 312:quantum/quantum.c ****             case FC_OFF:
 313:quantum/quantum.c ****                 FAUXCLICKY_OFF;
 314:quantum/quantum.c ****                 return false;
 315:quantum/quantum.c **** #endif
 316:quantum/quantum.c **** #ifdef VELOCIKEY_ENABLE
 317:quantum/quantum.c ****             case VLK_TOG:
 318:quantum/quantum.c ****                 velocikey_toggle();
 319:quantum/quantum.c ****                 return false;
 320:quantum/quantum.c **** #endif
 321:quantum/quantum.c **** #ifdef BLUETOOTH_ENABLE
 322:quantum/quantum.c ****             case OUT_AUTO:
 323:quantum/quantum.c ****                 set_output(OUTPUT_AUTO);
 324:quantum/quantum.c ****                 return false;
 325:quantum/quantum.c ****             case OUT_USB:
 326:quantum/quantum.c ****                 set_output(OUTPUT_USB);
 327:quantum/quantum.c ****                 return false;
 328:quantum/quantum.c ****             case OUT_BT:
 329:quantum/quantum.c ****                 set_output(OUTPUT_BLUETOOTH);
 330:quantum/quantum.c ****                 return false;
 331:quantum/quantum.c **** #endif
 332:quantum/quantum.c ****         }
 333:quantum/quantum.c ****     }
 334:quantum/quantum.c **** 
 335:quantum/quantum.c ****     return process_action_kb(record);
 336:quantum/quantum.c **** }
 337:quantum/quantum.c **** 
 338:quantum/quantum.c **** // clang-format off
 339:quantum/quantum.c **** 
 340:quantum/quantum.c **** /* Bit-Packed look-up table to convert an ASCII character to whether
 341:quantum/quantum.c ****  * [Shift] needs to be sent with the keycode.
 342:quantum/quantum.c ****  */
 343:quantum/quantum.c **** __attribute__((weak)) const uint8_t ascii_to_shift_lut[16] PROGMEM = {
 344:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 345:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 346:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 347:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 348:quantum/quantum.c **** 
 349:quantum/quantum.c ****     KCLUT_ENTRY(0, 1, 1, 1, 1, 1, 1, 0),
 350:quantum/quantum.c ****     KCLUT_ENTRY(1, 1, 1, 1, 0, 0, 0, 0),
 351:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 352:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 1, 0, 1, 0, 1, 1),
 353:quantum/quantum.c ****     KCLUT_ENTRY(1, 1, 1, 1, 1, 1, 1, 1),
 354:quantum/quantum.c ****     KCLUT_ENTRY(1, 1, 1, 1, 1, 1, 1, 1),
 355:quantum/quantum.c ****     KCLUT_ENTRY(1, 1, 1, 1, 1, 1, 1, 1),
 356:quantum/quantum.c ****     KCLUT_ENTRY(1, 1, 1, 0, 0, 0, 1, 1),
 357:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 358:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 359:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 360:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 1, 1, 1, 1, 0),
 361:quantum/quantum.c **** };
 362:quantum/quantum.c **** 
 363:quantum/quantum.c **** /* Bit-Packed look-up table to convert an ASCII character to whether
 364:quantum/quantum.c ****  * [AltGr] needs to be sent with the keycode.
 365:quantum/quantum.c ****  */
 366:quantum/quantum.c **** __attribute__((weak)) const uint8_t ascii_to_altgr_lut[16] PROGMEM = {
 367:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 368:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 369:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 370:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 371:quantum/quantum.c **** 
 372:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 373:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 374:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 375:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 376:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 377:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 378:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 379:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 380:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 381:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 382:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 383:quantum/quantum.c ****     KCLUT_ENTRY(0, 0, 0, 0, 0, 0, 0, 0),
 384:quantum/quantum.c **** };
 385:quantum/quantum.c **** 
 386:quantum/quantum.c **** /* Look-up table to convert an ASCII character to a keycode.
 387:quantum/quantum.c ****  */
 388:quantum/quantum.c **** __attribute__((weak)) const uint8_t ascii_to_keycode_lut[128] PROGMEM = {
 389:quantum/quantum.c ****     // NUL   SOH      STX      ETX      EOT      ENQ      ACK      BEL
 390:quantum/quantum.c ****     XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,
 391:quantum/quantum.c ****     // BS    TAB      LF       VT       FF       CR       SO       SI
 392:quantum/quantum.c ****     KC_BSPC, KC_TAB,  KC_ENT,  XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,
 393:quantum/quantum.c ****     // DLE   DC1      DC2      DC3      DC4      NAK      SYN      ETB
 394:quantum/quantum.c ****     XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,
 395:quantum/quantum.c ****     // CAN   EM       SUB      ESC      FS       GS       RS       US
 396:quantum/quantum.c ****     XXXXXXX, XXXXXXX, XXXXXXX, KC_ESC,  XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,
 397:quantum/quantum.c **** 
 398:quantum/quantum.c ****     //       !        "        #        $        %        &        '
 399:quantum/quantum.c ****     KC_SPC,  KC_1,    KC_QUOT, KC_3,    KC_4,    KC_5,    KC_7,    KC_QUOT,
 400:quantum/quantum.c ****     // (     )        *        +        ,        -        .        /
 401:quantum/quantum.c ****     KC_9,    KC_0,    KC_8,    KC_EQL,  KC_COMM, KC_MINS, KC_DOT,  KC_SLSH,
 402:quantum/quantum.c ****     // 0     1        2        3        4        5        6        7
 403:quantum/quantum.c ****     KC_0,    KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,
 404:quantum/quantum.c ****     // 8     9        :        ;        <        =        >        ?
 405:quantum/quantum.c ****     KC_8,    KC_9,    KC_SCLN, KC_SCLN, KC_COMM, KC_EQL,  KC_DOT,  KC_SLSH,
 406:quantum/quantum.c ****     // @     A        B        C        D        E        F        G
 407:quantum/quantum.c ****     KC_2,    KC_A,    KC_B,    KC_C,    KC_D,    KC_E,    KC_F,    KC_G,
 408:quantum/quantum.c ****     // H     I        J        K        L        M        N        O
 409:quantum/quantum.c ****     KC_H,    KC_I,    KC_J,    KC_K,    KC_L,    KC_M,    KC_N,    KC_O,
 410:quantum/quantum.c ****     // P     Q        R        S        T        U        V        W
 411:quantum/quantum.c ****     KC_P,    KC_Q,    KC_R,    KC_S,    KC_T,    KC_U,    KC_V,    KC_W,
 412:quantum/quantum.c ****     // X     Y        Z        [        \        ]        ^        _
 413:quantum/quantum.c ****     KC_X,    KC_Y,    KC_Z,    KC_LBRC, KC_BSLS, KC_RBRC, KC_6,    KC_MINS,
 414:quantum/quantum.c ****     // `     a        b        c        d        e        f        g
 415:quantum/quantum.c ****     KC_GRV,  KC_A,    KC_B,    KC_C,    KC_D,    KC_E,    KC_F,    KC_G,
 416:quantum/quantum.c ****     // h     i        j        k        l        m        n        o
 417:quantum/quantum.c ****     KC_H,    KC_I,    KC_J,    KC_K,    KC_L,    KC_M,    KC_N,    KC_O,
 418:quantum/quantum.c ****     // p     q        r        s        t        u        v        w
 419:quantum/quantum.c ****     KC_P,    KC_Q,    KC_R,    KC_S,    KC_T,    KC_U,    KC_V,    KC_W,
 420:quantum/quantum.c ****     // x     y        z        {        |        }        ~        DEL
 421:quantum/quantum.c ****     KC_X,    KC_Y,    KC_Z,    KC_LBRC, KC_BSLS, KC_RBRC, KC_GRV,  KC_DEL
 422:quantum/quantum.c **** };
 423:quantum/quantum.c **** 
 424:quantum/quantum.c **** // clang-format on
 425:quantum/quantum.c **** 
 426:quantum/quantum.c **** // Note: we bit-pack in "reverse" order to optimize loading
 427:quantum/quantum.c **** #define PGM_LOADBIT(mem, pos) ((pgm_read_byte(&((mem)[(pos) / 8])) >> ((pos) % 8)) & 0x01)
 428:quantum/quantum.c **** 
 429:quantum/quantum.c **** void send_string(const char *str) { send_string_with_delay(str, 0); }
 430:quantum/quantum.c **** 
 431:quantum/quantum.c **** void send_string_P(const char *str) { send_string_with_delay_P(str, 0); }
 432:quantum/quantum.c **** 
 433:quantum/quantum.c **** void send_string_with_delay(const char *str, uint8_t interval) {
 434:quantum/quantum.c ****     while (1) {
 435:quantum/quantum.c ****         char ascii_code = *str;
 436:quantum/quantum.c ****         if (!ascii_code) break;
 437:quantum/quantum.c ****         if (ascii_code == SS_QMK_PREFIX) {
 438:quantum/quantum.c ****             ascii_code = *(++str);
 439:quantum/quantum.c ****             if (ascii_code == SS_TAP_CODE) {
 440:quantum/quantum.c ****                 // tap
 441:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 442:quantum/quantum.c ****                 register_code(keycode);
 443:quantum/quantum.c ****                 unregister_code(keycode);
 444:quantum/quantum.c ****             } else if (ascii_code == SS_DOWN_CODE) {
 445:quantum/quantum.c ****                 // down
 446:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 447:quantum/quantum.c ****                 register_code(keycode);
 448:quantum/quantum.c ****             } else if (ascii_code == SS_UP_CODE) {
 449:quantum/quantum.c ****                 // up
 450:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 451:quantum/quantum.c ****                 unregister_code(keycode);
 452:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 453:quantum/quantum.c ****                 // delay
 454:quantum/quantum.c ****                 int     ms      = 0;
 455:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 456:quantum/quantum.c ****                 while (isdigit(keycode)) {
 457:quantum/quantum.c ****                     ms *= 10;
 458:quantum/quantum.c ****                     ms += keycode - '0';
 459:quantum/quantum.c ****                     keycode = *(++str);
 460:quantum/quantum.c ****                 }
 461:quantum/quantum.c ****                 while (ms--) wait_ms(1);
 462:quantum/quantum.c ****             }
 463:quantum/quantum.c ****         } else {
 464:quantum/quantum.c ****             send_char(ascii_code);
 465:quantum/quantum.c ****         }
 466:quantum/quantum.c ****         ++str;
 467:quantum/quantum.c ****         // interval
 468:quantum/quantum.c ****         {
 469:quantum/quantum.c ****             uint8_t ms = interval;
 470:quantum/quantum.c ****             while (ms--) wait_ms(1);
 471:quantum/quantum.c ****         }
 472:quantum/quantum.c ****     }
 473:quantum/quantum.c **** }
 474:quantum/quantum.c **** 
 475:quantum/quantum.c **** void send_string_with_delay_P(const char *str, uint8_t interval) {
 476:quantum/quantum.c ****     while (1) {
 477:quantum/quantum.c ****         char ascii_code = pgm_read_byte(str);
 478:quantum/quantum.c ****         if (!ascii_code) break;
 479:quantum/quantum.c ****         if (ascii_code == SS_QMK_PREFIX) {
 480:quantum/quantum.c ****             ascii_code = pgm_read_byte(++str);
 481:quantum/quantum.c ****             if (ascii_code == SS_TAP_CODE) {
 482:quantum/quantum.c ****                 // tap
 483:quantum/quantum.c ****                 uint8_t keycode = pgm_read_byte(++str);
 484:quantum/quantum.c ****                 register_code(keycode);
 485:quantum/quantum.c ****                 unregister_code(keycode);
 486:quantum/quantum.c ****             } else if (ascii_code == SS_DOWN_CODE) {
 487:quantum/quantum.c ****                 // down
 488:quantum/quantum.c ****                 uint8_t keycode = pgm_read_byte(++str);
 489:quantum/quantum.c ****                 register_code(keycode);
 490:quantum/quantum.c ****             } else if (ascii_code == SS_UP_CODE) {
 491:quantum/quantum.c ****                 // up
 492:quantum/quantum.c ****                 uint8_t keycode = pgm_read_byte(++str);
 493:quantum/quantum.c ****                 unregister_code(keycode);
 494:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 495:quantum/quantum.c ****                 // delay
 496:quantum/quantum.c ****                 int     ms      = 0;
 497:quantum/quantum.c ****                 uint8_t keycode = pgm_read_byte(++str);
 498:quantum/quantum.c ****                 while (isdigit(keycode)) {
 499:quantum/quantum.c ****                     ms *= 10;
 500:quantum/quantum.c ****                     ms += keycode - '0';
 501:quantum/quantum.c ****                     keycode = pgm_read_byte(++str);
 502:quantum/quantum.c ****                 }
 503:quantum/quantum.c ****                 while (ms--) wait_ms(1);
 504:quantum/quantum.c ****             }
 505:quantum/quantum.c ****         } else {
 506:quantum/quantum.c ****             send_char(ascii_code);
 507:quantum/quantum.c ****         }
 508:quantum/quantum.c ****         ++str;
 509:quantum/quantum.c ****         // interval
 510:quantum/quantum.c ****         {
 511:quantum/quantum.c ****             uint8_t ms = interval;
 512:quantum/quantum.c ****             while (ms--) wait_ms(1);
 513:quantum/quantum.c ****         }
 514:quantum/quantum.c ****     }
 515:quantum/quantum.c **** }
 516:quantum/quantum.c **** 
 517:quantum/quantum.c **** void send_char(char ascii_code) {
 634              		.loc 1 517 33 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 518:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(SENDSTRING_BELL)
 519:quantum/quantum.c ****     if (ascii_code == '\a') {  // BEL
 520:quantum/quantum.c ****         PLAY_SONG(bell_song);
 521:quantum/quantum.c ****         return;
 522:quantum/quantum.c ****     }
 523:quantum/quantum.c **** #endif
 524:quantum/quantum.c **** 
 525:quantum/quantum.c ****     uint8_t keycode    = pgm_read_byte(&ascii_to_keycode_lut[(uint8_t)ascii_code]);
 638              		.loc 1 525 5 view .LVU138
 639              		.loc 1 525 13 is_stmt 0 view .LVU139
 640 0000 124B     		ldr	r3, .L79
 517:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(SENDSTRING_BELL)
 641              		.loc 1 517 33 view .LVU140
 642 0002 70B5     		push	{r4, r5, r6, lr}
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 14, -4
 648              		.loc 1 525 13 view .LVU141
 649 0004 1E5C     		ldrb	r6, [r3, r0]
 650              	.LVL50:
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 651              		.loc 1 526 5 is_stmt 1 view .LVU142
 652              		.loc 1 526 26 is_stmt 0 view .LVU143
 653 0006 0723     		movs	r3, #7
 654 0008 C208     		lsrs	r2, r0, #3
 527:quantum/quantum.c ****     bool    is_altgred = PGM_LOADBIT(ascii_to_altgr_lut, (uint8_t)ascii_code);
 655              		.loc 1 527 26 view .LVU144
 656 000a 1149     		ldr	r1, .L79+4
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 657              		.loc 1 526 26 view .LVU145
 658 000c 1840     		ands	r0, r3
 659              	.LVL51:
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 660              		.loc 1 526 26 view .LVU146
 661 000e 114B     		ldr	r3, .L79+8
 662              		.loc 1 527 26 view .LVU147
 663 0010 8D5C     		ldrb	r5, [r1, r2]
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 664              		.loc 1 526 26 view .LVU148
 665 0012 9C5C     		ldrb	r4, [r3, r2]
 666              		.loc 1 527 26 view .LVU149
 667 0014 0541     		asrs	r5, r5, r0
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 668              		.loc 1 526 26 view .LVU150
 669 0016 0123     		movs	r3, #1
 670 0018 0441     		asrs	r4, r4, r0
 671              		.loc 1 527 26 view .LVU151
 672 001a 1D40     		ands	r5, r3
 526:quantum/quantum.c ****     bool    is_shifted = PGM_LOADBIT(ascii_to_shift_lut, (uint8_t)ascii_code);
 673              		.loc 1 526 26 view .LVU152
 674 001c 1C40     		ands	r4, r3
 675              	.LVL52:
 676              		.loc 1 527 5 is_stmt 1 view .LVU153
 528:quantum/quantum.c **** 
 529:quantum/quantum.c ****     if (is_shifted) {
 677              		.loc 1 529 5 view .LVU154
 678              		.loc 1 529 8 is_stmt 0 view .LVU155
 679 001e 02D0     		beq	.L63
 530:quantum/quantum.c ****         register_code(KC_LSFT);
 680              		.loc 1 530 9 is_stmt 1 view .LVU156
 681 0020 E120     		movs	r0, #225
 682 0022 FFF7FEFF 		bl	register_code
 683              	.LVL53:
 684              	.L63:
 531:quantum/quantum.c ****     }
 532:quantum/quantum.c ****     if (is_altgred) {
 685              		.loc 1 532 5 view .LVU157
 686              		.loc 1 532 8 is_stmt 0 view .LVU158
 687 0026 002D     		cmp	r5, #0
 688 0028 02D0     		beq	.L64
 533:quantum/quantum.c ****         register_code(KC_RALT);
 689              		.loc 1 533 9 is_stmt 1 view .LVU159
 690 002a E620     		movs	r0, #230
 691 002c FFF7FEFF 		bl	register_code
 692              	.LVL54:
 693              	.L64:
 534:quantum/quantum.c ****     }
 535:quantum/quantum.c ****     tap_code(keycode);
 694              		.loc 1 535 5 view .LVU160
 695 0030 3000     		movs	r0, r6
 696 0032 FFF7FEFF 		bl	tap_code
 697              	.LVL55:
 536:quantum/quantum.c ****     if (is_altgred) {
 698              		.loc 1 536 5 view .LVU161
 699              		.loc 1 536 8 is_stmt 0 view .LVU162
 700 0036 002D     		cmp	r5, #0
 701 0038 02D0     		beq	.L65
 537:quantum/quantum.c ****         unregister_code(KC_RALT);
 702              		.loc 1 537 9 is_stmt 1 view .LVU163
 703 003a E620     		movs	r0, #230
 704 003c FFF7FEFF 		bl	unregister_code
 705              	.LVL56:
 706              	.L65:
 538:quantum/quantum.c ****     }
 539:quantum/quantum.c ****     if (is_shifted) {
 707              		.loc 1 539 5 view .LVU164
 708              		.loc 1 539 8 is_stmt 0 view .LVU165
 709 0040 002C     		cmp	r4, #0
 710 0042 02D0     		beq	.L62
 540:quantum/quantum.c ****         unregister_code(KC_LSFT);
 711              		.loc 1 540 9 is_stmt 1 view .LVU166
 712 0044 E120     		movs	r0, #225
 713 0046 FFF7FEFF 		bl	unregister_code
 714              	.LVL57:
 715              	.L62:
 541:quantum/quantum.c ****     }
 542:quantum/quantum.c **** }
 716              		.loc 1 542 1 is_stmt 0 view .LVU167
 717              		@ sp needed
 718              	.LVL58:
 719              	.LVL59:
 720              	.LVL60:
 721              		.loc 1 542 1 view .LVU168
 722 004a 70BD     		pop	{r4, r5, r6, pc}
 723              	.L80:
 724              		.align	2
 725              	.L79:
 726 004c 00000000 		.word	ascii_to_keycode_lut
 727 0050 00000000 		.word	ascii_to_altgr_lut
 728 0054 00000000 		.word	ascii_to_shift_lut
 729              		.cfi_endproc
 730              	.LFE212:
 732              		.section	.text.send_string_with_delay,"ax",%progbits
 733              		.align	1
 734              		.global	send_string_with_delay
 735              		.syntax unified
 736              		.code	16
 737              		.thumb_func
 738              		.fpu softvfp
 740              	send_string_with_delay:
 741              	.LVL61:
 742              	.LFB210:
 433:quantum/quantum.c ****     while (1) {
 743              		.loc 1 433 64 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 433:quantum/quantum.c ****     while (1) {
 747              		.loc 1 433 64 is_stmt 0 view .LVU170
 748 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 749              		.cfi_def_cfa_offset 32
 750              		.cfi_offset 0, -32
 751              		.cfi_offset 1, -28
 752              		.cfi_offset 2, -24
 753              		.cfi_offset 4, -20
 754              		.cfi_offset 5, -16
 755              		.cfi_offset 6, -12
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 433:quantum/quantum.c ****     while (1) {
 758              		.loc 1 433 64 view .LVU171
 759 0002 0400     		movs	r4, r0
 760              	.LBB10:
 761              	.LBB11:
 456:quantum/quantum.c ****                     ms *= 10;
 762              		.loc 1 456 23 view .LVU172
 763 0004 0427     		movs	r7, #4
 457:quantum/quantum.c ****                     ms += keycode - '0';
 764              		.loc 1 457 24 view .LVU173
 765 0006 0A26     		movs	r6, #10
 766              	.LBE11:
 767              	.LBE10:
 433:quantum/quantum.c ****     while (1) {
 768              		.loc 1 433 64 view .LVU174
 769 0008 0191     		str	r1, [sp, #4]
 770              	.LVL62:
 771              	.L95:
 434:quantum/quantum.c ****         char ascii_code = *str;
 772              		.loc 1 434 5 is_stmt 1 view .LVU175
 773              	.LBB20:
 435:quantum/quantum.c ****         if (!ascii_code) break;
 774              		.loc 1 435 9 view .LVU176
 435:quantum/quantum.c ****         if (!ascii_code) break;
 775              		.loc 1 435 14 is_stmt 0 view .LVU177
 776 000a 2078     		ldrb	r0, [r4]
 777              	.LVL63:
 436:quantum/quantum.c ****         if (ascii_code == SS_QMK_PREFIX) {
 778              		.loc 1 436 9 is_stmt 1 view .LVU178
 436:quantum/quantum.c ****         if (ascii_code == SS_QMK_PREFIX) {
 779              		.loc 1 436 12 is_stmt 0 view .LVU179
 780 000c 0028     		cmp	r0, #0
 781 000e 3ED0     		beq	.L81
 437:quantum/quantum.c ****             ascii_code = *(++str);
 782              		.loc 1 437 9 is_stmt 1 view .LVU180
 437:quantum/quantum.c ****             ascii_code = *(++str);
 783              		.loc 1 437 12 is_stmt 0 view .LVU181
 784 0010 0128     		cmp	r0, #1
 785 0012 39D1     		bne	.L83
 438:quantum/quantum.c ****             if (ascii_code == SS_TAP_CODE) {
 786              		.loc 1 438 13 is_stmt 1 view .LVU182
 787              	.LVL64:
 438:quantum/quantum.c ****             if (ascii_code == SS_TAP_CODE) {
 788              		.loc 1 438 24 is_stmt 0 view .LVU183
 789 0014 6378     		ldrb	r3, [r4, #1]
 790              	.LVL65:
 439:quantum/quantum.c ****                 // tap
 791              		.loc 1 439 13 is_stmt 1 view .LVU184
 439:quantum/quantum.c ****                 // tap
 792              		.loc 1 439 16 is_stmt 0 view .LVU185
 793 0016 012B     		cmp	r3, #1
 794 0018 08D1     		bne	.L84
 795              	.LBB12:
 441:quantum/quantum.c ****                 register_code(keycode);
 796              		.loc 1 441 17 is_stmt 1 view .LVU186
 441:quantum/quantum.c ****                 register_code(keycode);
 797              		.loc 1 441 25 is_stmt 0 view .LVU187
 798 001a A51C     		adds	r5, r4, #2
 799              	.LVL66:
 441:quantum/quantum.c ****                 register_code(keycode);
 800              		.loc 1 441 25 view .LVU188
 801 001c A478     		ldrb	r4, [r4, #2]
 802              	.LVL67:
 442:quantum/quantum.c ****                 unregister_code(keycode);
 803              		.loc 1 442 17 is_stmt 1 view .LVU189
 804 001e 2000     		movs	r0, r4
 805 0020 FFF7FEFF 		bl	register_code
 806              	.LVL68:
 443:quantum/quantum.c ****             } else if (ascii_code == SS_DOWN_CODE) {
 807              		.loc 1 443 17 view .LVU190
 808 0024 2000     		movs	r0, r4
 809              	.LVL69:
 810              	.L96:
 443:quantum/quantum.c ****             } else if (ascii_code == SS_DOWN_CODE) {
 811              		.loc 1 443 17 is_stmt 0 view .LVU191
 812              	.LBE12:
 813              	.LBB13:
 451:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 814              		.loc 1 451 17 view .LVU192
 815 0026 FFF7FEFF 		bl	unregister_code
 816              	.LVL70:
 817 002a 05E0     		b	.L97
 818              	.LVL71:
 819              	.L84:
 451:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 820              		.loc 1 451 17 view .LVU193
 821              	.LBE13:
 444:quantum/quantum.c ****                 // down
 822              		.loc 1 444 20 is_stmt 1 view .LVU194
 444:quantum/quantum.c ****                 // down
 823              		.loc 1 444 23 is_stmt 0 view .LVU195
 824 002c 022B     		cmp	r3, #2
 825 002e 0ED1     		bne	.L86
 826              	.LBB14:
 446:quantum/quantum.c ****                 register_code(keycode);
 827              		.loc 1 446 17 is_stmt 1 view .LVU196
 447:quantum/quantum.c ****             } else if (ascii_code == SS_UP_CODE) {
 828              		.loc 1 447 17 is_stmt 0 view .LVU197
 829 0030 A078     		ldrb	r0, [r4, #2]
 446:quantum/quantum.c ****                 register_code(keycode);
 830              		.loc 1 446 25 view .LVU198
 831 0032 A51C     		adds	r5, r4, #2
 832              	.LVL72:
 447:quantum/quantum.c ****             } else if (ascii_code == SS_UP_CODE) {
 833              		.loc 1 447 17 is_stmt 1 view .LVU199
 834 0034 FFF7FEFF 		bl	register_code
 835              	.LVL73:
 836              	.L97:
 447:quantum/quantum.c ****             } else if (ascii_code == SS_UP_CODE) {
 837              		.loc 1 447 17 is_stmt 0 view .LVU200
 838              	.LBE14:
 839              	.LBB15:
 450:quantum/quantum.c ****                 unregister_code(keycode);
 840              		.loc 1 450 25 view .LVU201
 841 0038 2C00     		movs	r4, r5
 842              	.LVL74:
 843              	.L85:
 450:quantum/quantum.c ****                 unregister_code(keycode);
 844              		.loc 1 450 25 view .LVU202
 845              	.LBE15:
 466:quantum/quantum.c ****         // interval
 846              		.loc 1 466 9 is_stmt 1 view .LVU203
 847              	.LBB16:
 469:quantum/quantum.c ****             while (ms--) wait_ms(1);
 848              		.loc 1 469 21 is_stmt 0 view .LVU204
 849 003a 019D     		ldr	r5, [sp, #4]
 850              	.LBE16:
 466:quantum/quantum.c ****         // interval
 851              		.loc 1 466 9 view .LVU205
 852 003c 0134     		adds	r4, r4, #1
 853              	.LVL75:
 854              	.LBB17:
 469:quantum/quantum.c ****             while (ms--) wait_ms(1);
 855              		.loc 1 469 13 is_stmt 1 view .LVU206
 470:quantum/quantum.c ****         }
 856              		.loc 1 470 13 view .LVU207
 857              	.L93:
 470:quantum/quantum.c ****         }
 858              		.loc 1 470 22 is_stmt 0 discriminator 4 view .LVU208
 859 003e 013D     		subs	r5, r5, #1
 860              	.LVL76:
 470:quantum/quantum.c ****         }
 861              		.loc 1 470 22 discriminator 4 view .LVU209
 862 0040 EDB2     		uxtb	r5, r5
 863              	.LVL77:
 470:quantum/quantum.c ****         }
 864              		.loc 1 470 19 discriminator 4 view .LVU210
 865 0042 FF2D     		cmp	r5, #255
 866 0044 E1D0     		beq	.L95
 470:quantum/quantum.c ****         }
 867              		.loc 1 470 26 is_stmt 1 discriminator 1 view .LVU211
 470:quantum/quantum.c ****         }
 868              		.loc 1 470 26 discriminator 1 view .LVU212
 470:quantum/quantum.c ****         }
 869              		.loc 1 470 26 discriminator 1 view .LVU213
 870 0046 3000     		movs	r0, r6
 871 0048 FFF7FEFF 		bl	chThdSleep
 872              	.LVL78:
 873 004c F7E7     		b	.L93
 874              	.LVL79:
 875              	.L86:
 470:quantum/quantum.c ****         }
 876              		.loc 1 470 26 is_stmt 0 discriminator 1 view .LVU214
 877              	.LBE17:
 448:quantum/quantum.c ****                 // up
 878              		.loc 1 448 20 is_stmt 1 view .LVU215
 448:quantum/quantum.c ****                 // up
 879              		.loc 1 448 23 is_stmt 0 view .LVU216
 880 004e 032B     		cmp	r3, #3
 881 0050 02D1     		bne	.L87
 882              	.LBB18:
 450:quantum/quantum.c ****                 unregister_code(keycode);
 883              		.loc 1 450 17 is_stmt 1 view .LVU217
 450:quantum/quantum.c ****                 unregister_code(keycode);
 884              		.loc 1 450 25 is_stmt 0 view .LVU218
 885 0052 A51C     		adds	r5, r4, #2
 886              	.LVL80:
 451:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 887              		.loc 1 451 17 is_stmt 1 view .LVU219
 888 0054 A078     		ldrb	r0, [r4, #2]
 889 0056 E6E7     		b	.L96
 890              	.LVL81:
 891              	.L87:
 451:quantum/quantum.c ****             } else if (ascii_code == SS_DELAY_CODE) {
 892              		.loc 1 451 17 is_stmt 0 view .LVU220
 893              	.LBE18:
 452:quantum/quantum.c ****                 // delay
 894              		.loc 1 452 20 is_stmt 1 view .LVU221
 452:quantum/quantum.c ****                 // delay
 895              		.loc 1 452 23 is_stmt 0 view .LVU222
 896 0058 042B     		cmp	r3, #4
 897 005a 01D0     		beq	.L88
 898              	.LVL82:
 452:quantum/quantum.c ****                 // delay
 899              		.loc 1 452 23 view .LVU223
 900 005c 0134     		adds	r4, r4, #1
 901              	.LVL83:
 452:quantum/quantum.c ****                 // delay
 902              		.loc 1 452 23 view .LVU224
 903 005e ECE7     		b	.L85
 904              	.L88:
 905              	.LBB19:
 454:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 906              		.loc 1 454 17 is_stmt 1 view .LVU225
 907              	.LVL84:
 455:quantum/quantum.c ****                 while (isdigit(keycode)) {
 908              		.loc 1 455 17 view .LVU226
 454:quantum/quantum.c ****                 uint8_t keycode = *(++str);
 909              		.loc 1 454 25 is_stmt 0 view .LVU227
 910 0060 0025     		movs	r5, #0
 456:quantum/quantum.c ****                     ms *= 10;
 911              		.loc 1 456 24 view .LVU228
 912 0062 0B49     		ldr	r1, .L98
 455:quantum/quantum.c ****                 while (isdigit(keycode)) {
 913              		.loc 1 455 25 view .LVU229
 914 0064 A378     		ldrb	r3, [r4, #2]
 915              	.LVL85:
 456:quantum/quantum.c ****                     ms *= 10;
 916              		.loc 1 456 17 is_stmt 1 view .LVU230
 455:quantum/quantum.c ****                 while (isdigit(keycode)) {
 917              		.loc 1 455 25 is_stmt 0 view .LVU231
 918 0066 0234     		adds	r4, r4, #2
 919              	.LVL86:
 920              	.L89:
 456:quantum/quantum.c ****                     ms *= 10;
 921              		.loc 1 456 23 view .LVU232
 922 0068 CA5C     		ldrb	r2, [r1, r3]
 923 006a 601C     		adds	r0, r4, #1
 924 006c 3A42     		tst	r2, r7
 925 006e 05D1     		bne	.L90
 926              	.LVL87:
 927              	.L91:
 461:quantum/quantum.c ****             }
 928              		.loc 1 461 23 discriminator 4 view .LVU233
 929 0070 013D     		subs	r5, r5, #1
 930 0072 E2D3     		bcc	.L85
 931              	.LVL88:
 461:quantum/quantum.c ****             }
 932              		.loc 1 461 30 is_stmt 1 discriminator 1 view .LVU234
 461:quantum/quantum.c ****             }
 933              		.loc 1 461 30 discriminator 1 view .LVU235
 461:quantum/quantum.c ****             }
 934              		.loc 1 461 30 discriminator 1 view .LVU236
 935 0074 3000     		movs	r0, r6
 936 0076 FFF7FEFF 		bl	chThdSleep
 937              	.LVL89:
 938 007a F9E7     		b	.L91
 939              	.LVL90:
 940              	.L90:
 457:quantum/quantum.c ****                     ms += keycode - '0';
 941              		.loc 1 457 21 view .LVU237
 457:quantum/quantum.c ****                     ms += keycode - '0';
 942              		.loc 1 457 24 is_stmt 0 view .LVU238
 943 007c 7543     		muls	r5, r6
 944              	.LVL91:
 458:quantum/quantum.c ****                     keycode = *(++str);
 945              		.loc 1 458 21 is_stmt 1 view .LVU239
 458:quantum/quantum.c ****                     keycode = *(++str);
 946              		.loc 1 458 35 is_stmt 0 view .LVU240
 947 007e 303B     		subs	r3, r3, #48
 948              	.LVL92:
 458:quantum/quantum.c ****                     keycode = *(++str);
 949              		.loc 1 458 24 view .LVU241
 950 0080 5D19     		adds	r5, r3, r5
 951              	.LVL93:
 459:quantum/quantum.c ****                 }
 952              		.loc 1 459 21 is_stmt 1 view .LVU242
 459:quantum/quantum.c ****                 }
 953              		.loc 1 459 29 is_stmt 0 view .LVU243
 954 0082 6378     		ldrb	r3, [r4, #1]
 955              	.LVL94:
 459:quantum/quantum.c ****                 }
 956              		.loc 1 459 29 view .LVU244
 957 0084 0400     		movs	r4, r0
 958 0086 EFE7     		b	.L89
 959              	.LVL95:
 960              	.L83:
 459:quantum/quantum.c ****                 }
 961              		.loc 1 459 29 view .LVU245
 962              	.LBE19:
 464:quantum/quantum.c ****         }
 963              		.loc 1 464 13 is_stmt 1 view .LVU246
 964 0088 FFF7FEFF 		bl	send_char
 965              	.LVL96:
 464:quantum/quantum.c ****         }
 966              		.loc 1 464 13 is_stmt 0 view .LVU247
 967 008c D5E7     		b	.L85
 968              	.LVL97:
 969              	.L81:
 464:quantum/quantum.c ****         }
 970              		.loc 1 464 13 view .LVU248
 971              	.LBE20:
 473:quantum/quantum.c **** 
 972              		.loc 1 473 1 view .LVU249
 973              		@ sp needed
 974              	.LVL98:
 473:quantum/quantum.c **** 
 975              		.loc 1 473 1 view .LVU250
 976 008e F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 977              	.L99:
 978              		.align	2
 979              	.L98:
 980 0090 01000000 		.word	_ctype_+1
 981              		.cfi_endproc
 982              	.LFE210:
 984              		.section	.text.send_string,"ax",%progbits
 985              		.align	1
 986              		.global	send_string
 987              		.syntax unified
 988              		.code	16
 989              		.thumb_func
 990              		.fpu softvfp
 992              	send_string:
 993              	.LVL99:
 994              	.LFB208:
 429:quantum/quantum.c **** 
 995              		.loc 1 429 35 is_stmt 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 429:quantum/quantum.c **** 
 999              		.loc 1 429 37 view .LVU252
 429:quantum/quantum.c **** 
 1000              		.loc 1 429 35 is_stmt 0 view .LVU253
 1001 0000 10B5     		push	{r4, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 4, -8
 1004              		.cfi_offset 14, -4
 429:quantum/quantum.c **** 
 1005              		.loc 1 429 37 view .LVU254
 1006 0002 0021     		movs	r1, #0
 1007 0004 FFF7FEFF 		bl	send_string_with_delay
 1008              	.LVL100:
 429:quantum/quantum.c **** 
 1009              		.loc 1 429 1 view .LVU255
 1010              		@ sp needed
 1011 0008 10BD     		pop	{r4, pc}
 1012              		.cfi_endproc
 1013              	.LFE208:
 1015              		.section	.text.send_string_P,"ax",%progbits
 1016              		.align	1
 1017              		.global	send_string_P
 1018              		.syntax unified
 1019              		.code	16
 1020              		.thumb_func
 1021              		.fpu softvfp
 1023              	send_string_P:
 1024              	.LFB240:
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028 0000 10B5     		push	{r4, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
 1032 0002 FFF7FEFF 		bl	send_string
 1033              		@ sp needed
 1034 0006 10BD     		pop	{r4, pc}
 1035              		.cfi_endproc
 1036              	.LFE240:
 1038              		.section	.text.send_string_with_delay_P,"ax",%progbits
 1039              		.align	1
 1040              		.global	send_string_with_delay_P
 1041              		.syntax unified
 1042              		.code	16
 1043              		.thumb_func
 1044              		.fpu softvfp
 1046              	send_string_with_delay_P:
 1047              	.LFB242:
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051 0000 10B5     		push	{r4, lr}
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 4, -8
 1054              		.cfi_offset 14, -4
 1055 0002 FFF7FEFF 		bl	send_string_with_delay
 1056              		@ sp needed
 1057 0006 10BD     		pop	{r4, pc}
 1058              		.cfi_endproc
 1059              	.LFE242:
 1061              		.section	.text.set_single_persistent_default_layer,"ax",%progbits
 1062              		.align	1
 1063              		.global	set_single_persistent_default_layer
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	set_single_persistent_default_layer:
 1070              	.LVL101:
 1071              	.LFB213:
 543:quantum/quantum.c **** 
 544:quantum/quantum.c **** void set_single_persistent_default_layer(uint8_t default_layer) {
 1072              		.loc 1 544 65 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 545:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 546:quantum/quantum.c ****     PLAY_SONG(default_layer_songs[default_layer]);
 547:quantum/quantum.c **** #endif
 548:quantum/quantum.c ****     eeconfig_update_default_layer(1U << default_layer);
 1076              		.loc 1 548 5 view .LVU257
 544:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && defined(DEFAULT_LAYER_SONGS)
 1077              		.loc 1 544 65 is_stmt 0 view .LVU258
 1078 0000 10B5     		push	{r4, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 4, -8
 1081              		.cfi_offset 14, -4
 1082              		.loc 1 548 38 view .LVU259
 1083 0002 0124     		movs	r4, #1
 1084 0004 8440     		lsls	r4, r4, r0
 1085              		.loc 1 548 5 view .LVU260
 1086 0006 E0B2     		uxtb	r0, r4
 1087              	.LVL102:
 1088              		.loc 1 548 5 view .LVU261
 1089 0008 FFF7FEFF 		bl	eeconfig_update_default_layer
 1090              	.LVL103:
 549:quantum/quantum.c ****     default_layer_set(1U << default_layer);
 1091              		.loc 1 549 5 is_stmt 1 view .LVU262
 1092 000c 2000     		movs	r0, r4
 1093 000e FFF7FEFF 		bl	default_layer_set
 1094              	.LVL104:
 550:quantum/quantum.c **** }
 1095              		.loc 1 550 1 is_stmt 0 view .LVU263
 1096              		@ sp needed
 1097 0012 10BD     		pop	{r4, pc}
 1098              		.cfi_endproc
 1099              	.LFE213:
 1101              		.section	.text.update_tri_layer_state,"ax",%progbits
 1102              		.align	1
 1103              		.global	update_tri_layer_state
 1104              		.syntax unified
 1105              		.code	16
 1106              		.thumb_func
 1107              		.fpu softvfp
 1109              	update_tri_layer_state:
 1110              	.LVL105:
 1111              	.LFB214:
 551:quantum/quantum.c **** 
 552:quantum/quantum.c **** layer_state_t update_tri_layer_state(layer_state_t state, uint8_t layer1, uint8_t layer2, uint8_t l
 1112              		.loc 1 552 107 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 553:quantum/quantum.c ****     layer_state_t mask12 = (1UL << layer1) | (1UL << layer2);
 1116              		.loc 1 553 5 view .LVU265
 552:quantum/quantum.c ****     layer_state_t mask12 = (1UL << layer1) | (1UL << layer2);
 1117              		.loc 1 552 107 is_stmt 0 view .LVU266
 1118 0000 30B5     		push	{r4, r5, lr}
 1119              		.cfi_def_cfa_offset 12
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123              		.loc 1 553 33 view .LVU267
 1124 0002 0124     		movs	r4, #1
 1125 0004 2500     		movs	r5, r4
 1126 0006 8D40     		lsls	r5, r5, r1
 1127 0008 2900     		movs	r1, r5
 1128              	.LVL106:
 1129              		.loc 1 553 51 view .LVU268
 1130 000a 2500     		movs	r5, r4
 1131 000c 9540     		lsls	r5, r5, r2
 1132 000e 2A00     		movs	r2, r5
 1133              	.LVL107:
 554:quantum/quantum.c ****     layer_state_t mask3  = 1UL << layer3;
 1134              		.loc 1 554 19 view .LVU269
 1135 0010 9C40     		lsls	r4, r4, r3
 553:quantum/quantum.c ****     layer_state_t mask12 = (1UL << layer1) | (1UL << layer2);
 1136              		.loc 1 553 19 view .LVU270
 1137 0012 0A43     		orrs	r2, r1
 1138              	.LVL108:
 1139              		.loc 1 554 5 is_stmt 1 view .LVU271
 555:quantum/quantum.c ****     return (state & mask12) == mask12 ? (state | mask3) : (state & ~mask3);
 1140              		.loc 1 555 5 view .LVU272
 1141              		.loc 1 555 57 is_stmt 0 view .LVU273
 1142 0014 0300     		movs	r3, r0
 1143              	.LVL109:
 1144              		.loc 1 555 19 view .LVU274
 1145 0016 0100     		movs	r1, r0
 1146              		.loc 1 555 57 view .LVU275
 1147 0018 A343     		bics	r3, r4
 1148              		.loc 1 555 19 view .LVU276
 1149 001a 1140     		ands	r1, r2
 1150              		.loc 1 555 57 view .LVU277
 1151 001c 9142     		cmp	r1, r2
 1152 001e 01D1     		bne	.L104
 1153              		.loc 1 555 57 discriminator 1 view .LVU278
 1154 0020 2300     		movs	r3, r4
 1155 0022 0343     		orrs	r3, r0
 1156              	.L104:
 556:quantum/quantum.c **** }
 1157              		.loc 1 556 1 view .LVU279
 1158 0024 1800     		movs	r0, r3
 1159              	.LVL110:
 1160              		.loc 1 556 1 view .LVU280
 1161              		@ sp needed
 1162              	.LVL111:
 1163              		.loc 1 556 1 view .LVU281
 1164 0026 30BD     		pop	{r4, r5, pc}
 1165              		.cfi_endproc
 1166              	.LFE214:
 1168              		.section	.text.update_tri_layer,"ax",%progbits
 1169              		.align	1
 1170              		.global	update_tri_layer
 1171              		.syntax unified
 1172              		.code	16
 1173              		.thumb_func
 1174              		.fpu softvfp
 1176              	update_tri_layer:
 1177              	.LVL112:
 1178              	.LFB215:
 557:quantum/quantum.c **** 
 558:quantum/quantum.c **** void update_tri_layer(uint8_t layer1, uint8_t layer2, uint8_t layer3) { layer_state_set(update_tri_
 1179              		.loc 1 558 71 is_stmt 1 view -0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		.loc 1 558 73 view .LVU283
 1184              		.loc 1 558 71 is_stmt 0 view .LVU284
 1185 0000 10B5     		push	{r4, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 4, -8
 1188              		.cfi_offset 14, -4
 1189              		.loc 1 558 71 view .LVU285
 1190 0002 1300     		movs	r3, r2
 1191              		.loc 1 558 73 view .LVU286
 1192 0004 0A00     		movs	r2, r1
 1193              	.LVL113:
 1194              		.loc 1 558 73 view .LVU287
 1195 0006 0100     		movs	r1, r0
 1196              	.LVL114:
 1197              		.loc 1 558 73 view .LVU288
 1198 0008 0348     		ldr	r0, .L108
 1199              	.LVL115:
 1200              		.loc 1 558 1 view .LVU289
 1201              		@ sp needed
 1202              		.loc 1 558 73 view .LVU290
 1203 000a 0068     		ldr	r0, [r0]
 1204 000c FFF7FEFF 		bl	update_tri_layer_state
 1205              	.LVL116:
 1206 0010 FFF7FEFF 		bl	layer_state_set
 1207              	.LVL117:
 1208              		.loc 1 558 1 view .LVU291
 1209 0014 10BD     		pop	{r4, pc}
 1210              	.L109:
 1211 0016 C046     		.align	2
 1212              	.L108:
 1213 0018 00000000 		.word	layer_state
 1214              		.cfi_endproc
 1215              	.LFE215:
 1217              		.section	.text.tap_random_base64,"ax",%progbits
 1218              		.align	1
 1219              		.global	tap_random_base64
 1220              		.syntax unified
 1221              		.code	16
 1222              		.thumb_func
 1223              		.fpu softvfp
 1225              	tap_random_base64:
 1226              	.LFB216:
 559:quantum/quantum.c **** 
 560:quantum/quantum.c **** void tap_random_base64(void) {
 1227              		.loc 1 560 30 is_stmt 1 view -0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 561:quantum/quantum.c **** #if defined(__AVR_ATmega32U4__)
 562:quantum/quantum.c ****     uint8_t key = (TCNT0 + TCNT1 + TCNT3 + TCNT4) % 64;
 563:quantum/quantum.c **** #else
 564:quantum/quantum.c ****     uint8_t key = rand() % 64;
 1231              		.loc 1 564 5 view .LVU293
 560:quantum/quantum.c **** #if defined(__AVR_ATmega32U4__)
 1232              		.loc 1 560 30 is_stmt 0 view .LVU294
 1233 0000 10B5     		push	{r4, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 4, -8
 1236              		.cfi_offset 14, -4
 1237              		.loc 1 564 19 view .LVU295
 1238 0002 FFF7FEFF 		bl	rand
 1239              	.LVL118:
 1240              		.loc 1 564 26 view .LVU296
 1241 0006 1F4B     		ldr	r3, .L124
 1242 0008 1840     		ands	r0, r3
 1243 000a 04D5     		bpl	.L111
 1244 000c 4023     		movs	r3, #64
 1245 000e 0138     		subs	r0, r0, #1
 1246 0010 5B42     		rsbs	r3, r3, #0
 1247 0012 1843     		orrs	r0, r3
 1248 0014 0130     		adds	r0, r0, #1
 1249              	.L111:
 1250              		.loc 1 564 13 view .LVU297
 1251 0016 C4B2     		uxtb	r4, r0
 1252              	.LVL119:
 565:quantum/quantum.c **** #endif
 566:quantum/quantum.c ****     switch (key) {
 1253              		.loc 1 566 5 is_stmt 1 view .LVU298
 1254 0018 C0B2     		uxtb	r0, r0
 1255 001a 3428     		cmp	r0, #52
 1256 001c 1CD0     		beq	.L112
 1257 001e 0EDC     		bgt	.L113
 1258 0020 1928     		cmp	r0, #25
 1259 0022 12DC     		bgt	.L120
 567:quantum/quantum.c ****         case 0 ... 25:
 568:quantum/quantum.c ****             register_code(KC_LSFT);
 1260              		.loc 1 568 13 view .LVU299
 569:quantum/quantum.c ****             register_code(key + KC_A);
 1261              		.loc 1 569 13 is_stmt 0 view .LVU300
 1262 0024 0434     		adds	r4, r4, #4
 1263              	.LVL120:
 568:quantum/quantum.c ****             register_code(key + KC_A);
 1264              		.loc 1 568 13 view .LVU301
 1265 0026 E120     		movs	r0, #225
 1266              	.LVL121:
 1267              		.loc 1 569 13 view .LVU302
 1268 0028 E4B2     		uxtb	r4, r4
 1269              	.LVL122:
 568:quantum/quantum.c ****             register_code(key + KC_A);
 1270              		.loc 1 568 13 view .LVU303
 1271 002a FFF7FEFF 		bl	register_code
 1272              	.LVL123:
 1273              		.loc 1 569 13 is_stmt 1 view .LVU304
 1274 002e 2000     		movs	r0, r4
 1275 0030 FFF7FEFF 		bl	register_code
 1276              	.LVL124:
 570:quantum/quantum.c ****             unregister_code(key + KC_A);
 1277              		.loc 1 570 13 view .LVU305
 1278 0034 2000     		movs	r0, r4
 1279              	.L123:
 571:quantum/quantum.c ****             unregister_code(KC_LSFT);
 572:quantum/quantum.c ****             break;
 573:quantum/quantum.c ****         case 26 ... 51:
 574:quantum/quantum.c ****             register_code(key - 26 + KC_A);
 575:quantum/quantum.c ****             unregister_code(key - 26 + KC_A);
 576:quantum/quantum.c ****             break;
 577:quantum/quantum.c ****         case 52:
 578:quantum/quantum.c ****             register_code(KC_0);
 579:quantum/quantum.c ****             unregister_code(KC_0);
 580:quantum/quantum.c ****             break;
 581:quantum/quantum.c ****         case 53 ... 61:
 582:quantum/quantum.c ****             register_code(key - 53 + KC_1);
 583:quantum/quantum.c ****             unregister_code(key - 53 + KC_1);
 584:quantum/quantum.c ****             break;
 585:quantum/quantum.c ****         case 62:
 586:quantum/quantum.c ****             register_code(KC_LSFT);
 587:quantum/quantum.c ****             register_code(KC_EQL);
 588:quantum/quantum.c ****             unregister_code(KC_EQL);
 1280              		.loc 1 588 13 is_stmt 0 view .LVU306
 1281 0036 FFF7FEFF 		bl	unregister_code
 1282              	.LVL125:
 589:quantum/quantum.c ****             unregister_code(KC_LSFT);
 1283              		.loc 1 589 13 is_stmt 1 view .LVU307
 1284 003a E120     		movs	r0, #225
 1285 003c 10E0     		b	.L121
 1286              	.LVL126:
 1287              	.L113:
 566:quantum/quantum.c ****         case 0 ... 25:
 1288              		.loc 1 566 5 is_stmt 0 view .LVU308
 1289 003e 3E28     		cmp	r0, #62
 1290 0040 13D0     		beq	.L117
 1291 0042 10DB     		blt	.L118
 1292 0044 3F28     		cmp	r0, #63
 1293 0046 18D0     		beq	.L119
 1294              	.LVL127:
 1295              	.L110:
 590:quantum/quantum.c ****             break;
 591:quantum/quantum.c ****         case 63:
 592:quantum/quantum.c ****             register_code(KC_SLSH);
 593:quantum/quantum.c ****             unregister_code(KC_SLSH);
 594:quantum/quantum.c ****             break;
 595:quantum/quantum.c ****     }
 596:quantum/quantum.c **** }
 1296              		.loc 1 596 1 view .LVU309
 1297              		@ sp needed
 1298 0048 10BD     		pop	{r4, pc}
 1299              	.LVL128:
 1300              	.L120:
 574:quantum/quantum.c ****             unregister_code(key - 26 + KC_A);
 1301              		.loc 1 574 13 is_stmt 1 view .LVU310
 1302 004a 163C     		subs	r4, r4, #22
 1303              	.LVL129:
 1304              	.L122:
 582:quantum/quantum.c ****             unregister_code(key - 53 + KC_1);
 1305              		.loc 1 582 13 is_stmt 0 view .LVU311
 1306 004c E4B2     		uxtb	r4, r4
 1307 004e 2000     		movs	r0, r4
 1308              	.LVL130:
 582:quantum/quantum.c ****             unregister_code(key - 53 + KC_1);
 1309              		.loc 1 582 13 view .LVU312
 1310 0050 FFF7FEFF 		bl	register_code
 1311              	.LVL131:
 583:quantum/quantum.c ****             break;
 1312              		.loc 1 583 13 is_stmt 1 view .LVU313
 1313 0054 2000     		movs	r0, r4
 1314 0056 03E0     		b	.L121
 1315              	.LVL132:
 1316              	.L112:
 578:quantum/quantum.c ****             unregister_code(KC_0);
 1317              		.loc 1 578 13 view .LVU314
 1318 0058 2720     		movs	r0, #39
 1319 005a FFF7FEFF 		bl	register_code
 1320              	.LVL133:
 579:quantum/quantum.c ****             break;
 1321              		.loc 1 579 13 view .LVU315
 1322 005e 2720     		movs	r0, #39
 1323              	.LVL134:
 1324              	.L121:
 593:quantum/quantum.c ****             break;
 1325              		.loc 1 593 13 is_stmt 0 view .LVU316
 1326 0060 FFF7FEFF 		bl	unregister_code
 1327              	.LVL135:
 594:quantum/quantum.c ****     }
 1328              		.loc 1 594 13 is_stmt 1 view .LVU317
 1329              		.loc 1 596 1 is_stmt 0 view .LVU318
 1330 0064 F0E7     		b	.L110
 1331              	.LVL136:
 1332              	.L118:
 582:quantum/quantum.c ****             unregister_code(key - 53 + KC_1);
 1333              		.loc 1 582 13 is_stmt 1 view .LVU319
 1334 0066 173C     		subs	r4, r4, #23
 1335              	.LVL137:
 582:quantum/quantum.c ****             unregister_code(key - 53 + KC_1);
 1336              		.loc 1 582 13 is_stmt 0 view .LVU320
 1337 0068 F0E7     		b	.L122
 1338              	.LVL138:
 1339              	.L117:
 586:quantum/quantum.c ****             register_code(KC_EQL);
 1340              		.loc 1 586 13 is_stmt 1 view .LVU321
 1341 006a E120     		movs	r0, #225
 1342 006c FFF7FEFF 		bl	register_code
 1343              	.LVL139:
 587:quantum/quantum.c ****             unregister_code(KC_EQL);
 1344              		.loc 1 587 13 view .LVU322
 1345 0070 2E20     		movs	r0, #46
 1346 0072 FFF7FEFF 		bl	register_code
 1347              	.LVL140:
 588:quantum/quantum.c ****             unregister_code(KC_LSFT);
 1348              		.loc 1 588 13 view .LVU323
 1349 0076 2E20     		movs	r0, #46
 1350 0078 DDE7     		b	.L123
 1351              	.L119:
 592:quantum/quantum.c ****             unregister_code(KC_SLSH);
 1352              		.loc 1 592 13 view .LVU324
 1353 007a 3820     		movs	r0, #56
 1354 007c FFF7FEFF 		bl	register_code
 1355              	.LVL141:
 593:quantum/quantum.c ****             break;
 1356              		.loc 1 593 13 view .LVU325
 1357 0080 3820     		movs	r0, #56
 1358 0082 EDE7     		b	.L121
 1359              	.L125:
 1360              		.align	2
 1361              	.L124:
 1362 0084 3F000080 		.word	-2147483585
 1363              		.cfi_endproc
 1364              	.LFE216:
 1366              		.section	.text.matrix_init_quantum,"ax",%progbits
 1367              		.align	1
 1368              		.global	matrix_init_quantum
 1369              		.syntax unified
 1370              		.code	16
 1371              		.thumb_func
 1372              		.fpu softvfp
 1374              	matrix_init_quantum:
 1375              	.LFB217:
 597:quantum/quantum.c **** 
 598:quantum/quantum.c **** void matrix_init_quantum() {
 1376              		.loc 1 598 28 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 599:quantum/quantum.c **** #ifdef BOOTMAGIC_LITE
 600:quantum/quantum.c ****     bootmagic_lite();
 1380              		.loc 1 600 5 view .LVU327
 598:quantum/quantum.c **** #ifdef BOOTMAGIC_LITE
 1381              		.loc 1 598 28 is_stmt 0 view .LVU328
 1382 0000 10B5     		push	{r4, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 4, -8
 1385              		.cfi_offset 14, -4
 1386              		.loc 1 600 5 view .LVU329
 1387 0002 FFF7FEFF 		bl	bootmagic_lite
 1388              	.LVL142:
 601:quantum/quantum.c **** #endif
 602:quantum/quantum.c ****     if (!eeconfig_is_enabled()) {
 1389              		.loc 1 602 5 is_stmt 1 view .LVU330
 1390              		.loc 1 602 10 is_stmt 0 view .LVU331
 1391 0006 FFF7FEFF 		bl	eeconfig_is_enabled
 1392              	.LVL143:
 1393              		.loc 1 602 8 view .LVU332
 1394 000a 0028     		cmp	r0, #0
 1395 000c 01D1     		bne	.L127
 603:quantum/quantum.c ****         eeconfig_init();
 1396              		.loc 1 603 9 is_stmt 1 view .LVU333
 1397 000e FFF7FEFF 		bl	eeconfig_init
 1398              	.LVL144:
 1399              	.L127:
 604:quantum/quantum.c ****     }
 605:quantum/quantum.c **** #ifdef BACKLIGHT_ENABLE
 606:quantum/quantum.c **** #    ifdef LED_MATRIX_ENABLE
 607:quantum/quantum.c ****     led_matrix_init();
 608:quantum/quantum.c **** #    else
 609:quantum/quantum.c ****     backlight_init_ports();
 1400              		.loc 1 609 5 view .LVU334
 1401 0012 FFF7FEFF 		bl	backlight_init_ports
 1402              	.LVL145:
 610:quantum/quantum.c **** #    endif
 611:quantum/quantum.c **** #endif
 612:quantum/quantum.c **** #ifdef AUDIO_ENABLE
 613:quantum/quantum.c ****     audio_init();
 614:quantum/quantum.c **** #endif
 615:quantum/quantum.c **** #ifdef RGB_MATRIX_ENABLE
 616:quantum/quantum.c ****     rgb_matrix_init();
 617:quantum/quantum.c **** #endif
 618:quantum/quantum.c **** #ifdef ENCODER_ENABLE
 619:quantum/quantum.c ****     encoder_init();
 620:quantum/quantum.c **** #endif
 621:quantum/quantum.c **** #if defined(UNICODE_ENABLE) || defined(UNICODEMAP_ENABLE) || defined(UCIS_ENABLE)
 622:quantum/quantum.c ****     unicode_input_mode_init();
 623:quantum/quantum.c **** #endif
 624:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 625:quantum/quantum.c ****     haptic_init();
 626:quantum/quantum.c **** #endif
 627:quantum/quantum.c **** #ifdef OUTPUT_AUTO_ENABLE
 628:quantum/quantum.c ****     set_output(OUTPUT_AUTO);
 629:quantum/quantum.c **** #endif
 630:quantum/quantum.c **** #ifdef DIP_SWITCH_ENABLE
 631:quantum/quantum.c ****     dip_switch_init();
 632:quantum/quantum.c **** #endif
 633:quantum/quantum.c **** 
 634:quantum/quantum.c ****     matrix_init_kb();
 1403              		.loc 1 634 5 view .LVU335
 635:quantum/quantum.c **** }
 1404              		.loc 1 635 1 is_stmt 0 view .LVU336
 1405              		@ sp needed
 634:quantum/quantum.c **** }
 1406              		.loc 1 634 5 view .LVU337
 1407 0016 FFF7FEFF 		bl	matrix_init_kb
 1408              	.LVL146:
 1409              		.loc 1 635 1 view .LVU338
 1410 001a 10BD     		pop	{r4, pc}
 1411              		.cfi_endproc
 1412              	.LFE217:
 1414              		.section	.text.matrix_scan_quantum,"ax",%progbits
 1415              		.align	1
 1416              		.global	matrix_scan_quantum
 1417              		.syntax unified
 1418              		.code	16
 1419              		.thumb_func
 1420              		.fpu softvfp
 1422              	matrix_scan_quantum:
 1423              	.LFB218:
 636:quantum/quantum.c **** 
 637:quantum/quantum.c **** void matrix_scan_quantum() {
 1424              		.loc 1 637 28 is_stmt 1 view -0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 638:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && !defined(NO_MUSIC_MODE)
 639:quantum/quantum.c ****     matrix_scan_music();
 640:quantum/quantum.c **** #endif
 641:quantum/quantum.c **** 
 642:quantum/quantum.c **** #ifdef TAP_DANCE_ENABLE
 643:quantum/quantum.c ****     matrix_scan_tap_dance();
 644:quantum/quantum.c **** #endif
 645:quantum/quantum.c **** 
 646:quantum/quantum.c **** #ifdef COMBO_ENABLE
 647:quantum/quantum.c ****     matrix_scan_combo();
 648:quantum/quantum.c **** #endif
 649:quantum/quantum.c **** 
 650:quantum/quantum.c **** #ifdef LED_MATRIX_ENABLE
 651:quantum/quantum.c ****     led_matrix_task();
 652:quantum/quantum.c **** #endif
 653:quantum/quantum.c **** 
 654:quantum/quantum.c **** #ifdef RGB_MATRIX_ENABLE
 655:quantum/quantum.c ****     rgb_matrix_task();
 656:quantum/quantum.c **** #endif
 657:quantum/quantum.c **** 
 658:quantum/quantum.c **** #ifdef ENCODER_ENABLE
 659:quantum/quantum.c ****     encoder_read();
 660:quantum/quantum.c **** #endif
 661:quantum/quantum.c **** 
 662:quantum/quantum.c **** #ifdef WPM_ENABLE
 663:quantum/quantum.c ****     decay_wpm();
 664:quantum/quantum.c **** #endif
 665:quantum/quantum.c **** 
 666:quantum/quantum.c **** #ifdef HAPTIC_ENABLE
 667:quantum/quantum.c ****     haptic_task();
 668:quantum/quantum.c **** #endif
 669:quantum/quantum.c **** 
 670:quantum/quantum.c **** #ifdef DIP_SWITCH_ENABLE
 671:quantum/quantum.c ****     dip_switch_read(false);
 672:quantum/quantum.c **** #endif
 673:quantum/quantum.c **** 
 674:quantum/quantum.c ****     matrix_scan_kb();
 1428              		.loc 1 674 5 view .LVU340
 637:quantum/quantum.c **** #if defined(AUDIO_ENABLE) && !defined(NO_MUSIC_MODE)
 1429              		.loc 1 637 28 is_stmt 0 view .LVU341
 1430 0000 10B5     		push	{r4, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
 1434              		.loc 1 674 5 view .LVU342
 1435 0002 FFF7FEFF 		bl	matrix_scan_kb
 1436              	.LVL147:
 675:quantum/quantum.c **** }
 1437              		.loc 1 675 1 view .LVU343
 1438              		@ sp needed
 1439 0006 10BD     		pop	{r4, pc}
 1440              		.cfi_endproc
 1441              	.LFE218:
 1443              		.section	.text.send_nibble,"ax",%progbits
 1444              		.align	1
 1445              		.global	send_nibble
 1446              		.syntax unified
 1447              		.code	16
 1448              		.thumb_func
 1449              		.fpu softvfp
 1451              	send_nibble:
 1452              	.LVL148:
 1453              	.LFB222:
 676:quantum/quantum.c **** 
 677:quantum/quantum.c **** #ifdef HD44780_ENABLED
 678:quantum/quantum.c **** #    include "hd44780.h"
 679:quantum/quantum.c **** #endif
 680:quantum/quantum.c **** 
 681:quantum/quantum.c **** // Functions for spitting out values
 682:quantum/quantum.c **** //
 683:quantum/quantum.c **** 
 684:quantum/quantum.c **** void send_dword(uint32_t number) {
 685:quantum/quantum.c ****     uint16_t word = (number >> 16);
 686:quantum/quantum.c ****     send_word(word);
 687:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 688:quantum/quantum.c **** }
 689:quantum/quantum.c **** 
 690:quantum/quantum.c **** void send_word(uint16_t number) {
 691:quantum/quantum.c ****     uint8_t byte = number >> 8;
 692:quantum/quantum.c ****     send_byte(byte);
 693:quantum/quantum.c ****     send_byte(number & 0xFF);
 694:quantum/quantum.c **** }
 695:quantum/quantum.c **** 
 696:quantum/quantum.c **** void send_byte(uint8_t number) {
 697:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 698:quantum/quantum.c ****     send_nibble(nibble);
 699:quantum/quantum.c ****     send_nibble(number & 0xF);
 700:quantum/quantum.c **** }
 701:quantum/quantum.c **** 
 702:quantum/quantum.c **** void send_nibble(uint8_t number) {
 1454              		.loc 1 702 34 is_stmt 1 view -0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 703:quantum/quantum.c ****     switch (number) {
 1458              		.loc 1 703 5 view .LVU345
 702:quantum/quantum.c ****     switch (number) {
 1459              		.loc 1 702 34 is_stmt 0 view .LVU346
 1460 0000 10B5     		push	{r4, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 4, -8
 1463              		.cfi_offset 14, -4
 702:quantum/quantum.c ****     switch (number) {
 1464              		.loc 1 702 34 view .LVU347
 1465 0002 0300     		movs	r3, r0
 1466              		.loc 1 703 5 view .LVU348
 1467 0004 0F28     		cmp	r0, #15
 1468 0006 0FD8     		bhi	.L129
 1469 0008 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 1470              	.L132:
 1471 000c 08       		.byte	(.L134-.L132)/2
 1472 000d 0F       		.byte	(.L133-.L132)/2
 1473 000e 0F       		.byte	(.L133-.L132)/2
 1474 000f 0F       		.byte	(.L133-.L132)/2
 1475 0010 0F       		.byte	(.L133-.L132)/2
 1476 0011 0F       		.byte	(.L133-.L132)/2
 1477 0012 0F       		.byte	(.L133-.L132)/2
 1478 0013 0F       		.byte	(.L133-.L132)/2
 1479 0014 0F       		.byte	(.L133-.L132)/2
 1480 0015 0F       		.byte	(.L133-.L132)/2
 1481 0016 16       		.byte	(.L131-.L132)/2
 1482 0017 16       		.byte	(.L131-.L132)/2
 1483 0018 16       		.byte	(.L131-.L132)/2
 1484 0019 16       		.byte	(.L131-.L132)/2
 1485 001a 16       		.byte	(.L131-.L132)/2
 1486 001b 16       		.byte	(.L131-.L132)/2
 1487              		.p2align 1
 1488              	.L134:
 704:quantum/quantum.c ****         case 0:
 705:quantum/quantum.c ****             register_code(KC_0);
 1489              		.loc 1 705 13 is_stmt 1 view .LVU349
 1490 001c 2720     		movs	r0, #39
 1491              	.LVL149:
 1492              		.loc 1 705 13 is_stmt 0 view .LVU350
 1493 001e FFF7FEFF 		bl	register_code
 1494              	.LVL150:
 706:quantum/quantum.c ****             unregister_code(KC_0);
 1495              		.loc 1 706 13 is_stmt 1 view .LVU351
 1496 0022 2720     		movs	r0, #39
 1497              	.L135:
 707:quantum/quantum.c ****             break;
 708:quantum/quantum.c ****         case 1 ... 9:
 709:quantum/quantum.c ****             register_code(KC_1 + (number - 1));
 710:quantum/quantum.c ****             unregister_code(KC_1 + (number - 1));
 711:quantum/quantum.c ****             break;
 712:quantum/quantum.c ****         case 0xA ... 0xF:
 713:quantum/quantum.c ****             register_code(KC_A + (number - 0xA));
 714:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1498              		.loc 1 714 13 is_stmt 0 view .LVU352
 1499 0024 FFF7FEFF 		bl	unregister_code
 1500              	.LVL151:
 715:quantum/quantum.c ****             break;
 1501              		.loc 1 715 13 is_stmt 1 view .LVU353
 1502              	.L129:
 716:quantum/quantum.c ****     }
 717:quantum/quantum.c **** }
 1503              		.loc 1 717 1 is_stmt 0 view .LVU354
 1504              		@ sp needed
 1505 0028 10BD     		pop	{r4, pc}
 1506              	.LVL152:
 1507              	.L133:
 1508              	.LBB23:
 1509              	.LBI23:
 702:quantum/quantum.c ****     switch (number) {
 1510              		.loc 1 702 6 is_stmt 1 view .LVU355
 1511              	.LBB24:
 709:quantum/quantum.c ****             unregister_code(KC_1 + (number - 1));
 1512              		.loc 1 709 13 view .LVU356
 1513 002a 1D33     		adds	r3, r3, #29
 1514              	.LVL153:
 1515              	.L136:
 709:quantum/quantum.c ****             unregister_code(KC_1 + (number - 1));
 1516              		.loc 1 709 13 is_stmt 0 view .LVU357
 1517              	.LBE24:
 1518              	.LBE23:
 713:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1519              		.loc 1 713 13 view .LVU358
 1520 002c DCB2     		uxtb	r4, r3
 1521 002e 2000     		movs	r0, r4
 1522              	.LVL154:
 713:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1523              		.loc 1 713 13 view .LVU359
 1524 0030 FFF7FEFF 		bl	register_code
 1525              	.LVL155:
 714:quantum/quantum.c ****             break;
 1526              		.loc 1 714 13 is_stmt 1 view .LVU360
 1527 0034 2000     		movs	r0, r4
 1528 0036 F5E7     		b	.L135
 1529              	.LVL156:
 1530              	.L131:
 713:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1531              		.loc 1 713 13 view .LVU361
 1532 0038 063B     		subs	r3, r3, #6
 1533 003a F7E7     		b	.L136
 1534              		.cfi_endproc
 1535              	.LFE222:
 1537              		.section	.text.send_byte,"ax",%progbits
 1538              		.align	1
 1539              		.global	send_byte
 1540              		.syntax unified
 1541              		.code	16
 1542              		.thumb_func
 1543              		.fpu softvfp
 1545              	send_byte:
 1546              	.LVL157:
 1547              	.LFB221:
 696:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 1548              		.loc 1 696 32 view -0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 697:quantum/quantum.c ****     send_nibble(nibble);
 1552              		.loc 1 697 5 view .LVU363
 698:quantum/quantum.c ****     send_nibble(number & 0xF);
 1553              		.loc 1 698 5 view .LVU364
 696:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 1554              		.loc 1 696 32 is_stmt 0 view .LVU365
 1555 0000 10B5     		push	{r4, lr}
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 4, -8
 1558              		.cfi_offset 14, -4
 696:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 1559              		.loc 1 696 32 view .LVU366
 1560 0002 0400     		movs	r4, r0
 698:quantum/quantum.c ****     send_nibble(number & 0xF);
 1561              		.loc 1 698 5 view .LVU367
 1562 0004 0009     		lsrs	r0, r0, #4
 1563              	.LVL158:
 698:quantum/quantum.c ****     send_nibble(number & 0xF);
 1564              		.loc 1 698 5 view .LVU368
 1565 0006 FFF7FEFF 		bl	send_nibble
 1566              	.LVL159:
 699:quantum/quantum.c **** }
 1567              		.loc 1 699 5 is_stmt 1 view .LVU369
 1568 000a 0F20     		movs	r0, #15
 1569 000c 2040     		ands	r0, r4
 1570 000e FFF7FEFF 		bl	send_nibble
 1571              	.LVL160:
 700:quantum/quantum.c **** 
 1572              		.loc 1 700 1 is_stmt 0 view .LVU370
 1573              		@ sp needed
 1574 0012 10BD     		pop	{r4, pc}
 1575              		.cfi_endproc
 1576              	.LFE221:
 1578              		.section	.text.send_word,"ax",%progbits
 1579              		.align	1
 1580              		.global	send_word
 1581              		.syntax unified
 1582              		.code	16
 1583              		.thumb_func
 1584              		.fpu softvfp
 1586              	send_word:
 1587              	.LVL161:
 1588              	.LFB220:
 690:quantum/quantum.c ****     uint8_t byte = number >> 8;
 1589              		.loc 1 690 33 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 691:quantum/quantum.c ****     send_byte(byte);
 1593              		.loc 1 691 5 view .LVU372
 692:quantum/quantum.c ****     send_byte(number & 0xFF);
 1594              		.loc 1 692 5 view .LVU373
 690:quantum/quantum.c ****     uint8_t byte = number >> 8;
 1595              		.loc 1 690 33 is_stmt 0 view .LVU374
 1596 0000 10B5     		push	{r4, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 4, -8
 1599              		.cfi_offset 14, -4
 690:quantum/quantum.c ****     uint8_t byte = number >> 8;
 1600              		.loc 1 690 33 view .LVU375
 1601 0002 0400     		movs	r4, r0
 692:quantum/quantum.c ****     send_byte(number & 0xFF);
 1602              		.loc 1 692 5 view .LVU376
 1603 0004 000A     		lsrs	r0, r0, #8
 1604              	.LVL162:
 692:quantum/quantum.c ****     send_byte(number & 0xFF);
 1605              		.loc 1 692 5 view .LVU377
 1606 0006 FFF7FEFF 		bl	send_byte
 1607              	.LVL163:
 693:quantum/quantum.c **** }
 1608              		.loc 1 693 5 is_stmt 1 view .LVU378
 1609 000a E0B2     		uxtb	r0, r4
 1610 000c FFF7FEFF 		bl	send_byte
 1611              	.LVL164:
 694:quantum/quantum.c **** 
 1612              		.loc 1 694 1 is_stmt 0 view .LVU379
 1613              		@ sp needed
 1614 0010 10BD     		pop	{r4, pc}
 1615              		.cfi_endproc
 1616              	.LFE220:
 1618              		.section	.text.send_dword,"ax",%progbits
 1619              		.align	1
 1620              		.global	send_dword
 1621              		.syntax unified
 1622              		.code	16
 1623              		.thumb_func
 1624              		.fpu softvfp
 1626              	send_dword:
 1627              	.LVL165:
 1628              	.LFB219:
 684:quantum/quantum.c ****     uint16_t word = (number >> 16);
 1629              		.loc 1 684 34 is_stmt 1 view -0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 685:quantum/quantum.c ****     send_word(word);
 1633              		.loc 1 685 5 view .LVU381
 686:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 1634              		.loc 1 686 5 view .LVU382
 684:quantum/quantum.c ****     uint16_t word = (number >> 16);
 1635              		.loc 1 684 34 is_stmt 0 view .LVU383
 1636 0000 10B5     		push	{r4, lr}
 1637              		.cfi_def_cfa_offset 8
 1638              		.cfi_offset 4, -8
 1639              		.cfi_offset 14, -4
 684:quantum/quantum.c ****     uint16_t word = (number >> 16);
 1640              		.loc 1 684 34 view .LVU384
 1641 0002 0400     		movs	r4, r0
 686:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 1642              		.loc 1 686 5 view .LVU385
 1643 0004 000C     		lsrs	r0, r0, #16
 1644              	.LVL166:
 686:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 1645              		.loc 1 686 5 view .LVU386
 1646 0006 FFF7FEFF 		bl	send_word
 1647              	.LVL167:
 687:quantum/quantum.c **** }
 1648              		.loc 1 687 5 is_stmt 1 view .LVU387
 1649 000a A0B2     		uxth	r0, r4
 1650 000c FFF7FEFF 		bl	send_word
 1651              	.LVL168:
 688:quantum/quantum.c **** 
 1652              		.loc 1 688 1 is_stmt 0 view .LVU388
 1653              		@ sp needed
 1654              	.LVL169:
 688:quantum/quantum.c **** 
 1655              		.loc 1 688 1 view .LVU389
 1656 0010 10BD     		pop	{r4, pc}
 1657              		.cfi_endproc
 1658              	.LFE219:
 1660              		.section	.text.hex_to_keycode,"ax",%progbits
 1661              		.align	1
 1662              		.weak	hex_to_keycode
 1663              		.syntax unified
 1664              		.code	16
 1665              		.thumb_func
 1666              		.fpu softvfp
 1668              	hex_to_keycode:
 1669              	.LVL170:
 1670              	.LFB223:
 718:quantum/quantum.c **** 
 719:quantum/quantum.c **** __attribute__((weak)) uint16_t hex_to_keycode(uint8_t hex) {
 1671              		.loc 1 719 60 is_stmt 1 view -0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              		@ link register save eliminated.
 720:quantum/quantum.c ****     hex = hex & 0xF;
 1676              		.loc 1 720 5 view .LVU391
 1677              		.loc 1 720 9 is_stmt 0 view .LVU392
 1678 0000 0F23     		movs	r3, #15
 1679 0002 0340     		ands	r3, r0
 1680              	.LVL171:
 721:quantum/quantum.c ****     if (hex == 0x0) {
 1681              		.loc 1 721 5 is_stmt 1 view .LVU393
 722:quantum/quantum.c ****         return KC_0;
 1682              		.loc 1 722 16 is_stmt 0 view .LVU394
 1683 0004 2720     		movs	r0, #39
 721:quantum/quantum.c ****     if (hex == 0x0) {
 1684              		.loc 1 721 8 view .LVU395
 1685 0006 002B     		cmp	r3, #0
 1686 0008 03D0     		beq	.L141
 723:quantum/quantum.c ****     } else if (hex < 0xA) {
 1687              		.loc 1 723 12 is_stmt 1 view .LVU396
 1688 000a 98B2     		uxth	r0, r3
 1689              		.loc 1 723 15 is_stmt 0 view .LVU397
 1690 000c 092B     		cmp	r3, #9
 1691 000e 01D8     		bhi	.L142
 724:quantum/quantum.c ****         return KC_1 + (hex - 0x1);
 1692              		.loc 1 724 9 is_stmt 1 view .LVU398
 1693              		.loc 1 724 21 is_stmt 0 view .LVU399
 1694 0010 1D30     		adds	r0, r0, #29
 1695              	.L141:
 725:quantum/quantum.c ****     } else {
 726:quantum/quantum.c ****         return KC_A + (hex - 0xA);
 727:quantum/quantum.c ****     }
 728:quantum/quantum.c **** }
 1696              		.loc 1 728 1 view .LVU400
 1697              		@ sp needed
 1698 0012 7047     		bx	lr
 1699              	.L142:
 726:quantum/quantum.c ****     }
 1700              		.loc 1 726 9 is_stmt 1 view .LVU401
 726:quantum/quantum.c ****     }
 1701              		.loc 1 726 21 is_stmt 0 view .LVU402
 1702 0014 0638     		subs	r0, r0, #6
 1703 0016 80B2     		uxth	r0, r0
 1704 0018 FBE7     		b	.L141
 1705              		.cfi_endproc
 1706              	.LFE223:
 1708              		.section	.text.api_send_unicode,"ax",%progbits
 1709              		.align	1
 1710              		.global	api_send_unicode
 1711              		.syntax unified
 1712              		.code	16
 1713              		.thumb_func
 1714              		.fpu softvfp
 1716              	api_send_unicode:
 1717              	.LVL172:
 1718              	.LFB224:
 729:quantum/quantum.c **** 
 730:quantum/quantum.c **** void api_send_unicode(uint32_t unicode) {
 1719              		.loc 1 730 41 is_stmt 1 view -0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              		@ link register save eliminated.
 731:quantum/quantum.c **** #ifdef API_ENABLE
 732:quantum/quantum.c ****     uint8_t chunk[4];
 733:quantum/quantum.c ****     dword_to_bytes(unicode, chunk);
 734:quantum/quantum.c ****     MT_SEND_DATA(DT_UNICODE, chunk, 5);
 735:quantum/quantum.c **** #endif
 736:quantum/quantum.c **** }
 1724              		.loc 1 736 1 view .LVU404
 1725              		@ sp needed
 1726 0000 7047     		bx	lr
 1727              		.cfi_endproc
 1728              	.LFE224:
 1730              		.section	.text.led_set_user,"ax",%progbits
 1731              		.align	1
 1732              		.weak	led_set_user
 1733              		.syntax unified
 1734              		.code	16
 1735              		.thumb_func
 1736              		.fpu softvfp
 1738              	led_set_user:
 1739              	.LVL173:
 1740              	.LFB225:
 737:quantum/quantum.c **** 
 738:quantum/quantum.c **** /** \brief Lock LED set callback - keymap/user level
 739:quantum/quantum.c ****  *
 740:quantum/quantum.c ****  * \deprecated Use led_update_user() instead.
 741:quantum/quantum.c ****  */
 742:quantum/quantum.c **** __attribute__((weak)) void led_set_user(uint8_t usb_led) {}
 1741              		.loc 1 742 58 view -0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 0
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745              		@ link register save eliminated.
 1746              		.loc 1 742 59 view .LVU406
 1747              		.loc 1 742 1 is_stmt 0 view .LVU407
 1748              		@ sp needed
 1749 0000 7047     		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE225:
 1753              		.section	.text.led_set_kb,"ax",%progbits
 1754              		.align	1
 1755              		.weak	led_set_kb
 1756              		.syntax unified
 1757              		.code	16
 1758              		.thumb_func
 1759              		.fpu softvfp
 1761              	led_set_kb:
 1762              	.LVL174:
 1763              	.LFB226:
 743:quantum/quantum.c **** 
 744:quantum/quantum.c **** /** \brief Lock LED set callback - keyboard level
 745:quantum/quantum.c ****  *
 746:quantum/quantum.c ****  * \deprecated Use led_update_kb() instead.
 747:quantum/quantum.c ****  */
 748:quantum/quantum.c **** __attribute__((weak)) void led_set_kb(uint8_t usb_led) { led_set_user(usb_led); }
 1764              		.loc 1 748 56 is_stmt 1 view -0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		.loc 1 748 58 view .LVU409
 1769              		.loc 1 748 56 is_stmt 0 view .LVU410
 1770 0000 10B5     		push	{r4, lr}
 1771              		.cfi_def_cfa_offset 8
 1772              		.cfi_offset 4, -8
 1773              		.cfi_offset 14, -4
 1774              		.loc 1 748 58 view .LVU411
 1775 0002 FFF7FEFF 		bl	led_set_user
 1776              	.LVL175:
 1777              		.loc 1 748 1 view .LVU412
 1778              		@ sp needed
 1779 0006 10BD     		pop	{r4, pc}
 1780              		.cfi_endproc
 1781              	.LFE226:
 1783              		.section	.text.led_update_user,"ax",%progbits
 1784              		.align	1
 1785              		.weak	led_update_user
 1786              		.syntax unified
 1787              		.code	16
 1788              		.thumb_func
 1789              		.fpu softvfp
 1791              	led_update_user:
 1792              	.LVL176:
 1793              	.LFB227:
 749:quantum/quantum.c **** 
 750:quantum/quantum.c **** /** \brief Lock LED update callback - keymap/user level
 751:quantum/quantum.c ****  *
 752:quantum/quantum.c ****  * \return True if led_update_kb() should run its own code, false otherwise.
 753:quantum/quantum.c ****  */
 754:quantum/quantum.c **** __attribute__((weak)) bool led_update_user(led_t led_state) { return true; }
 1794              		.loc 1 754 61 is_stmt 1 view -0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 0
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798              		@ link register save eliminated.
 1799              		.loc 1 754 63 view .LVU414
 1800              		.loc 1 754 1 is_stmt 0 view .LVU415
 1801 0000 0120     		movs	r0, #1
 1802              	.LVL177:
 1803              		.loc 1 754 1 view .LVU416
 1804              		@ sp needed
 1805 0002 7047     		bx	lr
 1806              		.cfi_endproc
 1807              	.LFE227:
 1809              		.section	.text.led_update_kb,"ax",%progbits
 1810              		.align	1
 1811              		.weak	led_update_kb
 1812              		.syntax unified
 1813              		.code	16
 1814              		.thumb_func
 1815              		.fpu softvfp
 1817              	led_update_kb:
 1818              	.LVL178:
 1819              	.LFB228:
 755:quantum/quantum.c **** 
 756:quantum/quantum.c **** /** \brief Lock LED update callback - keyboard level
 757:quantum/quantum.c ****  *
 758:quantum/quantum.c ****  * \return Ignored for now.
 759:quantum/quantum.c ****  */
 760:quantum/quantum.c **** __attribute__((weak)) bool led_update_kb(led_t led_state) { return led_update_user(led_state); }
 1820              		.loc 1 760 59 is_stmt 1 view -0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		.loc 1 760 61 view .LVU418
 1825              		.loc 1 760 59 is_stmt 0 view .LVU419
 1826 0000 10B5     		push	{r4, lr}
 1827              		.cfi_def_cfa_offset 8
 1828              		.cfi_offset 4, -8
 1829              		.cfi_offset 14, -4
 1830              		.loc 1 760 68 view .LVU420
 1831 0002 FFF7FEFF 		bl	led_update_user
 1832              	.LVL179:
 1833              		.loc 1 760 1 view .LVU421
 1834              		@ sp needed
 1835 0006 10BD     		pop	{r4, pc}
 1836              		.cfi_endproc
 1837              	.LFE228:
 1839              		.section	.text.led_init_ports,"ax",%progbits
 1840              		.align	1
 1841              		.weak	led_init_ports
 1842              		.syntax unified
 1843              		.code	16
 1844              		.thumb_func
 1845              		.fpu softvfp
 1847              	led_init_ports:
 1848              	.LFB229:
 761:quantum/quantum.c **** 
 762:quantum/quantum.c **** __attribute__((weak)) void led_init_ports(void) {}
 1849              		.loc 1 762 49 is_stmt 1 view -0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 0
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 1853              		@ link register save eliminated.
 1854              		.loc 1 762 50 view .LVU423
 1855              		.loc 1 762 1 is_stmt 0 view .LVU424
 1856              		@ sp needed
 1857 0000 7047     		bx	lr
 1858              		.cfi_endproc
 1859              	.LFE229:
 1861              		.section	.text.led_set,"ax",%progbits
 1862              		.align	1
 1863              		.weak	led_set
 1864              		.syntax unified
 1865              		.code	16
 1866              		.thumb_func
 1867              		.fpu softvfp
 1869              	led_set:
 1870              	.LVL180:
 1871              	.LFB230:
 763:quantum/quantum.c **** 
 764:quantum/quantum.c **** __attribute__((weak)) void led_set(uint8_t usb_led) {
 1872              		.loc 1 764 53 is_stmt 1 view -0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 765:quantum/quantum.c **** #if defined(BACKLIGHT_CAPS_LOCK) && defined(BACKLIGHT_ENABLE)
 766:quantum/quantum.c ****     // Use backlight as Caps Lock indicator
 767:quantum/quantum.c ****     uint8_t bl_toggle_lvl = 0;
 768:quantum/quantum.c **** 
 769:quantum/quantum.c ****     if (IS_LED_ON(usb_led, USB_LED_CAPS_LOCK) && !backlight_config.enable) {
 770:quantum/quantum.c ****         // Turning Caps Lock ON and backlight is disabled in config
 771:quantum/quantum.c ****         // Toggling backlight to the brightest level
 772:quantum/quantum.c ****         bl_toggle_lvl = BACKLIGHT_LEVELS;
 773:quantum/quantum.c ****     } else if (IS_LED_OFF(usb_led, USB_LED_CAPS_LOCK) && backlight_config.enable) {
 774:quantum/quantum.c ****         // Turning Caps Lock OFF and backlight is enabled in config
 775:quantum/quantum.c ****         // Toggling backlight and restoring config level
 776:quantum/quantum.c ****         bl_toggle_lvl = backlight_config.level;
 777:quantum/quantum.c ****     }
 778:quantum/quantum.c **** 
 779:quantum/quantum.c ****     // Set level without modify backlight_config to keep ability to restore state
 780:quantum/quantum.c ****     backlight_set(bl_toggle_lvl);
 781:quantum/quantum.c **** #endif
 782:quantum/quantum.c **** 
 783:quantum/quantum.c ****     led_set_kb(usb_led);
 1876              		.loc 1 783 5 view .LVU426
 764:quantum/quantum.c **** #if defined(BACKLIGHT_CAPS_LOCK) && defined(BACKLIGHT_ENABLE)
 1877              		.loc 1 764 53 is_stmt 0 view .LVU427
 1878 0000 10B5     		push	{r4, lr}
 1879              		.cfi_def_cfa_offset 8
 1880              		.cfi_offset 4, -8
 1881              		.cfi_offset 14, -4
 764:quantum/quantum.c **** #if defined(BACKLIGHT_CAPS_LOCK) && defined(BACKLIGHT_ENABLE)
 1882              		.loc 1 764 53 view .LVU428
 1883 0002 0400     		movs	r4, r0
 1884              		.loc 1 783 5 view .LVU429
 1885 0004 FFF7FEFF 		bl	led_set_kb
 1886              	.LVL181:
 784:quantum/quantum.c ****     led_update_kb((led_t)usb_led);
 1887              		.loc 1 784 5 is_stmt 1 view .LVU430
 1888 0008 201C     		adds	r0, r4, #0
 1889 000a FFF7FEFF 		bl	led_update_kb
 1890              	.LVL182:
 785:quantum/quantum.c **** }
 1891              		.loc 1 785 1 is_stmt 0 view .LVU431
 1892              		@ sp needed
 1893 000e 10BD     		pop	{r4, pc}
 1894              		.cfi_endproc
 1895              	.LFE230:
 1897              		.section	.text.startup_user,"ax",%progbits
 1898              		.align	1
 1899              		.weak	startup_user
 1900              		.syntax unified
 1901              		.code	16
 1902              		.thumb_func
 1903              		.fpu softvfp
 1905              	startup_user:
 1906              	.LFB236:
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              		@ sp needed
 1912 0000 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE236:
 1916              		.section	.text.shutdown_user,"ax",%progbits
 1917              		.align	1
 1918              		.weak	shutdown_user
 1919              		.syntax unified
 1920              		.code	16
 1921              		.thumb_func
 1922              		.fpu softvfp
 1924              	shutdown_user:
 1925              	.LFB238:
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
 1930              		@ sp needed
 1931 0000 7047     		bx	lr
 1932              		.cfi_endproc
 1933              	.LFE238:
 1935              		.section	.text.reset_keyboard,"ax",%progbits
 1936              		.align	1
 1937              		.global	reset_keyboard
 1938              		.syntax unified
 1939              		.code	16
 1940              		.thumb_func
 1941              		.fpu softvfp
 1943              	reset_keyboard:
 1944              	.LFB203:
 127:quantum/quantum.c ****     clear_keyboard();
 1945              		.loc 1 127 27 is_stmt 1 view -0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 128:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 1949              		.loc 1 128 5 view .LVU433
 127:quantum/quantum.c ****     clear_keyboard();
 1950              		.loc 1 127 27 is_stmt 0 view .LVU434
 1951 0000 10B5     		push	{r4, lr}
 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 4, -8
 1954              		.cfi_offset 14, -4
 128:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_BASIC)
 1955              		.loc 1 128 5 view .LVU435
 1956 0002 FFF7FEFF 		bl	clear_keyboard
 1957              	.LVL183:
 142:quantum/quantum.c ****     wait_ms(250);
 1958              		.loc 1 142 5 is_stmt 1 view .LVU436
 1959 0006 FFF7FEFF 		bl	shutdown_user
 1960              	.LVL184:
 143:quantum/quantum.c **** #endif
 1961              		.loc 1 143 5 view .LVU437
 143:quantum/quantum.c **** #endif
 1962              		.loc 1 143 5 view .LVU438
 143:quantum/quantum.c **** #endif
 1963              		.loc 1 143 5 view .LVU439
 1964 000a 0348     		ldr	r0, .L154
 1965 000c FFF7FEFF 		bl	chThdSleep
 1966              	.LVL185:
 148:quantum/quantum.c **** }
 1967              		.loc 1 148 5 view .LVU440
 149:quantum/quantum.c **** 
 1968              		.loc 1 149 1 is_stmt 0 view .LVU441
 1969              		@ sp needed
 148:quantum/quantum.c **** }
 1970              		.loc 1 148 5 view .LVU442
 1971 0010 FFF7FEFF 		bl	bootloader_jump
 1972              	.LVL186:
 149:quantum/quantum.c **** 
 1973              		.loc 1 149 1 view .LVU443
 1974 0014 10BD     		pop	{r4, pc}
 1975              	.L155:
 1976 0016 C046     		.align	2
 1977              	.L154:
 1978 0018 C4090000 		.word	2500
 1979              		.cfi_endproc
 1980              	.LFE203:
 1982              		.section	.text.process_record_quantum,"ax",%progbits
 1983              		.align	1
 1984              		.global	process_record_quantum
 1985              		.syntax unified
 1986              		.code	16
 1987              		.thumb_func
 1988              		.fpu softvfp
 1990              	process_record_quantum:
 1991              	.LVL187:
 1992              	.LFB207:
 184:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 1993              		.loc 1 184 50 is_stmt 1 view -0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 185:quantum/quantum.c **** 
 1997              		.loc 1 185 5 view .LVU445
 184:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 1998              		.loc 1 184 50 is_stmt 0 view .LVU446
 1999 0000 70B5     		push	{r4, r5, r6, lr}
 2000              		.cfi_def_cfa_offset 16
 2001              		.cfi_offset 4, -16
 2002              		.cfi_offset 5, -12
 2003              		.cfi_offset 6, -8
 2004              		.cfi_offset 14, -4
 184:quantum/quantum.c ****     uint16_t keycode = get_record_keycode(record);
 2005              		.loc 1 184 50 view .LVU447
 2006 0002 0400     		movs	r4, r0
 185:quantum/quantum.c **** 
 2007              		.loc 1 185 24 view .LVU448
 2008 0004 FFF7FEFF 		bl	get_record_keycode
 2009              	.LVL188:
 232:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 2010              		.loc 1 232 13 view .LVU449
 2011 0008 2100     		movs	r1, r4
 185:quantum/quantum.c **** 
 2012              		.loc 1 185 24 view .LVU450
 2013 000a 0500     		movs	r5, r0
 2014              	.LVL189:
 211:quantum/quantum.c **** #if defined(KEY_LOCK_ENABLE)
 2015              		.loc 1 211 5 is_stmt 1 view .LVU451
 232:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 2016              		.loc 1 232 13 is_stmt 0 view .LVU452
 2017 000c FFF7FEFF 		bl	process_record_kb
 2018              	.LVL190:
 276:quantum/quantum.c **** #endif
 2019              		.loc 1 276 48 view .LVU453
 2020 0010 0028     		cmp	r0, #0
 2021 0012 01D1     		bne	.L157
 2022              	.LVL191:
 2023              	.L182:
 301:quantum/quantum.c ****             case EEPROM_RESET:
 2024              		.loc 1 301 24 view .LVU454
 2025 0014 0020     		movs	r0, #0
 2026              	.L158:
 336:quantum/quantum.c **** 
 2027              		.loc 1 336 1 view .LVU455
 2028              		@ sp needed
 2029              	.LVL192:
 336:quantum/quantum.c **** 
 2030              		.loc 1 336 1 view .LVU456
 2031 0016 70BD     		pop	{r4, r5, r6, pc}
 2032              	.LVL193:
 2033              	.L157:
 240:quantum/quantum.c **** #endif
 2034              		.loc 1 240 13 view .LVU457
 2035 0018 2100     		movs	r1, r4
 2036 001a 2800     		movs	r0, r5
 2037 001c FFF7FEFF 		bl	process_backlight
 2038              	.LVL194:
 232:quantum/quantum.c **** #if defined(MIDI_ENABLE) && defined(MIDI_ADVANCED)
 2039              		.loc 1 232 48 view .LVU458
 2040 0020 0028     		cmp	r0, #0
 2041 0022 F7D0     		beq	.L182
 270:quantum/quantum.c **** #endif
 2042              		.loc 1 270 13 view .LVU459
 2043 0024 2100     		movs	r1, r4
 2044 0026 2800     		movs	r0, r5
 2045 0028 FFF7FEFF 		bl	process_space_cadet
 2046              	.LVL195:
 240:quantum/quantum.c **** #endif
 2047              		.loc 1 240 48 view .LVU460
 2048 002c 0028     		cmp	r0, #0
 2049 002e F1D0     		beq	.L182
 273:quantum/quantum.c **** #endif
 2050              		.loc 1 273 13 view .LVU461
 2051 0030 2100     		movs	r1, r4
 2052 0032 2800     		movs	r0, r5
 2053 0034 FFF7FEFF 		bl	process_magic
 2054              	.LVL196:
 270:quantum/quantum.c **** #endif
 2055              		.loc 1 270 50 view .LVU462
 2056 0038 0028     		cmp	r0, #0
 2057 003a EBD0     		beq	.L182
 276:quantum/quantum.c **** #endif
 2058              		.loc 1 276 13 view .LVU463
 2059 003c 2100     		movs	r1, r4
 2060 003e 2800     		movs	r0, r5
 2061 0040 FFF7FEFF 		bl	process_grave_esc
 2062              	.LVL197:
 273:quantum/quantum.c **** #endif
 2063              		.loc 1 273 44 view .LVU464
 2064 0044 0028     		cmp	r0, #0
 2065 0046 E5D0     		beq	.L182
 279:quantum/quantum.c **** #endif
 2066              		.loc 1 279 13 discriminator 2 view .LVU465
 2067 0048 2100     		movs	r1, r4
 2068 004a 2800     		movs	r0, r5
 2069 004c FFF7FEFF 		bl	process_rgb
 2070              	.LVL198:
 276:quantum/quantum.c **** #endif
 2071              		.loc 1 276 48 discriminator 2 view .LVU466
 2072 0050 0028     		cmp	r0, #0
 2073 0052 DFD0     		beq	.L182
 285:quantum/quantum.c ****         switch (keycode) {
 2074              		.loc 1 285 5 is_stmt 1 view .LVU467
 285:quantum/quantum.c ****         switch (keycode) {
 2075              		.loc 1 285 8 is_stmt 0 view .LVU468
 2076 0054 A378     		ldrb	r3, [r4, #2]
 2077 0056 002B     		cmp	r3, #0
 2078 0058 1ED0     		beq	.L160
 286:quantum/quantum.c **** #ifndef NO_RESET
 2079              		.loc 1 286 9 is_stmt 1 view .LVU469
 2080 005a 114B     		ldr	r3, .L184
 2081 005c 9D42     		cmp	r5, r3
 2082 005e 08D0     		beq	.L161
 2083 0060 104B     		ldr	r3, .L184+4
 2084 0062 9D42     		cmp	r5, r3
 2085 0064 15D0     		beq	.L162
 2086 0066 DE3B     		subs	r3, r3, #222
 2087 0068 9D42     		cmp	r5, r3
 2088 006a 15D1     		bne	.L160
 289:quantum/quantum.c ****                 return false;
 2089              		.loc 1 289 17 view .LVU470
 2090 006c FFF7FEFF 		bl	reset_keyboard
 2091              	.LVL199:
 290:quantum/quantum.c **** #endif
 2092              		.loc 1 290 17 view .LVU471
 2093 0070 D0E7     		b	.L182
 2094              	.L161:
 294:quantum/quantum.c ****                 if (debug_enable) {
 2095              		.loc 1 294 17 view .LVU472
 294:quantum/quantum.c ****                 if (debug_enable) {
 2096              		.loc 1 294 30 is_stmt 0 view .LVU473
 2097 0072 0122     		movs	r2, #1
 2098 0074 0C49     		ldr	r1, .L184+8
 298:quantum/quantum.c ****                 }
 2099              		.loc 1 298 21 view .LVU474
 2100 0076 0D48     		ldr	r0, .L184+12
 294:quantum/quantum.c ****                 if (debug_enable) {
 2101              		.loc 1 294 30 view .LVU475
 2102 0078 0B78     		ldrb	r3, [r1]
 2103 007a DC07     		lsls	r4, r3, #31
 2104              	.LVL200:
 294:quantum/quantum.c ****                 if (debug_enable) {
 2105              		.loc 1 294 30 view .LVU476
 2106 007c E40F     		lsrs	r4, r4, #31
 2107 007e 5440     		eors	r4, r2
 2108 0080 9343     		bics	r3, r2
 2109 0082 1C43     		orrs	r4, r3
 2110 0084 0C70     		strb	r4, [r1]
 295:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 2111              		.loc 1 295 17 is_stmt 1 view .LVU477
 295:quantum/quantum.c ****                     print("DEBUG: enabled.\n");
 2112              		.loc 1 295 20 is_stmt 0 view .LVU478
 2113 0086 1440     		ands	r4, r2
 2114 0088 00D0     		beq	.L183
 296:quantum/quantum.c ****                 } else {
 2115              		.loc 1 296 21 is_stmt 1 view .LVU479
 2116 008a 0948     		ldr	r0, .L184+16
 2117              	.L183:
 2118 008c FFF7FEFF 		bl	tfp_printf
 2119              	.LVL201:
 2120 0090 C0E7     		b	.L182
 2121              	.LVL202:
 2122              	.L162:
 303:quantum/quantum.c ****                 return false;
 2123              		.loc 1 303 17 view .LVU480
 2124 0092 FFF7FEFF 		bl	eeconfig_init
 2125              	.LVL203:
 304:quantum/quantum.c **** #ifdef FAUXCLICKY_ENABLE
 2126              		.loc 1 304 17 view .LVU481
 2127 0096 BDE7     		b	.L182
 2128              	.L160:
 335:quantum/quantum.c **** }
 2129              		.loc 1 335 5 view .LVU482
 335:quantum/quantum.c **** }
 2130              		.loc 1 335 12 is_stmt 0 view .LVU483
 2131 0098 2000     		movs	r0, r4
 2132 009a FFF7FEFF 		bl	process_action_kb
 2133              	.LVL204:
 2134 009e BAE7     		b	.L158
 2135              	.L185:
 2136              		.align	2
 2137              	.L184:
 2138 00a0 015C0000 		.word	23553
 2139 00a4 DE5C0000 		.word	23774
 2140 00a8 00000000 		.word	debug_config
 2141 00ac 11000000 		.word	.LC13
 2142 00b0 00000000 		.word	.LC11
 2143              		.cfi_endproc
 2144              	.LFE207:
 2146              		.weak	ascii_to_keycode_lut
 2147              		.weak	ascii_to_altgr_lut
 2148              		.weak	ascii_to_shift_lut
 2149              		.section	.rodata.ascii_to_altgr_lut,"a"
 2152              	ascii_to_altgr_lut:
 2153 0000 00000000 		.space	16
 2153      00000000 
 2153      00000000 
 2153      00000000 
 2154              		.section	.rodata.ascii_to_keycode_lut,"a"
 2157              	ascii_to_keycode_lut:
 2158 0000 00       		.byte	0
 2159 0001 00       		.byte	0
 2160 0002 00       		.byte	0
 2161 0003 00       		.byte	0
 2162 0004 00       		.byte	0
 2163 0005 00       		.byte	0
 2164 0006 00       		.byte	0
 2165 0007 00       		.byte	0
 2166 0008 2A       		.byte	42
 2167 0009 2B       		.byte	43
 2168 000a 28       		.byte	40
 2169 000b 00       		.byte	0
 2170 000c 00       		.byte	0
 2171 000d 00       		.byte	0
 2172 000e 00       		.byte	0
 2173 000f 00       		.byte	0
 2174 0010 00       		.byte	0
 2175 0011 00       		.byte	0
 2176 0012 00       		.byte	0
 2177 0013 00       		.byte	0
 2178 0014 00       		.byte	0
 2179 0015 00       		.byte	0
 2180 0016 00       		.byte	0
 2181 0017 00       		.byte	0
 2182 0018 00       		.byte	0
 2183 0019 00       		.byte	0
 2184 001a 00       		.byte	0
 2185 001b 29       		.byte	41
 2186 001c 00       		.byte	0
 2187 001d 00       		.byte	0
 2188 001e 00       		.byte	0
 2189 001f 00       		.byte	0
 2190 0020 2C       		.byte	44
 2191 0021 1E       		.byte	30
 2192 0022 34       		.byte	52
 2193 0023 20       		.byte	32
 2194 0024 21       		.byte	33
 2195 0025 22       		.byte	34
 2196 0026 24       		.byte	36
 2197 0027 34       		.byte	52
 2198 0028 26       		.byte	38
 2199 0029 27       		.byte	39
 2200 002a 25       		.byte	37
 2201 002b 2E       		.byte	46
 2202 002c 36       		.byte	54
 2203 002d 2D       		.byte	45
 2204 002e 37       		.byte	55
 2205 002f 38       		.byte	56
 2206 0030 27       		.byte	39
 2207 0031 1E       		.byte	30
 2208 0032 1F       		.byte	31
 2209 0033 20       		.byte	32
 2210 0034 21       		.byte	33
 2211 0035 22       		.byte	34
 2212 0036 23       		.byte	35
 2213 0037 24       		.byte	36
 2214 0038 25       		.byte	37
 2215 0039 26       		.byte	38
 2216 003a 33       		.byte	51
 2217 003b 33       		.byte	51
 2218 003c 36       		.byte	54
 2219 003d 2E       		.byte	46
 2220 003e 37       		.byte	55
 2221 003f 38       		.byte	56
 2222 0040 1F       		.byte	31
 2223 0041 04       		.byte	4
 2224 0042 05       		.byte	5
 2225 0043 06       		.byte	6
 2226 0044 07       		.byte	7
 2227 0045 08       		.byte	8
 2228 0046 09       		.byte	9
 2229 0047 0A       		.byte	10
 2230 0048 0B       		.byte	11
 2231 0049 0C       		.byte	12
 2232 004a 0D       		.byte	13
 2233 004b 0E       		.byte	14
 2234 004c 0F       		.byte	15
 2235 004d 10       		.byte	16
 2236 004e 11       		.byte	17
 2237 004f 12       		.byte	18
 2238 0050 13       		.byte	19
 2239 0051 14       		.byte	20
 2240 0052 15       		.byte	21
 2241 0053 16       		.byte	22
 2242 0054 17       		.byte	23
 2243 0055 18       		.byte	24
 2244 0056 19       		.byte	25
 2245 0057 1A       		.byte	26
 2246 0058 1B       		.byte	27
 2247 0059 1C       		.byte	28
 2248 005a 1D       		.byte	29
 2249 005b 2F       		.byte	47
 2250 005c 31       		.byte	49
 2251 005d 30       		.byte	48
 2252 005e 23       		.byte	35
 2253 005f 2D       		.byte	45
 2254 0060 35       		.byte	53
 2255 0061 04       		.byte	4
 2256 0062 05       		.byte	5
 2257 0063 06       		.byte	6
 2258 0064 07       		.byte	7
 2259 0065 08       		.byte	8
 2260 0066 09       		.byte	9
 2261 0067 0A       		.byte	10
 2262 0068 0B       		.byte	11
 2263 0069 0C       		.byte	12
 2264 006a 0D       		.byte	13
 2265 006b 0E       		.byte	14
 2266 006c 0F       		.byte	15
 2267 006d 10       		.byte	16
 2268 006e 11       		.byte	17
 2269 006f 12       		.byte	18
 2270 0070 13       		.byte	19
 2271 0071 14       		.byte	20
 2272 0072 15       		.byte	21
 2273 0073 16       		.byte	22
 2274 0074 17       		.byte	23
 2275 0075 18       		.byte	24
 2276 0076 19       		.byte	25
 2277 0077 1A       		.byte	26
 2278 0078 1B       		.byte	27
 2279 0079 1C       		.byte	28
 2280 007a 1D       		.byte	29
 2281 007b 2F       		.byte	47
 2282 007c 31       		.byte	49
 2283 007d 30       		.byte	48
 2284 007e 35       		.byte	53
 2285 007f 4C       		.byte	76
 2286              		.section	.rodata.ascii_to_shift_lut,"a"
 2289              	ascii_to_shift_lut:
 2290 0000 00       		.byte	0
 2291 0001 00       		.byte	0
 2292 0002 00       		.byte	0
 2293 0003 00       		.byte	0
 2294 0004 7E       		.byte	126
 2295 0005 0F       		.byte	15
 2296 0006 00       		.byte	0
 2297 0007 D4       		.byte	-44
 2298 0008 FF       		.byte	-1
 2299 0009 FF       		.byte	-1
 2300 000a FF       		.byte	-1
 2301 000b C7       		.byte	-57
 2302 000c 00       		.byte	0
 2303 000d 00       		.byte	0
 2304 000e 00       		.byte	0
 2305 000f 78       		.byte	120
 2306              		.section	.rodata.process_record_quantum.str1.1,"aMS",%progbits,1
 2307              	.LC11:
 2308 0000 44454255 		.ascii	"DEBUG: enabled.\012\000"
 2308      473A2065 
 2308      6E61626C 
 2308      65642E0A 
 2308      00
 2309              	.LC13:
 2310 0011 44454255 		.ascii	"DEBUG: disabled.\012\000"
 2310      473A2064 
 2310      69736162 
 2310      6C65642E 
 2310      0A00
 2311              		.text
 2312              	.Letext0:
 2313              		.file 2 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_
 2314              		.file 3 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\8.3.1\\in
 2315              		.file 4 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdi
 2316              		.file 5 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdint.h"
 2317              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2318              		.file 7 "./lib/chibios/os/rt/include/chsystypes.h"
 2319              		.file 8 "./lib/chibios/os/rt/include/chschd.h"
 2320              		.file 9 "./lib/chibios/os/rt/include/chtime.h"
 2321              		.file 10 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\ctype.h"
 2322              		.file 11 "./lib/chibios/os/common/ext/ST/STM32F0xx/system_stm32f0xx.h"
 2323              		.file 12 "./lib/chibios/os/common/ext/ST/STM32F0xx/stm32f072xb.h"
 2324              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2325              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore_v6m.h"
 2326              		.file 15 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2327              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 2328              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 2329              		.file 18 "./lib/chibios/os/rt/include/chsys.h"
 2330              		.file 19 "./lib/chibios/os/rt/include/chregistry.h"
 2331              		.file 20 "./lib/chibios/os/oslib/include/chmemcore.h"
 2332              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2333              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 2334              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2335              		.file 24 "./lib/chibios/os/hal/include/hal_i2c.h"
 2336              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2337              		.file 26 "./lib/chibios/os/hal/include/hal_pwm.h"
 2338              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2339              		.file 28 "./lib/chibios/os/hal/include/hal_spi.h"
 2340              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/SPIv2/hal_spi_lld.h"
 2341              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 2342              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2343              		.file 32 "tmk_core/common/keyboard.h"
 2344              		.file 33 "tmk_core/common/action.h"
 2345              		.file 34 "tmk_core/common/report.h"
 2346              		.file 35 "tmk_core/common/led.h"
 2347              		.file 36 "tmk_core/common/host.h"
 2348              		.file 37 "tmk_core/common/debug.h"
 2349              		.file 38 "quantum/keycode_config.h"
 2350              		.file 39 "tmk_core/common/keycode.h"
 2351              		.file 40 "quantum/quantum_keycodes.h"
 2352              		.file 41 "quantum/keymap.h"
 2353              		.file 42 "quantum/backlight/backlight.h"
 2354              		.file 43 "./quantum/color.h"
 2355              		.file 44 "quantum/rgblight.h"
 2356              		.file 45 "tmk_core/common/action_layer.h"
 2357              		.file 46 "tmk_core/common/timer.h"
 2358              		.file 47 "tmk_core/common/action_util.h"
 2359              		.file 48 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_typ
 2360              		.file 49 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reen
 2361              		.file 50 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock
 2362              		.file 51 "c:\\msys64\\home\\kyleo\\qmk_utils\\gcc-arm-none-eabi\\arm-none-eabi\\include\\stdlib.h"
 2363              		.file 52 "quantum/quantum.h"
 2364              		.file 53 "tmk_core/common/eeconfig.h"
 2365              		.file 54 "./lib/chibios/os/rt/include/chthreads.h"
 2366              		.file 55 "quantum/process_keycode/process_backlight.h"
 2367              		.file 56 "quantum/process_keycode/process_space_cadet.h"
 2368              		.file 57 "quantum/process_keycode/process_magic.h"
 2369              		.file 58 "quantum/process_keycode/process_grave_esc.h"
 2370              		.file 59 "quantum/process_keycode/process_rgb.h"
 2371              		.file 60 "tmk_core/common/chibios/printf.h"
 2372              		.file 61 "tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:00000000 quantum.c
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:16     .text.do_code16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:23     .text.do_code16:00000000 do_code16
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:157    .text.do_code16:00000060 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:164    .text.register_code16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:171    .text.register_code16:00000000 register_code16
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:217    .text.register_code16:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:223    .text.unregister_code16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:230    .text.unregister_code16:00000000 unregister_code16
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:276    .text.unregister_code16:00000024 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:282    .text.tap_code16:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:289    .text.tap_code16:00000000 tap_code16
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:318    .text.process_action_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:325    .text.process_action_kb:00000000 process_action_kb
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:344    .text.process_record_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:351    .text.process_record_user:00000000 process_record_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:370    .text.process_record_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:377    .text.process_record_kb:00000000 process_record_kb
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:400    .text.post_process_record_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:407    .text.post_process_record_user:00000000 post_process_record_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:423    .text.post_process_record_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:430    .text.post_process_record_kb:00000000 post_process_record_kb
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:453    .text.get_event_keycode:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:460    .text.get_event_keycode:00000000 get_event_keycode
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:543    .text.get_event_keycode:00000040 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:548    .text.get_record_keycode:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:555    .text.get_record_keycode:00000000 get_record_keycode
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:586    .text.post_process_record_quantum:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:593    .text.post_process_record_quantum:00000000 post_process_record_quantum
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:624    .text.send_char:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:631    .text.send_char:00000000 send_char
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:726    .text.send_char:0000004c $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:2157   .rodata.ascii_to_keycode_lut:00000000 ascii_to_keycode_lut
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:2152   .rodata.ascii_to_altgr_lut:00000000 ascii_to_altgr_lut
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:2289   .rodata.ascii_to_shift_lut:00000000 ascii_to_shift_lut
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:733    .text.send_string_with_delay:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:740    .text.send_string_with_delay:00000000 send_string_with_delay
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:980    .text.send_string_with_delay:00000090 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:985    .text.send_string:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:992    .text.send_string:00000000 send_string
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1016   .text.send_string_P:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1023   .text.send_string_P:00000000 send_string_P
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1039   .text.send_string_with_delay_P:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1046   .text.send_string_with_delay_P:00000000 send_string_with_delay_P
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1062   .text.set_single_persistent_default_layer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1069   .text.set_single_persistent_default_layer:00000000 set_single_persistent_default_layer
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1102   .text.update_tri_layer_state:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1109   .text.update_tri_layer_state:00000000 update_tri_layer_state
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1169   .text.update_tri_layer:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1176   .text.update_tri_layer:00000000 update_tri_layer
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1213   .text.update_tri_layer:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1218   .text.tap_random_base64:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1225   .text.tap_random_base64:00000000 tap_random_base64
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1362   .text.tap_random_base64:00000084 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1367   .text.matrix_init_quantum:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1374   .text.matrix_init_quantum:00000000 matrix_init_quantum
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1415   .text.matrix_scan_quantum:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1422   .text.matrix_scan_quantum:00000000 matrix_scan_quantum
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1444   .text.send_nibble:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1451   .text.send_nibble:00000000 send_nibble
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1471   .text.send_nibble:0000000c $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1487   .text.send_nibble:0000001c $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1538   .text.send_byte:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1545   .text.send_byte:00000000 send_byte
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1579   .text.send_word:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1586   .text.send_word:00000000 send_word
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1619   .text.send_dword:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1626   .text.send_dword:00000000 send_dword
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1661   .text.hex_to_keycode:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1668   .text.hex_to_keycode:00000000 hex_to_keycode
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1709   .text.api_send_unicode:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1716   .text.api_send_unicode:00000000 api_send_unicode
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1731   .text.led_set_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1738   .text.led_set_user:00000000 led_set_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1754   .text.led_set_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1761   .text.led_set_kb:00000000 led_set_kb
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1784   .text.led_update_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1791   .text.led_update_user:00000000 led_update_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1810   .text.led_update_kb:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1817   .text.led_update_kb:00000000 led_update_kb
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1840   .text.led_init_ports:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1847   .text.led_init_ports:00000000 led_init_ports
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1862   .text.led_set:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1869   .text.led_set:00000000 led_set
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1898   .text.startup_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1905   .text.startup_user:00000000 startup_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1917   .text.shutdown_user:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1924   .text.shutdown_user:00000000 shutdown_user
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1936   .text.reset_keyboard:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1943   .text.reset_keyboard:00000000 reset_keyboard
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1978   .text.reset_keyboard:00000018 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1983   .text.process_record_quantum:00000000 $t
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:1990   .text.process_record_quantum:00000000 process_record_quantum
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:2138   .text.process_record_quantum:000000a0 $d
C:\Users\kyleo\AppData\Local\Temp\cc7ARh1r.s:2153   .rodata.ascii_to_altgr_lut:00000000 $d

UNDEFINED SYMBOLS
register_code
register_weak_mods
register_mods
unregister_code
unregister_weak_mods
unregister_mods
layer_switch_get_layer
update_source_layers_cache
keymap_key_to_keycode
read_source_layers_cache
disable_action_cache
tap_code
chThdSleep
_ctype_
eeconfig_update_default_layer
default_layer_set
layer_state_set
layer_state
rand
bootmagic_lite
eeconfig_is_enabled
eeconfig_init
backlight_init_ports
matrix_init_kb
matrix_scan_kb
__gnu_thumb1_case_uqi
clear_keyboard
bootloader_jump
process_backlight
process_space_cadet
process_magic
process_grave_esc
process_rgb
tfp_printf
debug_config
